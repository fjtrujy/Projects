;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3057-7374-2C			    |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	CB45AD3D58D96C0BDDD438BD9FAE1417
; Input	CRC32 :	E3A19436

; File Name   :	G:\bumpy\BUMPY.EXE
; Format      :	MS-DOS executable (EXE)
; Base Address:	1000h Range: 10000h-2A640h Loaded length: 1A640h
; Entry	Point :	1000:0
; OS type	  :  MS	DOS
; Application type:  Executable	16bit

		.686p
		.mmx
		.model large

; ===========================================================================

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		assume es:nothing, ss:seg011, ds:nothing, fs:nothing, gs:nothing
; [00000126 BYTES: COLLAPSED FUNCTION start. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		mov	cx, 0Eh
		mov	dx, 2Dh	; '-'
		jmp	loc_101F0

; =============== S U B	R O U T	I N E =======================================


sub_1012F	proc near		; CODE XREF: start+25p
		push	ds
		mov	ax, 3500h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_20409, bx
		mov	word ptr dword_20409+2,	es
		mov	ax, 3504h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_2040D, bx
		mov	word ptr dword_2040D+2,	es
		mov	ax, 3505h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_20411, bx
		mov	word ptr dword_20411+2,	es
		mov	ax, 3506h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_20415, bx
		mov	word ptr dword_20415+2,	es
		mov	ax, 2500h
		mov	dx, cs
		mov	ds, dx
		assume ds:seg000
		mov	dx, 126h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		retn
sub_1012F	endp

; [0000002D BYTES: COLLAPSED FUNCTION __restorezero. PRESS KEYPAD CTRL-"+" TO EXPAND]
byte_1019F	db 0B4h			; CODE XREF: start+C7p	start+101p
byte_101A0	db 0FFh			; DATA XREF: start+D5w
		db 8Bh,	0D7h, 8Bh, 0DEh, 3Bh, 0DFh, 74h, 14h, 80h, 3Fh
		db 0FFh, 74h, 0Ah, 38h,	67h, 1
byte_101B1	db 77h			; DATA XREF: start+CFw
; ---------------------------------------------------------------------------
		add	ax, 678Ah
		add	[bp+di-7C2Dh], cx
		retn
; ---------------------------------------------------------------------------
		db 6, 0EBh, 0E8h, 3Bh, 0D7h, 74h, 20h, 8Bh, 0DAh, 1Eh
		db 7, 6, 80h, 3Fh, 0, 0C6h, 7, 0FFh, 2Eh, 8Eh, 1Eh, 0FFh
		db 1, 74h, 7, 26h, 0FFh, 5Fh, 2, 1Fh, 0EBh, 0C5h, 26h
		db 0FFh, 57h, 2, 1Fh, 0EBh, 0BEh, 0C3h

; =============== S U B	R O U T	I N E =======================================


sub_101E2	proc near		; CODE XREF: _abort+Bp
		mov	ah, 40h	; '@'
		mov	bx, 2
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		retn
sub_101E2	endp

; [00000015 BYTES: COLLAPSED FUNCTION _abort. PRESS KEYPAD CTRL-"+" TO EXPAND]
DGROUP@		db    0			; DATA XREF: start+3w start+9Er ...
		db    0
__MMODEL	db    3
		db  40h	; @

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
_main		proc near		; CODE XREF: start+EFp

argc		= word ptr  4
argv		= dword	ptr  6
envp		= dword	ptr  0Ah

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1020F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1020F:				; CODE XREF: _main+7j
		cmp	byte ptr [bp+argc], 1
		jnz	short loc_10256
		call	sub_10416
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10256
		les	bx, [bp+argv]
		mov	ax, es:[bx+6]
		mov	dx, es:[bx+4]
		mov	word_26F94, dx
		mov	word_26F96, ax
		call	sub_10282
		call	sub_17BA7
		call	sub_10A07
		call	sub_10258
		call	sub_10569
		call	sub_17A77
		call	sub_17DB9
		mov	ax, 3
		push	ax
		call	sub_17120
		inc	sp
		inc	sp
		xor	ax, ax
		push	ax		; status
		call	_exit
; ---------------------------------------------------------------------------
		db 2 dup(44h)
; ---------------------------------------------------------------------------

loc_10256:				; CODE XREF: _main+10j	_main+19j
		pop	bp
		retn
_main		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10258	proc near		; CODE XREF: _main+36p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_10264
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10264:				; CODE XREF: sub_10258+7j
		mov	byte_27D62, 1
		call	sub_1535E
		call	sub_16DE3

loc_1026F:				; CODE XREF: sub_10258+1Fj
					; sub_10258+26j
		call	sub_10C18
		cmp	byte_2A0E0, 0
		jnz	short loc_1026F
		cmp	byte_2891D, 0
		jnz	short loc_1026F
		pop	bp
		retn
sub_10258	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10282	proc near		; CODE XREF: _main+2Dp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1028E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1028E:				; CODE XREF: sub_10282+7j
		mov	ax, 6A9h
		push	ax
		mov	ax, 698h
		push	ax		; handler
		call	sub_172EF
		add	sp, 4
		push	ds
		mov	ax, 6FACh
		push	ax
		call	sub_17BAD
		add	sp, 4
		call	sub_17CDE
		call	sub_1798A
		call	sub_17532
		call	sub_1927C
		push	ds
		mov	ax, 4CD0h
		push	ax
		mov	al, 0
		push	ax
		call	sub_17563
		add	sp, 6
		call	sub_17BD7
		call	sub_197A4
		mov	al, 2
		push	ax
		call	sub_17BBD
		inc	sp
		inc	sp
		call	sub_197F1
		mov	ax, 0C7h ; '«'
		push	ax
		mov	ax, 13Fh
		push	ax
		xor	ax, ax
		push	ax
		push	ax
		call	sub_19821
		add	sp, 8
		mov	ax, 1
		push	ax
		call	sub_19814
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		mov	ax, 0Eh
		push	ax
		call	sub_197C5
		add	sp, 4
		push	ds
		mov	ax, 90h	; 'ê'
		push	ax
		call	sub_17307
		add	sp, 4
		mov	al, 0
		mov	byte_26F9C, al
		mov	ah, 0
		mov	word_276C0, ax
		mov	byte_276C2, al
		mov	byte_26F79, al
		mov	byte_276C4, al
		mov	al, 0
		mov	byte_276CB, al
		mov	byte_26F6A, al
		mov	byte_2799D, al
		mov	byte_2799C, al
		mov	byte_2799B, al
		mov	byte_2797E, al
		mov	al, 0
		mov	byte_26FE4, al
		mov	byte_26F78, al
		mov	ah, 0
		mov	word_26F72, ax
		mov	word_26F70, ax
		mov	word_26FF0, ax
		mov	word_26FEE, ax
		mov	word_27978, ax
		mov	byte_26F75, 1
		mov	byte_26F74, 14h
		mov	al, 0
		mov	byte_2735A, al
		mov	byte_27992, al
		mov	al, 0
		mov	byte_2797F, al
		mov	byte_27976, al
		mov	byte_26F8F, al
		mov	byte_26F76, al
		xor	ax, ax
		mov	word_26FA8, ax
		mov	word_26F6E, ax
		mov	word_26F6C, ax
		xor	ax, ax
		mov	word_26F86, ax
		mov	word_26F7E, ax
		xor	ax, ax
		mov	word_26F8C, ax
		mov	word_26F80, ax
		xor	ax, ax
		mov	word_26F8A, ax
		mov	word_26F88, ax
		mov	al, 1
		mov	byte_26FA6, al
		mov	byte_26FD6, al
		xor	ax, ax
		mov	word_26F92, ax
		mov	word_26F90, ax
		mov	word_276C6, 6Ch	; 'l'
		mov	al, 0
		mov	byte_26F6B, al
		mov	byte_26F8E, al
		mov	byte_26F77, 9
		mov	byte_2799A, 0
		mov	ax, word_276C0
		mov	dx, 32Ch
		imul	dx
		mov	dx, word_26F84
		mov	bx, word_26F82
		add	bx, ax
		mov	word ptr dword_26F7A, bx
		mov	word ptr dword_26F7A+2,	dx
		mov	ax, word_276C0
		mov	dx, 0C2h ; '¬'
		imul	dx
		mov	dx, word_26FA4
		mov	bx, word_26FA2
		add	bx, ax
		mov	word ptr dword_27980, bx
		mov	word ptr dword_27980+2,	dx
		call	sub_103EA
		pop	bp
		retn
sub_10282	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_103EA	proc near		; CODE XREF: sub_10282+163p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_103F6
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_103F6:				; CODE XREF: sub_103EA+7j
		call	sub_19424
		mov	ax, 0C7h ; '«'
		push	ax
		mov	ax, 13Fh
		push	ax
		xor	ax, ax
		push	ax
		push	ax
		call	sub_19406
		add	sp, 8
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		pop	bp
		retn
sub_103EA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10416	proc near		; CODE XREF: _main+12p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_10424
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10424:				; CODE XREF: sub_10416+9j
		mov	[bp+var_1], 0
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 7C3h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_2798A, ax
		mov	word_2798C, dx
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 898h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_26FDC, ax
		mov	word_26FDE, dx
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 7806h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_27356, ax
		mov	word_27358, dx
		or	ax, dx
		jnz	short loc_10475
		mov	[bp+var_1], 0FFh

loc_10475:				; CODE XREF: sub_10416+59j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1049E
		mov	al, 1
		push	ax
		mov	ax, 1
		mov	dx, 5C70h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_2A476, ax
		mov	word_2A478, dx
		or	ax, dx
		jnz	short loc_1049E
		mov	[bp+var_1], 0FFh

loc_1049E:				; CODE XREF: sub_10416+66j
					; sub_10416+82j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_104D8
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 2F96h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_26F98, ax
		mov	word_26F9A, dx
		or	ax, dx
		jnz	short loc_104C8
		mov	[bp+var_1], 0FFh
		jmp	short loc_104D8
; ---------------------------------------------------------------------------

loc_104C8:				; CODE XREF: sub_10416+AAj
		mov	ax, word_26F9A
		mov	dx, word_26F98
		inc	dx
		inc	dx
		mov	word_26F82, dx
		mov	word_26F84, ax

loc_104D8:				; CODE XREF: sub_10416+8Fj
					; sub_10416+B0j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10500
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 500h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_26FE0, ax
		mov	word_26FE2, dx
		or	ax, dx
		jnz	short loc_10500
		mov	[bp+var_1], 0FFh

loc_10500:				; CODE XREF: sub_10416+C9j
					; sub_10416+E4j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10528
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_27CD6, ax
		mov	word_27CD8, dx
		or	ax, dx
		jnz	short loc_10528
		mov	[bp+var_1], 0FFh

loc_10528:				; CODE XREF: sub_10416+F1j
					; sub_10416+10Cj
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10562
		mov	al, 1
		push	ax
		xor	ax, ax
		mov	dx, 0B60h
		push	ax
		push	dx
		call	sub_1808E
		add	sp, 6
		mov	word_2798E, ax
		mov	word_27990, dx
		or	ax, dx
		jnz	short loc_10552
		mov	[bp+var_1], 0FFh
		jmp	short loc_10562
; ---------------------------------------------------------------------------

loc_10552:				; CODE XREF: sub_10416+134j
		mov	ax, word_27990
		mov	dx, word_2798E
		inc	dx
		inc	dx
		mov	word_26FA2, dx
		mov	word_26FA4, ax

loc_10562:				; CODE XREF: sub_10416+119j
					; sub_10416+13Aj
		mov	al, [bp+var_1]
		mov	sp, bp
		pop	bp
		retn
sub_10416	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10569	proc near		; CODE XREF: _main+39p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_10575
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10575:				; CODE XREF: sub_10569+7j
		push	word_27990
		push	word_2798E
		call	sub_1809E
		add	sp, 4
		push	word_27CD8
		push	word_27CD6
		call	sub_1809E
		add	sp, 4
		push	word_26FE2
		push	word_26FE0
		call	sub_1809E
		add	sp, 4
		push	word_26F9A
		push	word_26F98
		call	sub_1809E
		add	sp, 4
		push	word_2A478
		push	word_2A476
		call	sub_1809E
		add	sp, 4
		push	word_27358
		push	word_27356
		call	sub_1809E
		add	sp, 4
		push	word_26FDE
		push	word_26FDC
		call	sub_1809E
		add	sp, 4
		push	word_2798C
		push	word_2798A
		call	sub_1809E
		add	sp, 4
		pop	bp
		retn
sub_10569	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_105E7	proc near		; CODE XREF: sub_10C18+94p
					; sub_11349+3Ap ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_105F8
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------
		jmp	short loc_105F8
; ---------------------------------------------------------------------------

loc_105F5:				; CODE XREF: sub_105E7+19j
		call	sub_19864

loc_105F8:				; CODE XREF: sub_105E7+7j sub_105E7+Cj
		mov	al, [bp+arg_0]
		dec	[bp+arg_0]
		or	al, al
		jnz	short loc_105F5
		pop	bp
		retn
sub_105E7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10604	proc near		; CODE XREF: sub_10C18+85p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_10610
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10610:				; CODE XREF: sub_10604+7j
		mov	al, byte_2797F
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10629
		les	bx, dword_26F7A
		cmp	word ptr es:[bx+1Ch], 0
		jz	short loc_10629
		call	sub_1063B
		jmp	short loc_1062E
; ---------------------------------------------------------------------------

loc_10629:				; CODE XREF: sub_10604+13j
					; sub_10604+1Ej
		mov	byte_2797F, 1

loc_1062E:				; CODE XREF: sub_10604+23j
		push	ds
		mov	ax, 578h
		push	ax
		call	sub_108D1
		add	sp, 4
		pop	bp
		retn
sub_10604	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1063B	proc near		; CODE XREF: sub_10604+20p
					; sub_14015+F4p

var_4		= word ptr -4
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_1064C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1064C:				; CODE XREF: sub_1063B+Cj
		mov	[bp+var_1], 0
		jmp	short loc_1068C
; ---------------------------------------------------------------------------

loc_10652:				; CODE XREF: sub_1063B+55j
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		les	bx, dword_26F7A
		add	bx, ax
		mov	si, es:[bx]
		mov	ax, si
		and	ax, 0FFh
		mov	cl, 8
		shl	ax, cl
		mov	[bp+var_4], ax
		mov	ax, si
		and	ax, 0FF00h
		shr	ax, cl
		mov	di, ax
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	dx, [bp+var_4]
		or	dx, di
		mov	bx, ax
		mov	[bx+578h], dx
		inc	[bp+var_1]

loc_1068C:				; CODE XREF: sub_1063B+15j
		cmp	[bp+var_1], 10h
		jb	short loc_10652
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_1063B	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_106A4
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_106A4:				; CODE XREF: seg000:069Fj
		mov	ax, 1
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_106B5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_106B5:				; CODE XREF: seg000:06B0j
		xor	ax, ax
		push	ax
		call	sub_19814
		inc	sp
		inc	sp
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx], 0
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 14h
		mov	ax, word_26FE2
		mov	dx, word_26FE0
		mov	es:[bx+10h], dx
		mov	es:[bx+12h], ax
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 14h
		mov	word ptr es:[bx+1Ah], 1
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 1
		push	seg_20926
		push	word_20924
		call	sub_193B8
		add	sp, 4
		mov	al, 14h
		push	ax
		mov	al, 3
		push	ax
		push	ds
		mov	ax, 606h
		push	ax
		call	sub_107AD
		add	sp, 8
		mov	byte_285F4, 0
		jmp	short loc_10734
; ---------------------------------------------------------------------------

loc_10731:				; CODE XREF: seg000:073Bj
		call	sub_11DDE

loc_10734:				; CODE XREF: seg000:072Fj
		mov	al, byte_285F4
		mov	ah, 0
		or	ax, ax
		jz	short loc_10731
		les	bx, dword ptr word_20924
		mov	ax, word_26FE2
		mov	dx, word_26FE0
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 1
		mov	word ptr es:[bx+0Eh], 0
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 14h
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 1
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		jmp	short loc_107A4
; ---------------------------------------------------------------------------

loc_1079C:				; CODE XREF: seg000:07A9j
		mov	byte_285F4, 0
		call	sub_11DDE

loc_107A4:				; CODE XREF: seg000:079Aj
		cmp	byte_285F4, 0
		jnz	short loc_1079C
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_107AD	proc near		; CODE XREF: seg000:0724p

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= byte ptr  8
arg_6		= byte ptr  0Ah

		push	bp
		mov	bp, sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_107BB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_107BB:				; CODE XREF: sub_107AD+9j
		mov	al, [bp+arg_4]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	di, ax
		mov	al, [bp+arg_6]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 7
		mov	si, ax
		push	si
		push	di
		call	sub_19837
		add	sp, 4
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_19804
		add	sp, 4
		pop	di
		pop	si
		pop	bp
		retn
sub_107AD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_107F0	proc near		; CODE XREF: sub_10816+B1p
					; sub_14015+163p ...

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_107FC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_107FC:				; CODE XREF: sub_107F0+7j
		push	[bp+arg_6]
		push	[bp+arg_4]
		call	sub_19837
		add	sp, 4
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	sub_19804
		add	sp, 4
		pop	bp
		retn
sub_107F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10816	proc near		; CODE XREF: sub_13852+160p
					; sub_14015+17Cp ...

var_B		= byte ptr -0Bh
var_A		= byte ptr -0Ah
var_1		= byte ptr -1
arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= byte ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		cmp	word_26EFC, sp
		ja	short loc_10825
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10825:				; CODE XREF: sub_10816+Aj
		cmp	[bp+arg_4], 7
		jbe	short loc_1082E
		jmp	loc_108BC
; ---------------------------------------------------------------------------

loc_1082E:				; CODE XREF: sub_10816+13j
		mov	[bp+var_B], 0
		jmp	short loc_10847
; ---------------------------------------------------------------------------

loc_10834:				; CODE XREF: sub_10816+37j
		mov	al, [bp+var_B]
		inc	[bp+var_B]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	byte ptr ss:[bx], 20h ;	' '

loc_10847:				; CODE XREF: sub_10816+1Cj
		mov	al, [bp+var_B]
		cmp	al, [bp+arg_4]
		jbe	short loc_10834
		mov	al, [bp+arg_4]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	byte ptr ss:[bx], 0
		jmp	short loc_108A6
; ---------------------------------------------------------------------------

loc_10861:				; CODE XREF: sub_10816+98j
		mov	al, byte ptr [bp+arg_0]
		mov	[bp+var_1], al
		xor	ax, ax
		mov	dx, 0Ah
		push	ax
		push	dx
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	near ptr N_LUDIV@
		mov	[bp+arg_0], ax
		mov	bx, ax
		mov	[bp+arg_2], dx
		mov	cx, dx
		xor	dx, dx
		mov	ax, 0Ah
		call	N_LXMUL@
		mov	dl, [bp+var_1]
		sub	dl, al
		mov	[bp+var_1], dl
		mov	al, [bp+arg_4]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	dl, [bp+var_1]
		add	dl, 30h	; '0'
		mov	bx, ax
		mov	ss:[bx], dl

loc_108A6:				; CODE XREF: sub_10816+49j
		mov	al, [bp+arg_4]
		dec	[bp+arg_4]
		or	al, al
		ja	short loc_10861
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	ss
		lea	ax, [bp+var_A]
		jmp	short loc_108C6
; ---------------------------------------------------------------------------

loc_108BC:				; CODE XREF: sub_10816+15j
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	ds
		mov	ax, 62Eh

loc_108C6:				; CODE XREF: sub_10816+A4j
		push	ax
		call	sub_107F0
		add	sp, 8
		mov	sp, bp
		pop	bp
		retn
sub_10816	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_108D1	proc near		; CODE XREF: sub_10604+2Fp
					; sub_14015+126p

var_9		= byte ptr -9
var_8		= byte ptr -8
var_7		= byte ptr -7
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		cmp	word_26EFC, sp
		ja	short loc_108E1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_108E1:				; CODE XREF: sub_108D1+Bj
		mov	word ptr [bp+var_4], offset unk_26FF2
		mov	word ptr [bp+var_4+2], ds
		cmp	word_257CD, 1
		jnz	short loc_10926
		mov	word ptr dword_29F46, offset unk_26FF2
		mov	word ptr dword_29F46+2,	ds
		mov	[bp+var_6], 0
		jmp	short loc_1091D
; ---------------------------------------------------------------------------

loc_10900:				; CODE XREF: sub_108D1+50j
		mov	al, [bp+var_6]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_6]
		mov	ah, 0
		mov	si, ax
		mov	al, [si+70Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_6]

loc_1091D:				; CODE XREF: sub_108D1+2Dj
		cmp	[bp+var_6], 10h
		jb	short loc_10900
		jmp	loc_109E9
; ---------------------------------------------------------------------------

loc_10926:				; CODE XREF: sub_108D1+1Dj
		mov	[bp+var_5], 0
		jmp	loc_109E0
; ---------------------------------------------------------------------------

loc_1092D:				; CODE XREF: sub_108D1+115j
		mov	al, [bp+var_5]
		mov	ah, 0
		shl	ax, 1
		les	bx, [bp+arg_0]
		add	bx, ax
		mov	ax, es:[bx]
		mov	cl, 8
		shr	ax, cl
		mov	[bp+var_7], al
		mov	al, [bp+var_5]
		mov	ah, 0
		shl	ax, 1
		mov	bx, word ptr [bp+arg_0]
		add	bx, ax
		mov	ax, es:[bx]
		mov	dl, byte_2799B
		mov	dh, 0
		shl	dx, cl
		sub	ax, dx
		mov	cl, 4
		shr	ax, cl
		mov	[bp+var_8], al
		mov	al, [bp+var_5]
		mov	ah, 0
		shl	ax, 1
		mov	bx, word ptr [bp+arg_0]
		add	bx, ax
		mov	al, es:[bx]
		mov	dl, byte_2799B
		mov	cl, 8
		shl	dl, cl
		mov	bl, byte_2799C
		mov	cl, 4
		shl	bl, cl
		add	dl, bl
		sub	al, dl
		mov	[bp+var_9], al
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	dx, 3
		imul	dx
		les	bx, [bp+var_4]
		add	bx, ax
		mov	al, [bp+var_7]
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	es:[bx+33h], al
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	dx, 3
		imul	dx
		mov	bx, word ptr [bp+var_4]
		add	bx, ax
		mov	al, [bp+var_8]
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	es:[bx+34h], al
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	dx, 3
		imul	dx
		mov	bx, word ptr [bp+var_4]
		add	bx, ax
		mov	al, [bp+var_9]
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	es:[bx+35h], al
		inc	[bp+var_5]

loc_109E0:				; CODE XREF: sub_108D1+59j
		cmp	[bp+var_5], 10h
		jnb	short loc_109E9
		jmp	loc_1092D
; ---------------------------------------------------------------------------

loc_109E9:				; CODE XREF: sub_108D1+52j
					; sub_108D1+113j
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 6C42h
		push	ax
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		call	sub_19864
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_108D1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10A07	proc near		; CODE XREF: _main+33p
		push	bp
		mov	bp, sp
		push	si
		cmp	word_26EFC, sp
		ja	short loc_10A14
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10A14:				; CODE XREF: sub_10A07+8j
		mov	ax, 4
		push	ax
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20470
		push	word_2046E
		push	word_2798C
		push	word_2798A
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_2798C
		push	word_2798A
		call	sub_197D5
		add	sp, 4
		mov	ax, 4
		push	ax
		mov	ax, 9
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_204A2
		push	word_204A0
		push	word_26FDE
		push	word_26FDC
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_26FDE
		push	word_26FDC
		call	sub_193D8
		add	sp, 4
		pop	si
		pop	bp
		retn
sub_10A07	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10A90	proc near		; CODE XREF: sub_12A0A+51p

var_2		= byte ptr -2
var_1		= byte ptr -1
arg_0		= byte ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_10AA0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10AA0:				; CODE XREF: sub_10A90+Bj
		mov	ax, word_27358
		mov	dx, word_27356
		add	dx, 6
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 18h
		mov	ax, [bp+arg_6]
		mov	es:[bx+0Eh], ax
		mov	word ptr es:[bx+1Ch], 6
		mov	word ptr es:[bx+1Eh], 1
		cmp	[bp+arg_4], 18h
		jnz	short loc_10AE3
		mov	word ptr es:[bx+20h], 1
		jmp	short loc_10AED
; ---------------------------------------------------------------------------

loc_10AE3:				; CODE XREF: sub_10A90+49j
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+20h], 2

loc_10AED:				; CODE XREF: sub_10A90+51j
		cmp	[bp+arg_0], 0F0h ; ''
		jbe	short loc_10B01
		mov	[bp+var_2], 1
		mov	al, 0FBh ; '˚'
		sub	al, [bp+arg_0]
		mov	[bp+var_1], al
		jmp	short loc_10B7A
; ---------------------------------------------------------------------------

loc_10B01:				; CODE XREF: sub_10A90+61j
		mov	[bp+var_2], 0
		mov	[bp+var_1], 1
		jmp	short loc_10B7A
; ---------------------------------------------------------------------------

loc_10B0B:				; CODE XREF: sub_10A90+F0j
		mov	ax, [bp+arg_2]
		mov	dx, 27h	; '''
		imul	dx
		les	bx, dword_26F7A
		add	bx, ax
		mov	ax, [bp+arg_4]
		sar	ax, 1
		mov	dx, 3
		imul	dx
		add	bx, ax
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx+20h]
		add	al, 0FFh
		mov	[bp+arg_0], al
		mov	ah, 0
		mov	bx, 14h
		cwd
		idiv	bx
		shl	ax, 1
		mov	si, ax
		mov	dx, 0Ah
		imul	dx
		mov	dl, [bp+arg_0]
		mov	dh, 0
		sub	dx, ax
		mov	di, dx
		les	bx, dword ptr word_20924
		mov	es:[bx+6], di
		mov	es:[bx+8], si
		mov	ax, [bp+arg_2]
		mov	es:[bx+14h], ax
		mov	ax, [bp+arg_4]
		mov	es:[bx+16h], ax
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		inc	[bp+var_2]

loc_10B7A:				; CODE XREF: sub_10A90+6Fj
					; sub_10A90+79j
		mov	al, [bp+var_2]
		cmp	al, [bp+var_1]
		jb	short loc_10B0B
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_10A90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10B88	proc near		; CODE XREF: sub_12A0A+1Ep

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_10B94
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10B94:				; CODE XREF: sub_10B88+7j
		les	bx, dword ptr word_20924
		mov	ax, [bp+arg_4]
		mov	es:[bx+0Eh], ax
		mov	ax, [bp+arg_0]
		mov	es:[bx+14h], ax
		mov	ax, [bp+arg_2]
		mov	es:[bx+16h], ax
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 1
		cmp	[bp+arg_2], 18h
		jnz	short loc_10BC7
		mov	word ptr es:[bx+20h], 1
		jmp	short loc_10BD1
; ---------------------------------------------------------------------------

loc_10BC7:				; CODE XREF: sub_10B88+35j
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+20h], 2

loc_10BD1:				; CODE XREF: sub_10B88+3Dj
		les	bx, dword ptr word_20924
		mov	byte ptr es:[bx+22h], 0
		mov	byte ptr es:[bx+23h], 0
		mov	byte ptr es:[bx+24h], 0
		mov	byte ptr es:[bx+25h], 0
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		pop	bp
		retn
sub_10B88	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10BF9	proc near		; CODE XREF: sub_10C18+66p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_10C05
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10C05:				; CODE XREF: sub_10BF9+7j
		call	sub_132B0
		call	sub_12A78
		call	sub_131DE
		mov	al, 0
		mov	byte_2A0E0, al
		mov	byte_2891D, al
		pop	bp
		retn
sub_10BF9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10C18	proc near		; CODE XREF: sub_10258:loc_1026Fp

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_10C26
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10C26:				; CODE XREF: sub_10C18+9j
		call	sub_133C5
		call	sub_12EF8

loc_10C2C:				; CODE XREF: sub_10C18+58j
		mov	byte_2963D, 0
		mov	byte_27CCA, 5
		mov	al, 0
		mov	byte_27D65, al
		mov	ah, 0
		mov	word_2A484, ax
		mov	word_2A486, 0
		jmp	short loc_10C56
; ---------------------------------------------------------------------------

loc_10C48:				; CODE XREF: sub_10C18+46j
		cmp	[bp+var_1], 1
		jnz	short loc_10C53
		call	sub_15681
		jmp	short loc_10C56
; ---------------------------------------------------------------------------

loc_10C53:				; CODE XREF: sub_10C18+34j
		call	sub_10F7A

loc_10C56:				; CODE XREF: sub_10C18+2Ej
					; sub_10C18+39j
		call	sub_135A5
		mov	[bp+var_1], al
		or	al, al
		jnz	short loc_10C48
		jmp	loc_10D8A
; ---------------------------------------------------------------------------

loc_10C63:				; CODE XREF: sub_10C18+17Ej
		call	sub_13852
		cmp	byte_2963D, 0FFh
		jnz	short loc_10C72
		call	sub_111EB
		jmp	short loc_10C2C
; ---------------------------------------------------------------------------

loc_10C72:				; CODE XREF: sub_10C18+53j
		mov	al, byte_288FE
		mov	ah, 0
		dec	ax
		mov	word_276C0, ax
		call	sub_13467
		call	sub_10BF9
		mov	al, byte_28912
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_15181
		add	sp, 4
		call	sub_11CB2
		call	sub_11CEA
		call	sub_10604
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		mov	al, 1
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp
		call	sub_1328F
		call	sub_11473
		call	sub_14B4E
		call	sub_1138C
		call	sub_113B2
		call	sub_11BD7
		call	sub_11C41
		call	sub_1138C
		call	sub_113B2
		call	sub_119A1
		call	sub_119E4
		call	sub_11473
		call	sub_14B4E
		jmp	short loc_10D49
; ---------------------------------------------------------------------------

loc_10CDA:				; CODE XREF: sub_10C18+146j
		call	sub_193B1
		mov	byte_27D63, al
		call	sub_1138C
		call	sub_113B2
		call	sub_113DF
		call	sub_14C14
		call	sub_11473
		call	sub_14B4E
		call	sub_114E4
		call	sub_115A1
		call	sub_119A1
		call	sub_119E4
		call	sub_11A20
		call	sub_1165E
		call	sub_117C7
		call	sub_15085
		call	sub_150C0
		call	sub_11A67
		call	sub_11B2B
		call	sub_11BD7
		call	sub_11C41
		call	sub_11CB2
		call	sub_11CEA
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_11349
		call	sub_1629C
		call	sub_11D26
		call	sub_14C99
		call	sub_150FB
		call	sub_1233A
		mov	al, 19h
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_10D49
		call	sub_149D7

loc_10D49:				; CODE XREF: sub_10C18+C0j
					; sub_10C18+12Cj
		cmp	byte_2963D, 0
		jnz	short loc_10D61
		cmp	byte_2891D, 0
		jnz	short loc_10D61
		cmp	byte_2A0E0, 0
		jnz	short loc_10D61
		jmp	loc_10CDA
; ---------------------------------------------------------------------------

loc_10D61:				; CODE XREF: sub_10C18+136j
					; sub_10C18+13Dj ...
		cmp	byte_2963D, 0FFh
		jnz	short loc_10D70
		call	sub_111EB
		call	sub_15681
		jmp	short loc_10D8D
; ---------------------------------------------------------------------------

loc_10D70:				; CODE XREF: sub_10C18+14Ej
		call	sub_13E8A
		or	al, al
		jz	short loc_10D8D
		inc	byte_27D62
		cmp	byte_27D62, 0Ah
		jnz	short loc_10D87
		call	sub_13ED4
		jmp	short loc_10D8D
; ---------------------------------------------------------------------------

loc_10D87:				; CODE XREF: sub_10C18+168j
		call	sub_10D9D

loc_10D8A:				; CODE XREF: sub_10C18+48j
		call	sub_12D14

loc_10D8D:				; CODE XREF: sub_10C18+156j
					; sub_10C18+15Dj ...
		mov	al, byte_2963D
		mov	ah, 0
		or	ax, ax
		jnz	short loc_10D99
		jmp	loc_10C63
; ---------------------------------------------------------------------------

loc_10D99:				; CODE XREF: sub_10C18+17Cj
		mov	sp, bp
		pop	bp
		retn
sub_10C18	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10D9D	proc near		; CODE XREF: sub_10C18:loc_10D87p

var_D		= byte ptr -0Dh
var_C		= byte ptr -0Ch
var_B		= byte ptr -0Bh
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= dword	ptr -8
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_10DAE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10DAE:				; CODE XREF: sub_10D9D+Cj
		push	ss
		lea	ax, [bp+var_4]
		push	ax
		push	ds
		mov	ax, 119Eh
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word_2892E, dx
		mov	word_28930, ax
		mov	ax, 4
		push	ax
		mov	ax, 3
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		mov	dx, 63h	; 'c'
		push	ax
		push	dx
		push	word_28930
		push	word_2892E
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		cmp	word_257CD, 1
		jnz	short loc_10E4A
		mov	ax, word_28930
		mov	dx, word_2892E
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_D], 0
		jmp	short loc_10E44
; ---------------------------------------------------------------------------

loc_10E27:				; CODE XREF: sub_10D9D+ABj
		mov	al, [bp+var_D]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_D]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+71Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_D]

loc_10E44:				; CODE XREF: sub_10D9D+88j
		cmp	[bp+var_D], 10h
		jb	short loc_10E27

loc_10E4A:				; CODE XREF: sub_10D9D+74j
		call	sub_13467
		xor	ax, ax
		push	ax
		push	word_28930
		push	word_2892E
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		call	sub_19864
		mov	[bp+var_9], 4
		mov	[bp+var_A], 5
		mov	ax, [bp+var_2]
		mov	dx, [bp+var_4]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		mov	al, [bp+var_A]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_C], 0
		jmp	short loc_10ED4
; ---------------------------------------------------------------------------

loc_10E94:				; CODE XREF: sub_10D9D+13Bj
		mov	al, [bp+var_C]
		mov	ah, 0
		les	bx, [bp+var_8]
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_B], al
		les	bx, dword_28C34
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_9]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		cmp	[bp+var_B], 20h	; ' '
		jz	short loc_10ECE
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_10ECE:				; CODE XREF: sub_10D9D+124j
		inc	[bp+var_9]
		inc	[bp+var_C]

loc_10ED4:				; CODE XREF: sub_10D9D+F5j
		cmp	[bp+var_C], 0Dh
		jb	short loc_10E94
		mov	[bp+var_9], 7
		mov	[bp+var_A], 7
		mov	al, byte_27D62
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+1356h]
		mov	dx, [bx+1354h]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		mov	al, [bp+var_A]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_C], 0
		jmp	short loc_10F4C
; ---------------------------------------------------------------------------

loc_10F12:				; CODE XREF: sub_10D9D+1B3j
		mov	al, [bp+var_C]
		mov	ah, 0
		les	bx, [bp+var_8]
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_B], al
		les	bx, dword_28C34
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_9]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		inc	[bp+var_9]
		inc	[bp+var_C]

loc_10F4C:				; CODE XREF: sub_10D9D+173j
		cmp	[bp+var_C], 6
		jb	short loc_10F12

loc_10F52:				; CODE XREF: sub_10D9D+1C1j
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		cbw
		test	ax, 10h
		jz	short loc_10F52
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		push	ds
		mov	ax, 90h	; 'ê'
		push	ax
		call	sub_17307
		add	sp, 4
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_10D9D	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10F7A	proc near		; CODE XREF: sub_10C18:loc_10C53p

var_16		= byte ptr -16h
var_15		= byte ptr -15h
var_14		= byte ptr -14h
var_13		= byte ptr -13h
var_12		= byte ptr -12h
var_11		= byte ptr -11h
var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 16h
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_10F8B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_10F8B:				; CODE XREF: sub_10F7A+Cj
		push	ss
		lea	ax, [bp+var_4]
		push	ax
		push	ds
		mov	ax, 11A2h
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		push	ss
		lea	ax, [bp+var_8]
		push	ax
		push	ds
		mov	ax, 11A6h
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		push	ss
		lea	ax, [bp+var_C]
		push	ax
		push	ds
		mov	ax, 11AAh
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word_2892E, dx
		mov	word_28930, ax
		mov	ax, 4
		push	ax
		mov	ax, 3
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		mov	dx, 63h	; 'c'
		push	ax
		push	dx
		push	word_28930
		push	word_2892E
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		cmp	word_257CD, 1
		jnz	short loc_11047
		mov	ax, word_28930
		mov	dx, word_2892E
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_16], 0
		jmp	short loc_11041
; ---------------------------------------------------------------------------

loc_11024:				; CODE XREF: sub_10F7A+CBj
		mov	al, [bp+var_16]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_16]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+71Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_16]

loc_11041:				; CODE XREF: sub_10F7A+A8j
		cmp	[bp+var_16], 10h
		jb	short loc_11024

loc_11047:				; CODE XREF: sub_10F7A+94j
		call	sub_13467
		xor	ax, ax
		push	ax
		push	word_28930
		push	word_2892E
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		call	sub_19864
		mov	[bp+var_11], 0
		mov	[bp+var_12], 1
		mov	ax, [bp+var_2]
		mov	dx, [bp+var_4]
		mov	word ptr [bp+var_10], dx
		mov	word ptr [bp+var_10+2],	ax
		mov	al, [bp+var_12]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_14], 0
		jmp	short loc_110D1
; ---------------------------------------------------------------------------

loc_11091:				; CODE XREF: sub_10F7A+15Bj
		mov	al, [bp+var_14]
		mov	ah, 0
		les	bx, [bp+var_10]
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_13], al
		les	bx, dword_28C34
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_11]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		cmp	[bp+var_13], 20h ; ' '
		jz	short loc_110CB
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_110CB:				; CODE XREF: sub_10F7A+144j
		inc	[bp+var_11]
		inc	[bp+var_14]

loc_110D1:				; CODE XREF: sub_10F7A+115j
		cmp	[bp+var_14], 13h
		jb	short loc_11091
		mov	[bp+var_11], 7
		mov	[bp+var_12], 0Ah
		mov	al, [bp+var_12]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_14], 0
		jmp	short loc_11127
; ---------------------------------------------------------------------------

loc_110F6:				; CODE XREF: sub_10F7A+1B1j
		mov	[bp+var_13], 41h ; 'A'
		les	bx, dword_28C34
		mov	al, [bp+var_13]
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_11]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		inc	[bp+var_11]
		inc	[bp+var_14]

loc_11127:				; CODE XREF: sub_10F7A+17Aj
		cmp	[bp+var_14], 6
		jb	short loc_110F6
		mov	al, 7
		push	ax
		mov	al, 0Ah
		push	ax
		call	sub_15C87
		add	sp, 4
		mov	[bp+var_15], al
		or	al, al
		jz	short loc_11154
		mov	ax, [bp+var_6]
		mov	dx, [bp+var_8]
		mov	word ptr [bp+var_10], dx
		mov	word ptr [bp+var_10+2],	ax
		mov	al, [bp+var_15]
		mov	byte_27D62, al
		jmp	short loc_11165
; ---------------------------------------------------------------------------

loc_11154:				; CODE XREF: sub_10F7A+1C4j
		mov	ax, [bp+var_A]
		mov	dx, [bp+var_C]
		mov	word ptr [bp+var_10], dx
		mov	word ptr [bp+var_10+2],	ax
		mov	byte_27D62, 1

loc_11165:				; CODE XREF: sub_10F7A+1D8j
		mov	[bp+var_11], 3
		mov	[bp+var_12], 6
		mov	al, [bp+var_12]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_14], 0
		jmp	short loc_111C4
; ---------------------------------------------------------------------------

loc_11184:				; CODE XREF: sub_10F7A+24Ej
		mov	al, [bp+var_14]
		mov	ah, 0
		les	bx, [bp+var_10]
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_13], al
		les	bx, dword_28C34
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_11]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		cmp	[bp+var_13], 20h ; ' '
		jz	short loc_111BE
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_111BE:				; CODE XREF: sub_10F7A+237j
		inc	[bp+var_11]
		inc	[bp+var_14]

loc_111C4:				; CODE XREF: sub_10F7A+208j
		cmp	[bp+var_14], 0Eh
		jb	short loc_11184
		mov	[bp+var_14], 0
		jmp	short loc_111D6
; ---------------------------------------------------------------------------

loc_111D0:				; CODE XREF: sub_10F7A+260j
		call	sub_13E74
		inc	[bp+var_14]

loc_111D6:				; CODE XREF: sub_10F7A+254j
		cmp	[bp+var_14], 3
		jb	short loc_111D0
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_10F7A	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_111EB	proc near		; CODE XREF: sub_10C18+55p
					; sub_10C18+150p

var_D		= byte ptr -0Dh
var_C		= byte ptr -0Ch
var_B		= byte ptr -0Bh
var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= dword	ptr -8
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Eh
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_111FC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_111FC:				; CODE XREF: sub_111EB+Cj
		push	ss
		lea	ax, [bp+var_4]
		push	ax
		push	ds
		mov	ax, 11AEh
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word_2892E, dx
		mov	word_28930, ax
		mov	ax, 4
		push	ax
		mov	ax, 3
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		mov	dx, 63h	; 'c'
		push	ax
		push	dx
		push	word_28930
		push	word_2892E
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		cmp	word_257CD, 1
		jnz	short loc_11298
		mov	ax, word_28930
		mov	dx, word_2892E
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_D], 0
		jmp	short loc_11292
; ---------------------------------------------------------------------------

loc_11275:				; CODE XREF: sub_111EB+ABj
		mov	al, [bp+var_D]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_D]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+71Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_D]

loc_11292:				; CODE XREF: sub_111EB+88j
		cmp	[bp+var_D], 10h
		jb	short loc_11275

loc_11298:				; CODE XREF: sub_111EB+74j
		call	sub_13467
		xor	ax, ax
		push	ax
		push	word_28930
		push	word_2892E
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		call	sub_19864
		mov	al, 6
		mov	[bp+var_A], al
		mov	[bp+var_9], al
		mov	ax, [bp+var_2]
		mov	dx, [bp+var_4]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		mov	al, [bp+var_A]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_C], 0
		jmp	short loc_11322
; ---------------------------------------------------------------------------

loc_112E2:				; CODE XREF: sub_111EB+13Bj
		mov	al, [bp+var_C]
		mov	ah, 0
		les	bx, [bp+var_8]
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_B], al
		les	bx, dword_28C34
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_9]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		cmp	[bp+var_B], 20h	; ' '
		jz	short loc_1131C
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_1131C:				; CODE XREF: sub_111EB+124j
		inc	[bp+var_9]
		inc	[bp+var_C]

loc_11322:				; CODE XREF: sub_111EB+F5j
		cmp	[bp+var_C], 9
		jb	short loc_112E2
		mov	[bp+var_C], 0
		jmp	short loc_11334
; ---------------------------------------------------------------------------

loc_1132E:				; CODE XREF: sub_111EB+14Dj
		call	sub_13E74
		inc	[bp+var_C]

loc_11334:				; CODE XREF: sub_111EB+141j
		cmp	[bp+var_C], 2
		jb	short loc_1132E
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_111EB	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11349	proc near		; CODE XREF: sub_10C18+110p
					; sub_13C26+24p ...

var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_11357
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11357:				; CODE XREF: sub_11349+9j
		mov	[bp+var_2], 1
		test	byte_288FF, 1
		jz	short loc_11366
		mov	al, 80h	; 'Ä'
		jmp	short loc_11368
; ---------------------------------------------------------------------------

loc_11366:				; CODE XREF: sub_11349+17j
		mov	al, 0

loc_11368:				; CODE XREF: sub_11349+1Bj
		mov	[bp+var_1], al
		or	al, al
		jz	short loc_11372
		inc	[bp+var_2]

loc_11372:				; CODE XREF: sub_11349+24j
		mov	al, byte_288FF
		mov	ah, 0
		sar	ax, 1
		or	al, [bp+var_1]
		mov	byte_288FF, al
		mov	al, [bp+var_2]
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp
		mov	sp, bp
		pop	bp
		retn
sub_11349	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1138C	proc near		; CODE XREF: sub_10C18+A2p
					; sub_10C18+AEp ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11398
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11398:				; CODE XREF: sub_1138C+7j
		mov	ax, word_2892A
		mov	word_28C32, ax
		mov	ax, word_2892C
		mov	word_29238, ax
		mov	ax, word_2A0E6
		mov	word_2892A, ax
		mov	ax, word_2A0E8
		mov	word_2892C, ax
		pop	bp
		retn
sub_1138C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_113B2	proc near		; CODE XREF: sub_10C18+A5p
					; sub_10C18+B1p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_113BE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_113BE:				; CODE XREF: sub_113B2+7j
		cmp	byte_28921, 0FFh
		jz	short loc_113DD
		mov	ax, word_28908
		mov	word_2963E, ax
		mov	ax, word_2890A
		mov	word_29F44, ax
		mov	ax, word_2A47A
		mov	word_28908, ax
		mov	ax, word_2A47C
		mov	word_2890A, ax

loc_113DD:				; CODE XREF: sub_113B2+11j
		pop	bp
		retn
sub_113B2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_113DF	proc near		; CODE XREF: sub_10C18+CEp
					; sub_13CF7+D6p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_113EB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_113EB:				; CODE XREF: sub_113DF+7j
		mov	al, byte_285F2
		mov	ah, 0
		or	ax, ax
		jnz	short loc_11471
		cmp	byte_285FD, 0
		jz	short loc_11471
		cmp	byte_27CDC, 5
		jz	short loc_11471
		cmp	byte_27CDC, 0Bh
		jz	short loc_11471
		cmp	byte_27CDC, 1Ch
		jz	short loc_11471
		les	bx, dword_2A55C
		mov	ax, es:[bx]
		mov	word_285FA, ax
		cmp	byte_29F5E, 0
		jz	short loc_11435
		mov	ax, es:[bx+2]
		neg	ax
		mov	dx, word_29640
		add	dx, ax
		mov	word_29640, dx
		mov	ax, dx
		jmp	short loc_11444
; ---------------------------------------------------------------------------

loc_11435:				; CODE XREF: sub_113DF+40j
		les	bx, dword_2A55C
		mov	ax, es:[bx+2]
		add	word_29640, ax
		mov	ax, word_29640

loc_11444:				; CODE XREF: sub_113DF+54j
		les	bx, dword_2A55C
		mov	ax, es:[bx+4]
		add	word_29642, ax
		add	word ptr dword_2A55C, 6
		mov	al, byte_285FD
		add	al, 0FFh
		mov	byte_285FD, al
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1146A
		mov	al, 0
		mov	byte_27CDA, al
		jmp	short loc_11471
; ---------------------------------------------------------------------------

loc_1146A:				; CODE XREF: sub_113DF+82j
		inc	byte_27CDA
		mov	al, byte_27CDA

loc_11471:				; CODE XREF: sub_113DF+13j
					; sub_113DF+1Aj ...
		pop	bp
		retn
sub_113DF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11473	proc near		; CODE XREF: sub_10C18+9Cp
					; sub_10C18+BAp ...
		push	bp
		mov	bp, sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_11481
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11481:				; CODE XREF: sub_11473+9j
		les	bx, dword_28C34
		mov	di, es:[bx+14h]
		mov	si, es:[bx+16h]
		mov	ax, word_29640
		sub	ax, di
		mov	cl, 4
		sar	ax, cl
		dec	ax
		mov	word_2A0E6, ax
		mov	ax, word_29642
		sub	ax, si
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	word_2A0E8, ax
		cmp	word_2A0E6, 0
		jge	short loc_114B7
		mov	word_2A0E6, 0
		jmp	short loc_114C4
; ---------------------------------------------------------------------------

loc_114B7:				; CODE XREF: sub_11473+3Aj
		cmp	word_2A0E6, 12h
		jle	short loc_114C4
		mov	word_2A0E6, 12h

loc_114C4:				; CODE XREF: sub_11473+42j
					; sub_11473+49j
		cmp	word_2A0E8, 0
		jge	short loc_114D3
		mov	word_2A0E8, 0
		jmp	short loc_114E0
; ---------------------------------------------------------------------------

loc_114D3:				; CODE XREF: sub_11473+56j
		cmp	word_2A0E8, 16h
		jle	short loc_114E0
		mov	word_2A0E8, 16h

loc_114E0:				; CODE XREF: sub_11473+5Ej
					; sub_11473+65j
		pop	di
		pop	si
		pop	bp
		retn
sub_11473	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_114E4	proc near		; CODE XREF: sub_10C18+DAp

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	si
		cmp	word_26EFC, sp
		ja	short loc_114F4
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_114F4:				; CODE XREF: sub_114E4+Bj
		mov	byte_2891C, 0
		mov	cl, 0
		jmp	loc_11594
; ---------------------------------------------------------------------------

loc_114FE:				; CODE XREF: sub_114E4+B5j
		mov	al, byte_2891C
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4C72h]
		mov	dx, [bx+4C70h]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		cmp	byte ptr es:[bx], 0
		jz	short loc_1158E
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		mov	word ptr dword_2A46E, dx
		mov	word ptr dword_2A46E+2,	ax
		les	bx, dword_2A46E
		mov	al, es:[bx]
		mov	byte_28928, al
		les	bx, [bp+var_8]
		inc	word ptr es:[bx+2]
		mov	es:[bx+6], al
		cmp	byte_28928, 0FFh
		jnz	short loc_11551
		mov	byte ptr es:[bx], 0
		jmp	short loc_1158E
; ---------------------------------------------------------------------------

loc_11551:				; CODE XREF: sub_114E4+65j
		cmp	byte_28928, 0
		jz	short loc_1158E
		mov	al, byte_28928
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+3D6Ch]
		mov	dx, [bx+3D6Ah]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		les	bx, [bp+var_8]
		push	es
		les	si, [bp+var_4]
		mov	ax, es:[si]
		pop	es
		mov	es:[bx+8], ax
		les	bx, [bp+var_4]
		mov	ax, es:[bx+2]
		les	bx, [bp+var_8]
		mov	es:[bx+0Ah], ax

loc_1158E:				; CODE XREF: sub_114E4+3Aj
					; sub_114E4+6Bj ...
		inc	byte_2891C
		inc	cl

loc_11594:				; CODE XREF: sub_114E4+17j
		cmp	cl, 3
		jnb	short loc_1159C
		jmp	loc_114FE
; ---------------------------------------------------------------------------

loc_1159C:				; CODE XREF: sub_114E4+B3j
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_114E4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_115A1	proc near		; CODE XREF: sub_10C18+DDp

var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	si
		cmp	word_26EFC, sp
		ja	short loc_115B1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_115B1:				; CODE XREF: sub_115A1+Bj
		mov	byte_28916, 0
		mov	cl, 0
		jmp	loc_11651
; ---------------------------------------------------------------------------

loc_115BB:				; CODE XREF: sub_115A1+B5j
		mov	al, byte_28916
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4CBEh]
		mov	dx, [bx+4CBCh]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		cmp	byte ptr es:[bx], 0
		jz	short loc_1164B
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		mov	word ptr dword_2A472, dx
		mov	word ptr dword_2A472+2,	ax
		les	bx, dword_2A472
		mov	al, es:[bx]
		mov	byte_28929, al
		les	bx, [bp+var_8]
		inc	word ptr es:[bx+2]
		mov	es:[bx+6], al
		cmp	byte_28929, 0FFh
		jnz	short loc_1160E
		mov	byte ptr es:[bx], 0
		jmp	short loc_1164B
; ---------------------------------------------------------------------------

loc_1160E:				; CODE XREF: sub_115A1+65j
		cmp	byte_28929, 0
		jz	short loc_1164B
		mov	al, byte_28929
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+40A8h]
		mov	dx, [bx+40A6h]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		les	bx, [bp+var_8]
		push	es
		les	si, [bp+var_4]
		mov	ax, es:[si]
		pop	es
		mov	es:[bx+8], ax
		les	bx, [bp+var_4]
		mov	ax, es:[bx+2]
		les	bx, [bp+var_8]
		mov	es:[bx+0Ah], ax

loc_1164B:				; CODE XREF: sub_115A1+3Aj
					; sub_115A1+6Bj ...
		inc	byte_28916
		inc	cl

loc_11651:				; CODE XREF: sub_115A1+17j
		cmp	cl, 4
		jnb	short loc_11659
		jmp	loc_115BB
; ---------------------------------------------------------------------------

loc_11659:				; CODE XREF: sub_115A1+B3j
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_115A1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1165E	proc near		; CODE XREF: sub_10C18+E9p
					; sub_12A78+16Dp

var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= word ptr -6
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_1166F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1166F:				; CODE XREF: sub_1165E+Cj
		mov	[bp+var_2], 0

loc_11673:				; CODE XREF: sub_1165E+160j
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4C72h]
		mov	dx, [bx+4C70h]
		mov	word ptr [bp+var_C], dx
		mov	word ptr [bp+var_C+2], ax
		les	bx, [bp+var_C]
		mov	al, es:[bx]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jnz	short loc_1169E
		jmp	loc_117B5
; ---------------------------------------------------------------------------

loc_1169E:				; CODE XREF: sub_1165E+3Bj
		cmp	[bp+var_1], 0FFh
		jnz	short loc_116A7
		jmp	loc_117B5
; ---------------------------------------------------------------------------

loc_116A7:				; CODE XREF: sub_1165E+44j
		mov	al, es:[bx+1]
		mov	[bp+var_3], al
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	di, [bx+32BEh]
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	si, [bx+32C0h]
		les	bx, dword ptr word_20C84
		mov	word ptr es:[bx+1Ch], 0
		test	[bp+var_3], 1
		jz	short loc_116E4
		mov	ax, es:[bx+1Ch]
		or	ax, 600h
		mov	es:[bx+1Ch], ax

loc_116E4:				; CODE XREF: sub_1165E+79j
		les	bx, dword ptr word_20C84
		mov	ax, di
		mov	es:[bx+14h], ax
		mov	es:[bx+6], ax
		mov	ax, si
		mov	es:[bx+16h], ax
		mov	es:[bx+8], ax
		push	seg_20C86
		push	word_20C84
		call	sub_180BC
		add	sp, 4
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+0F4h]
		mov	[bp+var_6], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+0F6h]
		mov	[bp+var_8], ax
		les	bx, dword_28C34
		mov	ax, [bp+var_6]
		mov	es:[bx], ax
		les	bx, [bp+var_C]
		mov	ax, [bp+var_8]
		add	ax, es:[bx+8]
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		les	bx, [bp+var_C]
		mov	ax, es:[bx+0Ah]
		les	bx, dword_28C34
		mov	es:[bx+4], ax
		les	bx, [bp+var_C]
		test	word ptr es:[bx+0Ah], 200h
		jnz	short loc_1176F
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_1176F:				; CODE XREF: sub_1165E+104j
		les	bx, dword ptr word_20C90
		mov	es:[bx+6], di
		mov	es:[bx+8], si
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	dx, 180h
		imul	dx
		add	ax, 79BEh
		mov	es:[bx+10h], ax
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+1Ch], 0
		test	[bp+var_3], 1
		jz	short loc_117A7
		mov	ax, es:[bx+1Ch]
		or	ax, 200h
		mov	es:[bx+1Ch], ax

loc_117A7:				; CODE XREF: sub_1165E+13Cj
		push	seg_20C92
		push	word_20C90
		call	sub_193B8
		add	sp, 4

loc_117B5:				; CODE XREF: sub_1165E+3Dj
					; sub_1165E+46j
		inc	[bp+var_2]
		cmp	[bp+var_1], 0FFh
		jz	short loc_117C1
		jmp	loc_11673
; ---------------------------------------------------------------------------

loc_117C1:				; CODE XREF: sub_1165E+15Ej
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_1165E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_117C7	proc near		; CODE XREF: sub_10C18+ECp
					; sub_12A78+1DDp

var_C		= dword	ptr -0Ch
var_8		= word ptr -8
var_6		= word ptr -6
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_117D8
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_117D8:				; CODE XREF: sub_117C7+Cj
		mov	[bp+var_2], 0

loc_117DC:				; CODE XREF: sub_117C7+1D1j
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4CBEh]
		mov	dx, [bx+4CBCh]
		mov	word ptr [bp+var_C], dx
		mov	word ptr [bp+var_C+2], ax
		les	bx, [bp+var_C]
		mov	al, es:[bx]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jnz	short loc_11807
		jmp	loc_1198F
; ---------------------------------------------------------------------------

loc_11807:				; CODE XREF: sub_117C7+3Bj
		cmp	[bp+var_1], 0FFh
		jnz	short loc_11810
		jmp	loc_1198F
; ---------------------------------------------------------------------------

loc_11810:				; CODE XREF: sub_117C7+44j
		mov	al, es:[bx+1]
		mov	[bp+var_3], al
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	di, [bx+343Eh]
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	si, [bx+3440h]
		les	bx, dword ptr word_20C78
		mov	es:[bx+6], di
		mov	es:[bx+8], si
		push	seg_20C7A
		push	word_20C78
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+0Ah], 1
		xor	ax, ax
		mov	es:[bx+16h], ax
		mov	es:[bx+14h], ax
		mov	word ptr es:[bx+1Ch], 4
		test	[bp+var_3], 1
		jz	short loc_11890
		mov	word ptr es:[bx+2], offset unk_2A36A
		mov	word ptr es:[bx+4], ds
		push	seg_20C7E
		push	word_20C7C
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+2], 9EBAh
		jmp	short loc_118B6
; ---------------------------------------------------------------------------

loc_11890:				; CODE XREF: sub_117C7+A3j
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+2], offset unk_2A26A
		mov	word ptr es:[bx+4], ds
		push	seg_20C7E
		push	word_20C7C
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+2], offset unk_2A36A

loc_118B6:				; CODE XREF: sub_117C7+C7j
		mov	word ptr es:[bx+4], ds
		les	bx, dword ptr word_20C7C
		mov	es:[bx+14h], di
		mov	es:[bx+16h], si
		push	seg_20C7E
		push	word_20C7C
		call	sub_180BC
		add	sp, 4
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+2], offset unk_28C38
		mov	word ptr es:[bx+4], ds
		mov	word ptr es:[bx+0Ah], 3
		mov	word ptr es:[bx+1Ch], 3
		push	seg_20C7E
		push	word_20C7C
		call	sub_180BC
		add	sp, 4
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+3F4h]
		mov	[bp+var_6], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+3F6h]
		mov	[bp+var_8], ax
		les	bx, dword_28C34
		mov	ax, [bp+var_6]
		mov	es:[bx], ax
		les	bx, [bp+var_C]
		mov	ax, [bp+var_8]
		add	ax, es:[bx+8]
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		les	bx, [bp+var_C]
		test	word ptr es:[bx+0Ah], 200h
		jnz	short loc_11961
		mov	ax, es:[bx+0Ah]
		add	ax, 0F1h ; 'Ò'
		les	bx, dword_28C34
		mov	es:[bx+4], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_11961:				; CODE XREF: sub_117C7+17Ej
		les	bx, dword ptr word_20C80
		mov	es:[bx+6], di
		mov	es:[bx+8], si
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	cl, 8
		shl	ax, cl
		add	ax, 7E3Eh
		mov	es:[bx+10h], ax
		mov	word ptr es:[bx+12h], ds
		push	seg_20C82
		push	word_20C80
		call	sub_193B8
		add	sp, 4

loc_1198F:				; CODE XREF: sub_117C7+3Dj
					; sub_117C7+46j
		inc	[bp+var_2]
		cmp	[bp+var_1], 0FFh
		jz	short loc_1199B
		jmp	loc_117DC
; ---------------------------------------------------------------------------

loc_1199B:				; CODE XREF: sub_117C7+1CFj
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_117C7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_119A1	proc near		; CODE XREF: sub_10C18+B4p
					; sub_10C18+E0p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_119AD
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_119AD:				; CODE XREF: sub_119A1+7j
		cmp	byte_28921, 0FFh
		jz	short loc_119E2
		les	bx, dword ptr word_20C98
		mov	ax, word_2963E
		mov	es:[bx+14h], ax
		mov	ax, word_29F44
		mov	es:[bx+16h], ax
		mov	ax, word_2A0E4
		mov	es:[bx+1Eh], ax
		mov	ax, word_2A0E2
		mov	es:[bx+20h], ax
		push	seg_20C9A
		push	word_20C98
		call	sub_180BC
		add	sp, 4

loc_119E2:				; CODE XREF: sub_119A1+11j
		pop	bp
		retn
sub_119A1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_119E4	proc near		; CODE XREF: sub_10C18+B7p
					; sub_10C18+E3p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_119F0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_119F0:				; CODE XREF: sub_119E4+7j
		les	bx, dword ptr word_20C74
		mov	ax, word_28C32
		mov	es:[bx+14h], ax
		mov	ax, word_29238
		mov	es:[bx+16h], ax
		mov	ax, word_29F54
		mov	es:[bx+1Eh], ax
		mov	ax, word_29F4C
		mov	es:[bx+20h], ax
		push	seg_20C76
		push	word_20C74
		call	sub_180BC
		add	sp, 4
		pop	bp
		retn
sub_119E4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11A20	proc near		; CODE XREF: sub_10C18+E6p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11A2C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11A2C:				; CODE XREF: sub_11A20+7j
		cmp	byte_2A558, 0
		jz	short loc_11A65
		dec	byte_2A558
		les	bx, dword ptr word_20C94
		mov	ax, word_29F4A
		mov	es:[bx+6], ax
		mov	ax, word_29F52
		mov	es:[bx+8], ax
		mov	ax, word_29F4A
		mov	es:[bx+14h], ax
		mov	ax, word_29F52
		mov	es:[bx+16h], ax
		push	seg_20C96
		push	word_20C94
		call	sub_180BC
		add	sp, 4

loc_11A65:				; CODE XREF: sub_11A20+11j
		pop	bp
		retn
sub_11A20	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11A67	proc near		; CODE XREF: sub_10C18+F5p
					; sub_12A78+170p

var_8		= dword	ptr -8
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 8
		cmp	word_26EFC, sp
		ja	short loc_11A76
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11A76:				; CODE XREF: sub_11A67+Aj
		mov	[bp+var_2], 0

loc_11A7A:				; CODE XREF: sub_11A67+BDj
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4C72h]
		mov	dx, [bx+4C70h]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_11B1B
		cmp	[bp+var_1], 0FFh
		jz	short loc_11B1B
		mov	al, es:[bx+1]
		mov	[bp+var_3], al
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	dx, 180h
		imul	dx
		add	ax, 79BEh
		les	bx, dword ptr word_20C70
		mov	es:[bx+2], ax
		mov	word ptr es:[bx+4], ds
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+32BEh]
		mov	bx, word_20C70
		mov	es:[bx+14h], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+32C0h]
		mov	bx, word_20C70
		mov	es:[bx+16h], ax
		mov	word ptr es:[bx+1Ch], 0
		test	[bp+var_3], 1
		jz	short loc_11B0D
		mov	ax, es:[bx+1Ch]
		or	ax, 400h
		mov	es:[bx+1Ch], ax

loc_11B0D:				; CODE XREF: sub_11A67+99j
		push	seg_20C72
		push	word_20C70
		call	sub_180BC
		add	sp, 4

loc_11B1B:				; CODE XREF: sub_11A67+39j
					; sub_11A67+3Fj
		inc	[bp+var_2]
		cmp	[bp+var_1], 0FFh
		jz	short loc_11B27
		jmp	loc_11A7A
; ---------------------------------------------------------------------------

loc_11B27:				; CODE XREF: sub_11A67+BBj
		mov	sp, bp
		pop	bp
		retn
sub_11A67	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11B2B	proc near		; CODE XREF: sub_10C18+F8p
					; sub_12A78+1E0p

var_8		= dword	ptr -8
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 8
		cmp	word_26EFC, sp
		ja	short loc_11B3A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11B3A:				; CODE XREF: sub_11B2B+Aj
		mov	[bp+var_2], 0

loc_11B3E:				; CODE XREF: sub_11B2B+A5j
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4CBEh]
		mov	dx, [bx+4CBCh]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_11BC7
		cmp	[bp+var_1], 0FFh
		jz	short loc_11BC7
		mov	al, es:[bx+1]
		mov	[bp+var_3], al
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	cl, 8
		shl	ax, cl
		add	ax, 7E3Eh
		les	bx, dword ptr word_20C6C
		mov	es:[bx+2], ax
		mov	word ptr es:[bx+4], ds
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+343Eh]
		mov	bx, word_20C6C
		mov	es:[bx+14h], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+3440h]
		mov	bx, word_20C6C
		mov	es:[bx+16h], ax
		push	seg_20C6E
		push	word_20C6C
		call	sub_180BC
		add	sp, 4

loc_11BC7:				; CODE XREF: sub_11B2B+39j
					; sub_11B2B+3Fj
		inc	[bp+var_2]
		cmp	[bp+var_1], 0FFh
		jz	short loc_11BD3
		jmp	loc_11B3E
; ---------------------------------------------------------------------------

loc_11BD3:				; CODE XREF: sub_11B2B+A3j
		mov	sp, bp
		pop	bp
		retn
sub_11B2B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11BD7	proc near		; CODE XREF: sub_10C18+A8p
					; sub_10C18+FBp ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11BE3
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11BE3:				; CODE XREF: sub_11BD7+7j
		mov	word_29F54, 4
		cmp	word_2892A, 10h
		jle	short loc_11BFA
		mov	ax, 14h
		sub	ax, word_2892A
		mov	word_29F54, ax

loc_11BFA:				; CODE XREF: sub_11BD7+17j
		mov	word_29F4C, 4
		cmp	word_2892C, 15h
		jle	short loc_11C11
		mov	ax, 19h
		sub	ax, word_2892C
		mov	word_29F4C, ax

loc_11C11:				; CODE XREF: sub_11BD7+2Ej
		les	bx, dword ptr word_20C68
		mov	ax, word_2892A
		mov	es:[bx+6], ax
		mov	ax, word_2892C
		mov	es:[bx+8], ax
		mov	ax, word_29F54
		mov	es:[bx+1Eh], ax
		mov	ax, word_29F4C
		mov	es:[bx+20h], ax
		push	seg_20C6A
		push	word_20C68
		call	sub_193B8
		add	sp, 4
		pop	bp
		retn
sub_11BD7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11C41	proc near		; CODE XREF: sub_10C18+ABp
					; sub_10C18+FEp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11C4D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11C4D:				; CODE XREF: sub_11C41+7j
		cmp	byte_28921, 0FFh
		jz	short loc_11CB0
		mov	word_2A0E4, 4
		cmp	word_28908, 10h
		jle	short loc_11C6B
		mov	ax, 14h
		sub	ax, word_28908
		mov	word_2A0E4, ax

loc_11C6B:				; CODE XREF: sub_11C41+1Ej
		mov	word_2A0E2, 4
		cmp	word_2890A, 15h
		jle	short loc_11C82
		mov	ax, 19h
		sub	ax, word_2890A
		mov	word_2A0E2, ax

loc_11C82:				; CODE XREF: sub_11C41+35j
		les	bx, dword ptr word_20C9C
		mov	ax, word_28908
		mov	es:[bx+6], ax
		mov	ax, word_2890A
		mov	es:[bx+8], ax
		mov	ax, word_2A0E4
		mov	es:[bx+1Eh], ax
		mov	ax, word_2A0E2
		mov	es:[bx+20h], ax
		push	seg_20C9E
		push	word_20C9C
		call	sub_193B8
		add	sp, 4

loc_11CB0:				; CODE XREF: sub_11C41+11j
		pop	bp
		retn
sub_11C41	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11CB2	proc near		; CODE XREF: sub_10C18+7Fp
					; sub_10C18+101p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11CBE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11CBE:				; CODE XREF: sub_11CB2+7j
		cmp	word_285FA, 64h	; 'd'
		jz	short loc_11CE8
		les	bx, dword_28C34
		mov	ax, word_285FA
		mov	es:[bx+4], ax
		mov	ax, word_29640
		mov	es:[bx], ax
		mov	ax, word_29642
		mov	es:[bx+2], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_11CE8:				; CODE XREF: sub_11CB2+11j
		pop	bp
		retn
sub_11CB2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11CEA	proc near		; CODE XREF: sub_10C18+82p
					; sub_10C18+104p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11CF6
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11CF6:				; CODE XREF: sub_11CEA+7j
		cmp	byte_28921, 0FFh
		jz	short loc_11D24
		les	bx, dword_29F4E
		mov	ax, word_2A48E
		add	ax, word_28910
		mov	es:[bx+4], ax
		mov	ax, word_27D6A
		mov	es:[bx], ax
		mov	ax, word_27D6C
		mov	es:[bx+2], ax
		push	ds
		mov	ax, 795Ah
		push	ax
		call	sub_1942A
		add	sp, 4

loc_11D24:				; CODE XREF: sub_11CEA+11j
		pop	bp
		retn
sub_11CEA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11D26	proc near		; CODE XREF: sub_10C18+116p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11D32
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11D32:				; CODE XREF: sub_11D26+7j
		mov	al, 3Bh	; ';'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11D45
		mov	byte_288FF, 0
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11D45:				; CODE XREF: sub_11D26+16j
		mov	al, 3Ch	; '<'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11D58
		mov	byte_288FF, 88h	; 'à'
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11D58:				; CODE XREF: sub_11D26+29j
		mov	al, 3Dh	; '='
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11D6B
		mov	byte_288FF, 0AAh ; '™'
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11D6B:				; CODE XREF: sub_11D26+3Cj
		mov	al, 3Eh	; '>'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11D7E
		mov	byte_288FF, 0EEh ; 'Ó'
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11D7E:				; CODE XREF: sub_11D26+4Fj
		mov	al, 3Fh	; '?'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11D91
		mov	byte_288FF, 0FFh
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11D91:				; CODE XREF: sub_11D26+62j
		mov	al, 1
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11DA2
		call	sub_122FC
		jmp	short loc_11DBB
; ---------------------------------------------------------------------------

loc_11DA2:				; CODE XREF: sub_11D26+75j
		mov	al, 44h	; 'D'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_11DBB
		mov	byte_2963D, 1
		mov	al, 0
		mov	byte_2A0E0, al
		mov	byte_2891D, al

loc_11DBB:				; CODE XREF: sub_11D26+1Dj
					; sub_11D26+30j ...
		cmp	byte_2A55A, 0
		jz	short loc_11DC7
		call	sub_1228D
		jmp	short loc_11DDC
; ---------------------------------------------------------------------------

loc_11DC7:				; CODE XREF: sub_11D26+9Aj
		call	sub_1236F
		call	sub_11DDE
		cmp	byte_285FD, 0
		jz	short loc_11DD9
		call	sub_1238E
		jmp	short loc_11DDC
; ---------------------------------------------------------------------------

loc_11DD9:				; CODE XREF: sub_11D26+ACj
		call	sub_11E02

loc_11DDC:				; CODE XREF: sub_11D26+9Fj
					; sub_11D26+B1j
		pop	bp
		retn
sub_11D26	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11DDE	proc near		; CODE XREF: seg000:loc_10731p
					; seg000:07A1p	...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_11DEC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11DEC:				; CODE XREF: sub_11DDE+9j
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		mov	[bp+var_1], al
		or	al, al
		jz	short loc_11DFE
		mov	byte_285F4, al

loc_11DFE:				; CODE XREF: sub_11DDE+1Bj
		mov	sp, bp
		pop	bp
		retn
sub_11DDE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11E02	proc near		; CODE XREF: sub_11D26:loc_11DD9p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11E0E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11E0E:				; CODE XREF: sub_11E02+7j
		mov	byte_27CD3, 0
		mov	al, byte_27CDC
		mov	byte_28902, al
		cmp	byte_2A47E, 0
		jnz	short loc_11E29
		mov	al, byte_2A557
		mov	ah, 0
		or	ax, ax
		jnz	short loc_11E38

loc_11E29:				; CODE XREF: sub_11E02+1Cj
		mov	al, byte_27CDC
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		call	off_20B7A[bx]
		jmp	short loc_11E3B
; ---------------------------------------------------------------------------

loc_11E38:				; CODE XREF: sub_11E02+25j
		call	sub_127DE

loc_11E3B:				; CODE XREF: sub_11E02+34j
		pop	bp
		retn
sub_11E02	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11E3D	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:082Ao
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11E49
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11E49:				; CODE XREF: sub_11E3D+7j
		mov	al, 1
		mov	byte_2A0E0, al
		mov	byte_2A559, al
		call	sub_13A88
		les	bx, dword_29F5A
		mov	byte ptr es:[bx], 1
		pop	bp
		retn
sub_11E3D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11E5E	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:080Co
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11E6A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11E6A:				; CODE XREF: sub_11E5E+7j
		cmp	byte_28901, 8
		jnz	short loc_11E89
		cmp	word_26C4C, 4
		jz	short loc_11E7C
		mov	al, 0Fh
		jmp	short loc_11E7E
; ---------------------------------------------------------------------------

loc_11E7C:				; CODE XREF: sub_11E5E+18j
		mov	al, 2Bh	; '+'

loc_11E7E:				; CODE XREF: sub_11E5E+1Cj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		call	sub_121E7
		jmp	short loc_11E8E
; ---------------------------------------------------------------------------

loc_11E89:				; CODE XREF: sub_11E5E+11j
		mov	byte_27CDC, 24h	; '$'

loc_11E8E:				; CODE XREF: sub_11E5E+29j
		pop	bp
		retn
sub_11E5E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11E90	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:080Eo
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11E9C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11E9C:				; CODE XREF: sub_11E90+7j
		cmp	byte_28901, 8
		jnz	short loc_11EBB
		cmp	word_26C4C, 4
		jz	short loc_11EAE
		mov	al, 0Fh
		jmp	short loc_11EB0
; ---------------------------------------------------------------------------

loc_11EAE:				; CODE XREF: sub_11E90+18j
		mov	al, 2Bh	; '+'

loc_11EB0:				; CODE XREF: sub_11E90+1Cj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		call	sub_12138
		jmp	short loc_11EC0
; ---------------------------------------------------------------------------

loc_11EBB:				; CODE XREF: sub_11E90+11j
		mov	byte_27CDC, 23h	; '#'

loc_11EC0:				; CODE XREF: sub_11E90+29j
		pop	bp
		retn
sub_11E90	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11EC2	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0810o

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_11ED1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11ED1:				; CODE XREF: sub_11EC2+Aj
		mov	[bp+var_1], 0Bh
		mov	[bp+var_2], 5
		mov	[bp+var_6], offset unk_22054
		mov	[bp+var_4], ds
		push	[bp+var_4]
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+var_1]
		push	ax
		call	sub_1495C
		add	sp, 8
		test	byte_285F4, 2
		jz	short loc_11EFF
		call	sub_11F03

loc_11EFF:				; CODE XREF: sub_11EC2+38j
		mov	sp, bp
		pop	bp
		retn
sub_11EC2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11F03	proc near		; CODE XREF: sub_11EC2+3Ap
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11F0F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11F0F:				; CODE XREF: sub_11F03+7j
		mov	byte_27CDC, 1
		mov	word ptr dword_2A55C, offset unk_217BC
		mov	word ptr dword_2A55C+2,	ds
		mov	byte_285FD, 4
		mov	al, 9
		mov	byte_29F5E, al
		mov	byte_27CDA, al
		mov	al, byte_2891E
		mov	byte_28920, al
		mov	al, 16h
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_11F03	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11F3E	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0812o

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_11F4D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11F4D:				; CODE XREF: sub_11F3E+Aj
		mov	[bp+var_1], 0Bh
		mov	[bp+var_2], 5
		mov	[bp+var_6], offset unk_2206A
		mov	[bp+var_4], ds
		push	[bp+var_4]
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+var_1]
		push	ax
		call	sub_1495C
		add	sp, 8
		test	byte_285F4, 2
		jz	short loc_11F7B
		call	sub_11F7F

loc_11F7B:				; CODE XREF: sub_11F3E+38j
		mov	sp, bp
		pop	bp
		retn
sub_11F3E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11F7F	proc near		; CODE XREF: sub_11F3E+3Ap
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11F8B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11F8B:				; CODE XREF: sub_11F7F+7j
		mov	byte_27CDC, 2
		mov	word ptr dword_2A55C, offset unk_21810
		mov	word ptr dword_2A55C+2,	ds
		mov	byte_285FD, 4
		mov	byte_27CDA, 9
		mov	byte_29F5E, 0
		mov	al, byte_2891E
		add	al, 0FFh
		mov	byte_28920, al
		mov	al, 16h
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_11F7F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_11FBE	proc near		; CODE XREF: sub_146BB:loc_14710p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_11FCA
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_11FCA:				; CODE XREF: sub_11FBE+7j
		mov	byte_28901, 0
		cmp	word_26C4C, 4
		jz	short loc_11FDA
		mov	al, 2
		jmp	short loc_11FDC
; ---------------------------------------------------------------------------

loc_11FDA:				; CODE XREF: sub_11FBE+16j
		mov	al, 26h	; '&'

loc_11FDC:				; CODE XREF: sub_11FBE+1Aj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, byte_2890E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_11FF4
		mov	byte_28901, 1Fh
		mov	al, 38h	; '8'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_11FF4:				; CODE XREF: sub_11FBE+2Bj
		mov	al, byte_2891E
		add	al, 0FFh
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		cmp	byte ptr [bx+4356h], 38h ; '8'
		jnz	short loc_12014
		mov	al, 38h	; '8'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_12014:				; CODE XREF: sub_11FBE+50j
		mov	al, byte_2891E
		add	al, 0FFh
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_1202A
		mov	al, 3Ah	; ':'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_1202A:				; CODE XREF: sub_11FBE+66j
		cmp	byte_2890E, 1
		jnz	short loc_1203A
		mov	byte_28901, 1Fh
		mov	al, 34h	; '4'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_1203A:				; CODE XREF: sub_11FBE+71j
		mov	al, byte_2891E
		add	al, 0FEh ; '˛'
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		cmp	byte ptr [bx+4316h], 34h ; '4'
		jnz	short loc_1205A
		mov	al, 34h	; '4'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_1205A:				; CODE XREF: sub_11FBE+96j
		mov	al, byte_2891E
		add	al, 0FEh ; '˛'
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_12070
		mov	al, 36h	; '6'
		jmp	short loc_12072
; ---------------------------------------------------------------------------

loc_12070:				; CODE XREF: sub_11FBE+ACj
		mov	al, 1Ah

loc_12072:				; CODE XREF: sub_11FBE+34j
					; sub_11FBE+54j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_11FBE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1207D	proc near		; CODE XREF: sub_146BB:loc_14715p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12089
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12089:				; CODE XREF: sub_1207D+7j
		mov	byte_28901, 0
		cmp	word_26C4C, 4
		jz	short loc_12099
		mov	al, 2
		jmp	short loc_1209B
; ---------------------------------------------------------------------------

loc_12099:				; CODE XREF: sub_1207D+16j
		mov	al, 26h	; '&'

loc_1209B:				; CODE XREF: sub_1207D+1Aj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		cmp	byte_2890E, 7
		jnz	short loc_120B1
		mov	byte_28901, 1Fh
		mov	al, 39h	; '9'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_120B1:				; CODE XREF: sub_1207D+29j
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		cmp	byte ptr [bx+4376h], 39h ; '9'
		jnz	short loc_120CF
		mov	al, 39h	; '9'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_120CF:				; CODE XREF: sub_1207D+4Cj
		mov	al, byte_2891E
		inc	al
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_120E5
		mov	al, 3Bh	; ';'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_120E5:				; CODE XREF: sub_1207D+62j
		cmp	byte_2890E, 6
		jnz	short loc_120F5
		mov	byte_28901, 1Fh
		mov	al, 35h	; '5'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_120F5:				; CODE XREF: sub_1207D+6Dj
		mov	al, byte_2891E
		inc	al
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		cmp	byte ptr [bx+4336h], 35h ; '5'
		jnz	short loc_12115
		mov	al, 35h	; '5'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_12115:				; CODE XREF: sub_1207D+92j
		mov	al, byte_2891E
		add	al, 2
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_1212B
		mov	al, 37h	; '7'
		jmp	short loc_1212D
; ---------------------------------------------------------------------------

loc_1212B:				; CODE XREF: sub_1207D+A8j
		mov	al, 1Bh

loc_1212D:				; CODE XREF: sub_1207D+32j
					; sub_1207D+50j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_1207D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12138	proc near		; CODE XREF: sub_11E02+30p
					; sub_11E90+26p
					; DATA XREF: ...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_12146
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12146:				; CODE XREF: sub_12138+9j
		mov	byte_28901, 0
		test	byte_285F4, 12h
		jz	short loc_1216F
		cmp	word_26C4C, 4
		jz	short loc_1215D
		mov	al, 15h
		jmp	short loc_1215F
; ---------------------------------------------------------------------------

loc_1215D:				; CODE XREF: sub_12138+1Fj
		mov	al, 2Ah	; '*'

loc_1215F:				; CODE XREF: sub_12138+23j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 32h	; '2'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_121B4
; ---------------------------------------------------------------------------

loc_1216F:				; CODE XREF: sub_12138+18j
		mov	al, byte_2890E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_12187
		mov	byte_28901, 1Fh
		mov	al, 27h	; '''
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_121B4
; ---------------------------------------------------------------------------

loc_12187:				; CODE XREF: sub_12138+3Ej
		mov	al, byte_2891E
		add	al, 0FFh
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+42D6h]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 25h	; '%'
		jz	short loc_121B1
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_121B4
; ---------------------------------------------------------------------------

loc_121B1:				; CODE XREF: sub_12138+6Fj
		call	sub_121BB

loc_121B4:				; CODE XREF: sub_12138+35j
					; sub_12138+4Dj ...
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_12138	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_121BB	proc near		; CODE XREF: sub_12138:loc_121B1p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_121C7
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_121C7:				; CODE XREF: sub_121BB+7j
		mov	al, byte_2891E
		add	al, 0FFh
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_121DD
		mov	al, 29h	; ')'
		jmp	short loc_121DF
; ---------------------------------------------------------------------------

loc_121DD:				; CODE XREF: sub_121BB+1Cj
		mov	al, 25h	; '%'

loc_121DF:				; CODE XREF: sub_121BB+20j
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		pop	bp
		retn
sub_121BB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_121E7	proc near		; CODE XREF: sub_11E02+30p
					; sub_11E5E+26p
					; DATA XREF: ...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_121F5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_121F5:				; CODE XREF: sub_121E7+9j
		test	byte_285F4, 12h
		jz	short loc_12219
		cmp	word_26C4C, 4
		jz	short loc_12207
		mov	al, 15h
		jmp	short loc_12209
; ---------------------------------------------------------------------------

loc_12207:				; CODE XREF: sub_121E7+1Aj
		mov	al, 2Ah	; '*'

loc_12209:				; CODE XREF: sub_121E7+1Ej
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 33h	; '3'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_1225A
; ---------------------------------------------------------------------------

loc_12219:				; CODE XREF: sub_121E7+13j
		cmp	byte_2890E, 7
		jnz	short loc_1222F
		mov	byte_28901, 1Fh
		mov	al, 28h	; '('
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_1225A
; ---------------------------------------------------------------------------

loc_1222F:				; CODE XREF: sub_121E7+37j
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+42F6h]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 26h	; '&'
		jz	short loc_12257
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_1225A
; ---------------------------------------------------------------------------

loc_12257:				; CODE XREF: sub_121E7+66j
		call	sub_12261

loc_1225A:				; CODE XREF: sub_121E7+30j
					; sub_121E7+46j ...
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_121E7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12261	proc near		; CODE XREF: sub_121E7:loc_12257p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1226D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1226D:				; CODE XREF: sub_12261+7j
		mov	al, byte_2891E
		inc	al
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_12283
		mov	al, 2Ah	; '*'
		jmp	short loc_12285
; ---------------------------------------------------------------------------

loc_12283:				; CODE XREF: sub_12261+1Cj
		mov	al, 26h	; '&'

loc_12285:				; CODE XREF: sub_12261+20j
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		pop	bp
		retn
sub_12261	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1228D	proc near		; CODE XREF: sub_11D26+9Cp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12299
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12299:				; CODE XREF: sub_1228D+7j
		mov	byte_2A47E, 1
		mov	al, 0
		mov	byte_27CDA, al
		mov	byte_2A55A, al
		mov	al, 2Eh	; '.'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		pop	bp
		retn
sub_1228D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_122B0	proc near		; CODE XREF: sub_11E02+30p
					; sub_1253F:loc_12567p
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_122BC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_122BC:				; CODE XREF: sub_122B0+7j
		call	sub_122FC
		pop	bp
		retn
sub_122B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_122C1	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0824o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_122CD
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_122CD:				; CODE XREF: sub_122C1+7j
		call	sub_122FC
		pop	bp
		retn
sub_122C1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_122D2	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0826o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_122DE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_122DE:				; CODE XREF: sub_122D2+7j
		mov	al, byte_2A47E
		inc	al
		mov	byte_2A47E, al
		cmp	al, 3
		jnz	short loc_122EF
		call	sub_122FC
		jmp	short loc_122FA
; ---------------------------------------------------------------------------

loc_122EF:				; CODE XREF: sub_122D2+16j
		mov	al, 2Eh	; '.'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E

loc_122FA:				; CODE XREF: sub_122D2+1Bj
		pop	bp
		retn
sub_122D2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_122FC	proc near		; CODE XREF: sub_11D26+77p
					; sub_122B0:loc_122BCp	...
		push	bp
		mov	bp, sp
		push	si
		cmp	word_26EFC, sp
		ja	short loc_12309
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12309:				; CODE XREF: sub_122FC+8j
		mov	byte_2A47E, 0
		mov	si, 3E8h
		jmp	short loc_12317
; ---------------------------------------------------------------------------

loc_12313:				; CODE XREF: sub_122FC+1Dj
		call	sub_1236F
		dec	si

loc_12317:				; CODE XREF: sub_122FC+15j
		or	si, si
		jnz	short loc_12313
		mov	byte_2891D, 1
		mov	al, byte_27CCA
		mov	ah, 0
		or	ax, ax
		jnz	short loc_12330
		mov	al, 0FFh
		mov	byte_2963D, al
		jmp	short loc_12337
; ---------------------------------------------------------------------------

loc_12330:				; CODE XREF: sub_122FC+2Bj
		dec	byte_27CCA
		mov	al, byte_27CCA

loc_12337:				; CODE XREF: sub_122FC+32j
		pop	si
		pop	bp
		retn
sub_122FC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1233A	proc near		; CODE XREF: sub_10C18+11Fp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12346
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12346:				; CODE XREF: sub_1233A+7j
		cmp	byte_2A561, 0
		jz	short loc_1236D
		cmp	byte_28900, 9
		jz	short loc_1235A
		inc	byte_28900
		jmp	short loc_1236D
; ---------------------------------------------------------------------------

loc_1235A:				; CODE XREF: sub_1233A+18j
		mov	byte_28900, 0
		mov	al, byte_28922
		mov	byte_2891F, al
		mov	al, 5Ah	; 'Z'
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp

loc_1236D:				; CODE XREF: sub_1233A+11j
					; sub_1233A+1Ej
		pop	bp
		retn
sub_1233A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1236F	proc near		; CODE XREF: sub_11D26:loc_11DC7p
					; sub_122FC:loc_12313p	...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1237B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1237B:				; CODE XREF: sub_1236F+7j
		mov	al, byte_2891E
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx]
		mov	byte_27CD4, al
		pop	bp
		retn
sub_1236F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1238E	proc near		; CODE XREF: sub_11D26+AEp
					; sub_11F03+36p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1239A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1239A:				; CODE XREF: sub_1238E+7j
		mov	al, byte_27CDC
		mov	ah, 0
		mov	dx, 22h	; '"'
		imul	dx
		mov	dl, byte_27CDA
		mov	dh, 0
		shl	dx, 1
		add	ax, dx
		mov	bx, ax
		call	off_24770[bx]
		pop	bp
		retn
sub_1238E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_123B6	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07D0o ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_123C2
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_123C2:				; CODE XREF: sub_123B6+7j
		test	byte_285F4, 4
		jz	short loc_123CE
		call	sub_12634
		jmp	short loc_12421
; ---------------------------------------------------------------------------

loc_123CE:				; CODE XREF: sub_123B6+11j
		test	byte_285F4, 8
		jz	short loc_123DA
		call	sub_126A1
		jmp	short loc_12421
; ---------------------------------------------------------------------------

loc_123DA:				; CODE XREF: sub_123B6+1Dj
		cmp	byte_2891E, 8
		jb	short loc_123F9
		mov	al, byte_2891E
		mov	ah, 0
		mov	es, word ptr dword_2A488+2
		add	ax, word ptr dword_2A488
		mov	bx, ax
		cmp	byte ptr es:[bx-8], 0Eh
		jnz	short loc_123F9
		jmp	short loc_1241E
; ---------------------------------------------------------------------------

loc_123F9:				; CODE XREF: sub_123B6+29j
					; sub_123B6+3Fj
		test	byte_285F4, 2
		jz	short loc_1241E
		call	sub_14747
		cmp	word_26C4C, 4
		jz	short loc_12414
		mov	al, 14h
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		jmp	short loc_12421
; ---------------------------------------------------------------------------

loc_12414:				; CODE XREF: sub_123B6+52j
		mov	al, 2Ah	; '*'
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		jmp	short loc_12421
; ---------------------------------------------------------------------------

loc_1241E:				; CODE XREF: sub_123B6+41j
					; sub_123B6+48j
		call	sub_127DE

loc_12421:				; CODE XREF: sub_123B6+16j
					; sub_123B6+22j ...
		pop	bp
		retn
sub_123B6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12423	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07D4o

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_12432
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12432:				; CODE XREF: sub_12423+Aj
		mov	[bp+var_1], 21h	; '!'
		mov	[bp+var_2], 4
		mov	[bp+var_6], offset unk_2189A
		mov	[bp+var_4], ds
		push	[bp+var_4]
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+var_1]
		push	ax
		call	sub_1495C
		add	sp, 8
		test	byte_285F4, 4
		jz	short loc_12462
		call	sub_12634
		jmp	short loc_1246C
; ---------------------------------------------------------------------------

loc_12462:				; CODE XREF: sub_12423+38j
		test	byte_285F4, 8
		jz	short loc_1246C
		call	sub_126A1

loc_1246C:				; CODE XREF: sub_12423+3Dj
					; sub_12423+44j
		mov	sp, bp
		pop	bp
		retn
sub_12423	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12470	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07DEo
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1247C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1247C:				; CODE XREF: sub_12470+7j
		mov	byte_285FC, 8
		mov	al, 0Bh
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_12470	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1248E	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07E0o

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_1249D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1249D:				; CODE XREF: sub_1248E+Aj
		mov	[bp+var_1], 25h	; '%'
		mov	[bp+var_2], 6
		mov	[bp+var_6], offset unk_21A14
		mov	[bp+var_4], ds
		push	[bp+var_4]
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+var_1]
		push	ax
		call	sub_1495C
		add	sp, 8
		test	byte_285F4, 2
		jz	short loc_124D3
		mov	al, 0Ch
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E

loc_124D3:				; CODE XREF: sub_1248E+38j
		mov	sp, bp
		pop	bp
		retn
sub_1248E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_124D7	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07E2o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_124E3
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_124E3:				; CODE XREF: sub_124D7+7j
		cmp	byte_27CD4, 0
		jnz	short loc_12500
		mov	al, byte_2891E
		mov	ah, 0
		mov	es, word ptr dword_2A488+2
		add	ax, word ptr dword_2A488
		mov	bx, ax
		cmp	byte ptr es:[bx+8], 0Bh
		jnz	short loc_12505

loc_12500:				; CODE XREF: sub_124D7+11j
		call	sub_1250A
		jmp	short loc_12508
; ---------------------------------------------------------------------------

loc_12505:				; CODE XREF: sub_124D7+27j
		call	sub_128E0

loc_12508:				; CODE XREF: sub_124D7+2Cj
		pop	bp
		retn
sub_124D7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1250A	proc near		; CODE XREF: sub_11E02+30p
					; sub_124D7:loc_12500p
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12516
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12516:				; CODE XREF: sub_1250A+7j
		test	byte_285F4, 4
		jz	short loc_12522
		call	sub_12634
		jmp	short loc_1253D
; ---------------------------------------------------------------------------

loc_12522:				; CODE XREF: sub_1250A+11j
		test	byte_285F4, 8
		jz	short loc_1252E
		call	sub_126A1
		jmp	short loc_1253D
; ---------------------------------------------------------------------------

loc_1252E:				; CODE XREF: sub_1250A+1Dj
		test	byte_285F4, 2
		jz	short loc_1253A
		call	sub_1253F
		jmp	short loc_1253D
; ---------------------------------------------------------------------------

loc_1253A:				; CODE XREF: sub_1250A+29j
		call	sub_127DE

loc_1253D:				; CODE XREF: sub_1250A+16j
					; sub_1250A+22j ...
		pop	bp
		retn
sub_1250A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1253F	proc near		; CODE XREF: sub_1250A+2Bp
					; sub_129A6+3Ap
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1254B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1254B:				; CODE XREF: sub_1253F+7j
		cmp	byte_27CD4, 0Fh
		jnz	short loc_12557
		call	sub_14802
		jmp	short loc_1256A
; ---------------------------------------------------------------------------

loc_12557:				; CODE XREF: sub_1253F+11j
		cmp	byte_27CD4, 12h
		jnz	short loc_12560
		jmp	short loc_12567
; ---------------------------------------------------------------------------

loc_12560:				; CODE XREF: sub_1253F+1Dj
		cmp	byte_27CD4, 1Fh
		jnz	short loc_1256A

loc_12567:				; CODE XREF: sub_1253F+1Fj
		call	sub_122B0

loc_1256A:				; CODE XREF: sub_1253F+16j
					; sub_1253F+26j
		call	sub_165FB
		cmp	word_26C4C, 4
		jz	short loc_12578
		mov	al, 14h
		jmp	short loc_1257A
; ---------------------------------------------------------------------------

loc_12578:				; CODE XREF: sub_1253F+33j
		mov	al, 9

loc_1257A:				; CODE XREF: sub_1253F+37j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		inc	byte_285FC
		cmp	byte_285FC, 9
		jnz	short loc_125A0
		mov	al, byte_2891E
		add	al, 0F8h ; '¯'
		mov	byte_2891F, al
		mov	al, 24h	; '$'
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		mov	byte_285FC, 0

loc_125A0:				; CODE XREF: sub_1253F+4Aj
		mov	al, 0Dh
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_1253F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_125AD	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:07E6o

var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_125BB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_125BB:				; CODE XREF: sub_125AD+9j
		mov	[bp+var_2], 0
		mov	al, byte_2891E
		mov	[bp+var_1], al
		jmp	short loc_12627
; ---------------------------------------------------------------------------

loc_125C7:				; CODE XREF: sub_125AD+81j
		mov	al, [bp+var_1]
		inc	al
		mov	[bp+var_1], al
		cmp	al, 30h	; '0'
		jnz	short loc_125D7
		mov	[bp+var_1], 0

loc_125D7:				; CODE XREF: sub_125AD+24j
		mov	al, [bp+var_1]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx], 0Fh
		jnz	short loc_12627
		mov	al, [bp+var_1]
		mov	byte_2891F, al
		mov	byte_2891E, al
		call	sub_14906
		mov	ax, word_29642
		add	ax, 0Dh
		mov	word_29642, ax
		mov	al, 27h	; '''
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		cmp	word_26C4C, 4
		jz	short loc_12610
		mov	al, 3
		jmp	short loc_12612
; ---------------------------------------------------------------------------

loc_12610:				; CODE XREF: sub_125AD+5Dj
		mov	al, 28h	; '('

loc_12612:				; CODE XREF: sub_125AD+61j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 0Fh
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		mov	[bp+var_2], 1

loc_12627:				; CODE XREF: sub_125AD+18j
					; sub_125AD+39j
		mov	al, [bp+var_2]
		mov	ah, 0
		or	ax, ax
		jz	short loc_125C7
		mov	sp, bp
		pop	bp
		retn
sub_125AD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12634	proc near		; CODE XREF: sub_123B6+13p
					; sub_12423+3Ap ...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_12642
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12642:				; CODE XREF: sub_12634+9j
		mov	byte_28901, 0
		call	sub_163BE
		mov	al, byte_2890E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1265C
		mov	byte_28901, 1Fh
		mov	al, 12h
		jmp	short loc_12694
; ---------------------------------------------------------------------------

loc_1265C:				; CODE XREF: sub_12634+1Dj
		mov	al, byte_2891E
		add	al, 0FFh
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+4256h]
		mov	[bp+var_1], al
		cmp	al, 1
		jz	short loc_1267E
		jmp	short loc_12694
; ---------------------------------------------------------------------------

loc_1267E:				; CODE XREF: sub_12634+46j
		mov	al, byte_28920
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_12692
		mov	al, 16h
		jmp	short loc_12694
; ---------------------------------------------------------------------------

loc_12692:				; CODE XREF: sub_12634+58j
		mov	al, 1

loc_12694:				; CODE XREF: sub_12634+26j
					; sub_12634+48j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_12634	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_126A1	proc near		; CODE XREF: sub_123B6+1Fp
					; sub_12423+46p ...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_126AF
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_126AF:				; CODE XREF: sub_126A1+9j
		mov	byte_28901, 0
		call	sub_163BE
		cmp	byte_2890E, 7
		jnz	short loc_126C7
		mov	byte_28901, 1Fh
		mov	al, 13h
		jmp	short loc_126FF
; ---------------------------------------------------------------------------

loc_126C7:				; CODE XREF: sub_126A1+1Bj
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+4276h]
		mov	[bp+var_1], al
		cmp	al, 2
		jz	short loc_126E7
		jmp	short loc_126FF
; ---------------------------------------------------------------------------

loc_126E7:				; CODE XREF: sub_126A1+42j
		mov	al, byte_2891E
		inc	al
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_126FD
		mov	al, 17h
		jmp	short loc_126FF
; ---------------------------------------------------------------------------

loc_126FD:				; CODE XREF: sub_126A1+56j
		mov	al, 2

loc_126FF:				; CODE XREF: sub_126A1+24j
					; sub_126A1+44j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_126A1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1270C	proc near		; CODE XREF: sub_146BB:loc_14706p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_1271A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1271A:				; CODE XREF: sub_1270C+9j
		mov	byte_28901, 0
		mov	al, byte_2890E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_12731
		mov	byte_28901, 1Fh
		mov	al, 14h
		jmp	short loc_12769
; ---------------------------------------------------------------------------

loc_12731:				; CODE XREF: sub_1270C+1Aj
		mov	al, byte_2891E
		add	al, 0FFh
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+4296h]
		mov	[bp+var_1], al
		cmp	al, 8
		jz	short loc_12753
		jmp	short loc_12769
; ---------------------------------------------------------------------------

loc_12753:				; CODE XREF: sub_1270C+43j
		mov	al, byte_28920
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_12767
		mov	al, 18h
		jmp	short loc_12769
; ---------------------------------------------------------------------------

loc_12767:				; CODE XREF: sub_1270C+55j
		mov	al, 8

loc_12769:				; CODE XREF: sub_1270C+23j
					; sub_1270C+45j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_1270C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12776	proc near		; CODE XREF: sub_146BB:loc_1470Bp

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_12784
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12784:				; CODE XREF: sub_12776+9j
		mov	byte_28901, 0
		cmp	byte_2890E, 7
		jnz	short loc_12799
		mov	byte_28901, 1Fh
		mov	al, 15h
		jmp	short loc_127D1
; ---------------------------------------------------------------------------

loc_12799:				; CODE XREF: sub_12776+18j
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ax
		call	sub_16BD4
		inc	sp
		inc	sp
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+42B6h]
		mov	[bp+var_1], al
		cmp	al, 9
		jz	short loc_127B9
		jmp	short loc_127D1
; ---------------------------------------------------------------------------

loc_127B9:				; CODE XREF: sub_12776+3Fj
		mov	al, byte_2891E
		inc	al
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		cmp	byte_27CD1, 0Bh
		jnz	short loc_127CF
		mov	al, 19h
		jmp	short loc_127D1
; ---------------------------------------------------------------------------

loc_127CF:				; CODE XREF: sub_12776+53j
		mov	al, 9

loc_127D1:				; CODE XREF: sub_12776+21j
					; sub_12776+41j ...
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		mov	sp, bp
		pop	bp
		retn
sub_12776	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_127DE	proc near		; CODE XREF: sub_11E02:loc_11E38p
					; sub_123B6:loc_1241Ep	...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_127EA
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_127EA:				; CODE XREF: sub_127DE+7j
		mov	al, 0
		mov	byte_27CD3, al
		mov	byte_2A557, al
		mov	byte_27D69, 0Bh
		cmp	byte_27CD4, 11h
		jnz	short loc_12808
		mov	al, 2Fh	; '/'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		jmp	short loc_1280B
; ---------------------------------------------------------------------------

loc_12808:				; CODE XREF: sub_127DE+1Ej
		call	sub_12810

loc_1280B:				; CODE XREF: sub_127DE+28j
		call	sub_1238E
		pop	bp
		retn
sub_127DE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12810	proc near		; CODE XREF: sub_11E02+30p
					; sub_127DE:loc_12808p
					; DATA XREF: ...

var_4		= byte ptr -4
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 4
		cmp	word_26EFC, sp
		ja	short loc_1281F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1281F:				; CODE XREF: sub_12810+Aj
		cmp	byte_28902, 3
		jz	short loc_12862
		cmp	byte_28902, 0Dh
		jz	short loc_12862
		cmp	byte_28902, 10h
		jz	short loc_12862
		cmp	word_26C4C, 4
		jz	short loc_12848
		mov	al, byte_27CD2
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+269Eh]
		jmp	short loc_12853
; ---------------------------------------------------------------------------

loc_12848:				; CODE XREF: sub_12810+29j
		mov	al, byte_27CD2
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+266Eh]

loc_12853:				; CODE XREF: sub_12810+36j
		mov	[bp+var_4], al
		cmp	[bp+var_4], 0
		jz	short loc_12862
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_12862:				; CODE XREF: sub_12810+14j
					; sub_12810+1Bj ...
		cmp	byte_2891E, 8
		jnb	short loc_12871
		mov	al, 6
		push	ax
		call	sub_14263
		jmp	short loc_128DA
; ---------------------------------------------------------------------------

loc_12871:				; CODE XREF: sub_12810+57j
		mov	al, byte_2891E
		add	al, 0F8h ; '¯'
		mov	byte_2891F, al
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_1], al
		mov	byte_27D69, al
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	al, [bx+76Ah]
		mov	[bp+var_2], al
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	al, [bx+76Bh]
		mov	[bp+var_3], al
		mov	al, [bp+var_2]
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		cmp	byte_27CDC, 0Ah
		jnz	short loc_128CD
		cmp	word_26C4C, 4
		jz	short loc_128C5
		mov	al, 14h
		jmp	short loc_128C7
; ---------------------------------------------------------------------------

loc_128C5:				; CODE XREF: sub_12810+AFj
		mov	al, 9

loc_128C7:				; CODE XREF: sub_12810+B3j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_128CD:				; CODE XREF: sub_12810+A8j
		cmp	[bp+var_3], 0
		jz	short loc_128DC
		mov	al, [bp+var_3]
		push	ax
		call	sub_169AA

loc_128DA:				; CODE XREF: sub_12810+5Fj
		inc	sp
		inc	sp

loc_128DC:				; CODE XREF: sub_12810+C1j
		mov	sp, bp
		pop	bp
		retn
sub_12810	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_128E0	proc near		; CODE XREF: sub_124D7:loc_12505p
					; sub_128F9+2Bp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_128EC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_128EC:				; CODE XREF: sub_128E0+7j
		mov	al, 4
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_128E0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_128F9	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:off_20B7Ao ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12905
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12905:				; CODE XREF: sub_128F9+7j
		mov	byte_285FC, 8
		cmp	byte_27D64, 0
		jnz	short loc_12918
		cmp	byte_27CD4, 0
		jnz	short loc_1292E

loc_12918:				; CODE XREF: sub_128F9+16j
		mov	byte_27D64, 0
		cmp	byte_2891E, 28h	; '('
		jnb	short loc_12929
		call	sub_128E0
		jmp	short loc_12963
; ---------------------------------------------------------------------------

loc_12929:				; CODE XREF: sub_128F9+29j
		call	sub_142D9
		jmp	short loc_12963
; ---------------------------------------------------------------------------

loc_1292E:				; CODE XREF: sub_128F9+1Dj
		cmp	byte_27CD4, 20h	; ' '
		jnz	short loc_12948
		cmp	word_26C4C, 4
		jz	short loc_12940
		mov	al, 3
		jmp	short loc_12942
; ---------------------------------------------------------------------------

loc_12940:				; CODE XREF: sub_128F9+41j
		mov	al, 28h	; '('

loc_12942:				; CODE XREF: sub_128F9+45j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_12948:				; CODE XREF: sub_128F9+3Aj
		cmp	byte_27CD4, 16h
		jnz	short loc_12954
		call	sub_14305
		jmp	short loc_12963
; ---------------------------------------------------------------------------

loc_12954:				; CODE XREF: sub_128F9+54j
		cmp	byte_27CD4, 3
		jnz	short loc_12960
		call	sub_1463D
		jmp	short loc_12963
; ---------------------------------------------------------------------------

loc_12960:				; CODE XREF: sub_128F9+60j
		call	sub_12965

loc_12963:				; CODE XREF: sub_128F9+2Ej
					; sub_128F9+33j ...
		pop	bp
		retn
sub_128F9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12965	proc near		; CODE XREF: sub_128F9:loc_12960p
					; sub_1463D+1Cp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_12971
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12971:				; CODE XREF: sub_12965+7j
		test	byte_285F4, 4
		jz	short loc_1297D
		call	sub_1467D
		jmp	short loc_129A4
; ---------------------------------------------------------------------------

loc_1297D:				; CODE XREF: sub_12965+11j
		test	byte_285F4, 8
		jz	short loc_12989
		call	sub_1469C
		jmp	short loc_129A4
; ---------------------------------------------------------------------------

loc_12989:				; CODE XREF: sub_12965+1Dj
		cmp	byte_27CD4, 0Ah
		jnz	short loc_12995
		call	sub_147CB
		jmp	short loc_129A4
; ---------------------------------------------------------------------------

loc_12995:				; CODE XREF: sub_12965+29j
		cmp	byte_27CD4, 0Fh
		jnz	short loc_129A1
		call	sub_14802
		jmp	short loc_129A4
; ---------------------------------------------------------------------------

loc_129A1:				; CODE XREF: sub_12965+35j
		call	sub_129A6

loc_129A4:				; CODE XREF: sub_12965+16j
					; sub_12965+22j ...
		pop	bp
		retn
sub_12965	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_129A6	proc near		; CODE XREF: sub_12965:loc_129A1p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_129B2
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_129B2:				; CODE XREF: sub_129A6+7j
		cmp	byte_2891E, 8
		jnb	short loc_129BE
		call	sub_1465E
		jmp	short loc_12A08
; ---------------------------------------------------------------------------

loc_129BE:				; CODE XREF: sub_129A6+11j
		mov	al, byte_2891E
		add	al, 0F8h ; '¯'
		mov	byte_2891F, al
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx], 0Eh
		jz	short loc_129D9
		call	sub_1465E
		jmp	short loc_12A08
; ---------------------------------------------------------------------------

loc_129D9:				; CODE XREF: sub_129A6+2Cj
		test	byte_285F4, 2
		jz	short loc_129E5
		call	sub_1253F
		jmp	short loc_12A08
; ---------------------------------------------------------------------------

loc_129E5:				; CODE XREF: sub_129A6+38j
		cmp	word_26C4C, 4
		jz	short loc_129F0
		mov	al, 14h
		jmp	short loc_129F2
; ---------------------------------------------------------------------------

loc_129F0:				; CODE XREF: sub_129A6+44j
		mov	al, 9

loc_129F2:				; CODE XREF: sub_129A6+48j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 24h	; '$'
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		mov	al, 0Ah
		push	ax
		call	sub_14263
		inc	sp
		inc	sp

loc_12A08:				; CODE XREF: sub_129A6+16j
					; sub_129A6+31j ...
		pop	bp
		retn
sub_129A6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12A0A	proc near		; CODE XREF: sub_1483C:loc_14848p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_12A1A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12A1A:				; CODE XREF: sub_12A0A+Bj
		xor	di, di
		jmp	short loc_12A6D
; ---------------------------------------------------------------------------

loc_12A1E:				; CODE XREF: sub_12A0A+66j
		xor	si, si
		jmp	short loc_12A62
; ---------------------------------------------------------------------------

loc_12A22:				; CODE XREF: sub_12A0A+5Bj
		mov	ax, 1
		push	ax
		push	di
		push	si
		call	sub_10B88
		add	sp, 6
		mov	ax, si
		mov	dx, 27h	; '''
		imul	dx
		les	bx, dword_26F7A
		add	bx, ax
		mov	ax, di
		sar	ax, 1
		mov	dx, 3
		imul	dx
		add	bx, ax
		mov	al, es:[bx+20h]
		mov	[bp+var_1], al
		or	al, al
		jz	short loc_12A61
		mov	ax, 1
		push	ax
		push	di
		push	si
		mov	al, [bp+var_1]
		push	ax
		call	sub_10A90
		add	sp, 8

loc_12A61:				; CODE XREF: sub_12A0A+45j
		inc	si

loc_12A62:				; CODE XREF: sub_12A0A+16j
		cmp	si, 14h
		jl	short loc_12A22
		mov	ax, di
		inc	ax
		inc	ax
		mov	di, ax

loc_12A6D:				; CODE XREF: sub_12A0A+12j
		cmp	di, 1Ah
		jl	short loc_12A1E
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_12A0A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12A78	proc near		; CODE XREF: sub_10BF9+Fp

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_12A89
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12A89:				; CODE XREF: sub_12A78+Cj
		mov	byte_24FF0, 0
		mov	byte_24FFC, 0
		mov	byte_25008, 0
		mov	byte_25030, 0
		mov	byte_2503C, 0
		mov	byte_25048, 0
		mov	byte_25054, 0
		mov	ax, seg_25022
		mov	dx, word_25020
		mov	word ptr [bp+var_10], dx
		mov	word ptr [bp+var_10+2],	ax
		mov	ax, seg_2506E
		mov	dx, word_2506C
		mov	word ptr [bp+var_14], dx
		mov	word ptr [bp+var_14+2],	ax
		les	bx, [bp+var_10]
		mov	al, 1
		mov	es:[bx], al
		mov	byte_2923B, al
		les	bx, [bp+var_14]
		mov	al, 1
		mov	es:[bx], al
		mov	byte_2923C, al
		les	bx, [bp+var_10]
		mov	al, 1
		mov	es:[bx+6], al
		mov	byte_28928, al
		les	bx, [bp+var_14]
		mov	al, 1
		mov	es:[bx+6], al
		mov	byte_28929, al
		les	bx, dword_2A488
		mov	al, es:[bx+90h]
		mov	byte_2891E, al
		cmp	byte_2891E, 0
		jz	short loc_12B0B
		dec	byte_2891E

loc_12B0B:				; CODE XREF: sub_12A78+8Dj
		les	bx, dword_2A488
		mov	al, es:[bx+91h]
		mov	byte_28922, al
		cmp	byte_28922, 0
		jz	short loc_12B22
		dec	byte_28922

loc_12B22:				; CODE XREF: sub_12A78+A4j
		les	bx, dword_2A488
		mov	al, es:[bx+92h]
		mov	byte_2A47F, al
		les	bx, dword_27980
		mov	al, es:[bx+93h]
		add	al, 0FFh
		mov	byte_28921, al
		mov	al, es:[bx+95h]
		mov	byte_27CD0, al
		mov	al, es:[bx+94h]
		mov	byte_28912, al
		mov	al, es:[bx+96h]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+2546h]
		mov	word_2A48E, ax
		call	sub_1483C
		mov	[bp+var_2], 0
		jmp	loc_12CED
; ---------------------------------------------------------------------------

loc_12B68:				; CODE XREF: sub_12A78+27Bj
		mov	[bp+var_1], 0
		jmp	loc_12CE1
; ---------------------------------------------------------------------------

loc_12B6F:				; CODE XREF: sub_12A78+26Fj
		mov	al, [bp+var_2]
		shl	al, 1
		shl	al, 1
		shl	al, 1
		add	al, [bp+var_1]
		mov	[bp+var_3], al
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	dl, [bp+var_1]
		mov	dh, 0
		add	ax, dx
		mov	es, word ptr dword_2A488+2
		add	ax, word ptr dword_2A488
		mov	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		mov	si, ax
		or	ax, ax
		jz	short loc_12BEB
		mov	al, [si+3D3Ah]
		mov	ah, 0
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx+3D6Ch]
		mov	dx, [bx+3D6Ah]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_10]
		mov	al, [bp+var_3]
		mov	es:[bx+1], al
		push	es
		les	di, [bp+var_8]
		mov	ax, es:[di]
		pop	es
		mov	es:[bx+8], ax
		les	bx, [bp+var_8]
		mov	ax, es:[bx+2]
		les	bx, [bp+var_10]
		mov	es:[bx+0Ah], ax
		call	sub_1165E
		call	sub_11A67

loc_12BEB:				; CODE XREF: sub_12A78+12Bj
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		les	bx, dword_2A488
		add	bx, ax
		mov	al, [bp+var_1]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	ah, 0
		mov	si, ax
		or	ax, ax
		jz	short loc_12C5B
		cmp	[bp+var_1], 7
		jz	short loc_12C5B
		mov	al, [si+4086h]
		mov	ah, 0
		mov	si, ax
		mov	bx, si
		shl	bx, 1
		shl	bx, 1
		mov	ax, [bx+40A8h]
		mov	dx, [bx+40A6h]
		mov	word ptr [bp+var_C], dx
		mov	word ptr [bp+var_C+2], ax
		les	bx, [bp+var_14]
		mov	al, [bp+var_3]
		mov	es:[bx+1], al
		push	es
		les	di, [bp+var_C]
		mov	ax, es:[di]
		pop	es
		mov	es:[bx+8], ax
		les	bx, [bp+var_C]
		mov	ax, es:[bx+2]
		les	bx, [bp+var_14]
		mov	es:[bx+0Ah], ax
		call	sub_117C7
		call	sub_11B2B

loc_12C5B:				; CODE XREF: sub_12A78+195j
					; sub_12A78+19Bj
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		les	bx, dword_2A488
		add	bx, ax
		mov	al, [bp+var_1]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx+60h]
		mov	ah, 0
		mov	si, ax
		or	ax, ax
		jz	short loc_12CDE
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	dl, [bp+var_2]
		mov	dh, 0
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		add	ax, dx
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+274h]
		les	bx, dword_28C34
		mov	es:[bx], ax
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	dl, [bp+var_2]
		mov	dh, 0
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		add	ax, dx
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+276h]
		mov	bx, word ptr dword_28C34
		mov	es:[bx+2], ax
		mov	ax, si
		add	ax, 179h
		mov	es:[bx+4], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_12CDE:				; CODE XREF: sub_12A78+205j
		inc	[bp+var_1]

loc_12CE1:				; CODE XREF: sub_12A78+F4j
		cmp	[bp+var_1], 8
		jnb	short loc_12CEA
		jmp	loc_12B6F
; ---------------------------------------------------------------------------

loc_12CEA:				; CODE XREF: sub_12A78+26Dj
		inc	[bp+var_2]

loc_12CED:				; CODE XREF: sub_12A78+EDj
		cmp	[bp+var_2], 6
		jnb	short loc_12CF6
		jmp	loc_12B68
; ---------------------------------------------------------------------------

loc_12CF6:				; CODE XREF: sub_12A78+279j
		les	bx, [bp+var_10]
		mov	al, 0
		mov	es:[bx+6], al
		mov	es:[bx], al
		les	bx, [bp+var_14]
		mov	al, 0
		mov	es:[bx+6], al
		mov	es:[bx], al
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_12A78	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12D14	proc near		; CODE XREF: sub_10C18:loc_10D8Ap

var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		cmp	word_26EFC, sp
		ja	short loc_12D24
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12D24:				; CODE XREF: sub_12D14+Bj
		mov	[bp+var_5], 1
		cmp	byte_27D62, 1
		jbe	short loc_12D3B
		mov	al, byte_2154A
		mov	ah, 0
		or	ax, ax
		jnz	short loc_12D3B
		call	sub_14015

loc_12D3B:				; CODE XREF: sub_12D14+19j
					; sub_12D14+22j
		cmp	byte_2154A, 0FFh
		jnz	short loc_12D47
		mov	byte_27D62, 1

loc_12D47:				; CODE XREF: sub_12D14+2Cj
		mov	al, byte_27D62
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+10CAh]
		mov	dx, [bx+10C8h]
		mov	word ptr dword_285F6, dx
		mov	word ptr dword_285F6+2,	ax
		mov	al, byte_27D62
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+10EEh]
		mov	dx, [bx+10ECh]
		mov	word ptr dword_28904, dx
		mov	word ptr dword_28904+2,	ax
		mov	byte_288FE, 1
		mov	ax, 1Fh
		mov	word_27CCE, ax
		mov	word_27CCC, ax
		cmp	byte_27D62, 2
		jz	short loc_12D97
		cmp	byte_27D62, 5
		jnz	short loc_12DB6

loc_12D97:				; CODE XREF: sub_12D14+7Aj
		mov	word_27CCC, 6Fh	; 'o'
		jmp	short loc_12DB6
; ---------------------------------------------------------------------------

loc_12D9F:				; CODE XREF: sub_12D14+B6j
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		mov	byte ptr es:[bx], 0
		inc	[bp+var_5]

loc_12DB6:				; CODE XREF: sub_12D14+81j
					; sub_12D14+89j
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_12D9F
		push	ds
		mov	ax, 90h	; 'ê'
		push	ax
		call	sub_17307
		add	sp, 4
		les	bx, off_20440
		mov	al, byte_27D62
		add	al, 30h	; '0'
		mov	es:[bx+1], al
		les	bx, off_2044A
		mov	al, byte_27D62
		add	al, 30h	; '0'
		mov	es:[bx+1], al
		les	bx, off_20490
		mov	al, byte_27D62
		add	al, 30h	; '0'
		mov	es:[bx+1], al
		mov	ax, 4
		push	ax
		xor	ax, ax
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20448
		push	word_20446
		push	word_27358
		push	word_27356
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_20448
		push	word_20446
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27358
		push	word_27356
		call	sub_17B5A
		add	sp, 0Ch
		mov	ax, 4
		push	ax
		mov	ax, 1
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20452
		push	word_20450
		push	word_26F9A
		push	word_26F98
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_20452
		push	word_20450
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_26F9A
		push	word_26F98
		call	sub_17B5A
		add	sp, 0Ch
		mov	ax, 4
		push	ax
		mov	ax, 8
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20498
		push	word_20496
		push	word_27990
		push	word_2798E
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_20498
		push	word_20496
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27990
		push	word_2798E
		call	sub_17B5A
		add	sp, 0Ch
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_12D14	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12EF8	proc near		; CODE XREF: sub_10C18+11p

var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		cmp	word_26EFC, sp
		ja	short loc_12F08
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12F08:				; CODE XREF: sub_12EF8+Bj
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		call	sub_12FAC
		mov	ax, 4
		push	ax
		xor	ax, ax
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20CE0
		push	word_20CDE
		push	word_2A478
		push	word_2A476
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		push	word_2A478
		push	word_2A476
		call	sub_193D8
		add	sp, 4
		mov	ax, 4
		push	ax
		mov	ax, 1
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20CEA
		push	word_20CE8
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27CD8
		push	word_27CD6
		call	sub_17B5A
		add	sp, 0Ch
		call	sub_151D8
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_12EF8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_12FAC	proc near		; CODE XREF: sub_12EF8+1Bp

var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_12FBD
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_12FBD:				; CODE XREF: sub_12FAC+Cj
		mov	ax, 4
		push	ax
		mov	ax, 2
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20CF4
		push	word_20CF2
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27CD8
		push	word_27CD6
		call	sub_17B5A
		add	sp, 0Ch
		cmp	word_257CD, 1
		jnz	short loc_1304C
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_5], 0
		jmp	short loc_13046
; ---------------------------------------------------------------------------

loc_13029:				; CODE XREF: sub_12FAC+9Ej
		mov	al, [bp+var_5]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+63Ah]
		mov	es:[bx+23h], al
		inc	[bp+var_5]

loc_13046:				; CODE XREF: sub_12FAC+7Bj
		cmp	[bp+var_5], 10h
		jb	short loc_13029

loc_1304C:				; CODE XREF: sub_12FAC+67j
		call	sub_13467
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		xor	ax, ax
		push	ax
		push	word_27CD8
		push	word_27CD6
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_19864
		call	sub_130DD
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_12FAC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_130DD	proc near		; CODE XREF: sub_12FAC+128p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		push	si
		cmp	word_26EFC, sp
		ja	short loc_130EC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_130EC:				; CODE XREF: sub_130DD+Aj
		mov	[bp+var_1], 0
		mov	ax, 4
		push	ax
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20D08
		push	word_20D06
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		mov	ax, 4
		push	ax
		mov	ax, 5
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20D12
		push	word_20D10
		push	word_2A478
		push	word_2A476
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		cmp	word_26C4C, 8000h
		jz	short loc_131BD
		jmp	short loc_1319C
; ---------------------------------------------------------------------------

loc_13157:				; CODE XREF: sub_130DD+C6j
		mov	ax, 1
		push	ax
		push	word_27CD8
		push	word_27CD6
		push	word_2A478
		push	word_2A476
		call	sub_18977
		add	sp, 0Ah
		jmp	short loc_1318C
; ---------------------------------------------------------------------------

loc_13173:				; CODE XREF: sub_130DD+BDj
		mov	ax, word_2154C
		add	ax, 7
		mov	word_2154C, ax
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		test	al, 10h
		jz	short loc_1318C
		mov	[bp+var_1], 1

loc_1318C:				; CODE XREF: sub_130DD+94j
					; sub_130DD+A9j
		call	sub_18999
		or	ax, ax
		jz	short loc_1319C
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jz	short loc_13173

loc_1319C:				; CODE XREF: sub_130DD+78j
					; sub_130DD+B4j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jz	short loc_13157
		call	sub_189A8
		cmp	word_26C4C, 0
		jnz	short loc_131D9
		mov	ax, 1
		push	ax
		call	sub_17E18
		inc	sp
		inc	sp
		call	sub_1946E
		jmp	short loc_131D9
; ---------------------------------------------------------------------------

loc_131BD:				; CODE XREF: sub_130DD+76j
		mov	byte_285F4, 0
		jmp	short loc_131D0
; ---------------------------------------------------------------------------

loc_131C4:				; CODE XREF: sub_130DD+FAj
		call	sub_11DDE
		mov	ax, word_2154C
		add	ax, 7
		mov	word_2154C, ax

loc_131D0:				; CODE XREF: sub_130DD+E5j
		mov	al, byte_285F4
		mov	ah, 0
		or	ax, ax
		jz	short loc_131C4

loc_131D9:				; CODE XREF: sub_130DD+D0j
					; sub_130DD+DEj
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_130DD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_131DE	proc near		; CODE XREF: sub_10BF9+12p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_131EA
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_131EA:				; CODE XREF: sub_131DE+7j
		mov	byte_285F2, 0
		mov	byte_27CDA, 0
		mov	word_285FA, 0
		mov	byte_2A47E, 0
		mov	al, 0
		mov	byte_28928, al
		mov	byte_2923B, al
		mov	al, 0
		mov	byte_28929, al
		mov	byte_2923C, al
		mov	byte_285F4, 0
		mov	byte_2A557, 0
		mov	byte_27D64, 0
		mov	byte_27CD3, 0
		mov	byte_285FC, 0
		mov	byte_2A558, 0
		mov	byte_2A561, 0
		mov	byte_28900, 0
		mov	byte_28913, 0
		mov	byte_2A560, 0
		mov	byte_285F3, 0
		mov	byte_27D67, 0
		mov	word ptr dword_29F56, offset unk_20C36
		mov	word ptr dword_29F56+2,	ds
		les	bx, dword_29F56
		mov	byte ptr es:[bx], 0FFh
		call	sub_14906
		call	sub_148A9
		mov	ax, word_29642
		add	ax, 0FFF4h
		mov	word_29642, ax
		mov	byte_27CDC, 0
		mov	word ptr dword_2A55C, offset unk_21744
		mov	word ptr dword_2A55C+2,	ds
		mov	byte_285FD, 0Ah
		mov	al, 4
		mov	byte_29F5E, al
		mov	byte_27CDA, al
		mov	byte_2A559, 0
		pop	bp
		retn
sub_131DE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1328F	proc near		; CODE XREF: sub_10C18+99p
					; sub_13ED4+130p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1329B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1329B:				; CODE XREF: sub_1328F+7j
		mov	byte_285F4, 0
		jmp	short loc_132A5
; ---------------------------------------------------------------------------

loc_132A2:				; CODE XREF: sub_1328F+1Dj
		call	sub_11DDE

loc_132A5:				; CODE XREF: sub_1328F+11j
		mov	al, byte_285F4
		mov	ah, 0
		or	ax, ax
		jz	short loc_132A2
		pop	bp
		retn
sub_1328F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_132B0	proc near		; CODE XREF: sub_10BF9:loc_10C05p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_132BC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_132BC:				; CODE XREF: sub_132B0+7j
		mov	ax, word_276C0
		mov	dx, 0C2h ; '¬'
		imul	dx
		mov	dx, word_26FA4
		mov	bx, word_26FA2
		add	bx, ax
		mov	word ptr dword_27980, bx
		mov	word ptr dword_27980+2,	dx
		mov	ax, word_276C0
		mov	dx, 32Ch
		imul	dx
		mov	dx, word_26F84
		mov	bx, word_26F82
		add	bx, ax
		mov	word ptr dword_26F7A, bx
		mov	word ptr dword_26F7A+2,	dx
		mov	word ptr dword_2A488, offset unk_2A494
		mov	word ptr dword_2A488+2,	ds
		mov	cl, 0
		jmp	short loc_13352
; ---------------------------------------------------------------------------

loc_132FE:				; CODE XREF: sub_132B0+A5j
		mov	al, cl
		mov	ah, 0
		les	bx, dword_27980
		add	bx, ax
		mov	al, es:[bx]
		mov	dl, cl
		mov	dh, 0
		les	bx, dword_2A488
		add	bx, dx
		mov	es:[bx], al
		mov	al, cl
		mov	ah, 0
		les	bx, dword_27980
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	dl, cl
		mov	dh, 0
		les	bx, dword_2A488
		add	bx, dx
		mov	es:[bx+30h], al
		mov	al, cl
		mov	ah, 0
		les	bx, dword_27980
		add	bx, ax
		mov	al, es:[bx+60h]
		mov	dl, cl
		mov	dh, 0
		les	bx, dword_2A488
		add	bx, dx
		mov	es:[bx+60h], al
		inc	cl

loc_13352:				; CODE XREF: sub_132B0+4Cj
		cmp	cl, 30h	; '0'
		jb	short loc_132FE
		les	bx, dword_27980
		mov	al, es:[bx+90h]
		les	bx, dword_2A488
		mov	es:[bx+90h], al
		les	bx, dword_27980
		mov	al, es:[bx+91h]
		les	bx, dword_2A488
		mov	es:[bx+91h], al
		les	bx, dword_27980
		mov	al, es:[bx+92h]
		les	bx, dword_2A488
		mov	es:[bx+92h], al
		les	bx, dword_27980
		mov	al, es:[bx+93h]
		les	bx, dword_2A488
		mov	es:[bx+93h], al
		les	bx, dword_27980
		mov	al, es:[bx+94h]
		les	bx, dword_2A488
		mov	es:[bx+94h], al
		les	bx, dword_27980
		mov	al, es:[bx+95h]
		les	bx, dword_2A488
		mov	es:[bx+95h], al
		pop	bp
		retn
sub_132B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_133C5	proc near		; CODE XREF: sub_10C18:loc_10C26p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_133D1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_133D1:				; CODE XREF: sub_133C5+7j
		mov	word ptr dword_28C34, offset unk_27CDE
		mov	word ptr dword_28C34+2,	ds
		les	bx, dword_28C34
		mov	ax, word_2A478
		mov	dx, word_2A476
		mov	es:[bx+6], dx
		mov	es:[bx+8], ax
		or	byte ptr es:[bx+0Ah], 80h
		and	byte ptr es:[bx+0Ah], 0BFh
		and	byte ptr es:[bx+0Ah], 0DFh
		and	byte ptr es:[bx+0Ah], 0EFh
		and	byte ptr es:[bx+0Ah], 0F7h
		mov	word ptr dword_29F4E, offset unk_27D0A
		mov	word ptr dword_29F4E+2,	ds
		les	bx, dword_29F4E
		mov	es:[bx+6], dx
		mov	es:[bx+8], ax
		or	byte ptr es:[bx+0Ah], 80h
		and	byte ptr es:[bx+0Ah], 0BFh
		and	byte ptr es:[bx+0Ah], 0DFh
		and	byte ptr es:[bx+0Ah], 0EFh
		and	byte ptr es:[bx+0Ah], 0F7h
		mov	word ptr dword_2A480, offset unk_27D36
		mov	word ptr dword_2A480+2,	ds
		les	bx, dword_2A480
		mov	es:[bx+6], dx
		mov	es:[bx+8], ax
		or	byte ptr es:[bx+0Ah], 80h
		and	byte ptr es:[bx+0Ah], 0BFh
		and	byte ptr es:[bx+0Ah], 0DFh
		and	byte ptr es:[bx+0Ah], 0EFh
		and	byte ptr es:[bx+0Ah], 0F7h
		pop	bp
		retn
sub_133C5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13467	proc near		; CODE XREF: sub_10C18+63p
					; sub_10D9D:loc_10E4Ap	...

var_68		= byte ptr -68h
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 68h
		push	si
		cmp	word_26EFC, sp
		ja	short loc_13477
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13477:				; CODE XREF: sub_13467+Bj
		les	bx, dword ptr word_20924
		mov	byte ptr es:[bx+22h], 0
		mov	byte ptr es:[bx+23h], 0
		mov	byte ptr es:[bx+24h], 0
		mov	byte ptr es:[bx+25h], 0
		mov	word ptr es:[bx+0Eh], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	[bp+var_2], 14h
		mov	[bp+var_3], 19h
		mov	[bp+var_1], 0
		jmp	loc_13566
; ---------------------------------------------------------------------------

loc_134AA:				; CODE XREF: sub_13467+105j
		les	bx, dword ptr word_20924
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	es:[bx+14h], ax
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	es:[bx+16h], ax
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	es:[bx+1Eh], ax
		mov	word ptr es:[bx+20h], 1
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		call	sub_19864
		les	bx, dword ptr word_20924
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	dx, 18h
		sub	dx, ax
		mov	es:[bx+16h], dx
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		call	sub_19864
		mov	al, [bp+var_2]
		add	al, 0FEh ; '˛'
		mov	[bp+var_2], al
		les	bx, dword ptr word_20924
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	es:[bx+16h], ax
		mov	word ptr es:[bx+1Eh], 1
		mov	al, [bp+var_3]
		mov	ah, 0
		mov	es:[bx+20h], ax
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		call	sub_19864
		les	bx, dword ptr word_20924
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	dx, 13h
		sub	dx, ax
		mov	es:[bx+14h], dx
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		call	sub_19864
		mov	al, [bp+var_3]
		add	al, 0FEh ; '˛'
		mov	[bp+var_3], al
		inc	[bp+var_1]

loc_13566:				; CODE XREF: sub_13467+40j
		cmp	[bp+var_1], 9
		ja	short loc_1356F
		jmp	loc_134AA
; ---------------------------------------------------------------------------

loc_1356F:				; CODE XREF: sub_13467+103j
		xor	si, si
		jmp	short loc_13582
; ---------------------------------------------------------------------------

loc_13573:				; CODE XREF: sub_13467+11Ej
		mov	bx, si
		shl	bx, 1
		lea	ax, [bp+var_68]
		add	bx, ax
		mov	word ptr ss:[bx], 0
		inc	si

loc_13582:				; CODE XREF: sub_13467+10Aj
		cmp	si, 32h	; '2'
		jb	short loc_13573
		xor	ax, ax
		push	ax
		push	ss
		lea	ax, [bp+var_68]
		push	ax
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		call	sub_19864
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_13467	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_135A5	proc near		; CODE XREF: sub_10C18:loc_10C56p

var_B		= byte ptr -0Bh
var_A		= byte ptr -0Ah
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_135B6
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_135B6:				; CODE XREF: sub_135A5+Cj
		mov	[bp+var_5], 0
		mov	[bp+var_6], 0FFh
		push	ss
		lea	ax, [bp+var_A]
		push	ax
		push	ds
		mov	ax, 11B2h
		push	ax
		mov	cx, 3
		call	near ptr N_SCOPY@
		mov	ax, 4
		push	ax
		mov	ax, 12h
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20D94
		push	word_20D92
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27CD8
		push	word_27CD6
		call	sub_17B5A
		add	sp, 0Ch
		cmp	word_257CD, 1
		jnz	short loc_1365D
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_B], 0
		jmp	short loc_13657
; ---------------------------------------------------------------------------

loc_1363A:				; CODE XREF: sub_135A5+B6j
		mov	al, [bp+var_B]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_B]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+64Ah]
		mov	es:[bx+23h], al
		inc	[bp+var_B]

loc_13657:				; CODE XREF: sub_135A5+93j
		cmp	[bp+var_B], 10h
		jb	short loc_1363A

loc_1365D:				; CODE XREF: sub_135A5+7Fj
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		les	bx, dword_28C34
		mov	ax, word_26FDE
		mov	dx, word_26FDC
		mov	es:[bx+6], dx
		mov	es:[bx+8], ax
		mov	al, 0
		mov	byte_288FF, al
		mov	byte_285F4, al
		call	sub_13467
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		xor	ax, ax
		push	ax
		push	word_27CD8
		push	word_27CD6
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		jmp	loc_13809
; ---------------------------------------------------------------------------

loc_136FF:				; CODE XREF: sub_135A5+26Aj
		mov	al, byte_27D65
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+760h]
		mov	dx, [bx+75Eh]
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 6
		mov	word ptr es:[bx+0Ch], 2
		mov	word ptr es:[bx+14h], 0Bh
		mov	word ptr es:[bx+16h], 12h
		mov	word ptr es:[bx+1Eh], 6
		mov	word ptr es:[bx+20h], 2
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		call	sub_15181
		add	sp, 4
		les	bx, dword_28C34
		mov	word ptr es:[bx+4], 0
		mov	word ptr es:[bx], 30h ;	'0'
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		add	ax, 70h	; 'p'
		mov	es:[bx+2], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		call	sub_19864
		call	sub_11DDE
		test	byte_285F4, 1
		jz	short loc_137B4
		cmp	[bp+var_5], 0
		jz	short loc_137B4
		dec	[bp+var_5]
		jmp	short loc_137F8	; jumptable 000137DB default case
; ---------------------------------------------------------------------------

loc_137B4:				; CODE XREF: sub_135A5+202j
					; sub_135A5+208j
		test	byte_285F4, 2
		jz	short loc_137C6
		cmp	[bp+var_5], 3
		jnb	short loc_137C6
		inc	[bp+var_5]
		jmp	short loc_137F8	; jumptable 000137DB default case
; ---------------------------------------------------------------------------

loc_137C6:				; CODE XREF: sub_135A5+214j
					; sub_135A5+21Aj
		test	byte_285F4, 10h
		jz	short loc_137F8	; jumptable 000137DB default case
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	bx, ax
		cmp	bx, 3		; switch 4 cases
		ja	short loc_137F8	; jumptable 000137DB default case
		shl	bx, 1
		jmp	cs:off_1384A[bx] ; switch jump
; ---------------------------------------------------------------------------

loc_137E0:				; CODE XREF: sub_135A5+236j
					; DATA XREF: seg000:off_1384Ao
		mov	al, [bp+var_5]	; jumptable 000137DB cases 0,1,3
		mov	[bp+var_6], al
		jmp	short loc_137F8	; jumptable 000137DB default case
; ---------------------------------------------------------------------------

loc_137E8:				; CODE XREF: sub_135A5+236j
					; DATA XREF: seg000:off_1384Ao
		inc	byte_27D65	; jumptable 000137DB case 2
		cmp	byte_27D65, 3
		jnz	short loc_137F8	; jumptable 000137DB default case
		mov	byte_27D65, 0

loc_137F8:				; CODE XREF: sub_135A5+20Dj
					; sub_135A5+21Fj ...
		mov	byte_285F4, 0	; jumptable 000137DB default case

loc_137FD:				; CODE XREF: sub_135A5+262j
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		or	al, al
		jnz	short loc_137FD

loc_13809:				; CODE XREF: sub_135A5+157j
		cmp	[bp+var_6], 0FFh
		jnz	short loc_13812
		jmp	loc_136FF
; ---------------------------------------------------------------------------

loc_13812:				; CODE XREF: sub_135A5+268j
		mov	al, byte_27D65
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	al, ss:[bx]
		mov	byte_288FF, al
		les	bx, dword_28C34
		mov	ax, word_2A478
		mov	dx, word_2A476
		mov	es:[bx+6], dx
		mov	es:[bx+8], ax
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	al, [bp+var_6]
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_135A5	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 2
off_1384A	dw offset loc_137E0	; DATA XREF: sub_135A5+236r
		dw offset loc_137E0	; jump table for switch	statement
		dw offset loc_137E8
		dw offset loc_137E0

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13852	proc near		; CODE XREF: sub_10C18:loc_10C63p

var_A		= dword	ptr -0Ah
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		cmp	word_26EFC, sp
		ja	short loc_13862
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13862:				; CODE XREF: sub_13852+Bj
		mov	[bp+var_5], 0
		mov	al, byte_288FF
		mov	byte_2923A, al
		mov	byte_288FF, 0
		mov	byte_285F4, 0
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		mov	ax, 4
		push	ax
		mov	al, byte_27D62
		mov	ah, 0
		add	ax, 7
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		mov	al, byte_27D62
		mov	ah, 0
		mov	dx, 0Ah
		imul	dx
		mov	bx, ax
		push	word ptr [bx+976h]
		push	word ptr [bx+974h]
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27CD8
		push	word_27CD6
		call	sub_17B5A
		add	sp, 0Ch
		cmp	word_257CD, 1
		jnz	short loc_1393C
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	al, byte_27D62
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+6E8h]
		mov	dx, [bx+6E6h]
		mov	word ptr [bp+var_A], dx
		mov	word ptr [bp+var_A+2], ax
		mov	[bp+var_6], 0
		jmp	short loc_13936
; ---------------------------------------------------------------------------

loc_13917:				; CODE XREF: sub_13852+E8j
		mov	al, [bp+var_6]
		mov	ah, 0
		les	bx, [bp+var_A]
		add	bx, ax
		mov	al, es:[bx]
		mov	dl, [bp+var_6]
		mov	dh, 0
		les	bx, dword_29F46
		add	bx, dx
		mov	es:[bx+23h], al
		inc	[bp+var_6]

loc_13936:				; CODE XREF: sub_13852+C3j
		cmp	[bp+var_6], 10h
		jb	short loc_13917

loc_1393C:				; CODE XREF: sub_13852+96j
		call	sub_13467
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		mov	ax, 8
		push	ax
		mov	ax, 1
		push	ax
		mov	al, 7
		push	ax
		push	word_2A486
		push	word_2A484
		call	sub_10816
		add	sp, 0Ah
		call	sub_16130
		call	sub_13C4F
		mov	al, byte_27D66
		mov	byte_288FE, al
		xor	ax, ax
		push	ax
		push	word_27CD8
		push	word_27CD6
		call	sub_17B93
		add	sp, 6
		mov	ax, word_27CCC
		mov	word_29640, ax
		mov	ax, word_27CCE
		mov	word_29642, ax
		mov	word_285FA, 21h	; '!'
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	sub_15181
		add	sp, 4
		call	sub_11CB2
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_19864
		call	sub_11473
		call	sub_1138C
		call	sub_11BD7
		call	sub_1138C
		call	sub_13A88
		jmp	short loc_13A74
; ---------------------------------------------------------------------------

loc_13A1C:				; CODE XREF: sub_13852+229j
		call	sub_11DDE
		test	byte_285F4, 1
		jz	short loc_13A2B
		call	sub_13AB2
		jmp	short loc_13A6F
; ---------------------------------------------------------------------------

loc_13A2B:				; CODE XREF: sub_13852+1D2j
		test	byte_285F4, 2
		jz	short loc_13A37
		call	sub_13B0F
		jmp	short loc_13A6F
; ---------------------------------------------------------------------------

loc_13A37:				; CODE XREF: sub_13852+1DEj
		test	byte_285F4, 4
		jz	short loc_13A43
		call	sub_13B6C
		jmp	short loc_13A6F
; ---------------------------------------------------------------------------

loc_13A43:				; CODE XREF: sub_13852+1EAj
		test	byte_285F4, 8
		jz	short loc_13A4F
		call	sub_13BC9
		jmp	short loc_13A6F
; ---------------------------------------------------------------------------

loc_13A4F:				; CODE XREF: sub_13852+1F6j
		test	byte_285F4, 10h
		jz	short loc_13A5B
		call	sub_13CF7
		jmp	short loc_13A6C
; ---------------------------------------------------------------------------

loc_13A5B:				; CODE XREF: sub_13852+202j
		mov	al, 1
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_13A6F
		mov	al, 0FFh
		mov	byte_2963D, al

loc_13A6C:				; CODE XREF: sub_13852+207j
		mov	[bp+var_5], al

loc_13A6F:				; CODE XREF: sub_13852+1D7j
					; sub_13852+1E3j ...
		mov	byte_285F4, 0

loc_13A74:				; CODE XREF: sub_13852+1C8j
		mov	al, [bp+var_5]
		mov	ah, 0
		or	ax, ax
		jz	short loc_13A1C
		mov	al, byte_2923A
		mov	byte_288FF, al
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_13852	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13A88	proc near		; CODE XREF: sub_11E3D+14p
					; sub_13852+1C5p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_13A94
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13A94:				; CODE XREF: sub_13A88+7j
		mov	al, byte_288FE
		mov	ah, 0
		mov	dx, 9
		imul	dx
		mov	dx, word ptr dword_285F6+2
		mov	bx, word ptr dword_285F6
		add	bx, ax
		mov	word ptr dword_29F5A, bx
		mov	word ptr dword_29F5A+2,	dx
		pop	bp
		retn
sub_13A88	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13AB2	proc near		; CODE XREF: sub_13852+1D4p

var_6		= dword	ptr -6
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_13AC1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13AC1:				; CODE XREF: sub_13AB2+Aj
		mov	ax, word ptr dword_29F5A+2
		mov	dx, word ptr dword_29F5A
		mov	word ptr [bp+var_6], dx
		mov	word ptr [bp+var_6+2], ax
		les	bx, [bp+var_6]
		mov	al, es:[bx+1]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_13B0B
		mov	byte_288FE, al
		call	sub_13A88
		les	bx, [bp+var_6]
		mov	al, es:[bx+2]
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_1], al
		jmp	short loc_13B05
; ---------------------------------------------------------------------------

loc_13AF6:				; CODE XREF: sub_13AB2+57j
		mov	ax, word_29642
		add	ax, 0FFFCh
		mov	word_29642, ax
		call	sub_13C26
		dec	[bp+var_1]

loc_13B05:				; CODE XREF: sub_13AB2+42j
		cmp	[bp+var_1], 0
		jnz	short loc_13AF6

loc_13B0B:				; CODE XREF: sub_13AB2+2Aj
		mov	sp, bp
		pop	bp
		retn
sub_13AB2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13B0F	proc near		; CODE XREF: sub_13852+1E0p

var_6		= dword	ptr -6
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_13B1E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13B1E:				; CODE XREF: sub_13B0F+Aj
		mov	ax, word ptr dword_29F5A+2
		mov	dx, word ptr dword_29F5A
		mov	word ptr [bp+var_6], dx
		mov	word ptr [bp+var_6+2], ax
		les	bx, [bp+var_6]
		mov	al, es:[bx+3]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_13B68
		mov	byte_288FE, al
		call	sub_13A88
		les	bx, [bp+var_6]
		mov	al, es:[bx+4]
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_1], al
		jmp	short loc_13B62
; ---------------------------------------------------------------------------

loc_13B53:				; CODE XREF: sub_13B0F+57j
		mov	ax, word_29642
		add	ax, 4
		mov	word_29642, ax
		call	sub_13C26
		dec	[bp+var_1]

loc_13B62:				; CODE XREF: sub_13B0F+42j
		cmp	[bp+var_1], 0
		jnz	short loc_13B53

loc_13B68:				; CODE XREF: sub_13B0F+2Aj
		mov	sp, bp
		pop	bp
		retn
sub_13B0F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13B6C	proc near		; CODE XREF: sub_13852+1ECp

var_6		= dword	ptr -6
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_13B7B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13B7B:				; CODE XREF: sub_13B6C+Aj
		mov	ax, word ptr dword_29F5A+2
		mov	dx, word ptr dword_29F5A
		mov	word ptr [bp+var_6], dx
		mov	word ptr [bp+var_6+2], ax
		les	bx, [bp+var_6]
		mov	al, es:[bx+5]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_13BC5
		mov	byte_288FE, al
		call	sub_13A88
		les	bx, [bp+var_6]
		mov	al, es:[bx+6]
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_1], al
		jmp	short loc_13BBF
; ---------------------------------------------------------------------------

loc_13BB0:				; CODE XREF: sub_13B6C+57j
		mov	ax, word_29640
		add	ax, 0FFFCh
		mov	word_29640, ax
		call	sub_13C26
		dec	[bp+var_1]

loc_13BBF:				; CODE XREF: sub_13B6C+42j
		cmp	[bp+var_1], 0
		jnz	short loc_13BB0

loc_13BC5:				; CODE XREF: sub_13B6C+2Aj
		mov	sp, bp
		pop	bp
		retn
sub_13B6C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13BC9	proc near		; CODE XREF: sub_13852+1F8p

var_6		= dword	ptr -6
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_13BD8
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13BD8:				; CODE XREF: sub_13BC9+Aj
		mov	ax, word ptr dword_29F5A+2
		mov	dx, word ptr dword_29F5A
		mov	word ptr [bp+var_6], dx
		mov	word ptr [bp+var_6+2], ax
		les	bx, [bp+var_6]
		mov	al, es:[bx+7]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_13C22
		mov	byte_288FE, al
		call	sub_13A88
		les	bx, [bp+var_6]
		mov	al, es:[bx+8]
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		mov	[bp+var_1], al
		jmp	short loc_13C1C
; ---------------------------------------------------------------------------

loc_13C0D:				; CODE XREF: sub_13BC9+57j
		mov	ax, word_29640
		add	ax, 4
		mov	word_29640, ax
		call	sub_13C26
		dec	[bp+var_1]

loc_13C1C:				; CODE XREF: sub_13BC9+42j
		cmp	[bp+var_1], 0
		jnz	short loc_13C0D

loc_13C22:				; CODE XREF: sub_13BC9+2Aj
		mov	sp, bp
		pop	bp
		retn
sub_13BC9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13C26	proc near		; CODE XREF: sub_13AB2+4Dp
					; sub_13B0F+4Dp ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_13C32
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13C32:				; CODE XREF: sub_13C26+7j
		call	sub_1138C
		call	sub_11473
		call	sub_119E4
		call	sub_11BD7
		call	sub_11CB2
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_11349
		pop	bp
		retn
sub_13C26	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13C4F	proc near		; CODE XREF: sub_13852+169p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_13C5D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13C5D:				; CODE XREF: sub_13C4F+9j
		mov	[bp+var_1], 0
		mov	al, byte_288FE
		mov	byte_27D66, al
		mov	byte_288FE, 1

loc_13C6C:				; CODE XREF: sub_13C4F+48j
		call	sub_13A88
		les	bx, dword_29F5A
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_13C7F
		mov	[bp+var_1], 1
		jmp	short loc_13C8C
; ---------------------------------------------------------------------------

loc_13C7F:				; CODE XREF: sub_13C4F+28j
		les	bx, dword_29F5A
		cmp	byte ptr es:[bx], 0
		jz	short loc_13C8C
		call	sub_13C9D

loc_13C8C:				; CODE XREF: sub_13C4F+2Ej
					; sub_13C4F+38j
		inc	byte_288FE
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jz	short loc_13C6C
		mov	sp, bp
		pop	bp
		retn
sub_13C4F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13C9D	proc near		; CODE XREF: sub_13C4F+3Ap
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_13CA9
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13CA9:				; CODE XREF: sub_13C9D+7j
		les	bx, dword_28C34
		mov	word ptr es:[bx+4], 1DAh
		mov	al, byte_288FE
		mov	ah, 0
		dec	ax
		shl	ax, 1
		shl	ax, 1
		les	bx, dword_28904
		add	bx, ax
		mov	ax, es:[bx]
		dec	ax
		les	bx, dword_28C34
		mov	es:[bx], ax
		mov	al, byte_288FE
		mov	ah, 0
		dec	ax
		shl	ax, 1
		inc	ax
		shl	ax, 1
		les	bx, dword_28904
		add	bx, ax
		mov	ax, es:[bx]
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		pop	bp
		retn
sub_13C9D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13CF7	proc near		; CODE XREF: sub_13852+204p

var_5		= byte ptr -5
var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_13D06
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13D06:				; CODE XREF: sub_13CF7+Aj
		mov	[bp+var_5], 0
		mov	byte_27CDC, 0
		call	sub_13C26
		call	sub_13C26
		call	sub_13A88
		mov	ax, word ptr dword_29F5A+2
		mov	dx, word ptr dword_29F5A
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		les	bx, [bp+var_4]
		mov	al, es:[bx]
		mov	ah, 0
		or	ax, ax
		jz	short loc_13D34
		jmp	loc_13DF6
; ---------------------------------------------------------------------------

loc_13D34:				; CODE XREF: sub_13CF7+38j
		cmp	word_26C4C, 4
		jz	short loc_13D3F
		mov	al, 3
		jmp	short loc_13D41
; ---------------------------------------------------------------------------

loc_13D3F:				; CODE XREF: sub_13CF7+42j
		mov	al, 28h	; '('

loc_13D41:				; CODE XREF: sub_13CF7+46j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	byte_288FF, 0AAh ; '™'
		mov	ax, word_29642
		mov	word_27CCE, ax
		mov	ax, word_29640
		mov	word_27CCC, ax
		mov	word ptr dword_2A55C, offset unk_214C4
		mov	word ptr dword_2A55C+2,	ds
		mov	byte_285FD, 16h
		mov	ax, word_29640
		add	ax, 0FFF1h
		mov	word_29640, ax
		mov	ax, word_29642
		add	ax, 3
		mov	word_29642, ax
		mov	word_285FA, 0CBh ; 'À'
		call	sub_119E4
		call	sub_11CB2
		call	sub_11BD7
		mov	ax, word_29640
		add	ax, 0Fh
		mov	word_29640, ax
		mov	ax, word_29642
		add	ax, 0FFFDh
		mov	word_29642, ax
		mov	word_285FA, 0
		call	sub_1138C
		call	sub_13DFD
		call	sub_11CB2
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_11349
		call	sub_119E4
		call	sub_11BD7
		call	sub_11CB2
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_11349

loc_13DCA:				; CODE XREF: sub_13CF7+F6j
		call	sub_1138C
		call	sub_113DF
		call	sub_11473
		call	sub_119E4
		call	sub_11BD7
		call	sub_11CB2
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_11349
		cmp	byte_285FD, 0
		jnz	short loc_13DCA
		call	sub_13E74
		mov	[bp+var_5], 1

loc_13DF6:				; CODE XREF: sub_13CF7+3Aj
		mov	al, [bp+var_5]
		mov	sp, bp
		pop	bp
		retn
sub_13CF7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13DFD	proc near		; CODE XREF: sub_13CF7+ACp
		push	bp
		mov	bp, sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_13E0B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13E0B:				; CODE XREF: sub_13DFD+9j
		les	bx, dword_28C34
		mov	di, es:[bx+14h]
		mov	si, es:[bx+16h]
		mov	ax, word_29640
		sub	ax, di
		add	ax, 0Eh
		mov	cl, 4
		sar	ax, cl
		dec	ax
		mov	word_2A0E6, ax
		mov	ax, word_29642
		sub	ax, si
		add	ax, 0FFF6h
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	word_2A0E8, ax
		cmp	word_2A0E6, 0
		jge	short loc_13E47
		mov	word_2A0E6, 0
		jmp	short loc_13E54
; ---------------------------------------------------------------------------

loc_13E47:				; CODE XREF: sub_13DFD+40j
		cmp	word_2A0E6, 12h
		jle	short loc_13E54
		mov	word_2A0E6, 12h

loc_13E54:				; CODE XREF: sub_13DFD+48j
					; sub_13DFD+4Fj
		cmp	word_2A0E8, 0
		jge	short loc_13E63
		mov	word_2A0E8, 0
		jmp	short loc_13E70
; ---------------------------------------------------------------------------

loc_13E63:				; CODE XREF: sub_13DFD+5Cj
		cmp	word_2A0E8, 16h
		jle	short loc_13E70
		mov	word_2A0E8, 16h

loc_13E70:				; CODE XREF: sub_13DFD+64j
					; sub_13DFD+6Bj
		pop	di
		pop	si
		pop	bp
		retn
sub_13DFD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13E74	proc near		; CODE XREF: sub_10F7A:loc_111D0p
					; sub_111EB:loc_1132Ep	...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_13E80
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13E80:				; CODE XREF: sub_13E74+7j
		mov	al, 32h	; '2'
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp
		pop	bp
		retn
sub_13E74	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13E8A	proc near		; CODE XREF: sub_10C18:loc_10D70p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_13E98
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13E98:				; CODE XREF: sub_13E8A+9j
		mov	al, 1
		mov	cl, al
		mov	[bp+var_1], al
		jmp	short loc_13EB8
; ---------------------------------------------------------------------------

loc_13EA1:				; CODE XREF: sub_13E8A+41j
		mov	al, cl
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		mov	al, es:[bx]
		and	[bp+var_1], al
		inc	cl

loc_13EB8:				; CODE XREF: sub_13E8A+15j
		mov	al, cl
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_13EA1
		mov	al, [bp+var_1]
		mov	sp, bp
		pop	bp
		retn
sub_13E8A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_13ED4	proc near		; CODE XREF: sub_10C18+16Ap

var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_13EE5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_13EE5:				; CODE XREF: sub_13ED4+Cj
		call	sub_15681
		mov	ax, 4
		push	ax
		mov	ax, 11h
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20D8A
		push	word_20D88
		push	word_27CD8
		push	word_27CD6
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_27CD8
		push	word_27CD6
		call	sub_17B5A
		add	sp, 0Ch
		cmp	word_257CD, 1
		jnz	short loc_13F77
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_5], 0
		jmp	short loc_13F71
; ---------------------------------------------------------------------------

loc_13F54:				; CODE XREF: sub_13ED4+A1j
		mov	al, [bp+var_5]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+72Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_5]

loc_13F71:				; CODE XREF: sub_13ED4+7Ej
		cmp	[bp+var_5], 10h
		jb	short loc_13F54

loc_13F77:				; CODE XREF: sub_13ED4+6Aj
		call	sub_13467
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		xor	ax, ax
		push	ax
		push	word_27CD8
		push	word_27CD6
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_19864
		mov	byte_285F4, 0
		call	sub_1328F
		mov	al, 1
		mov	byte_27D62, al
		mov	byte_2963D, al
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_13ED4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14015	proc near		; CODE XREF: sub_12D14+24p

var_36		= byte ptr -36h
var_26		= byte ptr -26h
var_5		= byte ptr -5
var_4		= byte ptr -4
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 36h
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_14026
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14026:				; CODE XREF: sub_14015+Cj
		mov	[bp+var_5], 0
		push	ss
		lea	ax, [bp+var_26]
		push	ax
		push	ds
		mov	ax, 11B6h
		push	ax
		mov	cx, 20h	; ' '
		call	near ptr N_SCOPY@
		push	ss
		lea	ax, [bp+var_36]
		push	ax
		push	ds
		mov	ax, 11D6h
		push	ax
		mov	cx, 10h
		call	near ptr N_SCOPY@
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		xor	ax, ax
		push	ax
		call	sub_19814
		inc	sp
		inc	sp
		push	ds
		mov	ax, 90h	; 'ê'
		push	ax
		call	sub_17307
		add	sp, 4
		push	word_2154C
		call	sub_193A4
		inc	sp
		inc	sp
		mov	ax, 4
		push	ax
		mov	ax, 1
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	di, ax
		xor	ax, ax
		push	ax
		mov	dx, 63h	; 'c'
		push	ax
		push	dx
		push	word_26F9A
		push	word_26F98
		push	di
		call	sub_1745E
		add	sp, 0Ch
		push	di		; handle
		call	sub_17319
		inc	sp
		inc	sp
		cmp	word_257CD, 1
		jnz	short loc_140DD
		mov	ax, word_26F9A
		mov	dx, word_26F98
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_1], 0
		jmp	short loc_140D7
; ---------------------------------------------------------------------------

loc_140B6:				; CODE XREF: sub_14015+C6j
		mov	al, [bp+var_1]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_1]
		mov	ah, 0
		push	es
		push	bx
		mov	bx, ax
		mov	al, [bx+65Ah]
		pop	bx
		pop	es
		mov	es:[bx+23h], al
		inc	[bp+var_1]

loc_140D7:				; CODE XREF: sub_14015+9Fj
		cmp	[bp+var_1], 10h
		jb	short loc_140B6

loc_140DD:				; CODE XREF: sub_14015+8Bj
		mov	[bp+var_1], 0
		jmp	short loc_14103
; ---------------------------------------------------------------------------

loc_140E3:				; CODE XREF: sub_14015+F2j
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+73Eh]
		mov	dl, [bp+var_1]
		mov	dh, 0
		shl	dx, 1
		les	bx, dword_26F7A
		add	bx, dx
		mov	es:[bx], ax
		inc	[bp+var_1]

loc_14103:				; CODE XREF: sub_14015+CCj
		cmp	[bp+var_1], 10h
		jb	short loc_140E3
		call	sub_1063B
		mov	[bp+var_5], 0
		jmp	loc_14242
; ---------------------------------------------------------------------------

loc_14113:				; CODE XREF: sub_14015+109j
					; sub_14015+233j
		call	sub_193B1
		and	ax, 0Fh
		mov	si, ax
		cmp	ax, 2
		jl	short loc_14113
		mov	al, [bp+si+var_36]
		mov	[bp+var_4], al
		mov	al, 0
		mov	[bp+var_3], al
		mov	[bp+var_2], al
		mov	byte_2154A, 1
		call	sub_13467
		push	ds
		mov	ax, 578h
		push	ax
		call	sub_108D1
		add	sp, 4
		mov	bx, si
		shl	bx, 1
		lea	ax, [bp+var_26]
		add	bx, ax
		mov	ax, ss:[bx]
		les	bx, dword_28C34
		mov	es:[bx+4], ax
		mov	word ptr es:[bx], 90h ;	'ê'
		mov	word ptr es:[bx+2], 64h	; 'd'
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	ax, 87h	; 'á'
		push	ax
		mov	ax, 54h	; 'T'
		push	ax
		push	ds
		mov	ax, 1331h
		push	ax
		call	sub_107F0
		add	sp, 8
		mov	ax, 96h	; 'ñ'
		push	ax
		mov	ax, 98h	; 'ò'
		push	ax
		mov	al, 2
		push	ax
		mov	al, [bp+var_2]
		mov	ah, 0
		cwd
		push	dx
		push	ax
		call	sub_10816
		add	sp, 0Ah
		jmp	short loc_14210
; ---------------------------------------------------------------------------

loc_14199:				; CODE XREF: sub_14015+202j
		mov	byte_285F4, 0
		call	sub_11DDE
		test	byte_285F4, 10h
		jz	short loc_141AE
		mov	[bp+var_3], 1
		jmp	short loc_141EF
; ---------------------------------------------------------------------------

loc_141AE:				; CODE XREF: sub_14015+191j
		test	byte_285F4, 4
		jz	short loc_141CC
		cmp	[bp+var_2], 0
		jz	short loc_141CC
		dec	[bp+var_2]
		mov	ax, 96h	; 'ñ'
		push	ax
		mov	ax, 98h	; 'ò'
		push	ax
		push	ds
		mov	ax, 134Bh
		jmp	short loc_141E8
; ---------------------------------------------------------------------------

loc_141CC:				; CODE XREF: sub_14015+19Ej
					; sub_14015+1A4j
		test	byte_285F4, 8
		jz	short loc_141EF
		cmp	[bp+var_2], 63h	; 'c'
		jnb	short loc_141EF
		inc	[bp+var_2]
		mov	ax, 96h	; 'ñ'
		push	ax
		mov	ax, 98h	; 'ò'
		push	ax
		push	ds
		mov	ax, 1350h

loc_141E8:				; CODE XREF: sub_14015+1B5j
		push	ax
		call	sub_107F0
		add	sp, 8

loc_141EF:				; CODE XREF: sub_14015+197j
					; sub_14015+1BCj ...
		mov	ax, 96h	; 'ñ'
		push	ax
		mov	ax, 98h	; 'ò'
		push	ax
		mov	al, 2
		push	ax
		mov	al, [bp+var_2]
		mov	ah, 0
		cwd
		push	dx
		push	ax
		call	sub_10816
		add	sp, 0Ah
		mov	al, 4
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp

loc_14210:				; CODE XREF: sub_14015+182j
		mov	al, [bp+var_3]
		mov	ah, 0
		or	ax, ax
		jz	short loc_14199
		mov	al, [bp+var_2]
		mov	[bp+var_4], al
		jmp	short loc_1423E
; ---------------------------------------------------------------------------
		mov	ax, 0A8h ; '®'
		push	ax
		mov	ax, 8Ch	; 'å'
		push	ax
		push	ds
		mov	ax, 1355h
		push	ax
		call	sub_107F0
		add	sp, 8
		mov	byte_2154A, 0FFh
		inc	[bp+var_5]
		jmp	short loc_14242
; ---------------------------------------------------------------------------

loc_1423E:				; CODE XREF: sub_14015+20Aj
		mov	[bp+var_5], 0FFh

loc_14242:				; CODE XREF: sub_14015+FBj
					; sub_14015+227j
		cmp	[bp+var_5], 3
		jnb	short loc_1424B
		jmp	loc_14113
; ---------------------------------------------------------------------------

loc_1424B:				; CODE XREF: sub_14015+231j
		mov	ax, 1
		push	ax
		call	sub_19814
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_14015	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14263	proc near		; CODE XREF: sub_11FBE+B5p
					; sub_1207D+B1p ...

var_4		= dword	ptr -4
arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 4
		cmp	word_26EFC, sp
		ja	short loc_14272
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14272:				; CODE XREF: sub_14263+Aj
		mov	byte_285F4, 0
		mov	al, byte_285F2
		mov	ah, 0
		or	ax, ax
		jnz	short loc_142D5
		mov	al, [bp+arg_0]
		mov	byte_27CDC, al
		cmp	byte_27CDC, 5
		jz	short loc_142D5
		cmp	byte_27CDC, 0Bh
		jz	short loc_142D5
		cmp	byte_27CDC, 1Ch
		jz	short loc_142D5
		mov	byte_2A48C, 0
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+2254h]
		mov	dx, [bx+2252h]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		les	bx, [bp+var_4]
		mov	al, es:[bx]
		mov	byte_285FD, al
		mov	al, es:[bx+1]
		mov	byte_29F5E, al
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		mov	word ptr dword_2A55C, dx
		mov	word ptr dword_2A55C+2,	ax

loc_142D5:				; CODE XREF: sub_14263+1Bj
					; sub_14263+28j ...
		mov	sp, bp
		pop	bp
		retn
sub_14263	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_142D9	proc near		; CODE XREF: sub_128F9:loc_12929p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_142E5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_142E5:				; CODE XREF: sub_142D9+7j
		cmp	word_26C4C, 4
		jz	short loc_142F0
		mov	al, 3
		jmp	short loc_142F2
; ---------------------------------------------------------------------------

loc_142F0:				; CODE XREF: sub_142D9+11j
		mov	al, 0Dh

loc_142F2:				; CODE XREF: sub_142D9+15j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 2Dh	; '-'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_142D9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14305	proc near		; CODE XREF: sub_128F9+56p
					; sub_1440C+1Cp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14311
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14311:				; CODE XREF: sub_14305+7j
		mov	byte_27CDC, 1Ch
		call	sub_14361
		pop	bp
		retn
sub_14305	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1431B	proc near		; CODE XREF: sub_14344+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14327
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14327:				; CODE XREF: sub_1431B+7j
		test	byte_285F4, 4
		jz	short loc_14333
		call	sub_12634
		jmp	short loc_14342
; ---------------------------------------------------------------------------

loc_14333:				; CODE XREF: sub_1431B+11j
		test	byte_285F4, 8
		jz	short loc_1433F
		call	sub_126A1
		jmp	short loc_14342
; ---------------------------------------------------------------------------

loc_1433F:				; CODE XREF: sub_1431B+1Dj
		call	sub_14361

loc_14342:				; CODE XREF: sub_1431B+16j
					; sub_1431B+22j
		pop	bp
		retn
sub_1431B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14344	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0802o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14350
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14350:				; CODE XREF: sub_14344+7j
		test	byte_285F4, 10h
		jz	short loc_1435C
		call	sub_1431B
		jmp	short loc_1435F
; ---------------------------------------------------------------------------

loc_1435C:				; CODE XREF: sub_14344+11j
		call	sub_14398

loc_1435F:				; CODE XREF: sub_14344+16j
		pop	bp
		retn
sub_14344	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14361	proc near		; CODE XREF: sub_14305+11p
					; sub_1431B:loc_1433Fp

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_14370
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14370:				; CODE XREF: sub_14361+Aj
		mov	[bp+var_1], 15h
		mov	[bp+var_2], 4
		mov	[bp+var_6], offset unk_21F20
		mov	[bp+var_4], ds
		push	[bp+var_4]
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+var_1]
		push	ax
		call	sub_1495C
		add	sp, 8
		mov	sp, bp
		pop	bp
		retn
sub_14361	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14398	proc near		; CODE XREF: sub_14344:loc_1435Cp
					; sub_14437:loc_1444Fp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_143A4
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_143A4:				; CODE XREF: sub_14398+7j
		test	byte_285F4, 1
		jz	short loc_143B0
		call	sub_14454
		jmp	short loc_143B3
; ---------------------------------------------------------------------------

loc_143B0:				; CODE XREF: sub_14398+11j
		call	sub_143B5

loc_143B3:				; CODE XREF: sub_14398+16j
		pop	bp
		retn
sub_14398	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_143B5	proc near		; CODE XREF: sub_14398:loc_143B0p
					; sub_14454+13p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_143C1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_143C1:				; CODE XREF: sub_143B5+7j
		test	byte_285F4, 2
		jz	short loc_143CD
		call	sub_1448A
		jmp	short loc_143D0
; ---------------------------------------------------------------------------

loc_143CD:				; CODE XREF: sub_143B5+11j
		call	sub_143D2

loc_143D0:				; CODE XREF: sub_143B5+16j
		pop	bp
		retn
sub_143B5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_143D2	proc near		; CODE XREF: sub_143B5:loc_143CDp
					; sub_1448A+13p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_143DE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_143DE:				; CODE XREF: sub_143D2+7j
		test	byte_285F4, 4
		jz	short loc_143EA
		call	sub_144C0
		jmp	short loc_143ED
; ---------------------------------------------------------------------------

loc_143EA:				; CODE XREF: sub_143D2+11j
		call	sub_143EF

loc_143ED:				; CODE XREF: sub_143D2+16j
		pop	bp
		retn
sub_143D2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_143EF	proc near		; CODE XREF: sub_143D2:loc_143EAp
					; sub_144C0+15p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_143FB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_143FB:				; CODE XREF: sub_143EF+7j
		test	byte_285F4, 8
		jz	short loc_14407
		call	sub_14532
		jmp	short loc_1440A
; ---------------------------------------------------------------------------

loc_14407:				; CODE XREF: sub_143EF+11j
		call	sub_1440C

loc_1440A:				; CODE XREF: sub_143EF+16j
		pop	bp
		retn
sub_143EF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1440C	proc near		; CODE XREF: sub_143EF:loc_14407p
					; sub_14437+13p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14418
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14418:				; CODE XREF: sub_1440C+7j
		mov	al, byte_2891E
		mov	byte_2891F, al
		call	sub_1236F
		cmp	byte_27CD4, 16h
		jnz	short loc_1442D
		call	sub_14305
		jmp	short loc_14435
; ---------------------------------------------------------------------------

loc_1442D:				; CODE XREF: sub_1440C+1Aj
		mov	al, 2Fh	; '/'
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp

loc_14435:				; CODE XREF: sub_1440C+1Fj
		pop	bp
		retn
sub_1440C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14437	proc near		; CODE XREF: sub_11E02+30p
					; DATA XREF: dseg:0804o ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14443
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14443:				; CODE XREF: sub_14437+7j
		test	byte_285F4, 10h
		jz	short loc_1444F
		call	sub_1440C
		jmp	short loc_14452
; ---------------------------------------------------------------------------

loc_1444F:				; CODE XREF: sub_14437+11j
		call	sub_14398

loc_14452:				; CODE XREF: sub_14437+16j
		pop	bp
		retn
sub_14437	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14454	proc near		; CODE XREF: sub_14398+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14460
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14460:				; CODE XREF: sub_14454+7j
		cmp	byte_2891E, 8
		jnb	short loc_1446C
		call	sub_143B5
		jmp	short loc_14488
; ---------------------------------------------------------------------------

loc_1446C:				; CODE XREF: sub_14454+11j
		mov	al, byte_2891E
		add	al, 0F8h ; '¯'
		push	ax
		call	sub_145CF
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_14480
		call	sub_143B5
		jmp	short loc_14488
; ---------------------------------------------------------------------------

loc_14480:				; CODE XREF: sub_14454+25j
		mov	al, 1Dh
		push	ax
		call	sub_145A0
		inc	sp
		inc	sp

loc_14488:				; CODE XREF: sub_14454+16j
					; sub_14454+2Aj
		pop	bp
		retn
sub_14454	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1448A	proc near		; CODE XREF: sub_143B5+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14496
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14496:				; CODE XREF: sub_1448A+7j
		cmp	byte_2891E, 28h	; '('
		jb	short loc_144A2
		call	sub_143D2
		jmp	short loc_144BE
; ---------------------------------------------------------------------------

loc_144A2:				; CODE XREF: sub_1448A+11j
		mov	al, byte_2891E
		add	al, 8
		push	ax
		call	sub_145CF
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_144B6
		call	sub_143D2
		jmp	short loc_144BE
; ---------------------------------------------------------------------------

loc_144B6:				; CODE XREF: sub_1448A+25j
		mov	al, 1Eh
		push	ax
		call	sub_145A0
		inc	sp
		inc	sp

loc_144BE:				; CODE XREF: sub_1448A+16j
					; sub_1448A+2Aj
		pop	bp
		retn
sub_1448A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_144C0	proc near		; CODE XREF: sub_143D2+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_144CC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_144CC:				; CODE XREF: sub_144C0+7j
		mov	al, byte_2890E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_144DA
		call	sub_143EF
		jmp	short loc_1450A
; ---------------------------------------------------------------------------

loc_144DA:				; CODE XREF: sub_144C0+13j
		mov	al, byte_2891E
		add	al, 0FFh
		push	ax
		call	sub_145CF
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_144EE
		call	sub_1450C
		jmp	short loc_1450A
; ---------------------------------------------------------------------------

loc_144EE:				; CODE XREF: sub_144C0+27j
		mov	al, byte_2891E
		add	al, 0FFh
		push	ax
		call	sub_14605
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_14502
		call	sub_1450C
		jmp	short loc_1450A
; ---------------------------------------------------------------------------

loc_14502:				; CODE XREF: sub_144C0+3Bj
		mov	al, 1Fh
		push	ax
		call	sub_145A0
		inc	sp
		inc	sp

loc_1450A:				; CODE XREF: sub_144C0+18j
					; sub_144C0+2Cj ...
		pop	bp
		retn
sub_144C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1450C	proc near		; CODE XREF: sub_144C0+29p
					; sub_144C0+3Dp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14518
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14518:				; CODE XREF: sub_1450C+7j
		cmp	byte_27CD4, 16h
		jz	short loc_1452D
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	al, 2Fh	; '/'
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp

loc_1452D:				; CODE XREF: sub_1450C+11j
		call	sub_12634
		pop	bp
		retn
sub_1450C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14532	proc near		; CODE XREF: sub_143EF+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1453E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1453E:				; CODE XREF: sub_14532+7j
		cmp	byte_2890E, 7
		jnz	short loc_1454A
		call	sub_1440C
		jmp	short loc_14578
; ---------------------------------------------------------------------------

loc_1454A:				; CODE XREF: sub_14532+11j
		mov	al, byte_2891E
		inc	al
		push	ax
		call	sub_145CF
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_1455E
		call	sub_1457A
		jmp	short loc_14578
; ---------------------------------------------------------------------------

loc_1455E:				; CODE XREF: sub_14532+25j
		mov	al, byte_2891E
		push	ax
		call	sub_14605
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_14570
		call	sub_1457A
		jmp	short loc_14578
; ---------------------------------------------------------------------------

loc_14570:				; CODE XREF: sub_14532+37j
		mov	al, 20h	; ' '
		push	ax
		call	sub_145A0
		inc	sp
		inc	sp

loc_14578:				; CODE XREF: sub_14532+16j
					; sub_14532+2Aj ...
		pop	bp
		retn
sub_14532	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1457A	proc near		; CODE XREF: sub_14532+27p
					; sub_14532+39p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14586
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14586:				; CODE XREF: sub_1457A+7j
		cmp	byte_27CD4, 16h
		jz	short loc_1459B
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	al, 2Fh	; '/'
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp

loc_1459B:				; CODE XREF: sub_1457A+11j
		call	sub_126A1
		pop	bp
		retn
sub_1457A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_145A0	proc near		; CODE XREF: sub_14454+2Fp
					; sub_1448A+2Fp ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_145AC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_145AC:				; CODE XREF: sub_145A0+7j
		mov	al, [bp+arg_0]
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		cmp	byte_27CD4, 0
		jz	short loc_145CA
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	al, 30h	; '0'
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp

loc_145CA:				; CODE XREF: sub_145A0+1Aj
		call	sub_1238E
		pop	bp
		retn
sub_145A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_145CF	proc near		; CODE XREF: sub_14454+1Ep
					; sub_1448A+1Ep ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_145DB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_145DB:				; CODE XREF: sub_145CF+7j
		mov	dl, 0
		mov	al, [bp+arg_0]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx], 0
		jz	short loc_14601
		mov	al, [bp+arg_0]
		mov	ah, 0
		mov	bx, word ptr dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx], 19h
		jz	short loc_14601
		mov	dl, 1

loc_14601:				; CODE XREF: sub_145CF+1Dj
					; sub_145CF+2Ej
		mov	al, dl
		pop	bp
		retn
sub_145CF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14605	proc near		; CODE XREF: sub_144C0+34p
					; sub_14532+30p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14611
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14611:				; CODE XREF: sub_14605+7j
		mov	dl, 0
		mov	al, [bp+arg_0]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx+30h], 0
		jz	short loc_14639
		mov	al, [bp+arg_0]
		mov	ah, 0
		mov	bx, word ptr dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx+30h], 13h
		jz	short loc_14639
		mov	dl, 1

loc_14639:				; CODE XREF: sub_14605+1Ej
					; sub_14605+30j
		mov	al, dl
		pop	bp
		retn
sub_14605	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1463D	proc near		; CODE XREF: sub_128F9+62p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14649
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14649:				; CODE XREF: sub_1463D+7j
		inc	byte_285F2
		cmp	byte_285F2, 3
		jnz	short loc_1465C
		mov	byte_285F2, 0
		call	sub_12965

loc_1465C:				; CODE XREF: sub_1463D+15j
		pop	bp
		retn
sub_1463D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1465E	proc near		; CODE XREF: sub_129A6+13p
					; sub_129A6+2Ep
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1466A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1466A:				; CODE XREF: sub_1465E+7j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+36BEh]
		push	ax
		call	sub_146BB
		inc	sp
		inc	sp
		pop	bp
		retn
sub_1465E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1467D	proc near		; CODE XREF: sub_12965+13p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14689
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14689:				; CODE XREF: sub_1467D+7j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+36EEh]
		push	ax
		call	sub_146BB
		inc	sp
		inc	sp
		pop	bp
		retn
sub_1467D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1469C	proc near		; CODE XREF: sub_12965+1Fp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_146A8
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_146A8:				; CODE XREF: sub_1469C+7j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+371Eh]
		push	ax
		call	sub_146BB
		inc	sp
		inc	sp
		pop	bp
		retn
sub_1469C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_146BB	proc near		; CODE XREF: sub_1465E+18p
					; sub_1467D+18p ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_146C7
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_146C7:				; CODE XREF: sub_146BB+7j
		mov	al, [bp+arg_0]
		mov	ah, 0
		cmp	ax, 8
		jz	short loc_14706
		jg	short loc_146E1
		mov	bx, ax
		cmp	bx, 3		; switch 4 cases
		ja	short loc_1471A	; jumptable 000146DC default case
		shl	bx, 1
		jmp	cs:off_14725[bx] ; switch jump
; ---------------------------------------------------------------------------

loc_146E1:				; CODE XREF: sub_146BB+16j
		cmp	ax, 9
		jz	short loc_1470B
		cmp	ax, 1Ah
		jz	short loc_14710
		cmp	ax, 1Bh
		jz	short loc_14715
		jmp	short loc_1471A	; jumptable 000146DC default case
; ---------------------------------------------------------------------------

loc_146F2:				; CODE XREF: sub_146BB+21j
					; DATA XREF: seg000:off_14725o
		call	sub_14747	; jumptable 000146DC case 0
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_146F7:				; CODE XREF: sub_146BB+21j
					; DATA XREF: seg000:off_14725o
		call	sub_12634	; jumptable 000146DC case 1
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_146FC:				; CODE XREF: sub_146BB+21j
					; DATA XREF: seg000:off_14725o
		call	sub_126A1	; jumptable 000146DC case 2
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_14701:				; CODE XREF: sub_146BB+21j
					; DATA XREF: seg000:off_14725o
		call	sub_127DE	; jumptable 000146DC case 3
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_14706:				; CODE XREF: sub_146BB+14j
		call	sub_1270C
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_1470B:				; CODE XREF: sub_146BB+29j
		call	sub_12776
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_14710:				; CODE XREF: sub_146BB+2Ej
		call	sub_11FBE
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_14715:				; CODE XREF: sub_146BB+33j
		call	sub_1207D
		jmp	short loc_14723
; ---------------------------------------------------------------------------

loc_1471A:				; CODE XREF: sub_146BB+1Dj
					; sub_146BB+35j
		mov	al, [bp+arg_0]	; jumptable 000146DC default case
		push	ax
		call	sub_1472D
		inc	sp
		inc	sp

loc_14723:				; CODE XREF: sub_146BB+3Aj
					; sub_146BB+3Fj ...
		pop	bp
		retn
sub_146BB	endp

; ---------------------------------------------------------------------------
off_14725	dw offset loc_146F2	; DATA XREF: sub_146BB+21r
		dw offset loc_146F7	; jump table for switch	statement
		dw offset loc_146FC
		dw offset loc_14701

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1472D	proc near		; CODE XREF: sub_146BB+63p
					; sub_14747+7Bp

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14739
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14739:				; CODE XREF: sub_1472D+7j
		mov	al, [bp+arg_0]
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_1472D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14747	proc near		; CODE XREF: sub_123B6+4Ap
					; sub_146BB:loc_146F2p

var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_14755
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14755:				; CODE XREF: sub_14747+9j
		cmp	byte_2891E, 8
		jnb	short loc_14762
		mov	[bp+var_2], 0
		jmp	short loc_14783
; ---------------------------------------------------------------------------

loc_14762:				; CODE XREF: sub_14747+13j
		mov	al, byte_2891E
		mov	ah, 0
		mov	es, word ptr dword_2A488+2
		add	ax, word ptr dword_2A488
		mov	bx, ax
		mov	al, es:[bx-8]
		mov	[bp+var_1], al
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+374Eh]
		mov	[bp+var_2], al

loc_14783:				; CODE XREF: sub_14747+19j
		mov	al, [bp+var_2]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_147BE
		cmp	byte_27D63, 0EBh ; 'Î'
		jbe	short loc_14799
		mov	[bp+var_2], 3Ch	; '<'
		jmp	short loc_147BE
; ---------------------------------------------------------------------------

loc_14799:				; CODE XREF: sub_14747+4Aj
		cmp	byte_27D63, 0D7h ; '◊'
		jbe	short loc_147A6
		mov	[bp+var_2], 3Dh	; '='
		jmp	short loc_147BE
; ---------------------------------------------------------------------------

loc_147A6:				; CODE XREF: sub_14747+57j
		cmp	byte_27D63, 0C3h ; '√'
		jbe	short loc_147B3
		mov	[bp+var_2], 3Eh	; '>'
		jmp	short loc_147BE
; ---------------------------------------------------------------------------

loc_147B3:				; CODE XREF: sub_14747+64j
		cmp	byte_27D63, 0AFh ; 'Ø'
		jbe	short loc_147BE
		mov	[bp+var_2], 3Fh	; '?'

loc_147BE:				; CODE XREF: sub_14747+43j
					; sub_14747+50j ...
		mov	al, [bp+var_2]
		push	ax
		call	sub_1472D
		inc	sp
		inc	sp
		mov	sp, bp
		pop	bp
		retn
sub_14747	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_147CB	proc near		; CODE XREF: sub_12965+2Bp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_147D7
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_147D7:				; CODE XREF: sub_147CB+7j
		test	byte_285F4, 4
		jz	short loc_147E3
		call	sub_12634
		jmp	short loc_14800
; ---------------------------------------------------------------------------

loc_147E3:				; CODE XREF: sub_147CB+11j
		test	byte_285F4, 8
		jz	short loc_147EF
		call	sub_126A1
		jmp	short loc_14800
; ---------------------------------------------------------------------------

loc_147EF:				; CODE XREF: sub_147CB+1Dj
		mov	al, byte_27CDC
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+377Eh]
		push	ax
		call	sub_146BB
		inc	sp
		inc	sp

loc_14800:				; CODE XREF: sub_147CB+16j
					; sub_147CB+22j
		pop	bp
		retn
sub_147CB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14802	proc near		; CODE XREF: sub_1253F+13p
					; sub_12965+37p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1480E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1480E:				; CODE XREF: sub_14802+7j
		cmp	word_26C4C, 4
		jz	short loc_14819
		mov	al, 3
		jmp	short loc_1481B
; ---------------------------------------------------------------------------

loc_14819:				; CODE XREF: sub_14802+11j
		mov	al, 28h	; '('

loc_1481B:				; CODE XREF: sub_14802+15j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	al, 27h	; '''
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		mov	al, 0Eh
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		call	sub_1238E
		pop	bp
		retn
sub_14802	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1483C	proc near		; CODE XREF: sub_12A78+E6p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14848
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14848:				; CODE XREF: sub_1483C+7j
		call	sub_12A0A
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx], 1
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	es:[bx+10h], dx
		mov	es:[bx+12h], ax
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 14h
		mov	word ptr es:[bx+1Ah], 19h
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_193B8
		add	sp, 4
		pop	bp
		retn
sub_1483C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_148A9	proc near		; CODE XREF: sub_131DE+82p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_148B5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_148B5:				; CODE XREF: sub_148A9+7j
		cmp	byte_28921, 0FFh
		jz	short loc_14904
		mov	al, byte_28921
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	byte_28915, al
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	dl, byte_28921
		sub	dl, al
		mov	byte_28914, dl
		mov	al, byte_28921
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+274h]
		add	ax, 7
		mov	word_27D6A, ax
		mov	al, byte_28921
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+276h]
		add	ax, 7
		mov	word_27D6C, ax

loc_14904:				; CODE XREF: sub_148A9+11j
		pop	bp
		retn
sub_148A9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14906	proc near		; CODE XREF: sub_125AD+44p
					; sub_131DE+7Fp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14912
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14912:				; CODE XREF: sub_14906+7j
		mov	al, byte_2891E
		mov	ah, 0
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	byte_2890C, al
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	dl, byte_2891E
		sub	dl, al
		mov	byte_2890E, dl
		mov	al, byte_2891E
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+274h]
		add	ax, 7
		mov	word_29640, ax
		mov	al, byte_2891E
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+276h]
		add	ax, 0Fh
		mov	word_29642, ax
		pop	bp
		retn
sub_14906	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1495C	proc near		; CODE XREF: sub_11EC2+2Dp
					; sub_11F3E+2Dp ...

arg_0		= byte ptr  4
arg_2		= byte ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14968
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14968:				; CODE XREF: sub_1495C+7j
		inc	byte_2890D
		mov	al, byte_2890D
		cmp	al, [bp+arg_2]
		jnz	short loc_14986
		push	[bp+arg_6]
		push	[bp+arg_4]
		mov	al, [bp+arg_0]
		push	ax
		call	sub_14995
		add	sp, 6
		jmp	short loc_14993
; ---------------------------------------------------------------------------

loc_14986:				; CODE XREF: sub_1495C+16j
		mov	al, byte_2890D
		cmp	al, [bp+arg_2]
		jbe	short loc_14993
		mov	byte_2890D, 0

loc_14993:				; CODE XREF: sub_1495C+28j
					; sub_1495C+30j
		pop	bp
		retn
sub_1495C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14995	proc near		; CODE XREF: sub_1495C+22p

arg_0		= byte ptr  4
arg_2		= dword	ptr  6

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_149A1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_149A1:				; CODE XREF: sub_14995+7j
		mov	byte_2890D, 0
		mov	al, byte_2A48C
		mov	ah, 0
		inc	ax
		mov	dl, [bp+arg_0]
		mov	dh, 0
		cmp	ax, dx
		jge	short loc_149BE
		inc	byte_2A48C
		mov	al, byte_2A48C
		jmp	short loc_149C3
; ---------------------------------------------------------------------------

loc_149BE:				; CODE XREF: sub_14995+1Ej
		mov	al, 0
		mov	byte_2A48C, al

loc_149C3:				; CODE XREF: sub_14995+27j
		mov	al, byte_2A48C
		mov	ah, 0
		shl	ax, 1
		les	bx, [bp+arg_2]
		add	bx, ax
		mov	ax, es:[bx]
		mov	word_285FA, ax
		pop	bp
		retn
sub_14995	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_149D7	proc near		; CODE XREF: sub_10C18+12Ep

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_149E5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_149E5:				; CODE XREF: sub_149D7+9j
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx], 0
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+10h], offset unk_29A44
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 14h
		mov	word ptr es:[bx+1Ah], 1
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 1
		push	seg_20926
		push	word_20924
		call	sub_193B8
		add	sp, 4
		xor	ax, ax
		push	ax
		call	sub_19814
		inc	sp
		inc	sp
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	ax, 7
		push	ax
		xor	ax, ax
		push	ax
		mov	al, 7
		push	ax
		push	word_2A486
		push	word_2A484
		call	sub_10816
		add	sp, 0Ah
		call	sub_16130
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_19814
		inc	sp
		inc	sp

loc_14A79:				; CODE XREF: sub_149D7+ACj
		mov	al, 19h
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jnz	short loc_14A79
		jmp	short loc_14AD2
; ---------------------------------------------------------------------------

loc_14A87:				; CODE XREF: sub_149D7+113j
		mov	al, 1Dh
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_14AD2
		mov	al, 21h	; '!'
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jz	short loc_14AD2
		mov	[bp+var_1], 1
		jmp	short loc_14ABC
; ---------------------------------------------------------------------------

loc_14AA5:				; CODE XREF: sub_149D7+F9j
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		mov	byte ptr es:[bx], 1
		inc	[bp+var_1]

loc_14ABC:				; CODE XREF: sub_149D7+CCj
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	dx, 9
		imul	dx
		les	bx, dword_285F6
		add	bx, ax
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_14AA5

loc_14AD2:				; CODE XREF: sub_149D7+AEj
					; sub_149D7+BAj ...
		mov	al, 19h
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		cbw
		or	ax, ax
		jnz	short loc_14AEC
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		cbw
		or	ax, ax
		jz	short loc_14A87

loc_14AEC:				; CODE XREF: sub_149D7+106j
					; sub_149D7+11Fj ...
		mov	al, 19h
		push	ax
		call	sub_17AB4
		inc	sp
		inc	sp
		or	al, al
		jnz	short loc_14AEC
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		or	al, al
		jnz	short loc_14AEC
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+2], offset unk_29A44
		mov	word ptr es:[bx+4], ds
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 1
		mov	word ptr es:[bx+0Eh], 0
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		mov	sp, bp
		pop	bp
		retn
sub_149D7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14B4E	proc near		; CODE XREF: sub_10C18+9Fp
					; sub_10C18+BDp ...
		push	bp
		mov	bp, sp
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_14B5C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14B5C:				; CODE XREF: sub_14B4E+9j
		cmp	byte_28921, 0FFh
		jz	short loc_14BC2
		les	bx, dword_29F4E
		mov	di, es:[bx+14h]
		mov	si, es:[bx+16h]
		mov	ax, word_27D6A
		sub	ax, di
		mov	cl, 4
		sar	ax, cl
		dec	ax
		mov	word_2A47A, ax
		mov	ax, word_27D6C
		sub	ax, si
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	word_2A47C, ax
		cmp	word_2A47A, 0
		jge	short loc_14B99
		mov	word_2A47A, 0
		jmp	short loc_14BA6
; ---------------------------------------------------------------------------

loc_14B99:				; CODE XREF: sub_14B4E+41j
		cmp	word_2A47A, 12h
		jle	short loc_14BA6
		mov	word_2A47A, 12h

loc_14BA6:				; CODE XREF: sub_14B4E+49j
					; sub_14B4E+50j
		cmp	word_2A47C, 0
		jge	short loc_14BB5
		mov	word_2A47C, 0
		jmp	short loc_14BC2
; ---------------------------------------------------------------------------

loc_14BB5:				; CODE XREF: sub_14B4E+5Dj
		cmp	word_2A47C, 16h
		jle	short loc_14BC2
		mov	word_2A47C, 16h

loc_14BC2:				; CODE XREF: sub_14B4E+13j
					; sub_14B4E+65j ...
		pop	di
		pop	si
		pop	bp
		retn
sub_14B4E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14BC6	proc near		; CODE XREF: sub_10C18+6Dp
					; sub_14DFA+2Ep ...

var_4		= dword	ptr -4
arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 4
		cmp	word_26EFC, sp
		ja	short loc_14BD5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14BD5:				; CODE XREF: sub_14BC6+Aj
		mov	al, [bp+arg_0]
		mov	byte_28912, al
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+2522h]
		mov	dx, [bx+2520h]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		les	bx, [bp+var_4]
		mov	al, es:[bx]
		mov	byte_2A560, al
		mov	al, es:[bx+1]
		mov	byte_2A0DF, al
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		mov	word ptr dword_2A46A, dx
		mov	word ptr dword_2A46A+2,	ax
		mov	sp, bp
		pop	bp
		retn
sub_14BC6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14C14	proc near		; CODE XREF: sub_10C18+D1p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14C20
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14C20:				; CODE XREF: sub_14C14+7j
		mov	al, byte_285F3
		xor	al, 1
		mov	byte_285F3, al
		cmp	byte_285F3, 0
		jz	short loc_14C97
		cmp	byte_28921, 0FFh
		jz	short loc_14C97
		les	bx, dword_2A46A
		mov	ax, es:[bx]
		mov	word_28910, ax
		cmp	byte_2A0DF, 0
		jz	short loc_14C5B
		mov	ax, es:[bx+2]
		neg	ax
		mov	dx, word_27D6A
		add	dx, ax
		mov	word_27D6A, dx
		mov	ax, dx
		jmp	short loc_14C6A
; ---------------------------------------------------------------------------

loc_14C5B:				; CODE XREF: sub_14C14+31j
		les	bx, dword_2A46A
		mov	ax, es:[bx+2]
		add	word_27D6A, ax
		mov	ax, word_27D6A

loc_14C6A:				; CODE XREF: sub_14C14+45j
		les	bx, dword_2A46A
		mov	ax, es:[bx+4]
		add	word_27D6C, ax
		add	word ptr dword_2A46A, 6
		mov	al, byte_2A560
		add	al, 0FFh
		mov	byte_2A560, al
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14C90
		mov	al, 0
		mov	byte_28913, al
		jmp	short loc_14C97
; ---------------------------------------------------------------------------

loc_14C90:				; CODE XREF: sub_14C14+73j
		inc	byte_28913
		mov	al, byte_28913

loc_14C97:				; CODE XREF: sub_14C14+19j
					; sub_14C14+20j ...
		pop	bp
		retn
sub_14C14	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14C99	proc near		; CODE XREF: sub_10C18+119p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14CA5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14CA5:				; CODE XREF: sub_14C99+7j
		cmp	byte_285F3, 0
		jnz	short loc_14CAF
		jmp	loc_14DBD
; ---------------------------------------------------------------------------

loc_14CAF:				; CODE XREF: sub_14C99+11j
		cmp	byte_28921, 0FFh
		jnz	short loc_14CB9
		jmp	loc_14DBD
; ---------------------------------------------------------------------------

loc_14CB9:				; CODE XREF: sub_14C99+1Bj
		cmp	byte_2A560, 0
		jz	short loc_14CC6
		call	sub_15003
		jmp	loc_14DBD
; ---------------------------------------------------------------------------

loc_14CC6:				; CODE XREF: sub_14C99+25j
		mov	al, 1
		mov	byte_2A562, al
		mov	byte_2A492, al
		mov	byte_2A491, al
		mov	byte_2A490, al
		cmp	byte_28921, 8
		jb	short loc_14CF9
		mov	al, byte_28921
		mov	ah, 0
		mov	es, word ptr dword_2A488+2
		add	ax, word ptr dword_2A488
		mov	bx, ax
		mov	al, es:[bx-8]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14CF9
		mov	byte_2A490, 0

loc_14CF9:				; CODE XREF: sub_14C99+40j
					; sub_14C99+59j
		cmp	byte_28921, 28h	; '('
		jnb	short loc_14D19
		mov	al, byte_28921
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14D19
		mov	byte_2A491, 0

loc_14D19:				; CODE XREF: sub_14C99+65j
					; sub_14C99+79j
		cmp	byte_28914, 0
		jz	short loc_14D51
		mov	al, byte_28921
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+2Fh]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14D51
		mov	byte_2A492, 0
		mov	al, byte_28921
		mov	ah, 0
		add	ax, word ptr dword_2A488
		mov	bx, ax
		cmp	byte ptr es:[bx-1], 0Bh
		jnz	short loc_14D51
		mov	byte_2A492, 1

loc_14D51:				; CODE XREF: sub_14C99+85j
					; sub_14C99+9Aj ...
		cmp	byte_28914, 7
		jz	short loc_14D89
		mov	al, byte_28921
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14D89
		mov	byte_2A562, 0
		mov	al, byte_28921
		mov	ah, 0
		add	ax, word ptr dword_2A488
		mov	bx, ax
		cmp	byte ptr es:[bx+1], 0Bh
		jnz	short loc_14D89
		mov	byte_2A562, 1

loc_14D89:				; CODE XREF: sub_14C99+BDj
					; sub_14C99+D2j ...
		mov	al, byte_2A490
		mov	ah, 0
		mov	dl, byte_2A491
		mov	dh, 0
		add	ax, dx
		mov	dl, byte_2A492
		mov	dh, 0
		add	ax, dx
		mov	dl, byte_2A562
		mov	dh, 0
		add	ax, dx
		cmp	ax, 4
		jnz	short loc_14DB0
		call	sub_14FD3
		jmp	short loc_14DBD
; ---------------------------------------------------------------------------

loc_14DB0:				; CODE XREF: sub_14C99+110j
		mov	al, byte_28912
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		call	off_20C20[bx]

loc_14DBD:				; CODE XREF: sub_14C99+13j
					; sub_14C99+1Dj ...
		pop	bp
		retn
sub_14C99	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14DBF	proc near		; CODE XREF: sub_14C99+120p
					; sub_15003+1Cp
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14DCB
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14DCB:				; CODE XREF: sub_14DBF+7j
		mov	al, byte_2A490
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14DD9
		call	sub_14DFA
		jmp	short loc_14DF8
; ---------------------------------------------------------------------------

loc_14DD9:				; CODE XREF: sub_14DBF+13j
		mov	al, byte_2A562
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14DE7
		call	sub_14F89
		jmp	short loc_14DF8
; ---------------------------------------------------------------------------

loc_14DE7:				; CODE XREF: sub_14DBF+21j
		mov	al, byte_2A492
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14DF5
		call	sub_14F04
		jmp	short loc_14DF8
; ---------------------------------------------------------------------------

loc_14DF5:				; CODE XREF: sub_14DBF+2Fj
		call	sub_14E7F

loc_14DF8:				; CODE XREF: sub_14DBF+18j
					; sub_14DBF+26j ...
		pop	bp
		retn
sub_14DBF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14DFA	proc near		; CODE XREF: sub_14DBF+15p
					; sub_14E44:loc_14E7Ap	...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14E06
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14E06:				; CODE XREF: sub_14DFA+7j
		mov	al, byte_27D63
		cmp	al, byte_27CD0
		jb	short loc_14E13
		mov	al, 1
		jmp	short loc_14E3C
; ---------------------------------------------------------------------------

loc_14E13:				; CODE XREF: sub_14DFA+13j
		test	byte_27D63, 1
		jz	short loc_14E2F
		cmp	byte_2A492, 0
		jz	short loc_14E25
		mov	al, 1
		jmp	short loc_14E3C
; ---------------------------------------------------------------------------

loc_14E25:				; CODE XREF: sub_14DFA+25j
		mov	al, 3
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		jmp	short loc_14E42
; ---------------------------------------------------------------------------

loc_14E2F:				; CODE XREF: sub_14DFA+1Ej
		cmp	byte_2A562, 0
		jz	short loc_14E3A
		mov	al, 1
		jmp	short loc_14E3C
; ---------------------------------------------------------------------------

loc_14E3A:				; CODE XREF: sub_14DFA+3Aj
		mov	al, 4

loc_14E3C:				; CODE XREF: sub_14DFA+17j
					; sub_14DFA+29j ...
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp

loc_14E42:				; CODE XREF: sub_14DFA+33j
		pop	bp
		retn
sub_14DFA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14E44	proc near		; CODE XREF: sub_14C99+120p
					; sub_15003+1Cp
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14E50
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14E50:				; CODE XREF: sub_14E44+7j
		mov	al, byte_2A491
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14E5E
		call	sub_14E7F
		jmp	short loc_14E7D
; ---------------------------------------------------------------------------

loc_14E5E:				; CODE XREF: sub_14E44+13j
		mov	al, byte_2A492
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14E6C
		call	sub_14F04
		jmp	short loc_14E7D
; ---------------------------------------------------------------------------

loc_14E6C:				; CODE XREF: sub_14E44+21j
		mov	al, byte_2A562
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14E7A
		call	sub_14F89
		jmp	short loc_14E7D
; ---------------------------------------------------------------------------

loc_14E7A:				; CODE XREF: sub_14E44+2Fj
		call	sub_14DFA

loc_14E7D:				; CODE XREF: sub_14E44+18j
					; sub_14E44+26j ...
		pop	bp
		retn
sub_14E44	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14E7F	proc near		; CODE XREF: sub_14DBF:loc_14DF5p
					; sub_14E44+15p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14E8B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14E8B:				; CODE XREF: sub_14E7F+7j
		mov	al, byte_27D63
		cmp	al, byte_27CD0
		jb	short loc_14E98
		mov	al, 2
		jmp	short loc_14EC1
; ---------------------------------------------------------------------------

loc_14E98:				; CODE XREF: sub_14E7F+13j
		test	byte_27D63, 1
		jz	short loc_14EB4
		cmp	byte_2A492, 0
		jz	short loc_14EAA
		mov	al, 2
		jmp	short loc_14EC1
; ---------------------------------------------------------------------------

loc_14EAA:				; CODE XREF: sub_14E7F+25j
		mov	al, 3
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		jmp	short loc_14EC7
; ---------------------------------------------------------------------------

loc_14EB4:				; CODE XREF: sub_14E7F+1Ej
		cmp	byte_2A562, 0
		jz	short loc_14EBF
		mov	al, 2
		jmp	short loc_14EC1
; ---------------------------------------------------------------------------

loc_14EBF:				; CODE XREF: sub_14E7F+3Aj
		mov	al, 4

loc_14EC1:				; CODE XREF: sub_14E7F+17j
					; sub_14E7F+29j ...
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp

loc_14EC7:				; CODE XREF: sub_14E7F+33j
		pop	bp
		retn
sub_14E7F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14EC9	proc near		; CODE XREF: sub_14C99+120p
					; sub_15003+1Cp
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14ED5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14ED5:				; CODE XREF: sub_14EC9+7j
		mov	al, byte_2A492
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14EE3
		call	sub_14F04
		jmp	short loc_14F02
; ---------------------------------------------------------------------------

loc_14EE3:				; CODE XREF: sub_14EC9+13j
		mov	al, byte_2A490
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14EF1
		call	sub_14DFA
		jmp	short loc_14F02
; ---------------------------------------------------------------------------

loc_14EF1:				; CODE XREF: sub_14EC9+21j
		mov	al, byte_2A491
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14EFF
		call	sub_14E7F
		jmp	short loc_14F02
; ---------------------------------------------------------------------------

loc_14EFF:				; CODE XREF: sub_14EC9+2Fj
		call	sub_14F89

loc_14F02:				; CODE XREF: sub_14EC9+18j
					; sub_14EC9+26j ...
		pop	bp
		retn
sub_14EC9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14F04	proc near		; CODE XREF: sub_14DBF+31p
					; sub_14E44+23p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14F10
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14F10:				; CODE XREF: sub_14F04+7j
		mov	al, byte_27D63
		cmp	al, byte_27CD0
		jb	short loc_14F1D
		mov	al, 3
		jmp	short loc_14F46
; ---------------------------------------------------------------------------

loc_14F1D:				; CODE XREF: sub_14F04+13j
		test	byte_27D63, 1
		jz	short loc_14F39
		cmp	byte_2A490, 0
		jz	short loc_14F2F
		mov	al, 3
		jmp	short loc_14F46
; ---------------------------------------------------------------------------

loc_14F2F:				; CODE XREF: sub_14F04+25j
		mov	al, 1
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		jmp	short loc_14F4C
; ---------------------------------------------------------------------------

loc_14F39:				; CODE XREF: sub_14F04+1Ej
		cmp	byte_2A491, 0
		jz	short loc_14F44
		mov	al, 3
		jmp	short loc_14F46
; ---------------------------------------------------------------------------

loc_14F44:				; CODE XREF: sub_14F04+3Aj
		mov	al, 2

loc_14F46:				; CODE XREF: sub_14F04+17j
					; sub_14F04+29j ...
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp

loc_14F4C:				; CODE XREF: sub_14F04+33j
		pop	bp
		retn
sub_14F04	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14F4E	proc near		; CODE XREF: sub_14C99+120p
					; sub_15003+1Cp
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14F5A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14F5A:				; CODE XREF: sub_14F4E+7j
		mov	al, byte_2A562
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14F68
		call	sub_14F89
		jmp	short loc_14F87
; ---------------------------------------------------------------------------

loc_14F68:				; CODE XREF: sub_14F4E+13j
		mov	al, byte_2A491
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14F76
		call	sub_14E7F
		jmp	short loc_14F87
; ---------------------------------------------------------------------------

loc_14F76:				; CODE XREF: sub_14F4E+21j
		mov	al, byte_2A490
		mov	ah, 0
		or	ax, ax
		jnz	short loc_14F84
		call	sub_14DFA
		jmp	short loc_14F87
; ---------------------------------------------------------------------------

loc_14F84:				; CODE XREF: sub_14F4E+2Fj
		call	sub_14F04

loc_14F87:				; CODE XREF: sub_14F4E+18j
					; sub_14F4E+26j ...
		pop	bp
		retn
sub_14F4E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14F89	proc near		; CODE XREF: sub_14DBF+23p
					; sub_14E44+31p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_14F95
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14F95:				; CODE XREF: sub_14F89+7j
		mov	al, byte_27D63
		cmp	al, byte_27CD0
		jb	short loc_14FA2
		mov	al, 4
		jmp	short loc_14FCB
; ---------------------------------------------------------------------------

loc_14FA2:				; CODE XREF: sub_14F89+13j
		test	byte_27D63, 1
		jz	short loc_14FBE
		cmp	byte_2A490, 0
		jz	short loc_14FB4
		mov	al, 4
		jmp	short loc_14FCB
; ---------------------------------------------------------------------------

loc_14FB4:				; CODE XREF: sub_14F89+25j
		mov	al, 1
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		jmp	short loc_14FD1
; ---------------------------------------------------------------------------

loc_14FBE:				; CODE XREF: sub_14F89+1Ej
		cmp	byte_2A491, 0
		jz	short loc_14FC9
		mov	al, 4
		jmp	short loc_14FCB
; ---------------------------------------------------------------------------

loc_14FC9:				; CODE XREF: sub_14F89+3Aj
		mov	al, 2

loc_14FCB:				; CODE XREF: sub_14F89+17j
					; sub_14F89+29j ...
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp

loc_14FD1:				; CODE XREF: sub_14F89+33j
		pop	bp
		retn
sub_14F89	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_14FD3	proc near		; CODE XREF: sub_14C99+112p

var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_14FE1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_14FE1:				; CODE XREF: sub_14FD3+9j
		mov	al, byte_27D63
		and	al, 3
		mov	[bp+var_2], al
		call	sub_193B1
		mov	byte_27D63, al
		and	al, 1
		add	al, [bp+var_2]
		add	al, 5
		mov	[bp+var_1], al
		push	ax
		call	sub_14BC6
		inc	sp
		inc	sp
		mov	sp, bp
		pop	bp
		retn
sub_14FD3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15003	proc near		; CODE XREF: sub_14C99+27p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1500F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1500F:				; CODE XREF: sub_15003+7j
		cmp	byte_28913, 5
		jnz	short loc_15023
		mov	al, byte_28912
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		call	off_20C0C[bx]

loc_15023:				; CODE XREF: sub_15003+11j
		pop	bp
		retn
sub_15003	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15025	proc near		; CODE XREF: sub_15003+1Cp
					; DATA XREF: dseg:085Eo
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_15031
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15031:				; CODE XREF: sub_15025+7j
		mov	al, byte_28921
		add	al, 0F8h ; '¯'
		mov	byte_28921, al
		dec	byte_28915
		pop	bp
		retn
sub_15025	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1503F	proc near		; CODE XREF: sub_15003+1Cp
					; DATA XREF: dseg:0860o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1504B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1504B:				; CODE XREF: sub_1503F+7j
		mov	al, byte_28921
		add	al, 8
		mov	byte_28921, al
		inc	byte_28915
		pop	bp
		retn
sub_1503F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15059	proc near		; CODE XREF: sub_15003+1Cp
					; DATA XREF: dseg:0862o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_15065
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15065:				; CODE XREF: sub_15059+7j
		dec	byte_28921
		dec	byte_28914
		pop	bp
		retn
sub_15059	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1506F	proc near		; CODE XREF: sub_15003+1Cp
					; DATA XREF: dseg:0864o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1507B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1507B:				; CODE XREF: sub_1506F+7j
		inc	byte_28921
		inc	byte_28914
		pop	bp
		retn
sub_1506F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15085	proc near		; CODE XREF: sub_10C18+EFp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_15091
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15091:				; CODE XREF: sub_15085+7j
		mov	al, byte_2A47E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_150BE
		mov	ax, word_29640
		add	ax, 0FFFBh
		mov	word_20BFC, ax
		mov	ax, word_29640
		add	ax, 6
		mov	word_20BFE, ax
		mov	ax, word_29642
		add	ax, 0FFFBh
		mov	word_20C00, ax
		mov	ax, word_29642
		add	ax, 5
		mov	word_20C02, ax

loc_150BE:				; CODE XREF: sub_15085+13j
		pop	bp
		retn
sub_15085	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_150C0	proc near		; CODE XREF: sub_10C18+F2p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_150CC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_150CC:				; CODE XREF: sub_150C0+7j
		mov	al, byte_2A47E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_150F9
		mov	ax, word_27D6A
		add	ax, 0FFFBh
		mov	word_20C04, ax
		mov	ax, word_27D6A
		add	ax, 6
		mov	word_20C06, ax
		mov	ax, word_27D6C
		add	ax, 0FFFBh
		mov	word_20C08, ax
		mov	ax, word_27D6C
		add	ax, 5
		mov	word_20C0A, ax

loc_150F9:				; CODE XREF: sub_150C0+13j
		pop	bp
		retn
sub_150C0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_150FB	proc near		; CODE XREF: sub_10C18+11Cp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_15107
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15107:				; CODE XREF: sub_150FB+7j
		cmp	byte_28921, 0FFh
		jz	short loc_1517F
		mov	al, byte_2A47E
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1517F
		mov	al, byte_2891D
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1517F
		cmp	byte_27CDC, 30h	; '0'
		jz	short loc_1517F
		mov	ax, word_20C04
		cmp	ax, word_20BFE
		jle	short loc_15137
		mov	byte_2A55A, 0
		jmp	short loc_1517F
; ---------------------------------------------------------------------------

loc_15137:				; CODE XREF: sub_150FB+33j
		mov	ax, word_20BFC
		cmp	ax, word_20C06
		jle	short loc_15147
		mov	byte_2A55A, 0
		jmp	short loc_1517F
; ---------------------------------------------------------------------------

loc_15147:				; CODE XREF: sub_150FB+43j
		mov	ax, word_20C08
		cmp	ax, word_20C02
		jle	short loc_15157
		mov	byte_2A55A, 0
		jmp	short loc_1517F
; ---------------------------------------------------------------------------

loc_15157:				; CODE XREF: sub_150FB+53j
		mov	ax, word_20C00
		cmp	ax, word_20C0A
		jle	short loc_15167
		mov	byte_2A55A, 0
		jmp	short loc_1517F
; ---------------------------------------------------------------------------

loc_15167:				; CODE XREF: sub_150FB+63j
		mov	byte_2A55A, 1
		cmp	word_26C4C, 4
		jz	short loc_15177
		mov	al, 3
		jmp	short loc_15179
; ---------------------------------------------------------------------------

loc_15177:				; CODE XREF: sub_150FB+76j
		mov	al, 0Dh

loc_15179:				; CODE XREF: sub_150FB+7Aj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_1517F:				; CODE XREF: sub_150FB+11j
					; sub_150FB+1Aj ...
		pop	bp
		retn
sub_150FB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15181	proc near		; CODE XREF: sub_10C18+79p
					; sub_135A5+1C7p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1518D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1518D:				; CODE XREF: sub_15181+7j
		les	bx, dword ptr word_20924
		mov	ax, [bp+arg_0]
		mov	es:[bx], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	ax, [bp+arg_2]
		mov	es:[bx+0Eh], ax
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_193C8
		add	sp, 4
		pop	bp
		retn
sub_15181	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_151D8	proc near		; CODE XREF: sub_12EF8+ACp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_151E4
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_151E4:				; CODE XREF: sub_151D8+7j
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+10h], offset unk_2A0EA
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 2
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 3
		mov	word ptr es:[bx+20h], 2
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+6], 4
		mov	word ptr es:[bx+10h], offset unk_29F5F
		mov	word ptr es:[bx+12h], ds
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 8
		mov	word ptr es:[bx+10h], offset unk_2A26A
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+18h], 1
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 4
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+8], 3
		mov	word ptr es:[bx+10h], offset unk_2A36A
		mov	word ptr es:[bx+12h], ds
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0Dh
		mov	word ptr es:[bx+10h], offset unk_28F38
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+18h], 6
		mov	word ptr es:[bx+1Ah], 2
		mov	word ptr es:[bx+1Eh], 6
		mov	word ptr es:[bx+20h], 2
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+8], 11h
		mov	word ptr es:[bx+10h], offset unk_285FE
		mov	word ptr es:[bx+12h], ds
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+8], 15h
		mov	word ptr es:[bx+10h], offset unk_28932
		mov	word ptr es:[bx+12h], ds
		push	seg_20926
		push	word_20924
		call	sub_180AC
		add	sp, 4
		pop	bp
		retn
sub_151D8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1535E	proc near		; CODE XREF: sub_10258+11p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1536A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1536A:				; CODE XREF: sub_1535E+7j
		les	bx, dword ptr word_20924
		mov	byte ptr es:[bx+22h], 0
		mov	byte ptr es:[bx+23h], 0
		mov	byte ptr es:[bx+24h], 0
		mov	byte ptr es:[bx+25h], 0
		les	bx, dword ptr word_20C68
		mov	word ptr es:[bx], 1
		mov	word ptr es:[bx+10h], offset unk_2923D
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 4
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Ch], 0
		les	bx, dword ptr word_20C9C
		mov	word ptr es:[bx], 1
		mov	word ptr es:[bx+10h], offset unk_29644
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 4
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Ch], 0
		les	bx, dword ptr word_20C6C
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 1
		mov	word ptr es:[bx+0Ch], 4
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 4
		les	bx, dword ptr word_20C70
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 3
		mov	word ptr es:[bx+0Ch], 2
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 2
		mov	word ptr es:[bx+20h], 2
		les	bx, dword ptr word_20C74
		mov	word ptr es:[bx+2], offset unk_2923D
		mov	word ptr es:[bx+4], ds
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 4
		mov	word ptr es:[bx+0Ch], 4
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Ch], 0
		les	bx, dword ptr word_20C98
		mov	word ptr es:[bx+2], offset unk_29644
		mov	word ptr es:[bx+4], ds
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 4
		mov	word ptr es:[bx+0Ch], 4
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Ch], 0
		les	bx, dword ptr word_20C78
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+10h], offset unk_28C38
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 4
		les	bx, dword ptr word_20C7C
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ch], 4
		mov	word ptr es:[bx+10h], offset unk_28C38
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 4
		les	bx, dword ptr word_20C80
		mov	word ptr es:[bx], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 1
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 4
		les	bx, dword ptr word_20C84
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Eh], 2
		mov	word ptr es:[bx+20h], 2
		les	bx, off_20C88
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+10h], offset unk_28C38
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 3
		mov	word ptr es:[bx+20h], 2
		les	bx, off_20C8C
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 3
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+10h], offset unk_28C38
		mov	word ptr es:[bx+12h], ds
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 4
		mov	word ptr es:[bx+1Eh], 3
		mov	word ptr es:[bx+20h], 2
		les	bx, dword ptr word_20C90
		mov	word ptr es:[bx], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+18h], 3
		mov	word ptr es:[bx+1Ah], 2
		mov	word ptr es:[bx+1Eh], 3
		mov	word ptr es:[bx+20h], 2
		les	bx, dword ptr word_20C94
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+20h], 2
		pop	bp
		retn
sub_1535E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15681	proc near		; CODE XREF: sub_10C18+36p
					; sub_10C18+153p ...

var_5		= byte ptr -5
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		cmp	word_26EFC, sp
		ja	short loc_15692
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15692:				; CODE XREF: sub_15681+Cj
		push	ds
		mov	ax, 928h
		push	ax
		call	sub_17307
		add	sp, 4
		mov	ax, word_27CD8
		mov	dx, word_27CD6
		mov	word_2892E, dx
		mov	word_28930, ax
		mov	ax, 4
		push	ax
		mov	ax, 3
		push	ax
		call	sub_1736F
		add	sp, 4
		mov	si, ax
		xor	ax, ax
		push	ax
		push	word_20CFE
		push	word_20CFC
		push	word_28930
		push	word_2892E
		push	si
		call	sub_1745E
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		xor	ax, ax
		mov	dx, 7D63h
		push	ax
		push	dx
		push	[bp+var_2]
		push	[bp+var_4]
		push	word_28930
		push	word_2892E
		call	sub_17B5A
		add	sp, 0Ch
		cmp	word_257CD, 1
		jnz	short loc_1573A
		mov	ax, word_28930
		mov	dx, word_2892E
		mov	word ptr dword_29F46, dx
		mov	word ptr dword_29F46+2,	ax
		mov	[bp+var_5], 0
		jmp	short loc_15734
; ---------------------------------------------------------------------------

loc_15717:				; CODE XREF: sub_15681+B7j
		mov	al, [bp+var_5]
		mov	ah, 0
		les	bx, dword_29F46
		add	bx, ax
		mov	al, [bp+var_5]
		mov	ah, 0
		mov	di, ax
		mov	al, [di+71Eh]
		mov	es:[bx+23h], al
		inc	[bp+var_5]

loc_15734:				; CODE XREF: sub_15681+94j
		cmp	[bp+var_5], 10h
		jb	short loc_15717

loc_1573A:				; CODE XREF: sub_15681+80j
		call	sub_13467
		mov	ax, word_28930
		mov	dx, word_2892E
		add	dx, 63h	; 'c'
		les	bx, dword ptr word_20924
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	word ptr es:[bx+6], 0
		mov	word ptr es:[bx+8], 0
		mov	word ptr es:[bx+0Ah], 14h
		mov	word ptr es:[bx+0Ch], 19h
		mov	word ptr es:[bx+0Eh], 1
		mov	word ptr es:[bx+14h], 0
		mov	word ptr es:[bx+16h], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 14h
		mov	word ptr es:[bx+20h], 19h
		push	seg_20926
		push	word_20924
		call	sub_180BC
		add	sp, 4
		xor	ax, ax
		push	ax
		push	word_28930
		push	word_2892E
		call	sub_17B93
		add	sp, 6
		xor	ax, ax
		push	ax
		call	sub_17BCA
		inc	sp
		inc	sp
		mov	ax, 1
		push	ax
		call	sub_17BDD
		inc	sp
		inc	sp
		call	sub_19864
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+0Eh], 0
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 2
		call	sub_157E1
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_15681	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_157E1	proc near		; CODE XREF: sub_15681+157p

var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= byte ptr -8
var_7		= byte ptr -7
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		cmp	word_26EFC, sp
		ja	short loc_157F0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_157F0:				; CODE XREF: sub_157E1+Aj
		xor	ax, ax
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	[bp+var_9], 0
		mov	[bp+var_1], 0
		jmp	loc_159A9
; ---------------------------------------------------------------------------

loc_15803:				; CODE XREF: sub_157E1+1CEj
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 8F0h
		mov	word ptr dword_28924, ax
		mov	word ptr dword_28924+2,	ds
		les	bx, dword_28924
		mov	ax, es:[bx+6]
		mov	dx, es:[bx+4]
		cmp	ax, word_2A486
		jbe	short loc_1582D
		jmp	loc_15901
; ---------------------------------------------------------------------------

loc_1582D:				; CODE XREF: sub_157E1+47j
		jb	short loc_15838
		cmp	dx, word_2A484
		jb	short loc_15838
		jmp	loc_15901
; ---------------------------------------------------------------------------

loc_15838:				; CODE XREF: sub_157E1:loc_1582Dj
					; sub_157E1+52j
		mov	al, [bp+var_9]
		mov	ah, 0
		or	ax, ax
		jz	short loc_15844
		jmp	loc_15901
; ---------------------------------------------------------------------------

loc_15844:				; CODE XREF: sub_157E1+5Ej
		mov	[bp+var_9], 1
		mov	al, [bp+var_1]
		mov	[bp+var_2], al
		mov	ax, seg_20CD2
		mov	dx, word_20CD0
		mov	[bp+var_6], dx
		mov	[bp+var_4], ax
		mov	[bp+var_A], 6
		jmp	short loc_158B4
; ---------------------------------------------------------------------------

loc_15861:				; CODE XREF: sub_157E1+D9j
		mov	al, [bp+var_A]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+8EAh]
		mov	dx, [bx+8E8h]
		mov	bl, [bp+var_A]
		mov	bh, 0
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		mov	[bx+8F0h], dx
		mov	[bx+8F2h], ax
		mov	al, [bp+var_A]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+8EEh]
		mov	dx, [bx+8ECh]
		mov	bl, [bp+var_A]
		mov	bh, 0
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		mov	[bx+8F4h], dx
		mov	[bx+8F6h], ax
		dec	[bp+var_A]

loc_158B4:				; CODE XREF: sub_157E1+7Ej
		mov	al, [bp+var_A]
		cmp	al, [bp+var_1]
		ja	short loc_15861
		les	bx, dword_28924
		mov	ax, [bp+var_4]
		mov	dx, [bp+var_6]
		mov	es:[bx], dx
		mov	es:[bx+2], ax
		mov	[bp+var_A], 0
		jmp	short loc_158E8
; ---------------------------------------------------------------------------

loc_158D3:				; CODE XREF: sub_157E1+10Bj
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_A]
		mov	ah, 0
		add	bx, ax
		mov	byte ptr es:[bx], 41h ;	'A'
		inc	[bp+var_A]

loc_158E8:				; CODE XREF: sub_157E1+F0j
		cmp	[bp+var_A], 8
		jb	short loc_158D3
		les	bx, dword_28924
		mov	ax, word_2A486
		mov	dx, word_2A484
		mov	es:[bx+4], dx
		mov	es:[bx+6], ax

loc_15901:				; CODE XREF: sub_157E1+49j
					; sub_157E1+54j ...
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		add	ax, 41h	; 'A'
		les	bx, dword_28C34
		mov	es:[bx+2], ax
		mov	[bp+var_7], 0
		jmp	short loc_1597A
; ---------------------------------------------------------------------------

loc_1591B:				; CODE XREF: sub_157E1+19Dj
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_7]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx]
		mov	[bp+var_8], al
		cmp	al, 2Eh	; '.'
		jnz	short loc_1594A
		cmp	[bp+var_9], 0
		jz	short loc_15945
		mov	al, [bp+var_2]
		cmp	al, [bp+var_1]
		jnz	short loc_15945
		mov	al, 5Bh	; '['
		jmp	short loc_15947
; ---------------------------------------------------------------------------

loc_15945:				; CODE XREF: sub_157E1+156j
					; sub_157E1+15Ej
		mov	al, 20h	; ' '

loc_15947:				; CODE XREF: sub_157E1+162j
		mov	[bp+var_8], al

loc_1594A:				; CODE XREF: sub_157E1+150j
		les	bx, dword_28C34
		mov	al, [bp+var_8]
		mov	ah, 0
		add	ax, 175h
		mov	es:[bx+4], ax
		mov	al, [bp+var_7]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		cmp	[bp+var_8], 20h	; ' '
		jz	short loc_15977
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_15977:				; CODE XREF: sub_157E1+189j
		inc	[bp+var_7]

loc_1597A:				; CODE XREF: sub_157E1+138j
		cmp	[bp+var_7], 8
		jb	short loc_1591B
		mov	al, [bp+var_1]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		add	ax, 41h	; 'A'
		push	ax
		mov	ax, 0B0h ; '∞'
		push	ax
		mov	al, 7
		push	ax
		les	bx, dword_28924
		push	word ptr es:[bx+6]
		push	word ptr es:[bx+4]
		call	sub_1603D
		add	sp, 0Ah
		inc	[bp+var_1]

loc_159A9:				; CODE XREF: sub_157E1+1Fj
		cmp	[bp+var_1], 7
		jnb	short loc_159B2
		jmp	loc_15803
; ---------------------------------------------------------------------------

loc_159B2:				; CODE XREF: sub_157E1+1CCj
		cmp	[bp+var_9], 0
		jz	short loc_159C3
		mov	al, [bp+var_2]
		push	ax
		call	sub_159D3
		inc	sp
		inc	sp
		jmp	short loc_159C6
; ---------------------------------------------------------------------------

loc_159C3:				; CODE XREF: sub_157E1+1D5j
		call	sub_1328F

loc_159C6:				; CODE XREF: sub_157E1+1E0j
		mov	ax, 1
		push	ax
		call	sub_19410
		inc	sp
		inc	sp
		mov	sp, bp
		pop	bp
		retn
sub_157E1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_159D3	proc near		; CODE XREF: sub_157E1+1DBp

var_6		= word ptr -6
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1
arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 6
		cmp	word_26EFC, sp
		ja	short loc_159E2
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_159E2:				; CODE XREF: sub_159D3+Aj
		mov	[bp+var_2], 0
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 8F0h
		mov	word ptr dword_28924, ax
		mov	word ptr dword_28924+2,	ds
		mov	[bp+var_6], 1B6h
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	byte ptr es:[bx], 41h ;	'A'
		les	bx, dword ptr word_20924
		mov	al, [bp+var_2]
		mov	ah, 0
		mov	es:[bx+14h], ax
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		add	ax, 8
		mov	es:[bx+16h], ax
		mov	al, 1
		push	ax
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		add	al, 41h	; 'A'
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15C60
; ---------------------------------------------------------------------------

loc_15A4A:				; CODE XREF: sub_159D3+2A2j
		test	[bp+var_1], 1
		jz	short loc_15AB4
		cmp	[bp+var_6], 1ACh
		jle	short loc_15AB4
		dec	[bp+var_6]
		cmp	[bp+var_6], 1D0h
		jnz	short loc_15A66
		mov	[bp+var_6], 1A3h

loc_15A66:				; CODE XREF: sub_159D3+8Cj
		mov	ax, [bp+var_6]
		add	ax, 0FE8Bh
		mov	[bp+var_6], ax
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, byte ptr [bp+var_6]
		mov	es:[bx], al
		cmp	[bp+var_6], 2Eh	; '.'
		jnz	short loc_15A8E
		mov	[bp+var_6], 5Bh	; '['

loc_15A8E:				; CODE XREF: sub_159D3+B4j
		mov	ax, [bp+var_6]
		add	ax, 175h
		mov	[bp+var_6], ax
		mov	al, 1
		push	ax
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		add	al, 41h	; 'A'
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15C60
; ---------------------------------------------------------------------------

loc_15AB4:				; CODE XREF: sub_159D3+7Bj
					; sub_159D3+82j
		test	[bp+var_1], 2
		jz	short loc_15B1E
		cmp	[bp+var_6], 1D0h
		jge	short loc_15B1E
		inc	[bp+var_6]
		cmp	[bp+var_6], 1D0h
		jnz	short loc_15AD0
		mov	[bp+var_6], 1A3h

loc_15AD0:				; CODE XREF: sub_159D3+F6j
		mov	ax, [bp+var_6]
		add	ax, 0FE8Bh
		mov	[bp+var_6], ax
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, byte ptr [bp+var_6]
		mov	es:[bx], al
		cmp	[bp+var_6], 2Eh	; '.'
		jnz	short loc_15AF8
		mov	[bp+var_6], 5Bh	; '['

loc_15AF8:				; CODE XREF: sub_159D3+11Ej
		mov	ax, [bp+var_6]
		add	ax, 175h
		mov	[bp+var_6], ax
		mov	al, 1
		push	ax
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		add	al, 41h	; 'A'
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15C60
; ---------------------------------------------------------------------------

loc_15B1E:				; CODE XREF: sub_159D3+E5j
					; sub_159D3+ECj
		test	[bp+var_1], 4
		jnz	short loc_15B27
		jmp	loc_15BAB
; ---------------------------------------------------------------------------

loc_15B27:				; CODE XREF: sub_159D3+14Fj
		cmp	[bp+var_2], 0
		jz	short loc_15BAB
		cmp	[bp+var_6], 1D0h
		jnz	short loc_15B39
		mov	[bp+var_6], 1A3h

loc_15B39:				; CODE XREF: sub_159D3+15Fj
		mov	ax, [bp+var_6]
		add	ax, 0FE8Bh
		mov	[bp+var_6], ax
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, byte ptr [bp+var_6]
		mov	es:[bx], al
		dec	[bp+var_2]
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		mov	[bp+var_6], ax
		cmp	[bp+var_6], 2Eh	; '.'
		jnz	short loc_15B7A
		mov	[bp+var_6], 5Bh	; '['

loc_15B7A:				; CODE XREF: sub_159D3+1A0j
		mov	ax, [bp+var_6]
		add	ax, 175h
		mov	[bp+var_6], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	al, 0
		push	ax
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		add	al, 41h	; 'A'
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15C60
; ---------------------------------------------------------------------------

loc_15BAB:				; CODE XREF: sub_159D3+151j
					; sub_159D3+158j
		test	[bp+var_1], 8
		jnz	short loc_15BB4
		jmp	loc_15C37
; ---------------------------------------------------------------------------

loc_15BB4:				; CODE XREF: sub_159D3+1DCj
		cmp	[bp+var_2], 7
		jnb	short loc_15C37
		cmp	[bp+var_6], 1D0h
		jnz	short loc_15BC6
		mov	[bp+var_6], 1A3h

loc_15BC6:				; CODE XREF: sub_159D3+1ECj
		mov	ax, [bp+var_6]
		add	ax, 0FE8Bh
		mov	[bp+var_6], ax
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, byte ptr [bp+var_6]
		mov	es:[bx], al
		inc	[bp+var_2]
		les	bx, dword_28924
		les	bx, es:[bx]
		mov	al, [bp+var_2]
		mov	ah, 0
		add	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		mov	[bp+var_6], ax
		cmp	[bp+var_6], 2Eh	; '.'
		jnz	short loc_15C07
		mov	[bp+var_6], 5Bh	; '['

loc_15C07:				; CODE XREF: sub_159D3+22Dj
		mov	ax, [bp+var_6]
		add	ax, 175h
		mov	[bp+var_6], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	al, 0
		push	ax
		push	[bp+var_6]
		mov	al, [bp+var_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		add	al, 41h	; 'A'
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	short loc_15C60
; ---------------------------------------------------------------------------

loc_15C37:				; CODE XREF: sub_159D3+1DEj
					; sub_159D3+1E5j
		inc	[bp+var_3]
		test	[bp+var_3], 8
		jz	short loc_15C4D
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		jmp	short loc_15C55
; ---------------------------------------------------------------------------

loc_15C4D:				; CODE XREF: sub_159D3+26Bj
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A

loc_15C55:				; CODE XREF: sub_159D3+278j
		add	sp, 4
		mov	al, 1
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp

loc_15C60:				; CODE XREF: sub_159D3+74j
					; sub_159D3+DEj ...
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		mov	[bp+var_1], al
		mov	ah, 0
		and	ax, 10h
		cmp	ax, 10h
		jz	short loc_15C78
		jmp	loc_15A4A
; ---------------------------------------------------------------------------

loc_15C78:				; CODE XREF: sub_159D3+2A0j
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	sp, bp
		pop	bp
		retn
sub_159D3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15C87	proc near		; CODE XREF: sub_10F7A+1B9p

var_14		= word ptr -14h
var_12		= dword	ptr -12h
var_E		= dword	ptr -0Eh
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= byte ptr -6
var_5		= byte ptr -5
var_4		= byte ptr -4
var_3		= byte ptr -3
var_2		= byte ptr -2
var_1		= byte ptr -1
arg_0		= byte ptr  4
arg_2		= byte ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 14h
		cmp	word_26EFC, sp
		ja	short loc_15C96
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15C96:				; CODE XREF: sub_15C87+Aj
		push	ss
		lea	ax, [bp+var_A]
		push	ax
		push	ds
		mov	ax, 256Ah
		push	ax
		mov	cx, 4
		call	near ptr N_SCOPY@
		les	bx, dword ptr word_20924
		mov	word ptr es:[bx+0Eh], 0
		mov	word ptr es:[bx+1Ch], 0
		mov	word ptr es:[bx+1Eh], 1
		mov	word ptr es:[bx+20h], 2
		mov	al, 0
		mov	[bp+var_6], al
		mov	[bp+var_3], al
		mov	ax, [bp+var_8]
		mov	dx, [bp+var_A]
		mov	word ptr [bp+var_E], dx
		mov	word ptr [bp+var_E+2], ax
		mov	[bp+var_2], 0
		jmp	short loc_15CED
; ---------------------------------------------------------------------------

loc_15CDC:				; CODE XREF: sub_15C87+6Aj
		mov	al, [bp+var_2]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	byte ptr es:[bx], 41h ;	'A'
		inc	[bp+var_2]

loc_15CED:				; CODE XREF: sub_15C87+53j
		cmp	[bp+var_2], 6
		jb	short loc_15CDC
		mov	[bp+var_14], 1B6h
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	byte ptr es:[bx], 41h ;	'A'
		les	bx, dword ptr word_20924
		mov	al, [bp+arg_2]
		mov	ah, 0
		mov	es:[bx+14h], ax
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		mov	es:[bx+16h], ax
		mov	al, 1
		push	ax
		push	[bp+var_14]
		mov	al, [bp+arg_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15F2F
; ---------------------------------------------------------------------------

loc_15D39:				; CODE XREF: sub_15C87+2BDj
		test	[bp+var_1], 1
		jz	short loc_15D9D
		cmp	[bp+var_14], 1ACh
		jle	short loc_15D9D
		dec	[bp+var_14]
		cmp	[bp+var_14], 1D0h
		jnz	short loc_15D55
		mov	[bp+var_14], 1A3h

loc_15D55:				; CODE XREF: sub_15C87+C7j
		mov	ax, [bp+var_14]
		add	ax, 0FE8Bh
		mov	[bp+var_14], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	al, byte ptr [bp+var_14]
		mov	es:[bx], al
		cmp	[bp+var_14], 2Eh ; '.'
		jnz	short loc_15D79
		mov	[bp+var_14], 5Bh ; '['

loc_15D79:				; CODE XREF: sub_15C87+EBj
		mov	ax, [bp+var_14]
		add	ax, 175h
		mov	[bp+var_14], ax
		mov	al, 1
		push	ax
		push	[bp+var_14]
		mov	al, [bp+arg_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15F2F
; ---------------------------------------------------------------------------

loc_15D9D:				; CODE XREF: sub_15C87+B6j
					; sub_15C87+BDj
		test	[bp+var_1], 2
		jz	short loc_15E01
		cmp	[bp+var_14], 1D0h
		jge	short loc_15E01
		inc	[bp+var_14]
		cmp	[bp+var_14], 1D0h
		jnz	short loc_15DB9
		mov	[bp+var_14], 1A3h

loc_15DB9:				; CODE XREF: sub_15C87+12Bj
		mov	ax, [bp+var_14]
		add	ax, 0FE8Bh
		mov	[bp+var_14], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	al, byte ptr [bp+var_14]
		mov	es:[bx], al
		cmp	[bp+var_14], 2Eh ; '.'
		jnz	short loc_15DDD
		mov	[bp+var_14], 5Bh ; '['

loc_15DDD:				; CODE XREF: sub_15C87+14Fj
		mov	ax, [bp+var_14]
		add	ax, 175h
		mov	[bp+var_14], ax
		mov	al, 1
		push	ax
		push	[bp+var_14]
		mov	al, [bp+arg_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15F2F
; ---------------------------------------------------------------------------

loc_15E01:				; CODE XREF: sub_15C87+11Aj
					; sub_15C87+121j
		test	[bp+var_1], 4
		jz	short loc_15E84
		cmp	[bp+var_3], 0
		jz	short loc_15E84
		cmp	[bp+var_14], 1D0h
		jnz	short loc_15E19
		mov	[bp+var_14], 1A3h

loc_15E19:				; CODE XREF: sub_15C87+18Bj
		mov	ax, [bp+var_14]
		add	ax, 0FE8Bh
		mov	[bp+var_14], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	al, byte ptr [bp+var_14]
		mov	es:[bx], al
		dec	[bp+var_3]
		dec	[bp+arg_2]
		mov	al, [bp+var_3]
		mov	ah, 0
		mov	bx, word ptr [bp+var_E]
		add	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		mov	[bp+var_14], ax
		cmp	[bp+var_14], 2Eh ; '.'
		jnz	short loc_15E55
		mov	[bp+var_14], 5Bh ; '['

loc_15E55:				; CODE XREF: sub_15C87+1C7j
		mov	ax, [bp+var_14]
		add	ax, 175h
		mov	[bp+var_14], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	al, 0
		push	ax
		push	[bp+var_14]
		mov	al, [bp+arg_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	loc_15F2F
; ---------------------------------------------------------------------------

loc_15E84:				; CODE XREF: sub_15C87+17Ej
					; sub_15C87+184j
		test	[bp+var_1], 8
		jz	short loc_15F06
		cmp	[bp+var_3], 5
		jnb	short loc_15F06
		cmp	[bp+var_14], 1D0h
		jnz	short loc_15E9C
		mov	[bp+var_14], 1A3h

loc_15E9C:				; CODE XREF: sub_15C87+20Ej
		mov	ax, [bp+var_14]
		add	ax, 0FE8Bh
		mov	[bp+var_14], ax
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	al, byte ptr [bp+var_14]
		mov	es:[bx], al
		inc	[bp+var_3]
		inc	[bp+arg_2]
		mov	al, [bp+var_3]
		mov	ah, 0
		mov	bx, word ptr [bp+var_E]
		add	bx, ax
		mov	al, es:[bx]
		mov	ah, 0
		mov	[bp+var_14], ax
		cmp	[bp+var_14], 2Eh ; '.'
		jnz	short loc_15ED8
		mov	[bp+var_14], 5Bh ; '['

loc_15ED8:				; CODE XREF: sub_15C87+24Aj
		mov	ax, [bp+var_14]
		add	ax, 175h
		mov	[bp+var_14], ax
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	al, 0
		push	ax
		push	[bp+var_14]
		mov	al, [bp+arg_2]
		push	ax
		mov	al, [bp+arg_0]
		mov	cl, 4
		shl	al, cl
		push	ax
		call	sub_15FDB
		add	sp, 8
		jmp	short loc_15F2F
; ---------------------------------------------------------------------------

loc_15F06:				; CODE XREF: sub_15C87+201j
					; sub_15C87+207j
		inc	[bp+var_6]
		test	[bp+var_6], 8
		jz	short loc_15F1C
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		jmp	short loc_15F24
; ---------------------------------------------------------------------------

loc_15F1C:				; CODE XREF: sub_15C87+286j
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A

loc_15F24:				; CODE XREF: sub_15C87+293j
		add	sp, 4
		mov	al, 1
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp

loc_15F2F:				; CODE XREF: sub_15C87+AFj
					; sub_15C87+113j ...
		mov	al, 0
		push	ax
		call	sub_175A2
		inc	sp
		inc	sp
		mov	[bp+var_1], al
		mov	ah, 0
		and	ax, 10h
		cmp	ax, 10h
		jz	short loc_15F47
		jmp	loc_15D39
; ---------------------------------------------------------------------------

loc_15F47:				; CODE XREF: sub_15C87+2BBj
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		mov	al, 0
		mov	[bp+var_4], al
		mov	[bp+var_2], al
		jmp	short loc_15FC5
; ---------------------------------------------------------------------------

loc_15F5C:				; CODE XREF: sub_15C87+34Bj
		mov	al, [bp+var_2]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+135Eh]
		mov	dx, [bx+135Ch]
		mov	word ptr [bp+var_12], dx
		mov	word ptr [bp+var_12+2],	ax
		mov	al, 0
		mov	[bp+var_5], al
		mov	[bp+var_3], al
		jmp	short loc_15FA2
; ---------------------------------------------------------------------------

loc_15F7F:				; CODE XREF: sub_15C87+328j
		mov	al, [bp+var_3]
		mov	ah, 0
		les	bx, [bp+var_E]
		add	bx, ax
		mov	al, es:[bx]
		mov	dl, [bp+var_3]
		mov	dh, 0
		les	bx, [bp+var_12]
		add	bx, dx
		cmp	al, es:[bx]
		jz	short loc_15F9F
		mov	[bp+var_5], 1

loc_15F9F:				; CODE XREF: sub_15C87+312j
		inc	[bp+var_3]

loc_15FA2:				; CODE XREF: sub_15C87+2F6j
		cmp	[bp+var_3], 6
		jnb	short loc_15FB1
		mov	al, [bp+var_5]
		mov	ah, 0
		or	ax, ax
		jz	short loc_15F7F

loc_15FB1:				; CODE XREF: sub_15C87+31Fj
		mov	al, [bp+var_5]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_15FC2
		mov	al, [bp+var_2]
		add	al, 2
		mov	[bp+var_4], al

loc_15FC2:				; CODE XREF: sub_15C87+331j
		inc	[bp+var_2]

loc_15FC5:				; CODE XREF: sub_15C87+2D3j
		cmp	[bp+var_2], 8
		jnb	short loc_15FD4
		mov	al, [bp+var_4]
		mov	ah, 0
		or	ax, ax
		jz	short loc_15F5C

loc_15FD4:				; CODE XREF: sub_15C87+342j
		mov	al, [bp+var_4]
		mov	sp, bp
		pop	bp
		retn
sub_15C87	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_15FDB	proc near		; CODE XREF: sub_159D3+6Ep
					; sub_159D3+D8p ...

arg_0		= byte ptr  4
arg_2		= byte ptr  6
arg_4		= word ptr  8
arg_6		= byte ptr  0Ah

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_15FE7
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_15FE7:				; CODE XREF: sub_15FDB+7j
		les	bx, dword ptr word_20924
		mov	al, [bp+arg_2]
		mov	ah, 0
		mov	es:[bx+14h], ax
		push	seg_20926
		push	word_20924
		call	sub_17B4A
		add	sp, 4
		les	bx, dword_28C34
		mov	ax, [bp+arg_4]
		mov	es:[bx+4], ax
		mov	al, [bp+arg_2]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	es:[bx], ax
		mov	al, [bp+arg_0]
		mov	ah, 0
		mov	es:[bx+2], ax
		cmp	[bp+arg_6], 0
		jz	short loc_16033
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4

loc_16033:				; CODE XREF: sub_15FDB+4Bj
		mov	al, 8
		push	ax
		call	sub_105E7
		inc	sp
		inc	sp
		pop	bp
		retn
sub_15FDB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1603D	proc near		; CODE XREF: sub_157E1+1BFp

var_C		= byte ptr -0Ch
var_B		= byte ptr -0Bh
var_A		= byte ptr -0Ah
var_1		= byte ptr -1
arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= byte ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		push	si
		mov	si, [bp+arg_6]
		cmp	word_26EFC, sp
		ja	short loc_16050
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16050:				; CODE XREF: sub_1603D+Ej
		mov	al, [bp+arg_4]
		mov	[bp+var_C], al
		mov	[bp+var_B], 0
		jmp	short loc_1606F
; ---------------------------------------------------------------------------

loc_1605C:				; CODE XREF: sub_1603D+38j
		mov	al, [bp+var_B]
		inc	[bp+var_B]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	byte ptr ss:[bx], 20h ;	' '

loc_1606F:				; CODE XREF: sub_1603D+1Dj
		mov	al, [bp+var_B]
		cmp	al, [bp+arg_4]
		jb	short loc_1605C
		mov	al, [bp+arg_4]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	byte ptr ss:[bx], 0
		jmp	short loc_160CE
; ---------------------------------------------------------------------------

loc_16089:				; CODE XREF: sub_1603D+99j
		mov	al, byte ptr [bp+arg_0]
		mov	[bp+var_1], al
		xor	ax, ax
		mov	dx, 0Ah
		push	ax
		push	dx
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	near ptr N_LUDIV@
		mov	[bp+arg_0], ax
		mov	bx, ax
		mov	[bp+arg_2], dx
		mov	cx, dx
		xor	dx, dx
		mov	ax, 0Ah
		call	N_LXMUL@
		mov	dl, [bp+var_1]
		sub	dl, al
		mov	[bp+var_1], dl
		mov	al, [bp+arg_4]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	dl, [bp+var_1]
		add	dl, 30h	; '0'
		mov	bx, ax
		mov	ss:[bx], dl

loc_160CE:				; CODE XREF: sub_1603D+4Aj
		mov	al, [bp+arg_4]
		dec	[bp+arg_4]
		or	al, al
		ja	short loc_16089
		les	bx, dword_28C34
		mov	ax, [bp+arg_8]
		mov	es:[bx+2], ax
		mov	[bp+var_B], 0
		jmp	short loc_16123
; ---------------------------------------------------------------------------

loc_160E9:				; CODE XREF: sub_1603D+ECj
		mov	al, [bp+var_B]
		mov	ah, 0
		lea	dx, [bp+var_A]
		add	ax, dx
		mov	bx, ax
		mov	al, ss:[bx]
		mov	ah, 0
		add	ax, 17Ch
		les	bx, dword_28C34
		mov	es:[bx+4], ax
		mov	al, [bp+var_B]
		mov	ah, 0
		mov	cl, 4
		shl	ax, cl
		mov	dx, si
		add	dx, ax
		mov	es:[bx], dx
		push	ds
		mov	ax, 792Eh
		push	ax
		call	sub_1942A
		add	sp, 4
		inc	[bp+var_B]

loc_16123:				; CODE XREF: sub_1603D+AAj
		mov	al, [bp+var_B]
		cmp	al, [bp+var_C]
		jb	short loc_160E9
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_1603D	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16130	proc near		; CODE XREF: sub_13852+166p
					; sub_149D7+8Dp

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_1613E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1613E:				; CODE XREF: sub_16130+9j
		les	bx, dword_2A480
		mov	word ptr es:[bx+4], 1AAh
		mov	word ptr es:[bx+2], 0
		mov	al, byte_27CCA
		mov	[bp+var_1], al
		jmp	short loc_16179
; ---------------------------------------------------------------------------

loc_16156:				; CODE XREF: sub_16130+4Dj
		mov	al, [bp+var_1]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 50h	; 'P'
		les	bx, dword_2A480
		mov	es:[bx], ax
		push	ds
		mov	ax, 7986h
		push	ax
		call	sub_1942A
		add	sp, 4
		dec	[bp+var_1]

loc_16179:				; CODE XREF: sub_16130+24j
		cmp	[bp+var_1], 0
		jnz	short loc_16156
		mov	sp, bp
		pop	bp
		retn
sub_16130	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16183	proc near		; CODE XREF: seg000:6456p

var_2		= byte ptr -2
var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_16191
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16191:				; CODE XREF: sub_16183+9j
		mov	word ptr dword_29F56, offset unk_20C36
		mov	word ptr dword_29F56+2,	ds
		les	bx, dword_29F56
		mov	byte ptr es:[bx], 0FFh
		mov	byte_2A556, 0
		mov	dl, 0
		jmp	short loc_161CB
; ---------------------------------------------------------------------------

loc_161AC:				; CODE XREF: sub_16183+54j
		mov	al, dl
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	cl, al
		cmp	cl, 0Eh
		jb	short loc_161C9
		cmp	cl, 12h
		jnb	short loc_161C9
		mov	byte_2A556, al

loc_161C9:				; CODE XREF: sub_16183+3Cj
					; sub_16183+41j
		inc	dl

loc_161CB:				; CODE XREF: sub_16183+27j
		cmp	dl, 30h	; '0'
		jnb	short loc_161D9
		mov	al, byte_2A556
		mov	ah, 0
		or	ax, ax
		jz	short loc_161AC

loc_161D9:				; CODE XREF: sub_16183+4Bj
		cmp	byte_2A556, 0
		jnz	short loc_161E3
		jmp	loc_16298
; ---------------------------------------------------------------------------

loc_161E3:				; CODE XREF: sub_16183+5Bj
		mov	al, 0
		mov	[bp+var_1], al
		mov	dl, al
		jmp	short loc_16212
; ---------------------------------------------------------------------------

loc_161EC:				; CODE XREF: sub_16183+9Bj
		mov	al, dl
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	cl, al
		cmp	cl, 0Eh
		jb	short loc_16210
		cmp	cl, 12h
		jnb	short loc_16210
		cmp	al, byte_2A556
		jz	short loc_16210
		mov	[bp+var_1], 1

loc_16210:				; CODE XREF: sub_16183+7Cj
					; sub_16183+81j ...
		inc	dl

loc_16212:				; CODE XREF: sub_16183+67j
		cmp	dl, 30h	; '0'
		jnb	short loc_16220
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jz	short loc_161EC

loc_16220:				; CODE XREF: sub_16183+92j
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_16298
		mov	al, 0
		mov	[bp+var_2], al
		mov	[bp+var_1], al
		mov	dl, 0
		jmp	short loc_1625B
; ---------------------------------------------------------------------------

loc_16235:				; CODE XREF: sub_16183+E4j
		mov	al, dl
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx+30h], 5
		jnz	short loc_16259
		mov	al, [bp+var_2]
		mov	ah, 0
		les	bx, dword_29F56
		add	bx, ax
		mov	al, dl
		mov	es:[bx], al
		inc	[bp+var_2]

loc_16259:				; CODE XREF: sub_16183+C1j
		inc	dl

loc_1625B:				; CODE XREF: sub_16183+B0j
		cmp	dl, 30h	; '0'
		jnb	short loc_16269
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jz	short loc_16235

loc_16269:				; CODE XREF: sub_16183+DBj
		mov	al, [bp+var_2]
		mov	ah, 0
		les	bx, dword_29F56
sub_16183	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_16272	proc near		; CODE XREF: sub_17235+4Fp
					; DATA XREF: dseg:off_203B6o
		add	bx, ax
		cmp	byte ptr es:[bx], 0FFh
		jz	short loc_16298
		mov	al, [bp-2]
		mov	ah, 0
		mov	bx, word ptr dword_29F56
		add	bx, ax
		mov	byte ptr es:[bx], 0FFh
		mov	word ptr dword_29F56, offset unk_20C36
		mov	word ptr dword_29F56+2,	ds
		mov	byte_27D67, 0

loc_16298:				; CODE XREF: sub_16183+5Dj
					; sub_16183+A4j ...
		mov	sp, bp
		pop	bp
		retn
sub_16272	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1629C	proc near		; CODE XREF: sub_10C18+113p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_162A8
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_162A8:				; CODE XREF: sub_1629C+7j
		les	bx, dword_29F56
		cmp	byte ptr es:[bx], 0FFh
		jnz	short loc_162C6
		mov	word ptr dword_29F56, offset unk_20C36
		mov	word ptr dword_29F56+2,	ds
		les	bx, dword_29F56
		mov	byte ptr es:[bx], 0FFh
		jmp	short loc_16303
; ---------------------------------------------------------------------------

loc_162C6:				; CODE XREF: sub_1629C+14j
		mov	al, byte_27D67
		mov	ah, 0
		or	ax, ax
		jnz	short loc_162FF
		mov	byte_27D67, 0Ah
		les	bx, dword_29F56
		mov	al, es:[bx]
		mov	byte_28920, al
		mov	al, 18h
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		cmp	word_26C4C, 4
		jz	short loc_162F1
		mov	al, 11h
		jmp	short loc_162F3
; ---------------------------------------------------------------------------

loc_162F1:				; CODE XREF: sub_1629C+4Fj
		mov	al, 0Eh

loc_162F3:				; CODE XREF: sub_1629C+53j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		inc	word ptr dword_29F56
		jmp	short loc_16303
; ---------------------------------------------------------------------------

loc_162FF:				; CODE XREF: sub_1629C+31j
		dec	byte_27D67

loc_16303:				; CODE XREF: sub_1629C+28j
					; sub_1629C+61j
		pop	bp
		retn
sub_1629C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16311
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16311:				; CODE XREF: seg000:630Cj
		cmp	word_26C4C, 4
		jz	short loc_1631C
		mov	al, 3
		jmp	short loc_1631E
; ---------------------------------------------------------------------------

loc_1631C:				; CODE XREF: seg000:6316j
		mov	al, 0Dh

loc_1631E:				; CODE XREF: seg000:631Aj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16332
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16332:				; CODE XREF: seg000:632Dj
		cmp	byte_2890E, 0
		jz	short loc_16370
		mov	al, byte_2891E
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx+2Fh], 0Ch
		jnz	short loc_16370
		mov	byte_27CDA, 0
		mov	byte_2A47E, 1
		mov	al, 2Eh	; '.'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		cmp	word_26C4C, 4
		jz	short loc_16368
		mov	al, 3
		jmp	short loc_1636A
; ---------------------------------------------------------------------------

loc_16368:				; CODE XREF: seg000:6362j
		mov	al, 0Dh

loc_1636A:				; CODE XREF: seg000:6366j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16370:				; CODE XREF: seg000:6337j seg000:6349j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1637E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1637E:				; CODE XREF: seg000:6379j
		cmp	byte_2890E, 7
		jz	short loc_163BC
		mov	al, byte_2891E
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		cmp	byte ptr es:[bx+30h], 0Ch
		jnz	short loc_163BC
		mov	byte_27CDA, 0
		mov	byte_2A47E, 1
		mov	al, 2Eh	; '.'
		push	ax
		call	sub_14263
		inc	sp
		inc	sp
		cmp	word_26C4C, 4
		jz	short loc_163B4
		mov	al, 3
		jmp	short loc_163B6
; ---------------------------------------------------------------------------

loc_163B4:				; CODE XREF: seg000:63AEj
		mov	al, 0Dh

loc_163B6:				; CODE XREF: seg000:63B2j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_163BC:				; CODE XREF: seg000:6383j seg000:6395j
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_163BE	proc near		; CODE XREF: sub_12634+13p
					; sub_126A1+13p

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_163CC
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_163CC:				; CODE XREF: sub_163BE+9j
		cmp	byte_28902, 3
		jz	short loc_16408
		cmp	byte_28902, 0Fh
		jz	short loc_16408
		cmp	word_26C4C, 4
		jz	short loc_163EE
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+263Eh]
		jmp	short loc_163F9
; ---------------------------------------------------------------------------

loc_163EE:				; CODE XREF: sub_163BE+21j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+260Eh]

loc_163F9:				; CODE XREF: sub_163BE+2Ej
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_16408
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16408:				; CODE XREF: sub_163BE+13j
					; sub_163BE+1Aj ...
		mov	sp, bp
		pop	bp
		retn
sub_163BE	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_1641A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1641A:				; CODE XREF: seg000:6415j
		cmp	word_26C4C, 4
		jz	short loc_1642E
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+278Eh]
		jmp	short loc_16439
; ---------------------------------------------------------------------------

loc_1642E:				; CODE XREF: seg000:641Fj
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+276Eh]

loc_16439:				; CODE XREF: seg000:642Cj
		mov	[bp-1],	al
		cmp	byte ptr [bp-1], 0
		jz	short loc_16448
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16448:				; CODE XREF: seg000:6440j
		cmp	byte_28901, 0Eh
		jb	short loc_16459
		cmp	byte_28901, 12h
		jnb	short loc_16459
		call	sub_16183

loc_16459:				; CODE XREF: seg000:644Dj seg000:6454j
		mov	sp, bp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16469
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16469:				; CODE XREF: seg000:6464j
		cmp	word_26C4C, 4
		jz	short loc_16474
		mov	al, 0Bh
		jmp	short loc_16476
; ---------------------------------------------------------------------------

loc_16474:				; CODE XREF: seg000:646Ej
		mov	al, 2Ch	; ','

loc_16476:				; CODE XREF: seg000:6472j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_1648C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1648C:				; CODE XREF: seg000:6487j
		cmp	word_26C4C, 4
		jz	short loc_164A0
		mov	al, byte_27D69
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+26FEh]
		jmp	short loc_164AB
; ---------------------------------------------------------------------------

loc_164A0:				; CODE XREF: seg000:6491j
		mov	al, byte_27D69
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+26CEh]

loc_164AB:				; CODE XREF: seg000:649Ej
		mov	[bp-1],	al
		cmp	byte ptr [bp-1], 0
		jz	short loc_164BA
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_164BA:				; CODE XREF: seg000:64B2j
		call	sub_1654E
		mov	sp, bp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_164CD
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_164CD:				; CODE XREF: seg000:64C8j
		cmp	word_26C4C, 4
		jz	short loc_164D8
		mov	al, 0Eh
		jmp	short loc_164DA
; ---------------------------------------------------------------------------

loc_164D8:				; CODE XREF: seg000:64D2j
		mov	al, 21h	; '!'

loc_164DA:				; CODE XREF: seg000:64D6j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_164EE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_164EE:				; CODE XREF: seg000:64E9j
		call	sub_16611
		mov	al, byte_2891E
		add	al, 0F8h ; '¯'
		mov	byte_2891E, al
		dec	byte_2890C
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1650B
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1650B:				; CODE XREF: seg000:6506j
		call	sub_16611
		mov	al, byte_2891E
		add	al, 8
		mov	byte_2891E, al
		inc	byte_2890C
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16528
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16528:				; CODE XREF: seg000:6523j
		call	sub_16611
		dec	byte_2891E
		dec	byte_2890E
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16541
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16541:				; CODE XREF: seg000:653Cj
		call	sub_16611
		inc	byte_2891E
		inc	byte_2890E
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1654E	proc near		; CODE XREF: sub_1238E+22p
					; seg000:loc_164BAp
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1655A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1655A:				; CODE XREF: sub_1654E+7j
		mov	al, byte_27CD3
		mov	ah, 0
		or	ax, ax
		jnz	short loc_16585
		test	byte_285F4, 10h
		jnz	short loc_16571
		test	byte_285F4, 1
		jz	short loc_16585

loc_16571:				; CODE XREF: sub_1654E+1Aj
		mov	al, byte_27CD4
		mov	byte_27CD2, al
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+3CDAh]
		push	ax
		call	sub_1695E
		inc	sp
		inc	sp

loc_16585:				; CODE XREF: sub_1654E+13j
					; sub_1654E+21j
		pop	bp
		retn
sub_1654E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16587	proc near		; CODE XREF: sub_1238E+22p
					; DATA XREF: dseg:43D2o
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16593
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16593:				; CODE XREF: sub_16587+7j
		mov	al, byte_2A557
		mov	ah, 0
		or	ax, ax
		jnz	short loc_165D0
		cmp	byte_27CD4, 2
		jnz	short loc_165D0
		test	byte_285F4, 2
		jz	short loc_165D0
		cmp	word_26C4C, 4
		jz	short loc_165B5
		mov	al, 4
		jmp	short loc_165B7
; ---------------------------------------------------------------------------

loc_165B5:				; CODE XREF: sub_16587+28j
		mov	al, 9

loc_165B7:				; CODE XREF: sub_16587+2Cj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	byte_27D64, 34h	; '4'
		mov	al, 34h	; '4'
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp

loc_165D0:				; CODE XREF: sub_16587+13j
					; sub_16587+1Aj ...
		pop	bp
		retn
sub_16587	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_165DE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_165DE:				; CODE XREF: seg000:65D9j
		mov	byte_285F4, 0
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_165F1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_165F1:				; CODE XREF: seg000:65ECj
		mov	al, byte_285F4
		and	al, 10h
		mov	byte_285F4, al
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_165FB	proc near		; CODE XREF: sub_1238E+22p
					; sub_1253F:loc_1256Ap
					; DATA XREF: ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16607
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16607:				; CODE XREF: sub_165FB+7j
		mov	al, byte_285F4
		and	al, 1Dh
		mov	byte_285F4, al
		pop	bp
		retn
sub_165FB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16611	proc near		; CODE XREF: seg000:loc_164EEp
					; seg000:loc_1650Bp ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1661D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1661D:				; CODE XREF: sub_16611+7j
		mov	al, byte_285F4
		and	al, 0Fh
		mov	byte_285F4, al
		pop	bp
		retn
sub_16611	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16633
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16633:				; CODE XREF: seg000:662Ej
		mov	al, byte_2891E
		push	ax
		call	sub_16BF4
		inc	sp
		inc	sp
		cmp	byte_27D68, 0
		jz	short loc_16646
		call	sub_16C14

loc_16646:				; CODE XREF: seg000:6641j
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16648	proc near		; CODE XREF: sub_1238E+22p
					; DATA XREF: dseg:off_24770o

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_16656
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16656:				; CODE XREF: sub_16648+9j
		cmp	word_26C4C, 4
		jz	short loc_1666A
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+25DEh]
		jmp	short loc_16675
; ---------------------------------------------------------------------------

loc_1666A:				; CODE XREF: sub_16648+13j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+25AEh]

loc_16675:				; CODE XREF: sub_16648+20j
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_16684
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16684:				; CODE XREF: sub_16648+34j
		mov	al, byte_27CD4
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+3D0Ah]
		push	ax
		call	sub_16987
		inc	sp
		inc	sp
		mov	sp, bp
		pop	bp
		retn
sub_16648	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_166A5
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_166A5:				; CODE XREF: seg000:66A0j
		cmp	byte_28902, 3
		jz	short loc_166BE
		cmp	byte_28902, 0Fh
		jz	short loc_166BE
		push	ds
		mov	ax, 3C7Ah
		push	ax
		call	sub_16D6A
		add	sp, 4

loc_166BE:				; CODE XREF: seg000:66AAj seg000:66B1j
		cmp	byte_2890E, 0
		jz	short loc_166D6
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+35BEh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp

loc_166D6:				; CODE XREF: seg000:66C3j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_166E4
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_166E4:				; CODE XREF: seg000:66DFj
		cmp	byte_28902, 3
		jz	short loc_166FD
		cmp	byte_28902, 0Fh
		jz	short loc_166FD
		push	ds
		mov	ax, 3CAAh
		push	ax
		call	sub_16D6A
		add	sp, 4

loc_166FD:				; CODE XREF: seg000:66E9j seg000:66F0j
		cmp	byte_2890E, 7
		jz	short loc_16715
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+35DEh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp

loc_16715:				; CODE XREF: seg000:6702j
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16717	proc near		; CODE XREF: sub_1238E+22p
					; DATA XREF: dseg:43CEo
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16723
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16723:				; CODE XREF: sub_16717+7j
		mov	al, byte_2891E
		mov	byte_2891F, al
		call	sub_16D26
		cmp	byte_2891C, 5Bh	; '['
		jnz	short loc_16738
		mov	byte_2A561, 0

loc_16738:				; CODE XREF: sub_16717+1Aj
		pop	bp
		retn
sub_16717	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16746
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16746:				; CODE XREF: seg000:6741j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16754
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16754:				; CODE XREF: seg000:674Fj
		cmp	word_26C4C, 4
		jz	short loc_1675F
		mov	al, 8
		jmp	short loc_16761
; ---------------------------------------------------------------------------

loc_1675F:				; CODE XREF: seg000:6759j
		mov	al, 2Fh	; '/'

loc_16761:				; CODE XREF: seg000:675Dj
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 18h
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp
		cmp	byte_2890E, 0
		jz	short loc_16787
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+35FEh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp

loc_16787:				; CODE XREF: seg000:6774j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16795
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16795:				; CODE XREF: seg000:6790j
		cmp	word_26C4C, 4
		jz	short loc_167A0
		mov	al, 8
		jmp	short loc_167A2
; ---------------------------------------------------------------------------

loc_167A0:				; CODE XREF: seg000:679Aj
		mov	al, 2Fh	; '/'

loc_167A2:				; CODE XREF: seg000:679Ej
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, 19h
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp
		cmp	byte_2890E, 7
		jz	short loc_167C8
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+361Eh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp

loc_167C8:				; CODE XREF: seg000:67B5j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_167D6
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_167D6:				; CODE XREF: seg000:67D1j
		cmp	byte_2890E, 0
		jz	short loc_167E0
		call	sub_167E2

loc_167E0:				; CODE XREF: seg000:67DBj
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_167E2	proc near		; CODE XREF: seg000:67DDp
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_167EE
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_167EE:				; CODE XREF: sub_167E2+7j
		push	ds
		mov	ax, 363Eh
		push	ax
		call	sub_1686A
		add	sp, 4
		pop	bp
		retn
sub_167E2	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16807
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16807:				; CODE XREF: seg000:6802j
		cmp	byte_2890E, 7
		jz	short loc_16811
		call	sub_16813

loc_16811:				; CODE XREF: seg000:680Cj
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16813	proc near		; CODE XREF: seg000:680Ep
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1681F
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1681F:				; CODE XREF: sub_16813+7j
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ds
		mov	ax, 365Eh
		push	ax
		call	sub_1686A
		add	sp, 4
		pop	bp
		retn
sub_16813	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1683E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1683E:				; CODE XREF: seg000:6839j
		push	ds
		mov	ax, 363Eh
		push	ax
		call	sub_1686A
		add	sp, 4
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16857
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16857:				; CODE XREF: seg000:6852j
		mov	al, byte_2891E
		mov	byte_28920, al
		push	ds
		mov	ax, 365Eh
		push	ax
		call	sub_1686A
		add	sp, 4
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1686A	proc near		; CODE XREF: sub_167E2+11p
					; sub_16813+17p ...

arg_0		= dword	ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16876
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16876:				; CODE XREF: sub_1686A+7j
		mov	al, byte_28901
		mov	ah, 0
		les	bx, [bp+arg_0]
		add	bx, ax
		mov	al, es:[bx]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		mov	byte_285F4, 0
		pop	bp
		retn
sub_1686A	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1689C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1689C:				; CODE XREF: seg000:6897j
		cmp	byte_2890E, 0
		jz	short loc_168B9
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+35FEh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		mov	byte_285F4, 0

loc_168B9:				; CODE XREF: seg000:68A1j
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_168C7
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_168C7:				; CODE XREF: seg000:68C2j
		cmp	byte_2890E, 7
		jz	short loc_168E4
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+361Eh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		mov	byte_285F4, 0

loc_168E4:				; CODE XREF: seg000:68CCj
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_168F2
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_168F2:				; CODE XREF: seg000:68EDj
		cmp	byte_2890E, 0
		jz	short loc_168FC
		call	sub_168FE

loc_168FC:				; CODE XREF: seg000:68F7j
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_168FE	proc near		; CODE XREF: seg000:68F9p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1690A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1690A:				; CODE XREF: sub_168FE+7j
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+367Eh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		mov	byte_285F4, 0
		pop	bp
		retn
sub_168FE	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1692E
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1692E:				; CODE XREF: seg000:6929j
		cmp	byte_2890E, 7
		jz	short loc_16938
		call	sub_1693A

loc_16938:				; CODE XREF: seg000:6933j
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1693A	proc near		; CODE XREF: seg000:6935p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16946
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16946:				; CODE XREF: sub_1693A+7j
		mov	al, byte_28901
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+369Eh]
		push	ax
		call	sub_16A89
		inc	sp
		inc	sp
		mov	byte_285F4, 0
		pop	bp
		retn
sub_1693A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1695E	proc near		; CODE XREF: sub_1654E+32p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1696A
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1696A:				; CODE XREF: sub_1695E+7j
		mov	al, byte_2891E
		mov	byte_2891F, al
		cmp	[bp+arg_0], 0
		jz	short loc_16985
		mov	al, [bp+arg_0]
		mov	byte_2A557, al
		mov	al, [bp+arg_0]
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp

loc_16985:				; CODE XREF: sub_1695E+16j
		pop	bp
		retn
sub_1695E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16987	proc near		; CODE XREF: sub_16648+48p
					; sub_16D6A+23p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16993
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16993:				; CODE XREF: sub_16987+7j
		mov	al, byte_2891E
		mov	byte_2891F, al
		cmp	[bp+arg_0], 0
		jz	short loc_169A8
		mov	al, [bp+arg_0]
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp

loc_169A8:				; CODE XREF: sub_16987+16j
		pop	bp
		retn
sub_16987	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_169AA	proc near		; CODE XREF: sub_1233A+2Ep
					; sub_1253F+57p ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 8
		push	si
		cmp	word_26EFC, sp
		ja	short loc_169BA
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_169BA:				; CODE XREF: sub_169AA+Bj
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+2EE0h]
		mov	dx, [bx+2EDEh]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		mov	cl, 0

loc_169D5:				; CODE XREF: sub_169AA+52j
					; sub_169AA+A1j
		mov	al, cl
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4C72h]
		mov	dx, [bx+4C70h]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+arg_0], al
		inc	cl
		mov	ah, 0
		or	ax, ax
		jz	short loc_169D5
		cmp	[bp+arg_0], 0FFh
		jnz	short loc_16A40
		mov	cl, 0

loc_16A06:				; CODE XREF: sub_169AA+89j
		mov	al, cl
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4C72h]
		mov	dx, [bx+4C70h]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+arg_0], al
		inc	cl
		cmp	[bp+arg_0], 0
		jz	short loc_16A35
		cmp	[bp+arg_0], 0FFh
		jnz	short loc_16A06

loc_16A35:				; CODE XREF: sub_169AA+83j
		mov	al, [bp+arg_0]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_16A84
		jmp	short loc_16A4D
; ---------------------------------------------------------------------------

loc_16A40:				; CODE XREF: sub_169AA+58j
		les	bx, [bp+var_8]
		mov	al, es:[bx+1]
		cmp	al, byte_2891F
		jnz	short loc_169D5

loc_16A4D:				; CODE XREF: sub_169AA+94j
		les	bx, [bp+var_8]
		mov	al, byte_2891F
		mov	es:[bx+1], al
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		push	es
		les	si, [bp+var_4]
		mov	al, es:[si]
		pop	es
		mov	es:[bx], al
		les	bx, [bp+var_4]
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		les	bx, [bp+var_8]
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	byte ptr es:[bx], 1

loc_16A84:				; CODE XREF: sub_169AA+92j
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_169AA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16A89	proc near		; CODE XREF: sub_11F03+31p
					; sub_11F7F+35p ...

var_A		= byte ptr -0Ah
var_9		= byte ptr -9
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		cmp	word_26EFC, sp
		ja	short loc_16A99
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16A99:				; CODE XREF: sub_16A89+Bj
		mov	al, [bp+arg_0]
		mov	byte_28916, al
		or	al, al
		jnz	short loc_16AA6
		jmp	loc_16BB0
; ---------------------------------------------------------------------------

loc_16AA6:				; CODE XREF: sub_16A89+18j
		cmp	word_26C4C, 4
		jz	short loc_16ABA
		mov	al, [bp+arg_0]
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+274Eh]
		jmp	short loc_16AC5
; ---------------------------------------------------------------------------

loc_16ABA:				; CODE XREF: sub_16A89+22j
		mov	al, [bp+arg_0]
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+272Eh]

loc_16AC5:				; CODE XREF: sub_16A89+2Fj
		mov	[bp+var_A], al
		cmp	[bp+var_A], 0
		jz	short loc_16AD4
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16AD4:				; CODE XREF: sub_16A89+43j
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+3258h]
		mov	dx, [bx+3256h]
		mov	word ptr [bp+var_4], dx
		mov	word ptr [bp+var_4+2], ax
		mov	[bp+var_9], 0

loc_16AF1:				; CODE XREF: sub_16A89+91j
					; sub_16A89+ECj
		mov	al, [bp+var_9]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4CBEh]
		mov	dx, [bx+4CBCh]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+arg_0], al
		inc	[bp+var_9]
		mov	ah, 0
		or	ax, ax
		jz	short loc_16AF1
		cmp	[bp+arg_0], 0FFh
		jnz	short loc_16B68
		mov	[bp+var_9], 0

loc_16B26:				; CODE XREF: sub_16A89+CCj
		mov	al, [bp+var_9]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+4CBEh]
		mov	dx, [bx+4CBCh]
		mov	word ptr [bp+var_8], dx
		mov	word ptr [bp+var_8+2], ax
		les	bx, [bp+var_8]
		mov	al, es:[bx]
		mov	[bp+arg_0], al
		inc	[bp+var_9]
		cmp	[bp+arg_0], 0
		jz	short loc_16B57
		cmp	[bp+arg_0], 0FFh
		jnz	short loc_16B26

loc_16B57:				; CODE XREF: sub_16A89+C6j
		mov	al, [bp+arg_0]
		mov	ah, 0
		or	ax, ax
		jz	short loc_16B78
		cmp	[bp+arg_0], 0FFh
		jnz	short loc_16BB0
		jmp	short loc_16BB0
; ---------------------------------------------------------------------------

loc_16B68:				; CODE XREF: sub_16A89+97j
		les	bx, [bp+var_8]
		mov	al, es:[bx+1]
		cmp	al, byte_28920
		jz	short loc_16B78
		jmp	loc_16AF1
; ---------------------------------------------------------------------------

loc_16B78:				; CODE XREF: sub_16A89+D5j
					; sub_16A89+EAj
		les	bx, [bp+var_8]
		mov	al, byte_28920
		mov	es:[bx+1], al
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		push	es
		les	si, [bp+var_4]
		mov	al, es:[si]
		pop	es
		mov	es:[bx+30h], al
		les	bx, [bp+var_4]
		mov	ax, es:[bx+4]
		mov	dx, es:[bx+2]
		les	bx, [bp+var_8]
		mov	es:[bx+2], dx
		mov	es:[bx+4], ax
		mov	byte ptr es:[bx], 1

loc_16BB0:				; CODE XREF: sub_16A89+1Aj
					; sub_16A89+DBj ...
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_16A89	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16BB5	proc near		; CODE XREF: sub_11FBE+5Cp
					; sub_11FBE+A2p ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16BC1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16BC1:				; CODE XREF: sub_16BB5+7j
		mov	al, [bp+arg_0]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx]
		mov	byte_27CD1, al
		pop	bp
		retn
sub_16BB5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16BD4	proc near		; CODE XREF: sub_11FBE+3Fp
					; sub_11FBE+85p ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16BE0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16BE0:				; CODE XREF: sub_16BD4+7j
		mov	al, [bp+arg_0]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+30h]
		mov	byte_28901, al
		pop	bp
		retn
sub_16BD4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16BF4	proc near		; CODE XREF: seg000:6637p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16C00
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16C00:				; CODE XREF: sub_16BF4+7j
		mov	al, [bp+arg_0]
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	al, es:[bx+60h]
		mov	byte_27D68, al
		pop	bp
		retn
sub_16BF4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16C14	proc near		; CODE XREF: seg000:6643p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16C20
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16C20:				; CODE XREF: sub_16C14+7j
		mov	byte_22BC0, 0Fh
		call	sub_16C95
		mov	al, byte_2891E
		mov	ah, 0
		les	bx, dword_2A488
		add	bx, ax
		mov	byte ptr es:[bx+60h], 0
		cmp	byte_27D68, 1
		jz	short loc_16C93
		cmp	byte_27D68, 23h	; '#'
		jz	short loc_16C93
		dec	byte_2A47F
		mov	al, byte_2A47F
		mov	ah, 0
		or	ax, ax
		jnz	short loc_16C80
		cmp	word_26C4C, 4
		jz	short loc_16C5E
		mov	al, 0Bh
		jmp	short loc_16C60
; ---------------------------------------------------------------------------

loc_16C5E:				; CODE XREF: sub_16C14+44j
		mov	al, 2Ch	; ','

loc_16C60:				; CODE XREF: sub_16C14+48j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp
		mov	al, byte_28922
		mov	byte_2891F, al
		mov	al, 59h	; 'Y'
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		mov	byte_2A561, 1
		mov	byte_28900, 0F2h ; 'Ú'
		jmp	short loc_16C93
; ---------------------------------------------------------------------------

loc_16C80:				; CODE XREF: sub_16C14+3Dj
		cmp	word_26C4C, 4
		jz	short loc_16C8B
		mov	al, 0Eh
		jmp	short loc_16C8D
; ---------------------------------------------------------------------------

loc_16C8B:				; CODE XREF: sub_16C14+71j
		mov	al, 21h	; '!'

loc_16C8D:				; CODE XREF: sub_16C14+75j
		push	ax
		call	sub_16E11
		inc	sp
		inc	sp

loc_16C93:				; CODE XREF: sub_16C14+29j
					; sub_16C14+30j ...
		pop	bp
		retn
sub_16C14	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16C95	proc near		; CODE XREF: sub_16C14+11p
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16CA1
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16CA1:				; CODE XREF: sub_16C95+7j
		mov	byte_2A558, 2
		mov	al, byte_2891E
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+274h]
		mov	cl, 4
		sar	ax, cl
		mov	word_29F4A, ax
		mov	al, byte_2891E
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		mov	bx, ax
		mov	ax, [bx+276h]
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	word_29F52, ax
		test	byte_2891E, 1
		jz	short loc_16CE0
		mov	ax, 1
		jmp	short loc_16CE3
; ---------------------------------------------------------------------------

loc_16CE0:				; CODE XREF: sub_16C95+44j
		mov	ax, 2

loc_16CE3:				; CODE XREF: sub_16C95+49j
		les	bx, dword ptr word_20C94
		mov	es:[bx+1Eh], ax
		add	word_2A484, 0FAh ; '˙'
		adc	word_2A486, 0
		cmp	byte_27D68, 23h	; '#'
		jnz	short loc_16D03
		inc	byte_27CCA
		jmp	short loc_16D24
; ---------------------------------------------------------------------------

loc_16D03:				; CODE XREF: sub_16C95+66j
		cmp	byte_27D68, 2Fh	; '/'
		jnz	short loc_16D12
		add	word_2A484, 2616h
		jmp	short loc_16D1F
; ---------------------------------------------------------------------------

loc_16D12:				; CODE XREF: sub_16C95+73j
		cmp	byte_27D68, 30h	; '0'
		jnz	short loc_16D24
		add	word_2A484, 0C256h

loc_16D1F:				; CODE XREF: sub_16C95+7Bj
		adc	word_2A486, 0

loc_16D24:				; CODE XREF: sub_16C95+6Cj
					; sub_16C95+82j
		pop	bp
		retn
sub_16C95	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16D26	proc near		; CODE XREF: sub_16717+12p
					; seg000:6DC5p	...

var_1		= byte ptr -1

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		cmp	word_26EFC, sp
		ja	short loc_16D34
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16D34:				; CODE XREF: sub_16D26+9j
		mov	al, byte_2891E
		push	ax
		call	sub_16BB5
		inc	sp
		inc	sp
		mov	al, byte_27CD1
		mov	ah, 0
		mov	bx, ax
		mov	al, [bx+4396h]
		mov	[bp+var_1], al
		cmp	[bp+var_1], 0
		jz	short loc_16D66
		mov	al, byte_27CD4
		mov	byte_27CD2, al
		mov	al, [bp+var_1]
		mov	byte_27CD3, al
		mov	al, [bp+var_1]
		push	ax
		call	sub_16D94
		inc	sp
		inc	sp

loc_16D66:				; CODE XREF: sub_16D26+29j
		mov	sp, bp
		pop	bp
		retn
sub_16D26	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16D6A	proc near		; CODE XREF: seg000:66B8p seg000:66F7p

arg_0		= dword	ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16D76
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16D76:				; CODE XREF: sub_16D6A+7j
		mov	al, byte_285F2
		mov	ah, 0
		or	ax, ax
		jnz	short loc_16D92
		mov	al, byte_27CD4
		mov	ah, 0
		les	bx, [bp+arg_0]
		add	bx, ax
		mov	al, es:[bx]
		push	ax
		call	sub_16987
		inc	sp
		inc	sp

loc_16D92:				; CODE XREF: sub_16D6A+13j
		pop	bp
		retn
sub_16D6A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16D94	proc near		; CODE XREF: sub_1440C+24p
					; sub_1450C+1Cp ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16DA0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16DA0:				; CODE XREF: sub_16D94+7j
		mov	al, byte_2891E
		mov	byte_2891F, al
		mov	al, [bp+arg_0]
		push	ax
		call	sub_169AA
		inc	sp
		inc	sp
		pop	bp
		retn
sub_16D94	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16DBD
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16DBD:				; CODE XREF: seg000:6DB8j
		dec	byte_2891E
		dec	byte_2890E
		call	sub_16D26
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16DD6
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16DD6:				; CODE XREF: seg000:6DD1j
		inc	byte_2891E
		inc	byte_2890E
		call	sub_16D26
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16DE3	proc near		; CODE XREF: sub_10258+14p
		push	bp
		mov	bp, sp
		push	si
		cmp	word_26EFC, sp
		ja	short loc_16DF0
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16DF0:				; CODE XREF: sub_16DE3+8j
		cmp	word_26C4C, 8000h
		jz	short loc_16E0E
		call	sub_188E5
		mov	si, ax
		mov	ax, word_26C4C
		and	ax, si
		mov	word_26C4C, ax
		push	word_26C4C
		call	sub_1891E
		inc	sp
		inc	sp

loc_16E0E:				; CODE XREF: sub_16DE3+13j
		pop	si
		pop	bp
		retn
sub_16DE3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16E11	proc near		; CODE XREF: sub_11E5E+21p
					; sub_11E90+21p ...

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16E1D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16E1D:				; CODE XREF: sub_16E11+7j
		cmp	word_26C4C, 8000h
		jz	short loc_16E2E
		mov	al, [bp+arg_0]
		push	ax
		call	sub_16E30
		inc	sp
		inc	sp

loc_16E2E:				; CODE XREF: sub_16E11+12j
		pop	bp
		retn
sub_16E11	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_16E30	proc near		; CODE XREF: sub_16E11+18p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_16E3C
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_16E3C:				; CODE XREF: sub_16E30+7j
		cmp	word_26C4C, 4
		jnz	short loc_16E6C
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	al, [bx+27AFh]
		mov	ah, 0
		push	ax
		mov	al, [bp+arg_0]
		mov	ah, 0
		shl	ax, 1
		mov	bx, ax
		mov	al, [bx+27AEh]
		mov	ah, 0
		push	ax
		call	sub_18A07
		add	sp, 4
		jmp	loc_170E5	; jumptable 00016E7E default case
; ---------------------------------------------------------------------------

loc_16E6C:				; CODE XREF: sub_16E30+11j
		mov	al, [bp+arg_0]
		mov	ah, 0
		dec	ax
		mov	bx, ax
		cmp	bx, 14h		; switch 21 cases
		jbe	short loc_16E7C
		jmp	loc_170E5	; jumptable 00016E7E default case
; ---------------------------------------------------------------------------

loc_16E7C:				; CODE XREF: sub_16E30+47j
		shl	bx, 1
		jmp	cs:off_170E7[bx] ; switch jump
; ---------------------------------------------------------------------------

loc_16E83:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 0
		push	ax
		push	ax
		mov	ax, 1C2h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3E8h
		jmp	loc_170D6
; ---------------------------------------------------------------------------

loc_16E9A:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 1
		push	ax
		push	ax
		mov	ax, 1C2h
		push	ax
		mov	ax, 0FFF6h
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 320h
		push	ax
		mov	ax, 28h	; '('
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16EB5:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0FFFFh	; jumptable 00016E7E case 2
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 1F3h
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1B8h
		push	ax
		mov	ax, 190h
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16ED3:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 4		; jumptable 00016E7E case 3
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0DCh ; '‹'
		push	ax
		mov	ax, 5Ah	; 'Z'
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16EF1:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 2		; jumptable 00016E7E case 4
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1B8h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 3E8h
		push	ax
		mov	ax, 19h
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16F0F:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 5		; jumptable 00016E7E case 5
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 1B8h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 44Ch
		push	ax
		mov	ax, 14h
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16F2D:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 3		; jumptable 00016E7E case 6
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1B8h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4B0h
		push	ax
		mov	ax, 0Fh
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16F4B:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 5		; jumptable 00016E7E case 7
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0FFFBh
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0DCh ; '‹'
		push	ax
		mov	ax, 28h	; '('
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16F69:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 8
		push	ax
		push	ax
		mov	ax, 1C2h
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 32h	; '2'
		jmp	loc_170D6
; ---------------------------------------------------------------------------

loc_16F80:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0Ah		; jumptable 00016E7E case 9
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 15Dh
		push	ax
		mov	ax, 32h	; '2'
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 0Fh
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16F9E:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0FFFCh	; jumptable 00016E7E case 10
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1F3h
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 2
		push	ax
		call	sub_19502
		add	sp, 0Ch
		jmp	loc_170E5	; jumptable 00016E7E default case
; ---------------------------------------------------------------------------

loc_16FBF:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 2		; jumptable 00016E7E case 11
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1A4h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4B0h
		jmp	loc_170D6
; ---------------------------------------------------------------------------

loc_16FD9:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0Fh		; jumptable 00016E7E case 12
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 15Dh
		push	ax
		mov	ax, 32h	; '2'
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 14h
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_16FF7:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		xor	ax, ax		; jumptable 00016E7E case 13
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 32h	; '2'
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_17014:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 14
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 12Ch
		push	ax
		mov	ax, 190h
		jmp	loc_170DA
; ---------------------------------------------------------------------------

loc_17032:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 2		; jumptable 00016E7E case 15
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1A4h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4B0h
		jmp	loc_170D6
; ---------------------------------------------------------------------------

loc_1704C:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0FFFCh	; jumptable 00016E7E case 16
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1F3h
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 2
		push	ax
		call	sub_19502
		add	sp, 0Ch
		jmp	short loc_170E5	; jumptable 00016E7E default case
; ---------------------------------------------------------------------------

loc_1706C:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 0FFFCh	; jumptable 00016E7E case 17
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 1F3h
		push	ax
		mov	ax, 1Eh
		push	ax
		mov	ax, 50h	; 'P'
		push	ax
		mov	ax, 2
		push	ax
		call	sub_19502
		add	sp, 0Ch
		jmp	short loc_170E5	; jumptable 00016E7E default case
; ---------------------------------------------------------------------------

loc_1708C:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 18
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 1
		push	ax
		push	ax
		mov	ax, 12Ch
		push	ax
		mov	ax, 320h
		jmp	short loc_170DA
; ---------------------------------------------------------------------------

loc_170A6:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		xor	ax, ax		; jumptable 00016E7E case 19
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 0C8h ; '»'
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 32h	; '2'
		jmp	short loc_170DA
; ---------------------------------------------------------------------------

loc_170C2:				; CODE XREF: sub_16E30+4Ej
					; DATA XREF: seg000:off_170E7o
		mov	ax, 1		; jumptable 00016E7E case 20
		push	ax
		push	ax
		mov	ax, 1C2h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 258h

loc_170D6:				; CODE XREF: sub_16E30+67j
					; sub_16E30+14Dj ...
		push	ax
		mov	ax, 1Eh

loc_170DA:				; CODE XREF: sub_16E30+82j
					; sub_16E30+A0j ...
		push	ax
		mov	ax, 2
		push	ax
		call	sub_19488
		add	sp, 10h

loc_170E5:				; CODE XREF: sub_16E30+39j
					; sub_16E30+49j ...
		pop	bp		; jumptable 00016E7E default case
		retn
sub_16E30	endp

; ---------------------------------------------------------------------------
off_170E7	dw offset loc_16E83	; DATA XREF: sub_16E30+4Er
		dw offset loc_16E9A	; jump table for switch	statement
		dw offset loc_16EB5
		dw offset loc_16ED3
		dw offset loc_16EF1
		dw offset loc_16F0F
		dw offset loc_16F2D
		dw offset loc_16F4B
		dw offset loc_16F69
		dw offset loc_16F80
		dw offset loc_16F9E
		dw offset loc_16FBF
		dw offset loc_16FD9
		dw offset loc_16FF7
		dw offset loc_17014
		dw offset loc_17032
		dw offset loc_1704C
		dw offset loc_1706C
		dw offset loc_1708C
		dw offset loc_170A6
		dw offset loc_170C2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17111	proc near		; CODE XREF: sub_1238E+22p
					; sub_14C99+120p ...
		push	bp
		mov	bp, sp
		cmp	word_26EFC, sp
		ja	short loc_1711D
		call	F_OVERFLOW@
; ---------------------------------------------------------------------------

loc_1711D:				; CODE XREF: sub_17111+7j
		pop	bp
		retn
sub_17111	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17120	proc near		; CODE XREF: _main+46p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		mov	al, [bp+arg_0]
		mov	ah, 0
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		pop	bp
		retn
sub_17120	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 2Eh
		push	si
		xor	si, si
		mov	ax, 10h
		push	ax
		push	ss
		lea	ax, [bp-2Eh]
		push	ax
		push	word ptr [bp+6]
		push	word ptr [bp+4]
		call	_findfirst
		add	sp, 0Ah
		cmp	ax, 0FFFFh
		jnz	short loc_17155
		mov	ax, 0FFFFh
		jmp	loc_17218
; ---------------------------------------------------------------------------

loc_17155:				; CODE XREF: seg000:714Dj seg000:71D7j
		cmp	byte ptr [bp-10h], 2Eh ; '.'
		jz	short loc_171C2
		cmp	byte ptr [bp-19h], 10h
		jnz	short loc_17169
		les	bx, [bp+8]
		mov	byte ptr es:[bx+si], 2Ah ; '*'
		inc	si

loc_17169:				; CODE XREF: seg000:715Fj
		mov	byte ptr [bp-1], 0
		jmp	short loc_17188
; ---------------------------------------------------------------------------

loc_1716F:				; CODE XREF: seg000:7198j
		mov	al, [bp-1]
		mov	ah, 0
		lea	dx, [bp-10h]
		add	ax, dx
		mov	bx, ax
		mov	al, ss:[bx]
		les	bx, [bp+8]
		mov	es:[bx+si], al
		inc	si
		inc	byte ptr [bp-1]

loc_17188:				; CODE XREF: seg000:716Dj
		mov	al, [bp-1]
		mov	ah, 0
		lea	dx, [bp-10h]
		add	ax, dx
		mov	bx, ax
		cmp	byte ptr ss:[bx], 0
		jnz	short loc_1716F
		cmp	byte ptr [bp-19h], 10h
		jnz	short loc_171A5
		mov	ax, 1
		jmp	short loc_171A7
; ---------------------------------------------------------------------------

loc_171A5:				; CODE XREF: seg000:719Ej
		xor	ax, ax

loc_171A7:				; CODE XREF: seg000:71A3j
		mov	dl, [bp-1]
		add	dl, al
		mov	[bp-1],	dl
		jmp	short loc_171BC
; ---------------------------------------------------------------------------

loc_171B1:				; CODE XREF: seg000:71C0j
		les	bx, [bp+8]
		mov	byte ptr es:[bx+si], 20h ; ' '
		inc	si
		inc	byte ptr [bp-1]

loc_171BC:				; CODE XREF: seg000:71AFj
		cmp	byte ptr [bp-1], 0Eh
		jb	short loc_171B1

loc_171C2:				; CODE XREF: seg000:7159j
		push	ss
		lea	ax, [bp-2Eh]
		push	ax
		call	_findnext
		add	sp, 4
		or	ax, ax
		jnz	short loc_171DA
		cmp	si, 56Ah
		jge	short loc_171DA
		jmp	loc_17155
; ---------------------------------------------------------------------------

loc_171DA:				; CODE XREF: seg000:71CFj seg000:71D5j
		xor	si, si
		jmp	short loc_1720D
; ---------------------------------------------------------------------------

loc_171DE:				; CODE XREF: seg000:7214j
		les	bx, [bp+8]
		cmp	byte ptr es:[bx+si], 20h ; ' '
		jnz	short loc_1720C
		jmp	short loc_171EA
; ---------------------------------------------------------------------------

loc_171E9:				; CODE XREF: seg000:71F1j
		inc	si

loc_171EA:				; CODE XREF: seg000:71E7j
		les	bx, [bp+8]
		cmp	byte ptr es:[bx+si], 20h ; ' '
		jz	short loc_171E9
		mov	ax, si
		add	ax, 0FFFEh
		mov	si, ax
		add	bx, ax
		mov	byte ptr es:[bx], 1Bh
		inc	ax
		mov	si, ax
		mov	bx, [bp+8]
		add	bx, ax
		mov	byte ptr es:[bx], 4Ch ;	'L'

loc_1720C:				; CODE XREF: seg000:71E5j
		inc	si

loc_1720D:				; CODE XREF: seg000:71DCj
		les	bx, [bp+8]
		cmp	byte ptr es:[bx+si], 0
		jnz	short loc_171DE
		xor	ax, ax

loc_17218:				; CODE XREF: seg000:7152j
		pop	si
		mov	sp, bp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		call	_getdisk
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		push	word ptr [bp+4]
		call	_getcurdir
		add	sp, 6
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17235	proc near		; CODE XREF: sub_1745E+19p
					; seg000:74A3p

var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_1		= byte ptr -1
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch
arg_A		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		push	di
		mov	[bp+var_1], 0
		xor	si, si
		mov	[bp+var_6], 0
		mov	[bp+var_4], 0
		jmp	loc_172CF
; ---------------------------------------------------------------------------

loc_17250:				; CODE XREF: sub_17235+ABj
		cmp	[bp+arg_A], 0
		jl	short loc_1726D
		jg	short loc_1725F
		cmp	[bp+arg_8], 0FA00h
		jbe	short loc_1726D

loc_1725F:				; CODE XREF: sub_17235+21j
		mov	di, 0FA00h
		sub	[bp+arg_8], 0FA00h
		sbb	[bp+arg_A], 0
		jmp	short loc_1727A
; ---------------------------------------------------------------------------

loc_1726D:				; CODE XREF: sub_17235+1Fj
					; sub_17235+28j
		mov	di, [bp+arg_8]
		mov	[bp+arg_8], 0
		mov	[bp+arg_A], 0

loc_1727A:				; CODE XREF: sub_17235+36j
		push	di
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	[bp+arg_2]
		call	ss:off_203B4[bp]
		add	sp, 8
		mov	si, ax
		cmp	si, di
		jz	short loc_17295
		mov	ax, 1
		jmp	short loc_17297
; ---------------------------------------------------------------------------

loc_17295:				; CODE XREF: sub_17235+59j
		xor	ax, ax

loc_17297:				; CODE XREF: sub_17235+5Ej
		mov	[bp+var_1], al
		add	[bp+var_6], si
		adc	[bp+var_4], 0
		mov	ax, [bp+arg_4]
		mov	[bp+var_A], ax
		mov	[bp+var_8], 0
		add	[bp+var_A], si
		adc	[bp+var_8], 0
		mov	ax, [bp+var_A]
		mov	[bp+arg_4], ax
		mov	[bp+var_A], 0
		mov	ax, [bp+var_A]
		or	ax, [bp+var_8]
		jz	short loc_172CF
		add	[bp+arg_4], 0
		adc	[bp+arg_6], 1000h

loc_172CF:				; CODE XREF: sub_17235+18j
					; sub_17235+8Fj
		mov	ax, [bp+arg_8]
		or	ax, [bp+arg_A]
		jz	short loc_172E3
		mov	al, [bp+var_1]
		mov	ah, 0
		or	ax, ax
		jnz	short loc_172E3
		jmp	loc_17250
; ---------------------------------------------------------------------------

loc_172E3:				; CODE XREF: sub_17235+A0j
					; sub_17235+A9j
		mov	dx, [bp+var_4]
		mov	ax, [bp+var_6]
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_17235	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_172EF(int (__cdecl *handler)())
sub_172EF	proc near		; CODE XREF: sub_10282+14p

handler		= dword	ptr  4

		push	bp
		mov	bp, sp
		mov	ax, word ptr [bp+handler+2]
		mov	word_2A568, ax
		push	word ptr [bp+handler] ;	handler
		call	_harderr
		inc	sp
		inc	sp
		mov	byte_25096, 1
		pop	bp
		retn
sub_172EF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17307	proc near		; CODE XREF: sub_10282+7Ep
					; sub_10D9D+26p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		mov	dx, [bp+arg_0]
		mov	word ptr dword_2A564, dx
		mov	word ptr dword_2A564+2,	ax
		pop	bp
		retn
sub_17307	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_17319(int handle)
sub_17319	proc near		; CODE XREF: sub_10A07+35p
					; sub_10A07+73p ...

handle		= word ptr  4

		push	bp
		mov	bp, sp
		push	si
		push	[bp+handle]	; handle
		call	_close
		inc	sp
		inc	sp
		mov	si, ax
		pop	si
		pop	bp
		retn
sub_17319	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		mov	ax, 8000h
		push	ax
		mov	ax, [bp+4]
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		push	word ptr es:[bx+2]
		push	word ptr es:[bx]
		call	_open
		add	sp, 6
		mov	si, ax
		push	si
		call	_filelength
		inc	sp
		inc	sp
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		push	si
		call	_close
		inc	sp
		inc	sp
		mov	dx, [bp-2]
		mov	ax, [bp-4]
		pop	si
		mov	sp, bp
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1736F	proc near		; CODE XREF: sub_10A07+12p
					; sub_10A07+50p ...

var_1		= byte ptr -1
arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		dec	sp
		dec	sp
		push	si
		push	di
		mov	di, [bp+arg_0]
		mov	[bp+var_1], 0
		mov	al, byte_25096
		mov	ah, 0
		or	ax, ax
		jnz	short loc_1738C
		mov	word_2A568, 74D4h

loc_1738C:				; CODE XREF: sub_1736F+15j
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		cmp	byte ptr es:[bx+4], 7Ah	; 'z'
		jz	short loc_173E9

loc_173A0:				; CODE XREF: sub_1736F+78j
		push	[bp+arg_2]
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		mov	al, es:[bx+4]
		push	ax
		call	sub_174D5
		add	sp, 4
		mov	si, ax
		or	ax, ax
		jz	short loc_173DB
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		mov	al, es:[bx+4]
		mov	ah, 0
		push	ax
		call	word_2A568
		inc	sp
		inc	sp

loc_173DB:				; CODE XREF: sub_1736F+50j
		or	si, si
		jz	short loc_173E9
		mov	al, [bp+var_1]
		inc	[bp+var_1]
		cmp	al, 0Ah
		jb	short loc_173A0

loc_173E9:				; CODE XREF: sub_1736F+2Fj
					; sub_1736F+6Ej
		cmp	[bp+var_1], 0Ah
		ja	short loc_17456
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		mov	al, es:[bx+4]
		mov	byte_25097, al

loc_17403:				; CODE XREF: sub_1736F+E5j
		mov	ax, 180h
		push	ax
		mov	ax, [bp+arg_2]
		or	ax, 8004h
		push	ax		; access
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		push	word ptr es:[bx+2]
		push	word ptr es:[bx] ; path
		call	_open
		add	sp, 8
		mov	si, ax
		or	ax, ax
		jge	short loc_17448
		mov	ax, di
		mov	dx, 0Ah
		imul	dx
		les	bx, dword_2A564
		add	bx, ax
		mov	al, es:[bx+4]
		mov	ah, 0
		push	ax
		call	word_2A568
		inc	sp
		inc	sp

loc_17448:				; CODE XREF: sub_1736F+BDj
		or	si, si
		jge	short loc_17456
		mov	al, [bp+var_1]
		inc	[bp+var_1]
		cmp	al, 0Ah
		jb	short loc_17403

loc_17456:				; CODE XREF: sub_1736F+7Ej
					; sub_1736F+DBj
		mov	ax, si
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn
sub_1736F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1745E	proc near		; CODE XREF: sub_10A07+2Ep
					; sub_10A07+6Cp ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	[bp+arg_8]
		push	[bp+arg_6]
		push	[bp+arg_4]
		push	[bp+arg_2]
		push	[bp+arg_0]
		mov	ax, 0A3AEh
		push	ax
		call	sub_17235
		add	sp, 0Ch
		mov	[bp+var_4], ax
		mov	[bp+var_2], dx
		mov	ax, [bp+var_4]
		mov	sp, bp
		pop	bp
		retn
sub_1745E	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 4
		push	word ptr [bp+0Ch]
		push	word ptr [bp+0Ah]
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		push	word ptr [bp+4]
		mov	ax, 9DFEh
		push	ax
		call	sub_17235
		add	sp, 0Ch
		mov	[bp-4],	ax
		mov	[bp-2],	dx
		mov	ax, [bp-4]
		mov	sp, bp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	word ptr [bp+4]
		call	_setdisk
		inc	sp
		inc	sp
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	word ptr [bp+6]
		push	word ptr [bp+4]
		call	_chdir
		add	sp, 4
		pop	bp
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_174D5	proc near		; CODE XREF: sub_1736F+46p

arg_0		= byte ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, 180h
		push	ax
		mov	ax, [bp+arg_2]
		or	ax, 8004h
		push	ax		; access
		push	ds
		mov	ax, 4CE8h
		push	ax		; path
		call	_open
		add	sp, 8
		mov	si, ax
		or	si, si
		jle	short loc_1752C
		xor	ax, ax
		push	ax
		mov	dx, 4
		push	ax
		push	dx
		push	ds
		mov	ax, 0A1BAh
		push	ax
		push	si
		call	sub_1745E
		add	sp, 0Ch
		push	si		; handle
		call	sub_17319
		inc	sp
		inc	sp
		mov	al, byte_2A56A
		mov	ah, 0
		mov	dl, [bp+arg_0]
		mov	dh, 0
		sub	ax, dx
		mov	si, ax
		cmp	byte_2A56A, 7Ah	; 'z'
		jz	short loc_1752A
		cmp	[bp+arg_0], 7Ah	; 'z'
		jnz	short loc_1752C

loc_1752A:				; CODE XREF: sub_174D5+4Dj
		xor	si, si

loc_1752C:				; CODE XREF: sub_174D5+1Ej
					; sub_174D5+53j
		mov	ax, si
		pop	si
		pop	bp
		retn
sub_174D5	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_17532	proc near		; CODE XREF: sub_10282+2Bp
		pushf
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	es, ax
		assume es:dseg
		cld
		mov	di, 4CF2h
		mov	cx, 20h	; ' '
		xor	ax, ax
		rep stosw
		mov	ax, 0
		call	sub_177D9

loc_17553:				; CODE XREF: sub_17235+4Fp
					; DATA XREF: dseg:off_203B4o
		mov	ax, 1
sub_17532	endp ; sp-analysis failed

		call	sub_177D9
		pop	es
		assume es:nothing
		pop	ds
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		popf
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17563	proc near		; CODE XREF: sub_10282+39p

arg_0		= word ptr  4
arg_2		= dword	ptr  6

		push	bp
		mov	bp, sp
		push	ds
		push	es
		push	si
		push	di
		mov	ax, [bp+arg_0]
		xor	ah, ah
		les	si, [bp+arg_2]
		call	sub_1757B
		pop	di
		pop	si
		pop	es
		pop	ds
		pop	bp
		retn
sub_17563	endp


; =============== S U B	R O U T	I N E =======================================


sub_1757B	proc near		; CODE XREF: sub_17563+Fp
		push	ds
		mov	dx, seg	dseg
		mov	ds, dx
		cmp	al, 10h
		jb	short loc_1758B
		mov	dx, 7676h
		jmp	loc_1762A
; ---------------------------------------------------------------------------

loc_1758B:				; CODE XREF: sub_1757B+8j
		add	ax, ax
		add	ax, ax
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, 4CF2h
		add	bx, ax
		mov	[bx], si
		mov	ax, es
		mov	[bx+2],	ax
		pop	ds
		retn
sub_1757B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_175A2	proc near		; CODE XREF: sub_10D9D+1B8p
					; sub_11DDE+11p ...

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		pop	bp
		push	ds
		push	es
		push	si
		push	di
		mov	dx, seg	dseg
		mov	ds, dx
		xor	ah, ah
		cmp	ax, 10h
		jb	short loc_175BF
		mov	dx, 76C8h
		jmp	short loc_1762A
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_175BF:				; CODE XREF: sub_175A2+15j
		add	ax, ax
		add	ax, ax
		mov	bx, 4CF2h
		add	bx, ax
		les	si, [bx]
		mov	ax, es
		or	ax, si
		jnz	short loc_175D5
		mov	dx, 7634h
		jmp	short loc_1762A
; ---------------------------------------------------------------------------

loc_175D5:				; CODE XREF: sub_175A2+2Cj
		mov	dx, 0

loc_175D8:				; CODE XREF: sub_175A2+47j
		mov	al, es:[si]
		inc	si
		cmp	al, 0FDh ; '˝'
		jnb	short loc_175EB
		push	dx
		push	si
		call	sub_1773C
		pop	si
		pop	dx
		or	dl, ch
		jmp	short loc_175D8
; ---------------------------------------------------------------------------

loc_175EB:				; CODE XREF: sub_175A2+3Cj
		cmp	al, 0FFh
		jz	short loc_17621
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_250F2

loc_175F9:				; CODE XREF: sub_175A2+7Aj
		mov	al, es:[si]
		inc	si
		cmp	al, 0FDh ; '˝'
		jnb	short loc_17616
		mov	dh, al

loc_17603:				; CODE XREF: sub_175A2+6Ej
					; sub_175A2+72j
		mov	al, es:[si]
		inc	si
		cmp	al, 0FDh ; '˝'
		jnb	short loc_17616
		and	al, 7Fh
		xlat
		and	al, al
		jz	short loc_17603
		or	dl, dh
		jmp	short loc_17603
; ---------------------------------------------------------------------------

loc_17616:				; CODE XREF: sub_175A2+5Dj
					; sub_175A2+67j
		cmp	al, 0FEh ; '˛'
		jz	short loc_17620
		cmp	al, 0FFh
		jnz	short loc_175F9
		jmp	short loc_17621
; ---------------------------------------------------------------------------

loc_17620:				; CODE XREF: sub_175A2+76j
		pop	ds

loc_17621:				; CODE XREF: sub_175A2+4Bj
					; sub_175A2+7Cj
		pop	di
		pop	si
		pop	es
		pop	ds
		mov	al, dl
		xor	ah, ah
		retn
; ---------------------------------------------------------------------------

loc_1762A:				; CODE XREF: sub_1757B+Dj
					; sub_175A2+1Aj ...
		mov	ax, cs
		mov	ds, ax
		assume ds:seg000
		mov	ah, 9
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"

loc_17632:				; CODE XREF: sub_175A2:loc_17632j
		jmp	short loc_17632
sub_175A2	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 45h,	2 dup(72h), 65h, 75h, 72h, 20h,	64h, 61h, 6Eh
		db 73h,	20h, 54h, 73h, 74h, 4Ah, 6Fh, 79h, 3Ah,	20h, 75h
		db 74h,	69h, 6Ch, 69h, 73h, 61h, 74h, 69h, 6Fh,	6Eh, 20h
		db 64h,	27h, 75h, 6Eh, 20h, 6Ah, 6Fh, 79h, 73h,	74h, 69h
		db 63h,	6Bh, 20h, 6Ch, 6Fh, 67h, 69h, 71h, 75h,	65h, 20h
		db 6Eh,	6Fh, 6Eh, 20h, 64h, 65h, 66h, 69h, 6Eh,	69h, 2Eh
		db 24h,	45h, 2 dup(72h), 65h, 75h, 72h,	20h, 64h, 61h
		db 6Eh,	73h, 20h, 44h, 65h, 66h, 4Ah, 6Fh, 79h,	3Ah, 20h
		db 74h,	65h, 6Eh, 74h, 61h, 74h, 69h, 76h, 65h,	20h, 64h
		db 27h,	69h, 6Eh, 69h, 74h, 69h, 61h, 6Ch, 69h,	73h, 61h
		db 74h,	69h, 6Fh, 6Eh, 20h, 64h, 27h, 75h, 6Eh,	20h, 6Ah
		db 6Fh,	79h, 73h, 74h, 69h, 63h, 6Bh, 20h, 6Ch,	6Fh, 67h
		db 69h,	71h, 75h, 65h, 20h, 68h, 6Fh, 72h, 73h,	20h, 6Ch
		db 69h,	6Dh, 69h, 74h, 65h, 2Eh, 24h, 45h, 2 dup(72h)
		db 65h,	75h, 72h, 20h, 64h, 61h, 6Eh, 73h, 20h,	54h, 73h
		db 74h,	4Ah, 6Fh, 79h, 3Ah, 20h, 74h, 65h, 6Eh,	74h, 61h
		db 74h,	69h, 76h, 65h, 20h, 64h, 27h, 75h, 74h,	69h, 6Ch
		db 69h,	73h, 61h, 74h, 69h, 6Fh, 6Eh, 20h, 64h,	27h, 75h
		db 6Eh,	20h, 6Ah, 6Fh, 79h, 73h, 74h, 69h, 63h,	6Bh, 20h
		db 6Ch,	6Fh, 67h, 69h, 71h, 75h, 65h, 20h, 68h,	6Fh, 72h
		db 73h,	20h, 6Ch, 69h, 6Dh, 69h, 74h, 65h, 2Eh,	24h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp
		push	ds
		push	bx
		mov	bx, seg	dseg
		mov	ds, bx
		assume ds:dseg
		mov	bx, 4DCAh
		and	al, 1
		jz	short loc_1772F
		mov	bx, 4DCBh

loc_1772F:				; CODE XREF: seg000:772Aj
		mov	al, [bx]
		xor	ah, ah
		and	ax, ax
		jns	short loc_17739
		xor	ax, ax

loc_17739:				; CODE XREF: seg000:7735j
		pop	bx
		pop	ds
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1773C	proc near		; CODE XREF: sub_175A2+40p
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		push	ax
		call	sub_17861
		pop	bx
		xor	ch, ch
		cmp	ax, 0FFFFh
		jz	short loc_17795
		and	bx, 1
		jz	short loc_17797
		cmp	ah, byte_250EB
		jnb	short loc_1775E
		or	ch, 4
		jmp	short loc_17767
; ---------------------------------------------------------------------------

loc_1775E:				; CODE XREF: sub_1773C+1Bj
		cmp	ah, byte_250ED
		jb	short loc_17767
		or	ch, 8

loc_17767:				; CODE XREF: sub_1773C+20j
					; sub_1773C+26j
		cmp	al, byte_250EA
		jnb	short loc_17772
		or	ch, 1
		jmp	short loc_1777B
; ---------------------------------------------------------------------------

loc_17772:				; CODE XREF: sub_1773C+2Fj
		cmp	al, byte_250EC
		jb	short loc_1777B
		or	ch, 2

loc_1777B:				; CODE XREF: sub_1773C+34j
					; sub_1773C+3Aj
		mov	dx, 201h
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		not	al
		test	al, 40h
		jz	short loc_17788
		or	ch, 10h

loc_17788:				; CODE XREF: sub_1773C+47j
		test	al, 80h
		jz	short loc_1778F
		or	ch, 20h

loc_1778F:				; CODE XREF: sub_1773C+4Ej
		mov	byte_250E5, ch
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_17795:				; CODE XREF: sub_1773C+10j
					; sub_1773C+57j ...
		pop	ds
		retn
; ---------------------------------------------------------------------------

loc_17797:				; CODE XREF: sub_1773C+15j
		cmp	ah, byte_250E7
		jnb	short loc_177A2
		or	ch, 4
		jmp	short loc_177AB
; ---------------------------------------------------------------------------

loc_177A2:				; CODE XREF: sub_1773C+5Fj
		cmp	ah, byte_250E9
		jb	short loc_177AB
		or	ch, 8

loc_177AB:				; CODE XREF: sub_1773C+64j
					; sub_1773C+6Aj
		cmp	al, byte_250E6
		jnb	short loc_177B6
		or	ch, 1
		jmp	short loc_177BF
; ---------------------------------------------------------------------------

loc_177B6:				; CODE XREF: sub_1773C+73j
		cmp	al, byte_250E8
		jb	short loc_177BF
		or	ch, 2

loc_177BF:				; CODE XREF: sub_1773C+78j
					; sub_1773C+7Ej
		mov	dx, 201h
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		not	al
		test	al, 10h
		jz	short loc_177CC
		or	ch, 10h

loc_177CC:				; CODE XREF: sub_1773C+8Bj
		test	al, 20h
		jz	short loc_177D3
		or	ch, 20h

loc_177D3:				; CODE XREF: sub_1773C+92j
		mov	byte_250E4, ch
		jmp	short loc_17795
sub_1773C	endp


; =============== S U B	R O U T	I N E =======================================


sub_177D9	proc near		; CODE XREF: sub_17532+1Ep
					; seg000:7556p
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, 4DCAh
		and	ax, ax
		jz	short loc_177E9
		mov	bx, 4DCBh

loc_177E9:				; CODE XREF: sub_177D9+Bj
		mov	cl, 1
		mov	[bx], cl
		mov	bx, ax
		push	ax
		push	bx
		call	sub_17861
		pop	bx
		pop	cx
		cmp	ax, 0FFFFh
		jz	short loc_1784A
		cmp	ah, 2
		jb	short loc_1783E
		cmp	al, 2
		jb	short loc_1783E
		mov	cx, ax
		shr	al, 1
		shr	ah, 1
		mov	dx, ax
		add	cx, cx
		sub	cx, dx
		mov	ax, seg	dseg
		mov	ds, ax
		and	bx, 1
		jz	short loc_1782C
		mov	byte_250EA, dl
		mov	byte_250EB, dh
		mov	byte_250EC, cl
		mov	byte_250ED, ch
		jmp	short loc_1783C
; ---------------------------------------------------------------------------

loc_1782C:				; CODE XREF: sub_177D9+3Fj
		mov	byte_250E6, dl
		mov	byte_250E7, dh
		mov	byte_250E8, cl
		mov	byte_250E9, ch

loc_1783C:				; CODE XREF: sub_177D9+51j
					; sub_177D9+7Fj
		pop	ds
		retn
; ---------------------------------------------------------------------------

loc_1783E:				; CODE XREF: sub_177D9+25j
					; sub_177D9+29j
		push	cx
		mov	cx, 0

loc_17842:				; CODE XREF: sub_177D9:loc_17842j
		loop	loc_17842
		pop	cx
		mov	ax, 0FFFFh
		jmp	short loc_1784C
; ---------------------------------------------------------------------------

loc_1784A:				; CODE XREF: sub_177D9+20j
		xor	al, al

loc_1784C:				; CODE XREF: sub_177D9+6Fj
		mov	bx, 4DCAh
		and	cx, cx
		jz	short loc_17856
		mov	bx, 4DCBh

loc_17856:				; CODE XREF: sub_177D9+78j
		mov	[bx], al
		jmp	short loc_1783C
sub_177D9	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp

; =============== S U B	R O U T	I N E =======================================


sub_17861	proc near		; CODE XREF: sub_1773C+7p
					; sub_177D9+18p ...
		pushf
		cli
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		and	al, 1
		jz	short loc_17881
		mov	bx, 408h
		mov	al, byte_2517B
		dec	al
		jz	short loc_17895
		inc	al
		jz	short loc_1787E
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_1787E:				; CODE XREF: sub_17861+18j
		jmp	loc_17967
; ---------------------------------------------------------------------------

loc_17881:				; CODE XREF: sub_17861+Aj
		mov	bx, 102h
		mov	al, byte_2517A
		dec	al
		jz	short loc_17895
		inc	al
		jz	short loc_17892
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_17892:				; CODE XREF: sub_17861+2Cj
		jmp	loc_17953
; ---------------------------------------------------------------------------

loc_17895:				; CODE XREF: sub_17861+14j
					; sub_17861+28j
		mov	dx, 201h
		xor	cx, cx

loc_1789A:				; CODE XREF: sub_17861+3Cj
					; sub_17861+42j
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		test	al, bl
		loopne	loc_1789A
		jcxz	short loc_178A5
		test	al, bh
		loopne	loc_1789A

loc_178A5:				; CODE XREF: sub_17861+3Ej
		jcxz	short loc_178A9
		jmp	short loc_178AC
; ---------------------------------------------------------------------------

loc_178A9:				; CODE XREF: sub_17861:loc_178A5j
		jmp	loc_1792E
; ---------------------------------------------------------------------------

loc_178AC:				; CODE XREF: sub_17861+46j
		mov	dx, 201h
		out	dx, al		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		test	al, bh
		jnz	short loc_178DA
		test	al, bl
		jnz	short loc_178DA
		mov	al, 6
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		push	cx
		mov	cx, 64h	; 'd'

loc_178C1:				; CODE XREF: sub_17861:loc_178C1j
		loop	loc_178C1
		pop	cx

loc_178C4:				; CODE XREF: sub_17861+6Cj
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		mov	ah, al
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		and	ah, 10h
		jz	short loc_178C4

loc_178CF:				; CODE XREF: sub_17861+77j
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		mov	ah, al
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		and	ah, 10h
		jnz	short loc_178CF

loc_178DA:				; CODE XREF: sub_17861+52j
					; sub_17861+56j
		xor	cx, cx
		mov	word_250E2, cx
		mov	cx, 3E8h

loc_178E3:				; CODE XREF: sub_17861+8Bj
					; sub_17861+ADj
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		mov	ah, al
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		and	ah, 10h
		jz	short loc_178E3
		inc	word_250E2
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		and	bl, bl
		jz	short loc_178FF
		test	al, bl
		jz	short loc_17920
		and	bh, bh
		jz	short loc_17903

loc_178FF:				; CODE XREF: sub_17861+94j
		test	al, bh
		jz	short loc_17912

loc_17903:				; CODE XREF: sub_17861+9Cj
					; sub_17861+ABj ...
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		mov	ah, al
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		test	ah, 10h
		jnz	short loc_17903
		loop	loc_178E3
		jmp	short loc_1792E
; ---------------------------------------------------------------------------

loc_17912:				; CODE XREF: sub_17861+A0j
		mov	ax, word_250E2
		mov	word_25176, ax
		xor	bh, bh
		and	bl, bl
		jz	short loc_17933
		jmp	short loc_17903
; ---------------------------------------------------------------------------

loc_17920:				; CODE XREF: sub_17861+98j
		mov	ax, word_250E2
		mov	word_25178, ax
		xor	bl, bl
		and	bh, bh
		jz	short loc_17933
		jmp	short loc_17903
; ---------------------------------------------------------------------------

loc_1792E:				; CODE XREF: sub_17861+1Aj
					; sub_17861+2Ej ...
		mov	ax, 0FFFFh
		jmp	short loc_17950
; ---------------------------------------------------------------------------

loc_17933:				; CODE XREF: sub_17861+BBj
					; sub_17861+C9j
		mov	dx, word_25176
		and	dx, dx
		jns	short loc_1793D
		xor	dx, dx

loc_1793D:				; CODE XREF: sub_17861+D8j
		mov	cl, 1
		shr	dx, cl
		mov	ax, word_25178
		and	ax, ax
		jns	short loc_1794A
		xor	ax, ax

loc_1794A:				; CODE XREF: sub_17861+E5j
		mov	cl, 1
		shr	ax, cl
		mov	ah, dl

loc_17950:				; CODE XREF: sub_17861+D0j
					; sub_17861+127j
		pop	ds
		popf
		retn
; ---------------------------------------------------------------------------

loc_17953:				; CODE XREF: sub_17861:loc_17892j
		mov	dx, 201h
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		and	al, 3
		jnz	short loc_1792E
		mov	al, 1
		mov	byte_2517A, al
		mov	ax, 0
		jmp	short loc_17977
; ---------------------------------------------------------------------------

loc_17965:				; CODE XREF: sub_17861+10Cj
					; sub_17861+120j
		jmp	short loc_1792E
; ---------------------------------------------------------------------------

loc_17967:				; CODE XREF: sub_17861:loc_1787Ej
		mov	dx, 201h
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		and	al, 0Ch
		jnz	short loc_17965
		mov	al, 1
		mov	byte_2517B, al
		mov	ax, 1

loc_17977:				; CODE XREF: sub_17861+102j
		push	bx
		push	ax
		mov	ax, 0FFFFh
		cmp	ax, 0FFFFh
		pop	ax
		pop	bx
		jz	short loc_17965
		push	bx
		call	sub_17861
		pop	bx
		jmp	short loc_17950
sub_17861	endp


; =============== S U B	R O U T	I N E =======================================


sub_1798A	proc near		; CODE XREF: sub_10282+28p
		push	si
		push	di
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	es, ax
		assume es:dseg
		cld
		mov	di, word_250F2
		mov	cx, 40h	; '@'
		mov	ax, 0
		rep stosw
		pop	es
		assume es:nothing
		call	sub_17B01
		mov	ax, word_25174
		and	ax, ax
		jnz	short loc_179E2
		inc	ax
		mov	word_25174, ax
		push	ds
		push	es
		mov	al, 9
		mov	ah, 35h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	dx, es
		mov	ax, seg	seg000
		mov	es, ax
		assume es:seg000
		mov	word_250EE, bx
		mov	word ptr es:dword_17A6D, bx
		mov	word_250F0, dx
		mov	word ptr es:dword_17A6D+2, dx
		mov	dx, 79E6h
		mov	bx, seg	seg000
		mov	ds, bx
		assume ds:seg000
		mov	al, 9
		mov	ah, 25h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	es
		assume es:nothing
		pop	ds
		assume ds:dseg

loc_179E2:				; CODE XREF: sub_1798A+21j
		pop	ds
		pop	di
		pop	si
		retn
sub_1798A	endp

; ---------------------------------------------------------------------------
		pushf
		cli
		push	ax
		push	bx
		push	cx
		push	ds
		push	di
		push	si
		push	dx
		mov	ax, 40h	; '@'
		mov	ds, ax
		assume ds:nothing
		mov	bx, 80h	; 'Ä'
		mov	di, [bx]
		mov	si, [bx+2]
		mov	bx, 1Ah
		mov	cx, [bx]
		mov	dx, [bx+2]
		sub	si, di
		sub	dx, cx
		jnb	short loc_17A0E
		sub	si, dx
		mov	dx, si

loc_17A0E:				; CODE XREF: seg000:7A08j
		cmp	dx, 10h
		jb	short loc_17A1A
		mov	ax, cs:word_17A71
		mov	[bx+2],	ax

loc_17A1A:				; CODE XREF: seg000:7A11j
		mov	ax, [bx+2]
		mov	cs:word_17A71, ax
		in	al, 60h		; 8042 keyboard	controller data	register
		cmp	al, 0FFh
		jz	short loc_17A53
		mov	cl, al
		mov	bx, seg	dseg
		mov	ds, bx
		assume ds:dseg
		mov	bx, word_250F2
		mov	ah, 0
		and	al, 7Fh
		mov	di, ax
		test	cl, 80h
		jz	short loc_17A3F
		xor	al, al

loc_17A3F:				; CODE XREF: seg000:7A3Bj
		mov	[bx+di], al
		call	dword ptr cs:word_17A73
		pop	dx
		pop	si
		pop	di
		pop	ds
		pop	cx
		pop	bx
		pop	ax
		popf
		jmp	cs:dword_17A6D
; ---------------------------------------------------------------------------

loc_17A53:				; CODE XREF: seg000:7A25j
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	ah, al
		or	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, ah
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		pop	dx
		pop	si
		pop	di
		pop	ds
		pop	cx
		pop	bx
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		pop	ax
		popf
		iret
; ---------------------------------------------------------------------------
		retf
; ---------------------------------------------------------------------------
dword_17A6D	dd 0			; DATA XREF: sub_1798A+3Aw
					; seg000:7A4Er	...
word_17A71	dw 0			; DATA XREF: seg000:7A13r seg000:7A1Dw
word_17A73	dw 7A6Ch		; DATA XREF: seg000:7A41r seg000:7B27w ...
seg_17A75	dw seg seg000		; DATA XREF: seg000:7B2Ew seg000:7B42w

; =============== S U B	R O U T	I N E =======================================


sub_17A77	proc near		; CODE XREF: _main+3Cp
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_25174
		and	ax, ax
		jz	short loc_17AB0
		xor	ax, ax
		mov	word_25174, ax
		push	ds
		push	es
		mov	dx, word_250EE
		mov	bx, word_250F0
		mov	ds, bx
		mov	al, 9
		mov	ah, 25h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	es
		pop	ds
		call	sub_17B01

loc_17AA2:				; CODE XREF: sub_17A77+37j
		mov	ah, 0Bh
		int	21h		; DOS -	CHECK STANDARD INPUT STATUS
					; Return: AL = FFh if character	available
					; 00h if no character
		and	al, al
		jz	short loc_17AB0
		mov	ah, 7
		int	21h		; DOS -	DIRECT STDIN INPUT, NO ECHO
		jmp	short loc_17AA2
; ---------------------------------------------------------------------------

loc_17AB0:				; CODE XREF: sub_17A77+Dj
					; sub_17A77+31j
		pop	ds
		pop	di
		pop	si
		retn
sub_17A77	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17AB4	proc near		; CODE XREF: sub_10C18+125p
					; sub_11D26+Fp	...

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		pop	bp
sub_17AB4	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_17ABB	proc near		; CODE XREF: seg000:7ADDp sub_17BFAp ...
		push	ds
		push	bx
		push	di
		mov	bx, seg	dseg
		mov	ds, bx
		mov	di, word_250F2
		xor	ah, ah
		and	al, 7Fh
		add	di, ax
		mov	al, [di]
		pop	di
		pop	bx
		pop	ds
		and	ax, ax
		retn
sub_17ABB	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp

loc_17ADC:				; CODE XREF: seg000:7AE1j
		push	ax
		call	sub_17ABB
		pop	ax
		jz	short loc_17ADC
		retn
; ---------------------------------------------------------------------------
		db 56h,	57h, 0B4h, 0Bh,	0CDh, 21h, 22h,	0C0h, 74h, 3, 0E8h
		db 7, 0, 32h, 0E4h, 23h, 0C0h, 5Fh, 5Eh, 0C3h, 56h, 57h
		db 0B4h, 8, 0CDh, 21h, 5Fh, 5Eh, 0C3h

; =============== S U B	R O U T	I N E =======================================


sub_17B01	proc near		; CODE XREF: sub_1798A+19p
					; sub_17A77+28p ...
		push	ds
		push	ax
		push	bx
		mov	ax, 40h	; '@'
		mov	ds, ax
		assume ds:nothing
		mov	bx, 80h	; 'Ä'
		mov	ax, [bx]
		mov	bx, 1Ah
		mov	[bx], ax
		mov	[bx+2],	ax
		pop	bx
		pop	ax
		pop	ds
		assume ds:dseg
		retn
sub_17B01	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ax
		push	ds
		mov	ax, seg	seg000
		mov	ds, ax
		assume ds:seg000
		mov	ax, [bp+4]
		mov	cs:word_17A73, ax
		mov	ax, [bp+6]
		mov	cs:seg_17A75, ax
		pop	ds
		assume ds:dseg
		pop	ax
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	ds
		push	ax
		mov	ax, seg	seg000
		mov	ds, ax
		assume ds:seg000
		pop	ax
		mov	cs:word_17A73, ax
		mov	cs:seg_17A75, dx
		pop	ds
		assume ds:dseg
		retn
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17B4A	proc near		; CODE XREF: sub_10B88+69p
					; sub_13467+70p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1AD09
		retn
sub_17B4A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17B5A	proc near		; CODE XREF: sub_12D14+135p
					; sub_12D14+187p ...

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch
arg_A		= word ptr  0Eh

		push	bp
		mov	bp, sp
		mov	di, [bp+arg_2]
		mov	si, [bp+arg_0]
		mov	bx, [bp+arg_6]
		mov	ax, [bp+arg_4]
		mov	dx, [bp+arg_A]
		mov	cx, [bp+arg_8]
		pop	bp
		call	sub_1C280
		retn
sub_17B5A	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, [bp+6]
		mov	ax, [bp+4]
		pop	bp
		call	nullsub_3
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, [bp+4]
		pop	bp
		call	sub_1AD51
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17B93	proc near		; CODE XREF: sub_108D1+120p
					; sub_10D9D+BBp ...

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		mov	bx, [bp+arg_4]
		pop	bp
		call	sub_1AD71
		retn
sub_17B93	endp

; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_17BA7	proc near		; CODE XREF: _main+30p
		call	sub_1AD8F
		retn
sub_17BA7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17BAD	proc near		; CODE XREF: sub_10282+1Fp

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1ADAB
		retn
sub_17BAD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17BBD	proc near		; CODE XREF: sub_10282+48p

arg_0		= byte ptr  4

		push	bp
		mov	bp, sp
		mov	cl, [bp+arg_0]
		pop	bp
		call	sub_1ADC2
		retn
sub_17BBD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17BCA	proc near		; CODE XREF: sub_108D1+129p
					; sub_10D9D+C4p ...

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		pop	bp
		call	sub_1AE41
		retn
sub_17BCA	endp


; =============== S U B	R O U T	I N E =======================================


sub_17BD7	proc near		; CODE XREF: sub_10282+3Fp
		call	sub_1AE5E
		retn
sub_17BD7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17BDD	proc near		; CODE XREF: sub_10C18+8Cp
					; sub_10C18+10Bp ...

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		pop	bp
		call	sub_1AEE1
		retn
sub_17BDD	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, [bp+6]
		mov	ax, [bp+4]
		pop	bp
		call	sub_1AF14
		retn

; =============== S U B	R O U T	I N E =======================================


sub_17BFA	proc far		; CODE XREF: sub_1AE5E+4AP
					; sub_1AE5E+53P
		call	sub_17ABB
		retf
sub_17BFA	endp


; =============== S U B	R O U T	I N E =======================================


sub_17BFE	proc far		; CODE XREF: sub_1AE5E+78P
		call	sub_17B01
		retf
sub_17BFE	endp

; ---------------------------------------------------------------------------
		pop	cs:word_17CDA
		pop	cs:word_17CDC
		pop	cs:word_17CD8
		push	cs:word_17CDC
		push	cs:word_17CDA
		mov	cs:word_17CCE, ax
		mov	cs:word_17CD0, bx
		mov	cs:word_17CD2, cx
		mov	cs:word_17CD4, dx
		mov	ax, ds
		mov	cs:word_17CD6, ax
		mov	ax, seg	dseg
		mov	ds, ax
		lds	bx, off_2587C
		mov	cx, 6

loc_17C40:				; CODE XREF: seg000:7C61j
		mov	ax, [bx]
		add	ax, [bx+2]
		cmp	ax, 1F4h
		jl	short loc_17C5B
		sub	ax, 1F4h
		push	word ptr [bx+4]
		push	word ptr [bx+6]
		mov	dx, seg	seg000
		push	dx
		mov	dx, 7C87h
		push	dx

loc_17C5B:				; CODE XREF: seg000:7C48j
		mov	[bx+2],	ax
		add	bx, 8
		loop	loc_17C40
		mov	ax, cs:word_17CD6
		mov	ds, ax
		mov	bx, cs:word_17CD0
		mov	cx, cs:word_17CD2
		mov	dx, cs:word_17CD4
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		mov	ax, cs:word_17CD8
		push	ax
		popf
		mov	ax, cs:word_17CCE
		retf
; ---------------------------------------------------------------------------
		cli
		pop	cs:word_17CDA
		pop	cs:word_17CDC
		pushf
		push	di
		push	si
		push	bp
		push	ds
		push	es
		push	ax
		push	bx
		push	cx
		push	dx
		mov	dx, seg	seg000
		push	dx
		mov	dx, 7CB9h
		push	dx
		push	cs:word_17CDC
		push	cs:word_17CDA
		mov	ax, seg	dseg
		mov	ds, ax
		sti
		inc	byte_25885
		retf
; ---------------------------------------------------------------------------
		mov	ax, seg	dseg
		mov	ds, ax
		dec	byte_25885
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		popf
		sti
		retf
; ---------------------------------------------------------------------------
word_17CCE	dw 0			; DATA XREF: seg000:7C1Bw seg000:7C82r
word_17CD0	dw 0			; DATA XREF: seg000:7C1Fw seg000:7C69r
word_17CD2	dw 0			; DATA XREF: seg000:7C24w seg000:7C6Er
word_17CD4	dw 0			; DATA XREF: seg000:7C29w seg000:7C73r
word_17CD6	dw 0			; DATA XREF: seg000:7C30w seg000:7C63r
word_17CD8	dw 0			; DATA XREF: seg000:7C0Cw seg000:7C7Cr
word_17CDA	dw 0			; DATA XREF: seg000:7C02w seg000:7C16r ...
word_17CDC	dw 0			; DATA XREF: seg000:7C07w seg000:7C11r ...

; =============== S U B	R O U T	I N E =======================================


sub_17CDE	proc near		; CODE XREF: sub_10282+25p
		mov	al, byte_25884
		xor	ah, ah
		and	al, al
		jz	short loc_17CEA
		jmp	locret_17DB1
; ---------------------------------------------------------------------------

loc_17CEA:				; CODE XREF: sub_17CDE+7j
		call	sub_17FB0
		mov	word_25886, ax
		mov	cx, 6

loc_17CF3:				; CODE XREF: sub_17CDE+20j
		push	cx
		mov	ax, 0
		mov	bx, cx
		dec	bx
		call	sub_17E62
		pop	cx
		loop	loc_17CF3
		mov	bx, 54F6h
		mov	cx, 10h
		xor	ax, ax

loc_17D08:				; CODE XREF: sub_17CDE+2Fj
		mov	[bx], ax
		add	bx, 2
		loop	loc_17D08
		mov	bx, 5516h
		mov	cx, 10h
		mov	ax, 0FFFFh

loc_17D18:				; CODE XREF: sub_17CDE+3Fj
		mov	[bx], ax
		add	bx, 2
		loop	loc_17D18
		mov	cx, 12h
		mov	ax, word_25886
		and	ax, ax
		jz	short loc_17D52
		cmp	ax, 0F800h
		jnb	short loc_17D52
		cmp	ax, 951h
		jb	short loc_17D52
		mov	cx, ax
		shr	cx, 1
		shr	cx, 1
		mov	ax, 0FFFFh
		xor	dx, dx
		div	cx
		add	ax, ax
		mov	cx, ax
		add	ax, ax
		add	ax, ax
		add	ax, ax
		add	ax, cx
		shr	ax, 1
		shr	ax, 1
		mov	cx, ax

loc_17D52:				; CODE XREF: sub_17CDE+49j
					; sub_17CDE+4Ej ...
		mov	ax, cx
		mov	bx, 0
		mov	dx, seg	seg000
		mov	cx, 7E7Ah
		call	sub_17E62
		mov	ax, 32h	; '2'
		mov	bx, 1
		mov	dx, seg	seg000
		mov	cx, 7E80h
		call	sub_17E62
		push	es
		mov	ah, 35h	; '5'
		mov	al, 8
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_25880, bx
		mov	bx, es
		mov	word ptr dword_25880+2,	bx
		pop	es
		mov	ax, 1
		mov	byte_25884, al
		pushf
		cli
		push	ds
		mov	ax, seg	seg000
		mov	ds, ax
		assume ds:seg000
		mov	dx, 7C02h
		mov	ah, 25h	; '%'
		mov	al, 8
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		popf
		call	sub_17DB2
		push	es
		mov	ax, 350Fh
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_25888, bx
		mov	bx, es
		mov	word ptr dword_25888+2,	bx
		pop	es
		mov	ax, 1

locret_17DB1:				; CODE XREF: sub_17CDE+9j
		retn
sub_17CDE	endp


; =============== S U B	R O U T	I N E =======================================


sub_17DB2	proc near		; CODE XREF: sub_17CDE+BCp
					; seg000:8050p
		mov	ax, 951h
		call	sub_17F9A
		retn
sub_17DB2	endp


; =============== S U B	R O U T	I N E =======================================


sub_17DB9	proc near		; CODE XREF: _main+3Fp
		mov	al, byte_25884
		xor	ah, ah
		and	al, al
		jz	short locret_17DE7
		push	ds
		lds	dx, dword_25888
		mov	ah, 25h	; '%'
		mov	al, 0Fh
		pop	ds
		mov	ax, word_25886
		call	sub_17F9A
		push	ds
		lds	dx, dword_25880
		mov	ah, 25h	; '%'
		mov	al, 8
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		mov	ax, 0
		mov	byte_25884, al
		mov	ax, 1

locret_17DE7:				; CODE XREF: sub_17DB9+7j
		retn
sub_17DB9	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, [bp+4]
		mov	ax, [bp+6]
		push	ds
		lds	cx, [bp+8]
		mov	dx, ds
		pop	ds
		pop	bp

; =============== S U B	R O U T	I N E =======================================


sub_17DF9	proc near		; CODE XREF: sub_186E9+30p
					; sub_1891E+4Ap ...
		and	bx, bx
		js	short loc_17E15
		cmp	bx, 4
		jge	short loc_17E15
		add	bx, 2
		and	ax, ax
		js	short loc_17E15
		cmp	ax, 1F4h
		jge	short loc_17E15
		call	sub_17E62
		mov	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_17E15:				; CODE XREF: sub_17DF9+2j sub_17DF9+7j ...
		xor	ax, ax
		retn
sub_17DF9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_17E18	proc near		; CODE XREF: sub_130DD+D6p

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		pop	bp
sub_17E18	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_17E1F	proc near		; CODE XREF: seg000:8696p
					; sub_18977+14p ...
		mov	bx, ax
		and	bx, bx
		js	short loc_17E3A
		cmp	bx, 4
		jge	short loc_17E3A
		add	bx, 2
		xor	ax, ax
		mov	cx, ax
		mov	dx, ax
		call	sub_17E62
		mov	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_17E3A:				; CODE XREF: sub_17E1F+4j sub_17E1F+9j
		xor	ax, ax
		retn
sub_17E1F	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp
		mov	bx, ax
		and	bx, bx
		js	short loc_17E5F
		cmp	bx, 4
		jge	short loc_17E5F
		add	bx, 2
		add	bx, bx
		add	bx, bx
		add	bx, bx
		add	bx, 549Ch
		mov	ax, [bx]
		retn
; ---------------------------------------------------------------------------

loc_17E5F:				; CODE XREF: seg000:7E48j seg000:7E4Dj
		xor	ax, ax
		retn

; =============== S U B	R O U T	I N E =======================================


sub_17E62	proc near		; CODE XREF: sub_17CDE+1Cp
					; sub_17CDE+7Fp ...
		add	bx, bx
		add	bx, bx
		add	bx, bx
		add	bx, 549Ch
		mov	[bx], ax
		xor	ax, ax
		mov	[bx+2],	ax
		mov	[bx+6],	cx
		mov	[bx+4],	dx
		retn
sub_17E62	endp

; ---------------------------------------------------------------------------
		pushf
		call	dword_25880
		retf
; ---------------------------------------------------------------------------
		mov	bx, 54F6h
		mov	cx, 10h

loc_17E86:				; CODE XREF: seg000:7E8Bj
		inc	word ptr [bx]
		add	bx, 2
		loop	loc_17E86
		mov	cx, 4
		mov	bx, 5516h

loc_17E93:				; CODE XREF: seg000:7EA4j
		mov	ax, [bx]
		cmp	ax, 0FFFFh
		jz	short loc_17EA1
		inc	word ptr [bx]
		cmp	ax, [bx+2]
		jge	short loc_17EA7

loc_17EA1:				; CODE XREF: seg000:7E98j seg000:7EB3j
		add	bx, 8
		loop	loc_17E93
		retf
; ---------------------------------------------------------------------------

loc_17EA7:				; CODE XREF: seg000:7E9Fj
		mov	ax, 0FFFFh
		mov	[bx], ax
		push	cx
		push	bx
		call	dword ptr [bx+4]
		pop	bx
		pop	cx
		jmp	short loc_17EA1
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		mov	cx, [bp+6]
		pop	bp
		and	ax, ax
		js	short loc_17EDB
		cmp	ax, 0Eh
		jge	short loc_17EDB
		add	ax, 2
		add	ax, ax
		mov	bx, 54F6h
		add	bx, ax
		mov	ax, [bp+6]
		mov	[bx], cx
		mov	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_17EDB:				; CODE XREF: seg000:7EC1j seg000:7EC6j
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp
		and	ax, ax
		js	short loc_17EFB
		cmp	ax, 0Eh
		jge	short loc_17EFB
		add	ax, 2
		add	ax, ax
		mov	bx, 54F6h
		add	bx, ax
		mov	ax, [bx]
		retn
; ---------------------------------------------------------------------------

loc_17EFB:				; CODE XREF: seg000:7EE7j seg000:7EECj
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp

loc_17F05:				; CODE XREF: seg000:7F0Bj
		mov	bx, word_258A6
		cmp	ax, bx
		jnb	short loc_17F05
		xor	ax, ax
		mov	word_258A6, ax
		retn
; ---------------------------------------------------------------------------
		mov	ax, word_258A6
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp
		xor	bx, bx
		mov	word_258A8, bx

loc_17F24:				; CODE XREF: seg000:7F28j
		cmp	ax, word_258A8
		jg	short loc_17F24
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, 5516h
		mov	ax, [bp+4]
		and	ax, ax
		js	short loc_17F61
		cmp	ax, 4
		jge	short loc_17F61
		add	ax, ax
		add	ax, ax
		add	ax, ax
		add	bx, ax
		mov	ax, [bp+6]
		mov	[bx+2],	ax
		xor	ax, ax
		mov	[bx], ax
		push	es
		les	ax, [bp+8]
		mov	[bx+4],	ax
		mov	ax, es
		mov	[bx+6],	ax
		pop	es
		mov	ax, 1
		pop	bp
		retn
; ---------------------------------------------------------------------------

loc_17F61:				; CODE XREF: seg000:7F36j seg000:7F3Bj
		xor	ax, ax
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	bx, 5516h
		mov	ax, [bp+4]
		and	ax, ax
		js	short loc_17F8C
		cmp	ax, 4
		jge	short loc_17F8C
		add	ax, ax
		add	ax, ax
		add	ax, ax
		add	bx, ax
		mov	ax, 0FFFFh
		mov	[bx+2],	ax
		mov	[bx], ax
		mov	ax, 1
		pop	bp
		retn
; ---------------------------------------------------------------------------

loc_17F8C:				; CODE XREF: seg000:7F70j seg000:7F75j
		xor	ax, ax
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================


sub_17F90	proc near		; CODE XREF: sub_17F9A+5p sub_17F9A+Bp ...
		call	$+3
		call	$+3
		call	$+3
		retn
sub_17F90	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_17F9A	proc near		; CODE XREF: sub_17DB2+3p
					; sub_17DB9+16p ...
		push	ax
		mov	al, 36h	; '6'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_17F90
		pop	ax
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_17F90
		mov	al, ah
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_17F90
		retn
sub_17F9A	endp


; =============== S U B	R O U T	I N E =======================================


sub_17FB0	proc near		; CODE XREF: sub_17CDE:loc_17CEAp
		push	bx
		push	cx
		mov	cx, 19h
		xor	bx, bx
		mov	al, 6
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_17F90

loc_17FBE:				; CODE XREF: sub_17FB0+1Bj
					; sub_17FB0+27j
		cli
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		mov	ah, al
		call	sub_17F90
		in	al, 40h		; Timer	8253-5 (AT: 8254.2).
		sti
		cmp	al, bh
		jb	short loc_17FBE
		jnz	short loc_17FD3
		cmp	bl, ah
		jnb	short loc_17FD5

loc_17FD3:				; CODE XREF: sub_17FB0+1Dj
		mov	bl, ah

loc_17FD5:				; CODE XREF: sub_17FB0+21j
		mov	bh, al
		loop	loc_17FBE
		mov	ax, bx
		pop	cx
		pop	bx
		retn
sub_17FB0	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		mov	dx, [bp+8]
		mov	cx, [bp+6]
		call	sub_17FEF
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================


sub_17FEF	proc near		; CODE XREF: seg000:7FEAp
		push	es
		push	ds
		push	ax
		mov	ax, seg	dseg
		mov	ds, ax
		mov	al, byte_25884
		and	al, al
		pop	ax
		jz	short loc_18045
		pushf
		cli
		push	ax
		push	ds
		mov	ds, dx
		mov	dx, cx
		mov	ah, 25h	; '%'
		mov	al, 8
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		mov	ax, 350Fh
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_25888, bx
		mov	bx, es
		mov	word ptr dword_25888+2,	bx
		push	ds
		mov	ax, seg	seg000
		mov	ds, ax
		assume ds:seg000
		mov	dx, 8086h
		mov	ah, 25h	; '%'
		mov	al, 0Fh
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		pop	ax
		mov	bx, 54DEh
		add	ax, ax
		add	bx, ax
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, [bx]
		pop	ds
		mov	word_2588C, ax
		call	sub_17F9A
		popf

loc_18045:				; CODE XREF: sub_17FEF+Ej
		pop	ds
		pop	es
		retn
sub_17FEF	endp

; ---------------------------------------------------------------------------
		pushf
		cli
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		call	sub_17DB2
		xor	bx, bx
		mov	ds, bx
		assume ds:nothing
		mov	ax, seg	seg000
		mov	[bx+22h], ax
		mov	ax, 7C02h
		mov	[bx+20h], ax
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	ax, word ptr dword_25888
		xor	bx, bx
		mov	ds, bx
		assume ds:nothing
		mov	[bx+3Ch], ax
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	ax, word ptr dword_25888+2
		xor	bx, bx
		mov	ds, bx
		assume ds:nothing
		mov	[bx+3Eh], ax
		xor	bx, bx
		pop	ds
		assume ds:dseg
		popf
		retn
; ---------------------------------------------------------------------------
		push	ax
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		pop	ax
		iret
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1808E	proc near		; CODE XREF: sub_10416+1Cp
					; sub_10416+33p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1CD50
		retn
sub_1808E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1809E	proc near		; CODE XREF: sub_10569+14p
					; sub_10569+22p ...

arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_2]
		pop	bp
		call	sub_1CD82
		retn
sub_1809E	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_180AC	proc near		; CODE XREF: sub_117C7+7Fp
					; sub_117C7+B7p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1B603
		retn
sub_180AC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_180BC	proc near		; CODE XREF: seg000:0794p
					; sub_10A90+E1p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1B907
		retn
sub_180BC	endp

; ---------------------------------------------------------------------------
byte_180CC	db 322h	dup(0)
byte_183EE	db 0			; DATA XREF: sub_1891E+4Fw
					; sub_19115+16w ...
word_183EF	dw 0			; DATA XREF: sub_1891E+53w
					; seg000:9184r	...
		db 44h dup(0), 48h, 30h, 12h dup(0), 18h, 13h dup(0), 30h
		db 25h dup(0)
word_18483	dw 0			; DATA XREF: seg000:loc_18660w
					; sub_187CD+Aw	...
dword_18485	dd 0			; DATA XREF: seg000:8667r
					; sub_187CD+1Ew ...
		db 1, 0, 1, 0, 1, 0, 1,	0, 1, 0, 1, 0, 1, 0, 1,	0, 1, 0
		db 1, 0, 1, 0, 1, 0, 1,	0, 1, 0, 1, 0, 1, 0, 1,	0, 1, 0
		db 1, 0, 1, 0, 1, 0, 1,	0, 1, 0, 1, 0, 1, 0, 1,	0, 1, 0
		db 1, 0, 1, 0, 1, 0, 1,	0, 1, 0, 1, 0, 1, 0, 1,	0, 1, 0
		db 1, 0, 1, 0, 0CCh, 0FDh, 8Dh,	0EFh, 1Bh, 0E2h, 6Ah, 0D5h
		db 70h,	0C9h, 22h, 0BEh, 76h, 0B3h, 63h, 0A9h, 0E1h, 9Fh
		db 0E8h, 96h, 70h, 8Eh,	71h, 86h, 0E6h,	7Eh, 0C6h, 77h
		db 0Dh,	71h, 0B5h, 6Ah,	0B8h, 64h, 11h,	5Fh, 0BBh, 59h
		db 0B1h, 54h, 0F0h, 4Fh, 74h, 4Bh, 38h,	47h, 38h, 43h
		db 73h,	3Fh, 0E3h, 3Bh,	86h, 38h, 5Ah, 35h, 5Ch, 32h, 88h
		db 2Fh,	0DDh, 2Ch, 58h,	2Ah, 0F8h, 27h,	0BAh, 25h, 9Ch
		db 23h,	9Ch, 21h, 0B9h,	1Fh, 0F1h, 1Dh,	43h, 1Ch, 0ADh
		db 1Ah,	2Eh, 19h, 0C4h,	17h, 6Eh, 16h, 2Ch, 15h, 0FCh
		db 13h,	0DDh, 12h, 0CEh, 11h, 0CEh, 10h, 0DCh, 0Fh, 0F8h
		db 0Eh,	21h, 0Eh, 56h, 0Dh, 97h, 0Ch, 0E2h, 0Bh, 37h, 0Bh
		db 96h,	0Ah, 0FEh, 9, 6Eh, 9, 0E7h, 8, 67h, 8, 0EEh, 7
		db 7Ch,	7, 10h,	7, 0ABh, 6, 4Bh, 6, 0F1h, 5, 9Bh, 5, 4Bh
		db 5, 0FFh, 4, 0B7h, 4,	73h, 4,	33h, 4,	0F7h, 3, 0BEh
		db 3, 88h, 3, 55h, 3, 25h, 3, 0F8h, 2, 0CDh, 2,	0A5h, 2
		db 7Fh,	2, 5Bh,	2, 39h,	2, 19h,	2, 0FBh, 1, 0DFh, 1, 0C4h
		db 1, 0AAh, 1, 92h, 1, 7Ch, 1, 66h, 1, 52h, 1, 3Fh, 1
		db 2Dh,	1, 1Ch,	1, 0Ch,	1, 0FDh, 0, 0EFh, 0, 0E2h, 0, 0D5h
		db 0, 0C9h, 0, 0BEh, 0
word_185A1	dw 0			; DATA XREF: seg000:8652r seg000:8685r ...
word_185A3	dw 0C0h			; DATA XREF: sub_186E9+4r
					; sub_18809+49w
word_185A5	dw 4240h		; DATA XREF: sub_186E9+Dr
					; sub_1873C+31w
word_185A7	dw 0Fh			; DATA XREF: sub_186E9+12r
					; sub_1873C+2Aw
		db 8 dup(0), 2 dup(0FFh)
word_185B3	dw 0			; DATA XREF: sub_185B5+1r sub_185DB+1r ...

; =============== S U B	R O U T	I N E =======================================


sub_185B5	proc near		; CODE XREF: seg000:8679p
					; sub_18977+18p ...
		push	bx
		mov	bx, cs:word_185B3
		cmp	bx, 0
		jnz	short loc_185C5
		call	sub_19115
		jmp	short loc_185D9
; ---------------------------------------------------------------------------

loc_185C5:				; CODE XREF: sub_185B5+9j
		cmp	bx, 4
		jnz	short loc_185CF
		call	sub_18AD0
		jmp	short loc_185D9
; ---------------------------------------------------------------------------

loc_185CF:				; CODE XREF: sub_185B5+13j
		cmp	bx, 1
		jnz	short loc_185D9
		call	sub_18E2F
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_185D9:				; CODE XREF: sub_185B5+Ej
					; sub_185B5+18j ...
		pop	bx
		retn
sub_185B5	endp


; =============== S U B	R O U T	I N E =======================================


sub_185DB	proc near		; CODE XREF: sub_1873C+15p
		push	ax
		mov	ax, cs:word_185B3
		cmp	ax, 0
		jnz	short loc_185EA
		call	sub_191CF
		jmp	short loc_185FE
; ---------------------------------------------------------------------------

loc_185EA:				; CODE XREF: sub_185DB+8j
		cmp	ax, 4
		jnz	short loc_185F4
		call	sub_18AF6
		jmp	short loc_185FE
; ---------------------------------------------------------------------------

loc_185F4:				; CODE XREF: sub_185DB+12j
		cmp	ax, 1
		jnz	short loc_185FE
		call	sub_18E48
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_185FE:				; CODE XREF: sub_185DB+Dj
					; sub_185DB+17j ...
		pop	ax
		retn
sub_185DB	endp


; =============== S U B	R O U T	I N E =======================================


sub_18600	proc near		; CODE XREF: sub_1873C:loc_18756p
		push	cx
		mov	cx, cs:word_185B3
		cmp	cx, 0
		jnz	short loc_18610
		call	sub_191D7
		jmp	short loc_18624
; ---------------------------------------------------------------------------

loc_18610:				; CODE XREF: sub_18600+9j
		cmp	cx, 4
		jnz	short loc_1861A
		call	sub_18B04
		jmp	short loc_18624
; ---------------------------------------------------------------------------

loc_1861A:				; CODE XREF: sub_18600+13j
		cmp	cx, 1
		jnz	short loc_18624
		call	sub_18E50
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_18624:				; CODE XREF: sub_18600+Ej
					; sub_18600+18j ...
		pop	cx
		retn
sub_18600	endp


; =============== S U B	R O U T	I N E =======================================


sub_18626	proc near		; CODE XREF: sub_1873C:loc_1875Bp
		push	cx
		mov	cx, cs:word_185B3
		cmp	cx, 0
		jnz	short loc_18636
		call	sub_191DF
		jmp	short loc_1864A
; ---------------------------------------------------------------------------

loc_18636:				; CODE XREF: sub_18626+9j
		cmp	cx, 4
		jnz	short loc_18640
		call	sub_18B0D
		jmp	short loc_1864A
; ---------------------------------------------------------------------------

loc_18640:				; CODE XREF: sub_18626+13j
		cmp	cx, 1
		jnz	short loc_1864A
		call	sub_18E58
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1864A:				; CODE XREF: sub_18626+Ej
					; sub_18626+18j ...
		pop	cx
		retn
sub_18626	endp

; ---------------------------------------------------------------------------
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	ds
		mov	cx, cs:word_185A1
		mov	ax, cx
		cmp	cx, 0
		jz	short loc_18660
		jns	short loc_1869C

loc_18660:				; CODE XREF: seg000:865Cj
		dec	cs:word_18483
		jz	short loc_1868C
		lds	si, cs:dword_18485
		pushf
		cli
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	es
		push	bp
		call	sub_18809
		call	sub_185B5
		pop	bp
		pop	es
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		popf
		mov	cx, cs:word_185A1
		jmp	short loc_1869C
; ---------------------------------------------------------------------------

loc_1868C:				; CODE XREF: seg000:8665j
		cli
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 0
		call	sub_17E1F
		pop	ds
		jmp	short loc_186E2
; ---------------------------------------------------------------------------

loc_1869C:				; CODE XREF: seg000:865Ej seg000:868Aj
		mov	bx, 81CCh

loc_1869F:				; CODE XREF: seg000:86B0j seg000:86E0j
		mov	ax, cs:[bx+40h]
		mov	dx, cs:[bx+42h]
		cmp	dx, 0FFFFh
		jnz	short loc_186B2
		inc	bx
		inc	bx
		inc	bx
		inc	bx
		jmp	short loc_1869F
; ---------------------------------------------------------------------------

loc_186B2:				; CODE XREF: seg000:86AAj
		dec	ax
		cmp	ax, 0
		jz	short loc_186C0
		cmp	ax, 0FFFFh
		jnz	short loc_186D4
		dec	dx
		jmp	short loc_186D4
; ---------------------------------------------------------------------------

loc_186C0:				; CODE XREF: seg000:86B6j
		cmp	dx, 0
		jnz	short loc_186D4
		lds	si, cs:[bx]
		call	sub_1873C
		mov	cs:[bx], si
		mov	si, ds
		mov	cs:[bx+2], si

loc_186D4:				; CODE XREF: seg000:86BBj seg000:86BEj ...
		mov	cs:[bx+40h], ax
		mov	cs:[bx+42h], dx
		inc	bx
		inc	bx
		inc	bx
		inc	bx
		loop	loc_1869F

loc_186E2:				; CODE XREF: seg000:869Aj
		pop	ds
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retf

; =============== S U B	R O U T	I N E =======================================


sub_186E9	proc near		; CODE XREF: sub_18722+4p seg000:89DDp
		push	ax
		push	bx
		push	cx
		push	dx
		mov	ax, cs:word_185A3
		mov	cx, 0F42h
		mul	cx
		mov	cx, cs:word_185A5
		mov	bx, cs:word_185A7
		mov	cl, ch
		mov	ch, bl
		div	cx
		mov	cx, ax
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, cx
		mov	dx, seg	seg000
		mov	cx, 864Ch
		mov	bx, 0
		call	sub_17DF9
		pop	ds
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
sub_186E9	endp


; =============== S U B	R O U T	I N E =======================================


sub_18722	proc near		; CODE XREF: sub_187CD+30p
		push	bx
		push	dx
		push	ds
		push	es
		call	sub_186E9
		pop	es
		pop	ds
		pop	dx
		pop	bx
		retn
sub_18722	endp


; =============== S U B	R O U T	I N E =======================================


sub_1872E	proc near		; CODE XREF: sub_18AF6+8p sub_18B04+4p ...
		mov	ah, al
		call	sub_189E2

loc_18733:				; CODE XREF: sub_1872E+Bj
		lodsb
		mov	ah, al
		call	sub_189E2
		loop	loc_18733
		retn
sub_1872E	endp


; =============== S U B	R O U T	I N E =======================================


sub_1873C	proc near		; CODE XREF: seg000:86C8p
					; sub_187A2+10p
		push	cx

loc_1873D:				; CODE XREF: sub_1873C+5Fj
		lodsb
		test	al, 80h
		jnz	short loc_18745
		lodsb
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_18745:				; CODE XREF: sub_1873C+4j
		xor	ch, ch
		cmp	al, 0F0h ; ''
		jl	short loc_1875B
		jz	short loc_18756
		cmp	al, 0F7h ; '˜'
		jnz	short loc_18760
		call	sub_185DB
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_18756:				; CODE XREF: sub_1873C+Fj
		call	sub_18600
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_1875B:				; CODE XREF: sub_1873C+Dj
		call	sub_18626
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_18760:				; CODE XREF: sub_1873C+13j
		lodsw
		cmp	al, 51h	; 'Q'
		jnz	short loc_18773
		lodsb
		mov	byte ptr cs:word_185A7,	al
		lodsw
		xchg	ah, al
		mov	cs:word_185A5, ax
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_18773:				; CODE XREF: sub_1873C+27j
		cmp	al, 2Fh	; '/'
		jnz	short loc_18784
		lodsw
		mov	ax, 0FFFFh
		mov	dx, ax
		dec	cs:word_185A1
		jmp	short loc_187A0
; ---------------------------------------------------------------------------

loc_18784:				; CODE XREF: sub_1873C+39j
		cmp	al, 20h	; ' '
		jnz	short loc_18790
		lodsb
		mov	cs:[bx+80h], al
		jmp	short loc_18796
; ---------------------------------------------------------------------------

loc_18790:				; CODE XREF: sub_1873C+4Aj
		mov	cl, ah
		add	si, cx
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_18796:				; CODE XREF: sub_1873C+7j
					; sub_1873C+18j ...
		call	sub_18891
		jnz	short loc_1879D
		jmp	short loc_1873D
; ---------------------------------------------------------------------------

loc_1879D:				; CODE XREF: sub_1873C+5Dj
		call	sub_18A23

loc_187A0:				; CODE XREF: sub_1873C+46j
		pop	cx
		retn
sub_1873C	endp


; =============== S U B	R O U T	I N E =======================================


sub_187A2	proc near		; CODE XREF: sub_18809+7Dp
		mov	cx, cs:word_185A1
		mov	bx, 81CCh

loc_187AA:				; CODE XREF: sub_187A2+28j
		lds	si, cs:[bx]
		call	sub_18891
		jnz	short loc_187B5
		call	sub_1873C

loc_187B5:				; CODE XREF: sub_187A2+Ej
		mov	cs:[bx+40h], ax
		mov	cs:[bx+42h], dx
		mov	cs:[bx], si
		mov	ax, ds
		mov	cs:[bx+2], ax
		inc	bx
		inc	bx
		inc	bx
		inc	bx
		loop	loc_187AA
		retn
sub_187A2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_187CD	proc near		; CODE XREF: sub_18977+1Bj

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= word ptr  0Ch

		push	bp
		mov	bp, sp
		push	es
		push	ds
		push	si
		push	di
		mov	ax, [bp+arg_8]
		mov	cs:word_18483, ax
		les	si, [bp+arg_4]
		mov	word ptr dword_25930, si
		mov	si, es
		mov	word ptr dword_25930+2,	si
		lds	si, [bp+arg_0]
		mov	word ptr cs:dword_18485, si
		mov	ax, ds
		mov	word ptr cs:dword_18485+2, ax
		call	sub_18809
		and	ax, ax
		jz	short loc_18803
		call	sub_18722
		mov	ax, 1

loc_18803:				; CODE XREF: sub_187CD+2Ej
		pop	di
		pop	si
		pop	ds
		pop	es
		pop	bp
		retn
sub_187CD	endp


; =============== S U B	R O U T	I N E =======================================


sub_18809	proc near		; CODE XREF: seg000:8676p
					; sub_187CD+29p
		cmp	word ptr [si], 544Dh
		jnz	short loc_1888E
		nop
		nop
		nop
		inc	si
		inc	si
		cmp	word ptr [si], 6468h
		jnz	short loc_1888E
		nop
		nop
		nop
		inc	si
		inc	si
		cmp	word ptr [si], 0
		jnz	short loc_1888E
		nop
		nop
		nop
		inc	si
		inc	si
		cmp	word ptr [si], 600h
		jnz	short loc_1888E
		inc	si
		inc	si
		cmp	word ptr [si], 200h
		jz	short loc_1888E
		inc	si
		inc	si
		lodsw
		xchg	ah, al
		cmp	ax, 0
		jz	short loc_1888E
		cmp	ax, 10h
		jg	short loc_1888E
		mov	cs:word_185A1, ax
		lodsw
		xchg	ah, al
		test	ah, 80h
		jnz	short loc_1888E
		mov	cs:word_185A3, ax
		mov	cx, cs:word_185A1
		mov	bx, 81CCh

loc_1885E:				; CODE XREF: sub_18809+7Bj
		call	sub_18A23
		lodsw
		cmp	ax, 544Dh
		jnz	short loc_1888E
		lodsw
		cmp	ax, 6B72h
		jnz	short loc_1888E
		lodsw
		cmp	ax, 0
		jnz	short loc_1888E
		lodsw
		mov	cs:[bx], si
		inc	bx
		inc	bx
		mov	word ptr cs:[bx], ds
		inc	bx
		inc	bx
		xchg	ah, al
		add	si, ax
		jb	short loc_1888E
		loop	loc_1885E
		call	sub_187A2
		mov	ax, 0FFFFh
		jmp	short locret_18890
; ---------------------------------------------------------------------------

loc_1888E:				; CODE XREF: sub_18809+4j sub_18809+Fj ...
		xor	ax, ax

locret_18890:				; CODE XREF: sub_18809+83j
		retn
sub_18809	endp


; =============== S U B	R O U T	I N E =======================================


sub_18891	proc near		; CODE XREF: sub_1873C:loc_18796p
					; sub_187A2+Bp
		xor	ax, ax
		mov	dx, ax
		lodsb
		test	al, 80h
		jz	short loc_188DE
		mov	ah, al
		lodsb
		test	al, 80h
		jnz	short loc_188AA
		and	ax, 7F7Fh
		shl	al, 1
		shr	ax, 1
		jmp	short loc_188DE
; ---------------------------------------------------------------------------

loc_188AA:				; CODE XREF: sub_18891+Ej
		xchg	ax, dx
		lodsb
		test	al, 80h
		jnz	short loc_188C6
		xchg	dl, ah
		xchg	dh, dl
		and	dx, 7F7Fh
		shl	ax, 1
		shl	al, 1
		shr	dl, 1
		rcr	ax, 1
		shr	dl, 1
		rcr	ax, 1
		jmp	short loc_188DE
; ---------------------------------------------------------------------------

loc_188C6:				; CODE XREF: sub_18891+1Dj
		mov	ah, al
		lodsb
		xchg	ax, dx
		and	dx, 7F7Fh
		shl	dl, 1
		shr	dx, 1
		shl	ax, 1
		shl	al, 1
		shr	dl, 1
		rcr	ax, 1
		shr	dl, 1
		rcr	ax, 1

loc_188DE:				; CODE XREF: sub_18891+7j
					; sub_18891+17j ...
		push	bx
		mov	bx, ax
		or	bx, dx
		pop	bx
		retn
sub_18891	endp


; =============== S U B	R O U T	I N E =======================================


sub_188E5	proc near		; CODE XREF: sub_16DE3+15p
		mov	cx, 0FFFFh
		mov	ax, word_2592A
		and	ax, ax
		jnz	short loc_18919
		mov	ax, 1
		mov	word_2592A, ax
		xor	cx, cx
		mov	word_25934, ax
		push	cx
		call	sub_18A75
		pop	cx
		mov	ax, 4
		jz	short loc_18906
		or	cx, ax

loc_18906:				; CODE XREF: sub_188E5+1Dj
		push	cx
		call	sub_18B2A
		pop	cx
		mov	ax, 1
		jz	short loc_18912
		or	cx, ax

loc_18912:				; CODE XREF: sub_188E5+29j
		mov	cs:word_185B3, ax
		mov	word_25936, ax

loc_18919:				; CODE XREF: sub_188E5+8j
		mov	ax, cx
		and	ax, ax
		retn
sub_188E5	endp


; =============== S U B	R O U T	I N E =======================================


sub_1891E	proc near		; CODE XREF: sub_16DE3+26p
		mov	cx, 0FFFFh
		mov	ax, word_2592A
		cmp	ax, 1
		jnz	short loc_18957
		mov	ax, 2
		mov	word_2592A, ax
		push	bp
		mov	bp, sp
		mov	ax, [bp+4]
		pop	bp
		mov	cx, 0

loc_18939:				; CODE XREF: sub_1891E+23j
		shr	ax, 1
		jb	short loc_18947
		inc	cx
		cmp	cx, 10h
		jnz	short loc_18939
		xor	ax, ax
		jmp	short loc_1895C
; ---------------------------------------------------------------------------

loc_18947:				; CODE XREF: sub_1891E+1Dj
		mov	ax, 0
		rcl	ax, 1
		shl	ax, cl

loc_1894E:				; CODE XREF: sub_1891E+57j
		mov	cs:word_185B3, ax
		mov	word_25936, ax
		mov	cx, ax

loc_18957:				; CODE XREF: sub_1891E+9j
		mov	ax, cx
		and	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_1895C:				; CODE XREF: sub_1891E+27j
		mov	bx, 1
		mov	ax, 64h	; 'd'
		mov	dx, seg	seg000
		mov	cx, 9136h
		call	sub_17DF9
		xor	ax, ax
		mov	cs:byte_183EE, al
		mov	cs:word_183EF, ax
		jmp	short loc_1894E
sub_1891E	endp


; =============== S U B	R O U T	I N E =======================================


sub_18977	proc near		; CODE XREF: sub_130DD+8Ep
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_25936
		cmp	ax, 8000h
		mov	ax, 0
		jz	short loc_18995
		mov	ax, 0
		call	sub_17E1F
		pop	ds
		call	sub_185B5
		jmp	sub_187CD
; ---------------------------------------------------------------------------

loc_18995:				; CODE XREF: sub_18977+Fj
		pop	ds
		and	ax, ax
		retn
sub_18977	endp


; =============== S U B	R O U T	I N E =======================================


sub_18999	proc near		; CODE XREF: sub_130DD:loc_1318Cp
		mov	ax, cs:word_185A1
		and	ax, ax
		jnz	short locret_189A7
		mov	ax, cs:word_18483
		and	ax, ax

locret_189A7:				; CODE XREF: sub_18999+6j
		retn
sub_18999	endp


; =============== S U B	R O U T	I N E =======================================


sub_189A8	proc near		; CODE XREF: sub_130DD+C8p
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 0
		call	sub_17E1F
		pop	ds
		call	sub_185B5
		retn
sub_189A8	endp

; ---------------------------------------------------------------------------
		dd 203BB81Eh
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	ax, 1
		mov	word_25934, ax
		mov	ax, 0
		call	sub_17E1F
		pop	ds
		call	sub_185B5
		retn
; ---------------------------------------------------------------------------
		dd 203BB81Eh
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	ax, word_25934
		and	ax, ax
		jz	short loc_189E0
		call	sub_186E9

loc_189E0:				; CODE XREF: seg000:89DBj
		pop	ds
		retn

; =============== S U B	R O U T	I N E =======================================


sub_189E2	proc near		; CODE XREF: sub_1872E+2p sub_1872E+8p ...
		push	cx
		xor	cx, cx
		mov	dx, 331h

loc_189E8:				; CODE XREF: sub_189E2+9j
		in	al, dx
		test	al, 40h
		loopne	loc_189E8
		jnz	short loc_189F5
		dec	dx
		mov	al, ah
		out	dx, al

loc_189F3:				; CODE XREF: sub_189E2+23j
		pop	cx
		retn
; ---------------------------------------------------------------------------

loc_189F5:				; CODE XREF: sub_189E2+Bj
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word_2592C, cx
		pop	ds
		mov	cs:word_185A1, cx
		jmp	short loc_189F3
sub_189E2	endp


; =============== S U B	R O U T	I N E =======================================


sub_18A07	proc near		; CODE XREF: sub_16E30+33p
		mov	ah, 99h	; 'ô'
		jmp	short loc_18A0D
; ---------------------------------------------------------------------------
		mov	ah, 89h	; 'â'

loc_18A0D:				; CODE XREF: sub_18A07+2j
		push	bp
		mov	bp, sp
		push	dx
		call	sub_189E2
		mov	ah, [bp+4]
		call	sub_189E2
		mov	ah, [bp+6]
		call	sub_189E2
		pop	dx
		pop	bp
		retn
sub_18A07	endp


; =============== S U B	R O U T	I N E =======================================


sub_18A23	proc near		; CODE XREF: sub_1873C:loc_1879Dp
					; sub_18809:loc_1885Ep
		push	ax
		push	bx
		mov	ax, si
		and	si, 0Fh
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	bx, ds
		add	ax, bx
		mov	ds, ax
		pop	bx
		pop	ax
		retn
sub_18A23	endp


; =============== S U B	R O U T	I N E =======================================


sub_18A3B	proc near		; CODE XREF: sub_191B9+5p sub_191B9+Bp ...
		push	cx
		mov	cx, 4

loc_18A3F:				; CODE XREF: sub_18A3B:loc_18A3Fj
		loop	loc_18A3F
		pop	cx
		retn
sub_18A3B	endp

; ---------------------------------------------------------------------------
		push	cx
		mov	cs:word_185A1, 0
		mov	cx, 10h
		mov	bh, 0B0h ; '∞'

loc_18A50:				; CODE XREF: seg000:8A61j
		mov	bl, 7Bh	; '{'
		call	sub_18A65
		mov	bl, 79h	; 'y'
		call	sub_18A65
		mov	bl, 7
		call	sub_18A65
		inc	bh
		loop	loc_18A50
		pop	cx
		retn

; =============== S U B	R O U T	I N E =======================================


sub_18A65	proc near		; CODE XREF: seg000:8A52p seg000:8A57p ...
		mov	ah, bh
		call	sub_189E2
		mov	ah, bl
		call	sub_189E2
		mov	ah, 7Fh	; ''
		call	sub_189E2
		retn
sub_18A65	endp


; =============== S U B	R O U T	I N E =======================================


sub_18A75	proc near		; CODE XREF: sub_188E5+16p
		push	ax
		push	bx
		push	cx
		push	dx
		cmp	word_2592C, 0
		jz	short loc_18AC6
		mov	cx, 1388h
		mov	dx, 331h

loc_18A86:				; CODE XREF: sub_18A75+14j
		in	al, dx
		test	al, 40h
		loopne	loc_18A86
		jnz	short loc_18AC0
		mov	al, 0FFh
		out	dx, al
		mov	bx, 3

loc_18A93:				; CODE XREF: sub_18A75+49j
		mov	cx, 1388h
		mov	dx, 331h

loc_18A99:				; CODE XREF: sub_18A75+27j
		in	al, dx
		test	al, 80h
		loopne	loc_18A99
		jnz	short loc_18ABD
		mov	dx, 330h
		in	al, dx
		cmp	al, 0FEh ; '˛'
		jnz	short loc_18ABD
		mov	cx, 1388h
		mov	dx, 331h

loc_18AAE:				; CODE XREF: sub_18A75+3Cj
		in	al, dx
		test	al, 40h
		loopne	loc_18AAE
		jnz	short loc_18AC0
		mov	dx, 331h
		mov	al, 3Fh	; '?'
		out	dx, al
		jmp	short loc_18AC6
; ---------------------------------------------------------------------------

loc_18ABD:				; CODE XREF: sub_18A75+29j
					; sub_18A75+31j
		dec	bx
		jnz	short loc_18A93

loc_18AC0:				; CODE XREF: sub_18A75+16j
					; sub_18A75+3Ej
		mov	word_2592C, 0

loc_18AC6:				; CODE XREF: sub_18A75+9j
					; sub_18A75+46j
		pop	dx
		pop	cx
		pop	bx
		pop	cx
		mov	ax, word_2592C
		and	ax, ax
		retn
sub_18A75	endp


; =============== S U B	R O U T	I N E =======================================


sub_18AD0	proc near		; CODE XREF: sub_185B5+15p
		push	dx
		push	cx
		push	bx
		push	ax
		mov	bx, 9009h

loc_18AD7:				; CODE XREF: sub_18AD0+1Fj
		mov	cx, 7Fh	; ''

loc_18ADA:				; CODE XREF: sub_18AD0+1Bj
		mov	ah, bh
		add	ah, bl
		call	sub_189E2
		mov	ah, cl
		call	sub_189E2
		xor	ah, ah
		call	sub_189E2
		loop	loc_18ADA
		dec	bl
		jnz	short loc_18AD7
		pop	ax
		pop	bx
		pop	cx
		pop	dx
		retn
sub_18AD0	endp


; =============== S U B	R O U T	I N E =======================================


sub_18AF6	proc near		; CODE XREF: sub_185DB+14p
		push	ax
		push	cx
		lodsb
		mov	cl, al
		lodsb
		dec	cl
		call	sub_1872E
		pop	cx
		pop	ax
		retn
sub_18AF6	endp


; =============== S U B	R O U T	I N E =======================================


sub_18B04	proc near		; CODE XREF: sub_18600+15p
		push	cx
		mov	cl, [si]
		inc	si
		call	sub_1872E
		pop	cx
		retn
sub_18B04	endp


; =============== S U B	R O U T	I N E =======================================


sub_18B0D	proc near		; CODE XREF: sub_18626+15p
		push	cx
		test	al, 0Fh
		jnz	short loc_18B17
		or	al, cs:[bx+80h]

loc_18B17:				; CODE XREF: sub_18B0D+3j
		mov	cx, 2
		mov	ah, al
		and	ah, 0F0h
		cmp	ah, 0C0h ; '¿'
		jnz	short loc_18B25
		dec	cx

loc_18B25:				; CODE XREF: sub_18B0D+15j
		call	sub_1872E
		pop	cx
		retn
sub_18B0D	endp


; =============== S U B	R O U T	I N E =======================================


sub_18B2A	proc near		; CODE XREF: sub_188E5+22p
		mov	ax, 1
		mov	word_2592E, ax
		call	sub_18FB6
		jz	short loc_18B3A
		call	sub_18EEB
		jmp	short loc_18B40
; ---------------------------------------------------------------------------

loc_18B3A:				; CODE XREF: sub_18B2A+9j
		mov	word_2592E, 0

loc_18B40:				; CODE XREF: sub_18B2A+Ej
		mov	ax, word_2592E
		and	ax, ax
		retn
sub_18B2A	endp

; ---------------------------------------------------------------------------
		mov	ax, 1
		call	sub_18B6B
		mov	ax, 102h
		call	sub_18B6B
		mov	ax, 203h
		call	sub_18B6B
		mov	ax, 304h
		call	sub_18B6B
		mov	ax, 405h
		call	sub_18B6B
		mov	ax, 506h
		call	sub_18B6B
		retn

; =============== S U B	R O U T	I N E =======================================


sub_18B6B	proc near		; CODE XREF: seg000:8B49p seg000:8B4Fp ...
		push	ax
		push	di
		push	si
		push	cx
		push	ds
		push	bx
		push	es
		mov	bl, al
		xor	bh, bh
		call	sub_18B81
		pop	es
		pop	bx
		pop	ds
		pop	cx
		pop	si
		pop	di
		pop	ax
		retn
sub_18B6B	endp


; =============== S U B	R O U T	I N E =======================================


sub_18B81	proc near		; CODE XREF: sub_18B6B+Bp seg000:9253p
		push	si
		push	di
		push	ds
		push	es
		mov	si, seg	dseg
		mov	ds, si
		lds	si, dword_25930
		mov	di, [si+0Ch]
		add	di, si
		add	bx, bx
		add	bx, bx
		mov	cx, bx
		add	bx, bx
		add	bx, cx
		add	di, bx
		mov	bx, [di]
		add	bx, bx
		mov	di, bx
		add	bx, bx
		add	bx, bx
		add	bx, bx
		add	bx, bx
		sub	bx, di
		mov	di, [si+10h]
		add	di, si
		add	di, bx
		xor	bx, bx
		push	ds
		push	di
		mov	al, ah
		pop	di
		pop	ds
		xor	ah, ah
		call	sub_18BC8
		pop	es
		pop	ds
		pop	di
		pop	si
		retn
sub_18B81	endp


; =============== S U B	R O U T	I N E =======================================


sub_18BC8	proc near		; CODE XREF: sub_18B81+3Fp
		push	ax
		push	bx
		push	cx
		push	dx
		push	ax
		mov	ah, 8
		mov	al, 0
		call	sub_19007
		pop	ax
		mov	dh, [bx+di]
		and	dh, dh
		jz	short loc_18BDE
		jmp	loc_18D86
; ---------------------------------------------------------------------------

loc_18BDE:				; CODE XREF: sub_18BC8+11j
		mov	dl, al
		add	dl, 0C0h ; '¿'
		mov	dh, [bx+di+4]
		and	dh, 7
		shl	dh, 1
		mov	ah, [bx+di+0Eh]
		and	ah, 1
		xor	ah, 1
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		xor	ah, ah
		push	ds
		push	di
		mov	cx, seg	dseg
		mov	ds, cx
		mov	di, 5593h
		add	di, ax
		mov	al, [di]
		pop	di
		pop	ds
		mov	dl, al
		add	dl, 40h	; '@'
		mov	dh, [bx+di+0Ah]
		and	dh, 3Fh
		mov	ah, [bx+di+2]
		shr	ah, 1
		shr	ah, 1
		and	ah, 0C0h
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 60h	; '`'
		mov	dh, [bx+di+5]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+8]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 80h	; 'Ä'
		mov	dh, [bx+di+6]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+9]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 20h	; ' '
		mov	dh, [bx+di+3]
		and	dh, 0Fh
		mov	ah, [bx+di+0Bh]
		and	ah, ah
		jz	short loc_18C8E
		or	dh, 80h

loc_18C8E:				; CODE XREF: sub_18BC8+C1j
		mov	ah, [bx+di+0Ch]
		and	ah, ah
		jz	short loc_18C98
		or	dh, 40h

loc_18C98:				; CODE XREF: sub_18BC8+CBj
		mov	ah, [bx+di+7]
		and	ah, ah
		jz	short loc_18CA2
		or	dh, 20h

loc_18CA2:				; CODE XREF: sub_18BC8+D5j
		mov	ah, [bx+di+0Dh]
		and	ah, ah
		jz	short loc_18CAC
		or	dh, 10h

loc_18CAC:				; CODE XREF: sub_18BC8+DFj
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 43h	; 'C'
		mov	dh, [bx+di+17h]
		and	dh, 3Fh
		mov	ah, [bx+di+0Fh]
		shr	ah, 1
		shr	ah, 1
		and	ah, 0C0h
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 63h	; 'c'
		mov	dh, [bx+di+12h]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+15h]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 83h	; 'É'
		mov	dh, [bx+di+13h]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+16h]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 23h	; '#'
		mov	dh, [bx+di+10h]
		and	dh, 0Fh
		mov	ah, [bx+di+18h]
		and	ah, ah
		jz	short loc_18D32
		or	dh, 80h

loc_18D32:				; CODE XREF: sub_18BC8+165j
		mov	ah, [bx+di+19h]
		and	ah, ah
		jz	short loc_18D3C
		or	dh, 40h

loc_18D3C:				; CODE XREF: sub_18BC8+16Fj
		mov	ah, [bx+di+14h]
		and	ah, ah
		jz	short loc_18D46
		or	dh, 20h

loc_18D46:				; CODE XREF: sub_18BC8+179j
		mov	ah, [bx+di+1Ah]
		and	ah, ah
		jz	short loc_18D50
		or	dh, 10h

loc_18D50:				; CODE XREF: sub_18BC8+183j
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 0E0h ; '‡'
		mov	dh, [bx+di+1Ch]
		and	dh, 3
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 0E3h ; '„'
		mov	dh, [bx+di+1Dh]
		and	dh, 3
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax

loc_18D81:				; CODE XREF: sub_18BC8+264j
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
; ---------------------------------------------------------------------------

loc_18D86:				; CODE XREF: sub_18BC8+13j
		mov	al, 1
		mov	dl, al
		add	dl, 40h	; '@'
		mov	dh, [bx+di+0Ah]
		and	dh, 3Fh
		mov	ah, [bx+di+2]
		shr	ah, 1
		shr	ah, 1
		and	ah, 0C0h
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 60h	; '`'
		mov	dh, [bx+di+5]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+8]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 80h	; 'Ä'
		mov	dh, [bx+di+6]
		and	dh, 0Fh
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		shl	dh, 1
		mov	ah, [bx+di+9]
		and	ah, 0Fh
		or	dh, ah
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		mov	dl, al
		add	dl, 20h	; ' '
		mov	dh, [bx+di+3]
		and	dh, 0Fh
		mov	ah, [bx+di+0Bh]
		and	ah, ah
		jz	short loc_18E05
		or	dh, 80h

loc_18E05:				; CODE XREF: sub_18BC8+238j
		mov	ah, [bx+di+0Ch]
		and	ah, ah
		jz	short loc_18E0F
		or	dh, 40h

loc_18E0F:				; CODE XREF: sub_18BC8+242j
		mov	ah, [bx+di+7]
		and	ah, ah
		jz	short loc_18E19
		or	dh, 20h

loc_18E19:				; CODE XREF: sub_18BC8+24Cj
		mov	ah, [bx+di+0Dh]
		and	ah, ah
		jz	short loc_18E23
		or	dh, 10h

loc_18E23:				; CODE XREF: sub_18BC8+256j
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		jmp	loc_18D81
sub_18BC8	endp


; =============== S U B	R O U T	I N E =======================================


sub_18E2F	proc near		; CODE XREF: sub_185B5+1Fp
		push	ax
		mov	bx, 1

loc_18E33:				; CODE XREF: sub_18E2F+15j
		push	bx
		xor	ax, ax
		push	ax
		push	ax
		push	ax
		call	sub_1905D
		pop	ax
		pop	ax
		pop	ax
		pop	bx
		inc	bx
		cmp	bx, 9
		jle	short loc_18E33
		pop	ax
		retn
sub_18E2F	endp


; =============== S U B	R O U T	I N E =======================================


sub_18E48	proc near		; CODE XREF: sub_185DB+1Ep
		push	ax
		lodsb
		mov	ah, 0
		add	si, ax
		pop	ax
		retn
sub_18E48	endp


; =============== S U B	R O U T	I N E =======================================


sub_18E50	proc near		; CODE XREF: sub_18600+1Fp
		push	ax
		lodsb
		mov	ah, 0
		add	si, ax
		pop	ax
		retn
sub_18E50	endp


; =============== S U B	R O U T	I N E =======================================


sub_18E58	proc near		; CODE XREF: sub_18626+1Fp

; FUNCTION CHUNK AT 8E9E SIZE 00000005 BYTES
; FUNCTION CHUNK AT 8EC7 SIZE 00000024 BYTES

		push	bx
		push	cx
		test	al, 0Fh
		jnz	short loc_18E63
		or	al, cs:[bx+80h]

loc_18E63:				; CODE XREF: sub_18E58+4j
		mov	ah, al
		and	ah, 0Fh
		cmp	ah, 8
		jle	short loc_18E6F
		jmp	short loc_18E83
; ---------------------------------------------------------------------------

loc_18E6F:				; CODE XREF: sub_18E58+13j
		mov	ah, al
		and	ah, 0F0h
		cmp	ah, 0C0h ; '¿'
		jz	short loc_18E8E
		cmp	ah, 90h	; 'ê'
		jz	short loc_18E9E
		cmp	ah, 80h	; 'Ä'
		jz	short loc_18EC7

loc_18E83:				; CODE XREF: sub_18E58+15j
		inc	si
		and	al, 0F0h
		cmp	al, 0C0h ; '¿'
		jz	short loc_18E8B
		inc	si

loc_18E8B:				; CODE XREF: sub_18E58+30j
					; sub_18E58+39j ...
		pop	cx
		pop	bx
		retn
; ---------------------------------------------------------------------------

loc_18E8E:				; CODE XREF: sub_18E58+1Fj
		call	sub_18E93
		jmp	short loc_18E8B
sub_18E58	endp


; =============== S U B	R O U T	I N E =======================================


sub_18E93	proc near		; CODE XREF: sub_18E58:loc_18E8Ep
		and	al, 0Fh
		mov	ah, al
		mov	al, [si]
		call	sub_18B6B
		inc	si
		retn
sub_18E93	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_18E58

loc_18E9E:				; CODE XREF: sub_18E58+24j
		call	sub_18EA3
		jmp	short loc_18E8B
; END OF FUNCTION CHUNK	FOR sub_18E58

; =============== S U B	R O U T	I N E =======================================


sub_18EA3	proc near		; CODE XREF: sub_18E58:loc_18E9Ep
					; seg000:926Bp
		push	ax
		push	bx
		push	cx
		push	dx
		push	di
		push	es
		and	al, 0Fh
		xor	ah, ah
		push	ax
		lodsb
		push	ax
		lodsb
		push	ax
		and	ax, ax
		jz	short loc_18EB9
		mov	ax, 20h	; ' '

loc_18EB9:				; CODE XREF: sub_18EA3+11j
		push	ax
		call	sub_1905D
		add	sp, 8
		pop	es
		pop	di
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
sub_18EA3	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_18E58

loc_18EC7:				; CODE XREF: sub_18E58+29j
		push	ax
		and	al, 0Fh
		add	al, 0B0h ; '∞'
		mov	ah, al
		push	ds
		push	bx
		mov	bx, seg	seg000
		mov	ds, bx
		assume ds:seg000
		mov	bx, 80CCh
		add	bl, ah
		adc	bh, 0
		mov	al, [bx]
		pop	bx
		pop	ds
		assume ds:dseg
		and	al, 0DFh
		call	sub_19007
		lodsb
		lodsb
		pop	ax
		jmp	short loc_18E8B
; END OF FUNCTION CHUNK	FOR sub_18E58

; =============== S U B	R O U T	I N E =======================================


sub_18EEB	proc near		; CODE XREF: sub_18B2A+Bp
		push	ax
		push	ax
		mov	ah, 40h	; '@'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 41h	; 'A'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 42h	; 'B'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 48h	; 'H'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 49h	; 'I'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 4Ah	; 'J'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 50h	; 'P'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 51h	; 'Q'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 52h	; 'R'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 43h	; 'C'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 44h	; 'D'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 45h	; 'E'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 4Bh	; 'K'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 4Ch	; 'L'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 4Dh	; 'M'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 53h	; 'S'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 54h	; 'T'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		push	ax
		mov	ah, 55h	; 'U'
		mov	al, 0FFh
		call	sub_19007
		pop	ax
		mov	ax, 100h

loc_18F91:				; CODE XREF: sub_18EEB+AEj
		call	sub_19007
		inc	ah
		cmp	ah, 40h	; '@'
		jnz	short loc_18F91
		mov	ax, 6000h

loc_18F9E:				; CODE XREF: sub_18EEB+BBj
		call	sub_19007
		inc	ah
		cmp	ah, 0F6h ; 'ˆ'
		jnz	short loc_18F9E
		mov	ax, 406h
		call	sub_19007
		mov	ax, 0BD00h
		call	sub_19007
		pop	ax
		retn
sub_18EEB	endp


; =============== S U B	R O U T	I N E =======================================


sub_18FB6	proc near		; CODE XREF: sub_18B2A+6p
		push	ax
		push	cx
		push	dx
		mov	ax, 460h
		call	sub_19007
		mov	ax, 480h
		call	sub_19007
		call	sub_19056
		push	ax
		mov	ax, 2FFh
		call	sub_19007
		mov	ax, 421h
		call	sub_19007
		mov	cx, 0C7h ; '«'

loc_18FD8:				; CODE XREF: sub_18FB6+25j
		call	sub_19056
		loop	loc_18FD8
		call	sub_19056
		push	ax
		mov	ax, 460h
		call	sub_19007
		mov	ax, 480h
		call	sub_19007
		pop	ax
		pop	dx
		mov	ah, 0
		and	al, 0E0h
		and	dl, 0E0h
		cmp	al, 0C0h ; '¿'
		jnz	short loc_19001
		cmp	dl, 0
		jnz	short loc_19001
		mov	ah, 1

loc_19001:				; CODE XREF: sub_18FB6+42j
					; sub_18FB6+47j
		and	ah, ah
		pop	dx
		pop	cx
		pop	ax
		retn
sub_18FB6	endp


; =============== S U B	R O U T	I N E =======================================


sub_19007	proc near		; CODE XREF: sub_18BC8+9p
					; sub_18BC8+33p ...
		pushf
		cli
		push	ax
		push	dx
		push	ds
		push	bx
		mov	bx, seg	seg000
		mov	ds, bx
		assume ds:seg000
		mov	bx, 80CCh
		add	bl, ah
		adc	bh, 0
		mov	[bx], al
		pop	bx
		pop	ds
		assume ds:dseg
		mov	dx, 388h
		xchg	al, ah
		out	dx, al
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		inc	dx
		xchg	al, ah
		out	dx, al
		dec	dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		in	al, dx
		pop	dx
		pop	ax
		popf
		retn
sub_19007	endp


; =============== S U B	R O U T	I N E =======================================


sub_19056	proc near		; CODE XREF: sub_18FB6+Fp
					; sub_18FB6:loc_18FD8p	...
		push	dx
		mov	dx, 388h
		in	al, dx
		pop	dx
		retn
sub_19056	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1905D	proc near		; CODE XREF: sub_18E2F+Ap
					; sub_18EA3+17p

arg_0		= byte ptr  4
arg_2		= byte ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		push	bx
		push	cx
		push	dx
		push	ds
		push	ax
		mov	ah, 8
		mov	al, 0
		call	sub_19007
		pop	ax
		push	bx
		push	ds
		push	ax
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, [bp+arg_6]
		xor	bh, bh
		mov	dl, [bx+5593h]
		add	dl, 43h	; 'C'
		mov	ah, dl
		push	ds
		push	bx
		mov	bx, seg	seg000
		mov	ds, bx
		assume ds:seg000
		mov	bx, 80CCh
		add	bl, ah
		adc	bh, 0
		mov	al, [bx]
		pop	bx
		pop	ds
		assume ds:dseg
		mov	ah, 20h	; ' '
		sub	dh, [bp+arg_2]
		shr	dh, 1
		shr	dh, 1
		shr	dh, 1
		shr	dh, 1
		and	dh, 3Fh
		sub	ah, dh
		mov	dh, ah
		and	dh, 3Fh
		and	al, 0C0h
		or	dh, al
		push	dx
		push	ax
		mov	ah, dl
		mov	al, dh
		call	sub_19007
		pop	ax
		pop	dx
		pop	ax
		pop	ds
		pop	bx
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, [bp+arg_4]
		mov	di, 55B4h
		mov	cl, [bx+di]
		dec	cl
		mov	di, 5614h
		mov	al, [bx+di]
		xor	ah, ah
		mov	bx, ax
		add	bx, bx
		mov	di, 559Ch
		mov	ax, [bx+di]
		and	ax, 3FFh
		push	ax
		mov	ah, al
		mov	al, 0A0h ; '†'
		add	al, byte ptr [bp+arg_6]
		xchg	ah, al
		call	sub_19007
		pop	ax
		pop	ds
		mov	al, ah
		and	al, 3
		and	cl, 7
		shl	cl, 1
		shl	cl, 1
		add	al, cl
		add	al, [bp+arg_0]
		xor	ah, ah
		push	ax
		mov	ah, al
		mov	al, 0B0h ; '∞'
		add	al, byte ptr [bp+arg_6]
		xchg	al, ah
		call	sub_19007
		pop	ax
		pop	dx
		pop	cx
		pop	bx
		pop	bp
		retn
sub_1905D	endp


; =============== S U B	R O U T	I N E =======================================


sub_19115	proc near		; CODE XREF: sub_185B5+Bp
		push	ax
		push	bx
		push	cx
		mov	bx, 83CCh
		mov	cx, 0Fh
		xor	al, al

loc_19120:				; CODE XREF: sub_19115+Fj
		mov	cs:[bx], al
		inc	bx
		loop	loc_19120
		pop	cx
		pop	bx
		pop	ax
		xor	al, al
		mov	cs:byte_183EE, al
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retn
sub_19115	endp

; ---------------------------------------------------------------------------
		xor	cx, cx
		mov	bx, 83CCh
		mov	ax, word ptr cs:byte_180CC+320h
		inc	ax
		cmp	ax, 2
		jb	short loc_19147
		xor	ax, ax

loc_19147:				; CODE XREF: seg000:9143j
		mov	word ptr cs:byte_180CC+320h, ax
		inc	ax
		mov	bx, 8473h
		add	bx, ax
		mov	cl, cs:[bx]
		mov	bx, 83F1h
		add	bl, cl
		adc	bh, 0
		mov	cl, cs:[bx]
		xor	ch, ch
		mov	bx, 83CCh
		add	bx, ax
		mov	al, cs:[bx]
		cmp	al, 0Ah
		jnb	short loc_1916F
		xor	al, al

loc_1916F:				; CODE XREF: seg000:916Bj
		xor	ah, ah
		add	ax, ax
		and	ax, ax
		jz	short loc_191A9
		add	ax, 30h	; '0'
		add	ax, cx
		mov	bx, 8489h
		add	bx, ax
		mov	ax, cs:[bx]
		cmp	ax, cs:word_183EF
		jz	short loc_19190
		push	ax
		call	sub_191B9
		pop	ax

loc_19190:				; CODE XREF: seg000:9189j
		mov	cs:word_183EF, ax
		mov	al, cs:byte_183EE
		and	al, al
		jnz	short locret_191A8
		inc	al
		mov	cs:byte_183EE, al
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 3

loc_191A6:				; CODE XREF: seg000:91B7j
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd

locret_191A8:				; CODE XREF: seg000:919Aj
		retf
; ---------------------------------------------------------------------------

loc_191A9:				; CODE XREF: seg000:9175j
		xor	ax, ax
		mov	cs:byte_183EE, al
		mov	cs:word_183EF, ax
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		jmp	short loc_191A6

; =============== S U B	R O U T	I N E =======================================


sub_191B9	proc near		; CODE XREF: seg000:918Cp
		push	ax
		mov	al, 0B6h ; '∂'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_18A3B
		pop	ax
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_18A3B
		mov	al, ah
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_18A3B
		retn
sub_191B9	endp


; =============== S U B	R O U T	I N E =======================================


sub_191CF	proc near		; CODE XREF: sub_185DB+Ap
		push	ax
		lodsb
		mov	ah, 0
		add	si, ax
		pop	ax
		retn
sub_191CF	endp


; =============== S U B	R O U T	I N E =======================================


sub_191D7	proc near		; CODE XREF: sub_18600+Bp
		push	ax
		lodsb
		mov	ah, 0
		add	si, ax
		pop	ax
		retn
sub_191D7	endp


; =============== S U B	R O U T	I N E =======================================


sub_191DF	proc near		; CODE XREF: sub_18626+Bp
		push	ax
		push	bx
		mov	ah, al
		and	ah, 0F0h
		cmp	ah, 0C0h ; '¿'
		jz	short loc_19227
		test	al, 0Fh
		jnz	short loc_191F4
		or	al, cs:[bx+80h]

loc_191F4:				; CODE XREF: sub_191DF+Ej
		mov	bx, 83CCh
		mov	ah, al
		and	ah, 0Fh
		add	bl, ah
		adc	bh, 0
		and	al, 0F0h
		cmp	al, 90h	; 'ê'
		jz	short loc_19219
		cmp	al, 80h	; 'Ä'
		jz	short loc_19210
		lodsb
		lodsb

loc_1920D:				; CODE XREF: sub_191DF+38j
					; sub_191DF+4Bj
		pop	bx
		pop	ax
		retn
; ---------------------------------------------------------------------------

loc_19210:				; CODE XREF: sub_191DF+2Aj
		lodsb
		lodsb
		xor	al, al

loc_19214:				; CODE XREF: sub_191DF+44j
					; sub_191DF:loc_19225j
		mov	cs:[bx], al
		jmp	short loc_1920D
; ---------------------------------------------------------------------------

loc_19219:				; CODE XREF: sub_191DF+26j
		lodsb
		mov	ah, al
		lodsb
		cmp	al, 0
		jz	short loc_19225
		mov	al, ah
		jmp	short loc_19214
; ---------------------------------------------------------------------------

loc_19225:				; CODE XREF: sub_191DF+40j
		jmp	short loc_19214
; ---------------------------------------------------------------------------

loc_19227:				; CODE XREF: sub_191DF+Aj
		call	sub_1922C
		jmp	short loc_1920D
sub_191DF	endp


; =============== S U B	R O U T	I N E =======================================


sub_1922C	proc near		; CODE XREF: sub_191DF:loc_19227p
		and	al, 0Fh
		mov	ah, al
		mov	al, [si]
		push	bx
		mov	bx, 8473h
		add	bl, ah
		adc	bh, 0
		mov	cs:[bx], al
		pop	bx
		inc	si
		retn
sub_1922C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ds
		push	si
		mov	ax, seg	seg000
		mov	ds, ax
		assume ds:seg000
		mov	si, 9272h
		mov	bx, [bp+4]
		mov	ah, 1
		call	sub_18B81
		mov	ax, seg	seg000
		mov	ds, ax
		mov	si, 9272h
		mov	al, [bp+6]
		mov	[si], al
		mov	al, [bp+8]
		mov	[si+1],	al
		mov	al, 1
		call	sub_18EA3
		pop	si
		pop	ds
		assume ds:dseg
		pop	bp
		retn
; ---------------------------------------------------------------------------
		db 0Ah dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_1927C	proc near		; CODE XREF: sub_10282+2Ep
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	byte_25A24, al
		xor	ax, 0FFFFh
		push	ax
		mov	ax, 4
		mov	cx, 0
		mov	dx, cx
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 7
		mov	cx, 0
		mov	dx, 280h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 0
		mov	dx, 0C8h ; '»'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		pop	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retn
sub_1927C	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		mov	al, byte_25A24
		test	al, 0FFh
		jz	short loc_192D6
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		mov	cx, [bp+4]
		shl	cx, 1
		mov	ax, 4
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row

loc_192D6:				; CODE XREF: seg000:92C5j
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		mov	al, byte_25A24
		test	al, 0FFh
		jz	short loc_19301
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		mov	dx, [bp+4]
		mov	ax, 4
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row

loc_19301:				; CODE XREF: seg000:92F2j
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		pop	bp
		retn
; ---------------------------------------------------------------------------
		db 57h,	56h, 55h, 1Eh, 6, 0A0h,	74h, 56h, 0A8h,	0FFh, 74h
		db 9, 0B8h, 3, 0, 0CDh,	33h, 0D1h, 0F9h, 8Bh, 0C1h, 7
		db 1Fh,	5Dh, 5Eh, 5Fh, 0C3h, 57h, 56h, 55h, 1Eh, 6, 0A0h
		db 74h,	56h, 0A8h, 0FFh, 74h, 7, 0B8h, 3, 0, 0CDh, 33h
		db 8Bh,	0C2h, 7, 1Fh, 5Dh, 5Eh,	5Fh, 0C3h, 57h,	56h, 55h
		db 1Eh,	6, 0A0h, 74h, 56h, 0A8h, 0FFh, 74h, 0Ah, 0B8h
		db 3, 0, 0CDh, 33h, 8Bh, 0C3h, 25h, 3, 0, 7, 1Fh, 5Dh
		db 5Eh,	5Fh, 0C3h
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		mov	ax, [bp+6]
		mov	es, ax
		mov	di, [bp+4]
		mov	bx, [bp+0Ah]
		mov	ax, [bp+8]
		call	sub_1CDA0
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		mov	ax, [bp+6]
		mov	es, ax
		mov	di, [bp+4]
		mov	bx, [bp+0Ah]
		mov	ax, [bp+8]
		call	sub_1CDE5
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		mov	ax, [bp+6]
		mov	es, ax
		mov	di, [bp+4]
		call	sub_1CE29
		pop	di
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_193A4	proc near		; CODE XREF: sub_14015+54p

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1CE50
		retn
sub_193A4	endp


; =============== S U B	R O U T	I N E =======================================


sub_193B1	proc near		; CODE XREF: sub_10C18:loc_10CDAp
					; sub_14015:loc_14113p	...
		call	sub_1CE6F
		retn
sub_193B1	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_193B8	proc near		; CODE XREF: seg000:0713p
					; sub_1165E+151p ...

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1BBB8
		retn
sub_193B8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_193C8	proc near		; CODE XREF: sub_15181+4Fp

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1BDFE
		retn
sub_193C8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_193D8	proc near		; CODE XREF: sub_10A07+80p
					; sub_12EF8+55p
		push	bp
		mov	bp, sp
		call	sub_1FBAD
		pop	bp
		retn
sub_193D8	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, [bp+6]
		mov	ax, [bp+4]
		pop	bp
		call	sub_1FBD5
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		call	sub_1FC03
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		call	sub_1FC2D
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19406	proc near		; CODE XREF: sub_103EA+1Bp
		push	bp
		mov	bp, sp
		call	sub_1FC68
		pop	bp
		retn
sub_19406	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19410	proc near		; CODE XREF: sub_103EA+25p
					; sub_10D9D+2Fp ...
		push	bp
		mov	bp, sp
		call	sub_1FC92
		pop	bp
		retn
sub_19410	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		call	sub_1FCAD
		pop	bp
		retn

; =============== S U B	R O U T	I N E =======================================


sub_19424	proc near		; CODE XREF: sub_103EA:loc_103F6p
		call	sub_1FFF7
		retn
sub_19424	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1942A	proc near		; CODE XREF: sub_10D9D+12Bp
					; sub_10D9D+1A3p ...
		push	bp
		mov	bp, sp
		call	sub_20077
		pop	bp
		retn
sub_1942A	endp


; =============== S U B	R O U T	I N E =======================================


sub_19434	proc near		; CODE XREF: sub_19440+Bp sub_19451+4p ...
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_19436:				; CODE XREF: sub_19434j
		jmp	short $+2
; ---------------------------------------------------------------------------

locret_19438:				; CODE XREF: sub_19434:loc_19436j
		retn
sub_19434	endp


; =============== S U B	R O U T	I N E =======================================


sub_19439	proc near		; CODE XREF: seg000:95BEp seg000:963Ap ...
		mov	ax, word_26BEE
		cmp	ax, 0
		retn
sub_19439	endp


; =============== S U B	R O U T	I N E =======================================


sub_19440	proc near		; CODE XREF: sub_19488+6Dp
					; sub_19502+5Ep ...
		cmp	word_26BEE, 0
		jnz	short sub_19451
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 3
		call	sub_19434
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retn
sub_19440	endp


; =============== S U B	R O U T	I N E =======================================


sub_19451	proc near		; CODE XREF: sub_19440+5j
					; sub_1946E+16p ...
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		call	sub_19434
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retn
sub_19451	endp


; =============== S U B	R O U T	I N E =======================================


sub_1945B	proc near		; CODE XREF: sub_1946E+Ep
					; sub_1946E:loc_19481p	...
		cmp	ax, 0FFh
		jz	short loc_19467
		cmp	cs:word_1946C, ax
		jb	short locret_1946B

loc_19467:				; CODE XREF: sub_1945B+3j
		mov	cs:word_1946C, ax

locret_1946B:				; CODE XREF: sub_1945B+Aj
		retn
sub_1945B	endp

; ---------------------------------------------------------------------------
word_1946C	dw 0FFh			; DATA XREF: sub_1945B+5r
					; sub_1945B:loc_19467w

; =============== S U B	R O U T	I N E =======================================


sub_1946E	proc near		; CODE XREF: sub_130DD+DBp
		mov	ax, word_26BEE
		cmp	ax, 0
		mov	ax, 0FFh
		jz	short loc_19481
		mov	ax, 0
		call	sub_1945B
		jmp	short locret_19487
; ---------------------------------------------------------------------------

loc_19481:				; CODE XREF: sub_1946E+9j
		call	sub_1945B
		call	sub_19451

locret_19487:				; CODE XREF: sub_1946E+11j
		retn
sub_1946E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19488	proc near		; CODE XREF: sub_16E30+2AFp

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch
arg_A		= word ptr  0Eh
arg_C		= word ptr  10h
arg_E		= word ptr  12h

		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		pushf
		cli
		mov	ax, [bp+arg_0]
		call	sub_1945B
		mov	ax, 0FFFFh
		jb	short loc_194FA
		mov	ax, [bp+arg_2]
		mov	cs:word_19788, ax
		mov	ax, [bp+arg_4]
		mov	cs:word_1978A, ax
		mov	ax, [bp+arg_6]
		mov	cs:word_19796, ax
		mov	cs:word_1978C, ax
		mov	ax, [bp+arg_8]
		mov	cs:word_1978E, ax
		mov	ax, [bp+arg_A]
		mov	cs:word_19790, ax
		mov	ax, [bp+arg_C]
		mov	cs:word_19792, ax
		mov	cs:word_19798, ax
		mov	ax, [bp+arg_E]
		mov	cs:word_19794, ax
		mov	cs:byte_1979A, 0Fh
		mov	cx, 9631h
		mov	cs:word_197A1, cx
		mov	dx, seg	seg000
		mov	cs:word_1979F, dx
		mov	ax, [bp+arg_A]
		mov	bx, 2
		call	sub_17DF9
		call	sub_19440
		xor	ax, ax

loc_194FA:				; CODE XREF: sub_19488+13j
		popf
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
sub_19488	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19502	proc near		; CODE XREF: sub_16E30+186p
					; sub_16E30+234p ...

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah
arg_8		= word ptr  0Ch
arg_A		= word ptr  0Eh

		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		pushf
		cli
		mov	ax, [bp+arg_0]
		call	sub_1945B
		mov	ax, 0FFFFh
		jb	short loc_19565
		mov	ax, [bp+arg_2]
		mov	cs:word_19788, ax
		mov	ax, [bp+arg_4]
		mov	cs:word_1978A, ax
		mov	ax, [bp+arg_6]
		mov	ax, [bp+arg_6]
		mov	cs:word_19790, ax
		mov	ax, [bp+arg_8]
		mov	cs:word_19792, ax
		mov	cs:word_19798, ax
		mov	ax, [bp+arg_A]
		mov	cs:word_19794, ax
		mov	cs:byte_1979A, 0Fh
		mov	cx, 96C4h
		mov	cs:word_197A1, cx
		mov	dx, seg	seg000
		mov	cs:word_1979F, dx
		mov	ax, [bp+arg_6]
		mov	bx, 2
		call	sub_17DF9
		call	sub_19440
		xor	ax, ax

loc_19565:				; CODE XREF: sub_19502+13j
		popf
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
sub_19502	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		pushf
		cli
		mov	ax, [bp+4]
		call	sub_1945B
		mov	ax, 0FFFFh
		jb	short loc_195AD
		mov	cs:byte_1979A, 0Fh
		mov	ax, [bp+6]
		mov	cs:word_1978A, ax
		mov	cx, 95B5h
		mov	cs:word_197A1, cx
		mov	dx, seg	seg000
		mov	cs:word_1979F, dx
		mov	ax, [bp+8]
		mov	bx, 2
		call	sub_17DF9
		call	sub_19440
		xor	ax, ax

loc_195AD:				; CODE XREF: seg000:9580j
		popf
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		call	sub_19439
		jnz	short loc_19627
		inc	cs:byte_1979A
		test	cs:byte_1979A, 10h
		jz	short loc_1960F
		xor	ax, cs:word_1979B
		add	ax, 2345h
		xor	ax, cs:word_1979B+1
		xor	ax, cs:word_1979D
		and	ax, 0DB6Dh
		mov	cs:word_1979B, ax
		add	ax, 4567h
		xor	ax, cs:word_1979B+1
		mov	cs:word_1979D, ax
		xor	ax, ax
		mov	cs:byte_1979A, al
		mov	al, 0B4h ; '¥'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		mov	ax, cs:word_1978A
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		xchg	al, ah
		out	42h, al		; Timer	8253-5 (AT: 8254.2).

loc_1960F:				; CODE XREF: seg000:95CEj
		mov	ax, cs:word_1979B
		rol	ax, 1
		mov	cs:word_1979B, ax
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	ah, 2
		or	ah, 1
		and	al, 0FDh
		or	al, ah
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd

loc_19627:				; CODE XREF: seg000:95C1j
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retf
; ---------------------------------------------------------------------------
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		call	sub_19439
		jnz	short loc_196BA
		nop
		nop
		nop
		dec	cs:word_19798
		jnz	short loc_19672
		mov	ax, cs:word_19792
		mov	cs:word_19798, ax
		mov	ax, cs:word_19790
		add	ax, cs:word_19794
		mov	cs:word_19790, ax
		mov	cx, cs:word_197A1
		mov	dx, cs:word_1979F
		mov	ax, cs:word_19790
		mov	bx, 2
		call	sub_17DF9

loc_19672:				; CODE XREF: seg000:9647j
		dec	cs:word_19796
		jnz	short loc_196BA
		dec	cs:word_19788
		jnz	short loc_19691
		mov	ax, 0FFh
		call	sub_1945B
		mov	ax, 2
		call	sub_17E1F
		call	sub_19451
		jmp	short loc_196BA
; ---------------------------------------------------------------------------

loc_19691:				; CODE XREF: seg000:967Ej
		mov	ax, cs:word_1978C
		mov	cs:word_19796, ax
		mov	ax, cs:word_1978A
		add	ax, cs:word_1978E
		mov	cs:word_1978A, ax
		mov	al, 0B6h ; '∂'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		mov	ax, cs:word_1978A
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		xchg	al, ah
		out	42h, al		; Timer	8253-5 (AT: 8254.2).

loc_196BA:				; CODE XREF: seg000:963Dj seg000:9677j ...
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retf
; ---------------------------------------------------------------------------
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		call	sub_19439
		jz	short loc_196D5
		jmp	loc_1977E
; ---------------------------------------------------------------------------

loc_196D5:				; CODE XREF: seg000:96D0j
		inc	cs:byte_1979A
		test	cs:byte_1979A, 10h
		jz	short loc_1971E
		xor	ax, cs:word_1979B
		add	ax, 2345h
		xor	ax, cs:word_1979B+1
		xor	ax, cs:word_1979D
		mov	cs:word_1979B, ax
		add	ax, 4567h
		xor	ax, cs:word_1979B+1
		mov	cs:word_1979D, ax
		xor	ax, ax
		mov	cs:byte_1979A, al
		mov	al, 0B4h ; '¥'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		mov	ax, cs:word_1978A
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		call	sub_19434
		xchg	al, ah
		out	42h, al		; Timer	8253-5 (AT: 8254.2).

loc_1971E:				; CODE XREF: seg000:96E0j
		dec	cs:word_19798
		jnz	short loc_19766
		dec	cs:word_19788
		jnz	short loc_1973D
		mov	ax, 0FFh
		call	sub_1945B
		mov	ax, 2
		call	sub_17E1F
		call	sub_19451
		jmp	short loc_1977E
; ---------------------------------------------------------------------------

loc_1973D:				; CODE XREF: seg000:972Aj
		mov	ax, cs:word_19792
		mov	cs:word_19798, ax
		mov	ax, cs:word_19790
		add	ax, cs:word_19794
		mov	cs:word_19790, ax
		mov	cx, cs:word_197A1
		mov	dx, cs:word_1979F
		mov	ax, cs:word_19790
		mov	bx, 2
		call	sub_17DF9

loc_19766:				; CODE XREF: seg000:9723j
		mov	ax, cs:word_1979B
		rol	ax, 1
		mov	cs:word_1979B, ax
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	ah, 2
		or	ah, 1
		and	al, 0FDh
		or	al, ah
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÕÀÕ OR	03H=spkr ON
					; 1: Tmr 2 data	Õº  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd

loc_1977E:				; CODE XREF: seg000:96D2j seg000:973Bj
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retf
; ---------------------------------------------------------------------------
word_19788	dw 0			; DATA XREF: sub_19488+18w
					; sub_19502+18w ...
word_1978A	dw 0			; DATA XREF: sub_19488+1Fw
					; sub_19502+1Fw ...
word_1978C	dw 0			; DATA XREF: sub_19488+2Aw
					; seg000:loc_19691r
word_1978E	dw 0			; DATA XREF: sub_19488+31w
					; seg000:969Dr
word_19790	dw 0			; DATA XREF: sub_19488+38w
					; sub_19502+29w ...
word_19792	dw 0			; DATA XREF: sub_19488+3Fw
					; sub_19502+30w ...
word_19794	dw 0			; DATA XREF: sub_19488+4Aw
					; sub_19502+3Bw ...
word_19796	dw 0			; DATA XREF: sub_19488+26w
					; seg000:loc_19672w ...
word_19798	dw 0			; DATA XREF: sub_19488+43w
					; sub_19502+34w ...
byte_1979A	db 0			; DATA XREF: sub_19488+4Ew
					; sub_19502+3Fw ...
word_1979B	dw 0			; DATA XREF: seg000:95D0r seg000:95E5w ...
word_1979D	dw 0			; DATA XREF: seg000:95DDr seg000:95F1w ...
word_1979F	dw 0			; DATA XREF: sub_19488+5Fw
					; sub_19502+50w ...
word_197A1	dw 0			; DATA XREF: sub_19488+57w
					; sub_19502+48w ...
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_197A4	proc near		; CODE XREF: sub_10282+42p
		call	sub_202C0
		retn
sub_197A4	endp


; =============== S U B	R O U T	I N E =======================================


sub_197AA	proc far		; CODE XREF: sub_202C0+4AP
					; sub_202C0+53P ...
		call	sub_17ABB
		retf
sub_197AA	endp


; =============== S U B	R O U T	I N E =======================================


sub_197AE	proc far		; CODE XREF: sub_202C0+8EP
		call	sub_17B01
		retf
sub_197AE	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	al, [bp+4]
		pop	bp
		call	sub_1BE40
		retn
; ---------------------------------------------------------------------------
		call	sub_1BE65
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_197C5	proc near		; CODE XREF: sub_10282+73p

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		pop	bp
		call	sub_1BEA1
		retn
sub_197C5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_197D5	proc near		; CODE XREF: sub_10A07+42p

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1BEBB
		retn
sub_197D5	endp

; ---------------------------------------------------------------------------
		call	sub_1BEE5
		retn
; ---------------------------------------------------------------------------
		call	sub_1BEF8
		retn

; =============== S U B	R O U T	I N E =======================================


sub_197F1	proc near		; CODE XREF: sub_10282+4Dp
		call	sub_1BF0B
		retn
sub_197F1	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	al, [bp+4]
		pop	bp
		call	sub_1BF4C
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19804	proc near		; CODE XREF: sub_107AD+39p
					; sub_107F0+1Ep

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	dx, [bp+arg_2]
		mov	ax, [bp+arg_0]
		pop	bp
		call	sub_1BF7C
		retn
sub_19804	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19814	proc near		; CODE XREF: sub_10282+66p
					; seg000:06B8p	...

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		pop	bp
		call	sub_1BF99
		retn
sub_19814	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19821	proc near		; CODE XREF: sub_10282+5Cp

arg_0		= word ptr  4
arg_2		= word ptr  6
arg_4		= word ptr  8
arg_6		= word ptr  0Ah

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	bx, [bp+arg_2]
		mov	cx, [bp+arg_4]
		mov	dx, [bp+arg_6]
		pop	bp
		call	sub_1BFB2
		retn
sub_19821	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_19837	proc near		; CODE XREF: sub_107AD+2Dp
					; sub_107F0+12p

arg_0		= word ptr  4
arg_2		= word ptr  6

		push	bp
		mov	bp, sp
		mov	ax, [bp+arg_0]
		mov	dx, [bp+arg_2]
		pop	bp
		call	sub_1BFD1
		retn
sub_19837	endp

; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	al, [bp+4]
		pop	bp
		call	sub_1BFE8
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		mov	dx, [bp+6]
		mov	ax, [bp+4]
		pop	bp
		call	sub_1BFFB
		retn

; =============== S U B	R O U T	I N E =======================================


sub_19864	proc near		; CODE XREF: sub_105E7:loc_105F5p
					; sub_108D1+12Ep ...
		call	sub_20360
		retn
sub_19864	endp

; [00000024 BYTES: COLLAPSED FUNCTION _atexit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [0000002B BYTES: COLLAPSED FUNCTION _close. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000020 BYTES: COLLAPSED FUNCTION _exit. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		pop	cx
		pop	bp
		retn
; [0000007E BYTES: COLLAPSED FUNCTION sub_198DD. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000003F BYTES: COLLAPSED FUNCTION __brk. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000006D BYTES: COLLAPSED FUNCTION __sbrk. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [000000CC BYTES: COLLAPSED FUNCTION _fflush. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [00000041 BYTES: COLLAPSED FUNCTION _flushall. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000084 BYTES: COLLAPSED FUNCTION sub_19B14. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000007C BYTES: COLLAPSED FUNCTION _fseek. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000004E BYTES: COLLAPSED FUNCTION _ftell. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------

__setupio:
		mov	al, byte_26D40
		cbw
		push	ax
		call	_isatty
		pop	cx
		or	ax, ax
		jnz	short loc_19C75
		and	word_26D3E, 0FDFFh

loc_19C75:				; CODE XREF: seg000:9C6Dj
		mov	ax, 200h
		push	ax
		test	word_26D3E, 200h
		jz	short loc_19C86
		mov	ax, 1
		jmp	short loc_19C88
; ---------------------------------------------------------------------------

loc_19C86:				; CODE XREF: seg000:9C7Fj
		xor	ax, ax

loc_19C88:				; CODE XREF: seg000:9C84j
		push	ax
		xor	ax, ax
		xor	dx, dx
		push	ax
		push	dx
		push	ds
		mov	ax, 698Ch
		push	ax
		call	_setvbuf
		add	sp, 0Ch
		mov	al, byte_26D54
		cbw
		push	ax
		call	_isatty
		pop	cx
		or	ax, ax
		jnz	short loc_19CAD
		and	word_26D52, 0FDFFh

loc_19CAD:				; CODE XREF: seg000:9CA5j
		mov	ax, 200h
		push	ax
		test	word_26D52, 200h
		jz	short loc_19CBE
		mov	ax, 2
		jmp	short loc_19CC0
; ---------------------------------------------------------------------------

loc_19CBE:				; CODE XREF: seg000:9CB7j
		xor	ax, ax

loc_19CC0:				; CODE XREF: seg000:9CBCj
		push	ax
		xor	ax, ax
		xor	dx, dx
		push	ax
		push	dx
		push	ds
		mov	ax, 69A0h
		push	ax
		call	_setvbuf
		add	sp, 0Ch
		retn
; [00000113 BYTES: COLLAPSED FUNCTION _setvbuf.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000018 BYTES: COLLAPSED FUNCTION _tell. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000127 BYTES: COLLAPSED FUNCTION _write. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000038 BYTES: COLLAPSED FUNCTION __xfflush. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000010 BYTES: COLLAPSED FUNCTION _bdos. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000018 BYTES: COLLAPSED FUNCTION _chdir. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION _getdisk.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000000D BYTES: COLLAPSED FUNCTION _setdisk.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000001D BYTES: COLLAPSED FUNCTION __chmod. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [0000001E BYTES: COLLAPSED FUNCTION __close. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [00000033 BYTES: COLLAPSED FUNCTION _findfirst. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [0000002D BYTES: COLLAPSED FUNCTION _findnext. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000041 BYTES: COLLAPSED FUNCTION _filelength. PRESS KEYPAD	CTRL-"+" TO EXPAND]
; [0000001D BYTES: COLLAPSED FUNCTION _getcurdir. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [0000000F BYTES: COLLAPSED FUNCTION _getvect.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000011 BYTES: COLLAPSED FUNCTION _setvect.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		push	ax
		push	bx
		push	cx
		push	dx
		push	es
		push	ds
		push	si
		push	di
		push	bp
		mov	bp, seg	dseg
		mov	ds, bp
		mov	bp, sp
		mov	word_2A5B0, sp
		push	word ptr [bp+4]
		push	word ptr [bp+0]
		push	word ptr [bp+10h]
		mov	ax, [bp+2]
		and	ax, 0FFh
		push	ax
		call	word_2A5AE
		add	sp, 8
		mov	[bp+10h], ax
		pop	bp
		pop	di
		pop	si
		pop	ds
		pop	es
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		iret
; [0000001A BYTES: COLLAPSED FUNCTION _harderr.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000017 BYTES: COLLAPSED FUNCTION _hardresume. PRESS KEYPAD	CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		pop	di
		pop	si
		pop	bp
		retn
; [0000002D BYTES: COLLAPSED FUNCTION _hardretn. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		pop	di
		pop	si
		pop	bp
		retn
; [00000029 BYTES: COLLAPSED FUNCTION _ioctl. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000003D BYTES: COLLAPSED FUNCTION __IOERROR. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000011 BYTES: COLLAPSED FUNCTION _isatty. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [00000029 BYTES: COLLAPSED FUNCTION _lseek. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000001B BYTES: COLLAPSED FUNCTION sub_1A1EF. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000012 BYTES: COLLAPSED FUNCTION sub_1A20A. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000144 BYTES: COLLAPSED FUNCTION _open. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000004E BYTES: COLLAPSED FUNCTION __open. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [000000B8 BYTES: COLLAPSED FUNCTION _read. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000001C BYTES: COLLAPSED FUNCTION __read. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000001C BYTES: COLLAPSED FUNCTION _setblock. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000049 BYTES: COLLAPSED FUNCTION __write. PRESS KEYPAD CTRL-"+" TO	EXPAND]
		align 10h
___first	db    0			; DATA XREF: sub_1A4FCr sub_1A4FC+1Dr	...
		db    0
___last		db    0			; DATA XREF: sub_1A4FC+14w
					; sub_1A4FC+27w ...
		db    0
___rover	db    0			; DATA XREF: sub_1A4FC+4Cw
					; sub_1A5CF+19w ...
		db    0
word_1A4F6	dw 0			; DATA XREF: sub_1A4FC+32r
					; sub_1A4FC:loc_1A54Fr	...
word_1A4F8	dw 0			; DATA XREF: sub_1A79B+1r _realloc+1Aw
; unsigned __int32 unk_1A4FA
unk_1A4FA	db    0			; DATA XREF: sub_1A79B+7r _realloc+1Fw
		db    0
; [00000062 BYTES: COLLAPSED FUNCTION sub_1A4FC. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000071 BYTES: COLLAPSED FUNCTION sub_1A55E. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000029 BYTES: COLLAPSED FUNCTION sub_1A5CF. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000036 BYTES: COLLAPSED FUNCTION sub_1A5F8. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000029 BYTES: COLLAPSED FUNCTION _farfree.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000061 BYTES: COLLAPSED FUNCTION sub_1A657. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000039 BYTES: COLLAPSED FUNCTION sub_1A6B8. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000023 BYTES: COLLAPSED FUNCTION sub_1A6F1. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [0000000A BYTES: COLLAPSED FUNCTION _malloc. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [0000007D BYTES: COLLAPSED FUNCTION _farmalloc. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000078 BYTES: COLLAPSED FUNCTION sub_1A79B. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000061 BYTES: COLLAPSED FUNCTION sub_1A813. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000073 BYTES: COLLAPSED FUNCTION _realloc.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------

N_LDIV@:
		pop	cx
		push	cs
		push	cx

LDIV@:
		xor	cx, cx
		jmp	short loc_1A904
; [000000A7 BYTES: COLLAPSED FUNCTION N_LUDIV@.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000060 BYTES: COLLAPSED FUNCTION N_PADD@. PRESS KEYPAD CTRL-"+" TO	EXPAND]
; [0000001F BYTES: COLLAPSED FUNCTION N_SCOPY@.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000017 BYTES: COLLAPSED FUNCTION N_LXMUL@.	PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000021 BYTES: COLLAPSED FUNCTION N_PCMP@. PRESS KEYPAD CTRL-"+" TO	EXPAND]
byte_1AA4C	db 2 dup(0)		; DATA XREF: seg000:AA5Aw seg000:AB0Br ...
; ---------------------------------------------------------------------------

unknown_libname_1:			; TCC/TCC++/BCC++ 16 bit DOS
		pop	word_26F60
		pop	word_26F62
		pop	word_26F64
		mov	word ptr cs:byte_1AA4C,	ds
		mov	word_26F66, si
		mov	word_26F68, di
		cld
		mov	es, word ptr unk_20429
		mov	si, 80h	; 'Ä'
		xor	ah, ah
		lods	byte ptr es:[si]
		inc	ax
		mov	bp, es
		xchg	dx, si
		xchg	ax, bx
		mov	si, word ptr dword_20423
		inc	si
		inc	si
		mov	cx, 1
		cmp	byte ptr word_2042B, 3
		jb	short loc_1AA9A
		mov	es, word ptr dword_20423+2
		mov	di, si
		mov	cl, 7Fh	; ''
		xor	al, al
		repne scasb
		jcxz	short loc_1AB05
		xor	cl, 7Fh

loc_1AA9A:				; CODE XREF: seg000:AA87j
		push	ax
		mov	ax, cx
		add	ax, bx
		inc	ax
		and	ax, 0FFFEh
		mov	di, sp
		sub	di, ax
		jb	short loc_1AB05
		mov	sp, di
		push	es
		pop	ds
		push	ss
		pop	es
		push	cx
		dec	cx
		rep movsb
		xor	al, al
		stosb
		mov	ds, bp
		xchg	si, dx
		xchg	bx, cx
		mov	ax, bx
		mov	dx, ax
		inc	bx

loc_1AAC1:				; CODE XREF: seg000:AAD7j seg000:AADBj
		call	sub_1AADD
		ja	short loc_1AACD

loc_1AAC6:				; CODE XREF: seg000:AACBj
		jb	short loc_1AB08
		call	sub_1AADD
		ja	short loc_1AAC6

loc_1AACD:				; CODE XREF: seg000:AAC4j
		cmp	al, 20h	; ' '
		jz	short loc_1AAD9
		cmp	al, 0Dh
		jz	short loc_1AAD9
		cmp	al, 9
		jnz	short loc_1AAC1

loc_1AAD9:				; CODE XREF: seg000:AACFj seg000:AAD3j
		xor	al, al
		jmp	short loc_1AAC1

; =============== S U B	R O U T	I N E =======================================


sub_1AADD	proc near		; CODE XREF: seg000:loc_1AAC1p
					; seg000:AAC8p
		or	ax, ax
		jz	short loc_1AAE8
		inc	dx
		stosb
		or	al, al
		jnz	short loc_1AAE8
		inc	bx

loc_1AAE8:				; CODE XREF: sub_1AADD+2j sub_1AADD+8j
		xchg	ah, al
		xor	al, al
		stc
		jcxz	short locret_1AB04
		lodsb
		dec	cx
		sub	al, 22h	; '"'
		jz	short locret_1AB04
		add	al, 22h	; '"'
		cmp	al, 5Ch	; '\'
		jnz	short loc_1AB02
		cmp	byte ptr [si], 22h ; '"'
		jnz	short loc_1AB02
		lodsb
		dec	cx

loc_1AB02:				; CODE XREF: sub_1AADD+1Cj
					; sub_1AADD+21j
		or	si, si

locret_1AB04:				; CODE XREF: sub_1AADD+10j
					; sub_1AADD+16j
		retn
sub_1AADD	endp

; ---------------------------------------------------------------------------

loc_1AB05:				; CODE XREF: seg000:AA95j seg000:AAA7j ...
		jmp	_abort
; ---------------------------------------------------------------------------

loc_1AB08:				; CODE XREF: seg000:loc_1AAC6j
		pop	cx
		add	cx, dx
		mov	ds, word ptr cs:byte_1AA4C
		mov	word_26F5A, bx
		inc	bx
		add	bx, bx
		add	bx, bx
		mov	si, sp
		mov	bp, sp
		sub	bp, bx
		jb	short loc_1AB05
		mov	sp, bp
		mov	word_26F5C, bp
		mov	word_26F5E, ss

loc_1AB2B:				; CODE XREF: seg000:AB3Cj
		jcxz	short loc_1AB3E
		mov	[bp+0],	si
		mov	word ptr [bp+2], ss
		add	bp, 4

loc_1AB36:				; CODE XREF: seg000:AB3Aj
		lods	byte ptr ss:[si]
		or	al, al
		loopne	loc_1AB36
		jz	short loc_1AB2B

loc_1AB3E:				; CODE XREF: seg000:loc_1AB2Bj
		xor	ax, ax
		mov	[bp+0],	ax
		mov	[bp+2],	ax
		mov	ds, word ptr cs:byte_1AA4C
		mov	si, word_26F66
		mov	di, word_26F68
		push	word_26F64
		push	word_26F62
		mov	ax, word_26F5A
		mov	word ptr unk_20419, ax
		mov	ax, word_26F5E
		mov	word_2041D, ax
		mov	ax, word_26F5C
		mov	word ptr unk_2041B, ax
		jmp	word_26F60
; ---------------------------------------------------------------------------
		db 53h,	74h, 61h, 63h, 6Bh, 20h, 6Fh, 76h, 65h,	72h, 66h
		db 6Ch,	6Fh, 77h, 21h, 0Dh, 0Ah, 24h
; [0000000C BYTES: COLLAPSED FUNCTION F_OVERFLOW@. PRESS KEYPAD	CTRL-"+" TO EXPAND]
		align 2
seg000		ends

; ===========================================================================

; Segment type:	Pure code
seg001		segment	byte public 'CODE' use16
		assume cs:seg001
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 0BEh
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1AD8F

loc_1AB91:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		out	4Dh, al
		call	sub_1B1DD
		mov	cx, 2
		call	sub_1AFB7
		mov	bx, es:[di+1Ch]
		push	bx
		mov	bx, di
		push	es
		call	sub_1B0BD
		pop	ds
		mov	si, bx
		pop	bx
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		mov	ax, [bx+4DCCh]
		pop	ds
		call	ax
		retn
; END OF FUNCTION CHUNK	FOR sub_1AD8F
; ---------------------------------------------------------------------------
		mov	bx, 101h

loc_1ABBE:				; CODE XREF: seg001:0045j
		mov	dx, 3C4h
		mov	ah, bh
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_1B15F
		call	sub_1ABD7
		inc	bl
		shl	bh, 1
		cmp	bh, 8
		jg	short locret_1AC01
		jmp	short loc_1ABBE

; =============== S U B	R O U T	I N E =======================================


sub_1ABD7	proc near		; CODE XREF: seg001:0039p
		push	di
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1ABED:				; CODE XREF: sub_1ABD7+26j
		cmp	dl, ch
		jz	short loc_1ABFF
		dec	dl
		shr	cx, 1
		rep stosw
		mov	cl, dh
		sub	di, cx
		add	di, bp
		jmp	short loc_1ABED
; ---------------------------------------------------------------------------

loc_1ABFF:				; CODE XREF: sub_1ABD7+18j
		pop	di
		retn
sub_1ABD7	endp

; ---------------------------------------------------------------------------

locret_1AC01:				; CODE XREF: seg001:0043j
		retn
; ---------------------------------------------------------------------------
		mov	bx, 101h

loc_1AC05:				; CODE XREF: seg001:008Bj
		mov	dx, 3C4h
		mov	ah, bh
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_1B15F
		jmp	short loc_1AC1D
; ---------------------------------------------------------------------------

loc_1AC12:				; CODE XREF: seg001:00C3j
		inc	bl
		shl	bh, 1
		cmp	bh, 8
		jg	short locret_1AC55
		jmp	short loc_1AC05
; ---------------------------------------------------------------------------

loc_1AC1D:				; CODE XREF: seg001:0080j
		push	di
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		mov	si, ax
		not	si

loc_1AC37:				; CODE XREF: seg001:00C0j
		cmp	dl, ch
		jz	short loc_1AC52
		dec	dl
		shr	cx, 1

loc_1AC3F:				; CODE XREF: seg001:00B8j
		and	es:[di], si
		or	es:[di], ax
		add	di, 2
		loop	loc_1AC3F
		mov	cl, dh
		sub	di, cx
		add	di, bp
		jmp	short loc_1AC37
; ---------------------------------------------------------------------------

loc_1AC52:				; CODE XREF: seg001:00A9j
		pop	di
		jmp	short loc_1AC12
; ---------------------------------------------------------------------------

locret_1AC55:				; CODE XREF: seg001:0089j
		retn
; ---------------------------------------------------------------------------
		mov	bx, 101h

loc_1AC59:				; CODE XREF: seg001:00E2j
		mov	dx, 3C4h
		mov	ah, bh
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_1B15F
		not	ax
		call	sub_1AC74
		inc	bl
		shl	bh, 1
		cmp	bh, 8
		jg	short locret_1ACA4
		jmp	short loc_1AC59

; =============== S U B	R O U T	I N E =======================================


sub_1AC74	proc near		; CODE XREF: seg001:00D6p
		push	di
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
sub_1AC74	endp ; sp-analysis failed

; START	OF FUNCTION CHUNK FOR sub_1AD8F

loc_1AC8A:				; CODE XREF: sub_1AD8F-EFj
		cmp	dl, ch
		jz	short loc_1ACA2
		dec	dl

loc_1AC90:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		shr	cx, 1

loc_1AC92:				; CODE XREF: sub_1AD8F-F7j
		and	es:[di], ax
		add	di, 2
		loop	loc_1AC92
		mov	cl, dh
		sub	di, cx
		add	di, bp
		jmp	short loc_1AC8A
; ---------------------------------------------------------------------------

loc_1ACA2:				; CODE XREF: sub_1AD8F-103j
		pop	di
		retn
; END OF FUNCTION CHUNK	FOR sub_1AD8F
; ---------------------------------------------------------------------------

locret_1ACA4:				; CODE XREF: seg001:00E0j
		retn
; ---------------------------------------------------------------------------
		mov	cs:byte_1ACF6, 21h ; '!'
		jmp	short loc_1ACBB
; ---------------------------------------------------------------------------
		mov	cs:byte_1ACF6, 9
		jmp	short loc_1ACBB
; ---------------------------------------------------------------------------
		mov	cs:byte_1ACF6, 31h ; '1'

loc_1ACBB:				; CODE XREF: seg001:011Bj seg001:0123j
		mov	bx, 101h

loc_1ACBE:				; CODE XREF: seg001:0145j
		mov	dx, 3C4h
		mov	ah, bh
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_1B15F
		call	loc_1ACD7
		inc	bl
		shl	bh, 1
		cmp	bh, 8
		jg	short locret_1AD07
		jmp	short loc_1ACBE
; ---------------------------------------------------------------------------

loc_1ACD7:				; CODE XREF: seg001:0139p
		push	di
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1ACED:				; CODE XREF: seg001:0173j
		cmp	dl, ch
		jz	short loc_1AD05
		dec	dl
		shr	cx, 1
; ---------------------------------------------------------------------------
		db 26h
byte_1ACF6	db 21h			; DATA XREF: seg001:0115w seg001:011Dw ...
; ---------------------------------------------------------------------------
		add	ax, 0C783h
		add	ah, dl
		clc
		mov	cl, dh
		sub	di, cx
		add	di, bp
		jmp	short loc_1ACED
; ---------------------------------------------------------------------------

loc_1AD05:				; CODE XREF: seg001:015Fj
		pop	di
		retn
; ---------------------------------------------------------------------------

locret_1AD07:				; CODE XREF: seg001:0143j
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1AD09	proc far		; CODE XREF: sub_17B4A+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	word ptr es:[di+18h], 14h
		mov	word ptr es:[di+1Ah], 19h
		mov	byte_257CF, 2
		mov	byte_257D0, 1
		mov	bx, word_257CD
		shl	bx, 1
		call	off_2518A[bx]
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AD09	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		align 10h
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_3. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1AD51	proc far		; CODE XREF: seg000:7B8DP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cmp	bx, 0
		jz	short loc_1AD6B
		cmp	bx, 1
		jg	short loc_1AD6B
		mov	ax, seg	dseg
		mov	ds, ax
		dec	bx
		mov	byte ptr [bx+5310h], 0

loc_1AD6B:				; CODE XREF: sub_1AD51+8j sub_1AD51+Dj
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AD51	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AD71	proc far		; CODE XREF: sub_17B93+DP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bp, seg	dseg
		mov	ds, bp
		mov	es, bp
		assume es:dseg
		mov	bp, word_257CD
		shl	bp, 1
		call	ds:off_257E5[bp]
		pop	es
		assume es:nothing
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AD71	endp

; ---------------------------------------------------------------------------
		retf

; =============== S U B	R O U T	I N E =======================================


sub_1AD8F	proc far		; CODE XREF: sub_17BA7P

; FUNCTION CHUNK AT 0001 SIZE 0000002A BYTES
; FUNCTION CHUNK AT 00FA SIZE 0000001A BYTES

		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, word_257CD
		shl	bx, 1
		jmp	off_2580D[bx]
; ---------------------------------------------------------------------------

loc_1AD9E:				; CODE XREF: sub_1AD8F+Bj
					; DATA XREF: dseg:off_2580Do ...
		mov	ax, 0Dh
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1ADA5:				; CODE XREF: sub_1AD8F+Bj
					; sub_1AD8F+14j
					; DATA XREF: ...
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AD8F	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1ADAB	proc far		; CODE XREF: sub_17BAD+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	word_256C3, dx
		mov	word_256C1, ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1ADAB	endp


; =============== S U B	R O U T	I N E =======================================


sub_1ADC2	proc far		; CODE XREF: sub_17BBD+7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cmp	cl, 0
		jnz	short loc_1ADCE
		jmp	short loc_1AE3B
; ---------------------------------------------------------------------------

loc_1ADCE:				; CODE XREF: sub_1ADC2+8j
		cmp	cl, 2
		jg	short loc_1AE3B
		mov	ax, seg	dseg
		mov	ds, ax
		mov	es, ax
		assume es:dseg
		push	cx
		mov	di, 5310h
		mov	cx, 1
		cld
		xor	al, al
		rep stosb
		pop	cx
		mov	si, 5415h
		xor	ch, ch
		dec	cl
		mov	bx, word_257CD
		shl	bx, 1
		jmp	off_25819[bx]
; ---------------------------------------------------------------------------

loc_1ADF8:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j
					; DATA XREF: ...
		mov	word ptr [si+2], 0A000h
		mov	word ptr [si], 0
		cmp	word_257CD, 5
		jnz	short loc_1AE17
		mov	word ptr [si+6], 0A400h
		mov	word ptr [si+4], 0
		call	nullsub_4
		jmp	short loc_1AE3B
; ---------------------------------------------------------------------------

loc_1AE17:				; CODE XREF: sub_1ADC2+44j
		mov	word ptr [si+6], 0A200h
		mov	word ptr [si+4], 0
		jmp	short loc_1AE3B
; ---------------------------------------------------------------------------

loc_1AE23:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j
					; DATA XREF: ...
		cmp	cl, 1
		jl	short loc_1AE3B

loc_1AE28:				; CODE XREF: sub_1ADC2+77j
		push	ax
		push	dx
		call	sub_1CD50
		mov	[si+2],	dx
		mov	[si], ax
		add	si, 4
		pop	dx
		pop	ax
		loop	loc_1AE28

loc_1AE3B:				; CODE XREF: sub_1ADC2+Aj sub_1ADC2+Fj ...
		pop	es
		assume es:nothing
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1ADC2	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AE41	proc far		; CODE XREF: sub_17BCA+7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	es, ax
		assume es:dseg
		mov	bp, word_257CD
		shl	bp, 1
		call	ds:off_257F1[bp]
		pop	es
		assume es:nothing
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AE41	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AE5E	proc far		; CODE XREF: sub_17BD7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 2
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	si, 529Ch
		xor	bh, bh
		mov	dx, 101h
		mov	ah, 2
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number
		mov	ah, 9
		mov	dx, si
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		mov	si, 52B4h
		mov	di, 548Bh
		mov	bh, 0
		mov	cx, 6
		mov	dx, 0A21h

loc_1AE8D:				; CODE XREF: sub_1AE5E+46j
		cmp	byte ptr [di], 1
		jnz	short loc_1AEA0
		mov	ah, 2
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number
		push	dx
		mov	ah, 9
		mov	dx, si
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		pop	dx
		inc	dh

loc_1AEA0:				; CODE XREF: sub_1AE5E+32j
		add	si, 0Fh
		inc	di
		loop	loc_1AE8D

loc_1AEA6:				; CODE XREF: sub_1AE5E+5Aj
		mov	al, 3Ch	; '<'
		call	sub_17BFA
		jnz	short loc_1AEBA
		mov	al, 3Dh	; '='
		call	sub_17BFA
		jnz	short loc_1AEC8
		jmp	short loc_1AEA6
; ---------------------------------------------------------------------------

loc_1AEBA:				; CODE XREF: sub_1AE5E+4Fj
		mov	word_257CD, 1
		mov	word_256BE, 40h	; '@'
		jmp	short loc_1AEDB
; ---------------------------------------------------------------------------

loc_1AEC8:				; CODE XREF: sub_1AE5E+58j
		mov	word_257CD, 2
		mov	word_256BE, 40h	; '@'
		jmp	short loc_1AEDB
; ---------------------------------------------------------------------------
		call	sub_17BFE

loc_1AEDB:				; CODE XREF: sub_1AE5E+68j
					; sub_1AE5E+76j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AE5E	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AEE1	proc far		; CODE XREF: sub_17BDD+7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cmp	bx, 0
		jz	short loc_1AF0E
		cmp	bx, 1
		jg	short loc_1AF0E
		mov	ax, seg	dseg
		mov	ds, ax
		xor	cx, cx
		xchg	cl, [bx+530Fh]
		mov	si, 5415h
		mov	bp, word_257CD
		shl	bp, 1
		jmp	ds:off_25825[bp]
; ---------------------------------------------------------------------------

loc_1AF09:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		call	sub_1B251
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1AF0E:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AEE1	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AF14	proc far		; CODE XREF: seg000:7BF4P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	si, 5315h
		mov	bx, es:[di]
		cmp	bx, 0
		jnz	short loc_1AF30
		jmp	loc_1AFB1
; ---------------------------------------------------------------------------

loc_1AF30:				; CODE XREF: sub_1AF14+17j
		cmp	bx, 1
		jg	short loc_1AFB1
		nop
		nop
		nop
		dec	bx
		mov	ax, bx
		mov	dx, 100h
		push	dx

loc_1AF3F:				; CODE XREF: sub_1AF14+31j
		shr	dx, 1
		jz	short loc_1AF47
		shl	ax, 1
		jmp	short loc_1AF3F
; ---------------------------------------------------------------------------

loc_1AF47:				; CODE XREF: sub_1AF14+2Dj
		pop	dx
		add	si, ax
		xor	ax, ax
		mov	al, [bx+5310h]
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		inc	byte ptr [bx+5310h]
		mov	bx, word_257CD
		shl	bx, 1
		jmp	off_25831[bx]
; ---------------------------------------------------------------------------

loc_1AF66:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		mov	bx, 2
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1AF6B:				; CODE XREF: sub_1AD8F+Bj
					; sub_1ADC2+32j ...
		mov	ax, es:[di+2]
		push	bx

loc_1AF70:				; CODE XREF: sub_1AF14+62j
		shr	bx, 1
		jz	short loc_1AF78
		shl	ax, 1
		jmp	short loc_1AF70
; ---------------------------------------------------------------------------

loc_1AF78:				; CODE XREF: sub_1AF14+5Ej
		pop	bx
		mov	[si], ax
		mov	ax, es:[di+6]
		push	bx

loc_1AF80:				; CODE XREF: sub_1AF14+72j
		shr	bx, 1
		jz	short loc_1AF88
		shl	ax, 1
		jmp	short loc_1AF80
; ---------------------------------------------------------------------------

loc_1AF88:				; CODE XREF: sub_1AF14+6Ej
		pop	bx
		mov	[si+4],	ax
		mov	bx, 8
		mov	ax, es:[di+4]
		push	bx

loc_1AF94:				; CODE XREF: sub_1AF14+86j
		shr	bx, 1
		jz	short loc_1AF9C
		shl	ax, 1
		jmp	short loc_1AF94
; ---------------------------------------------------------------------------

loc_1AF9C:				; CODE XREF: sub_1AF14+82j
		pop	bx
		mov	[si+2],	ax
		mov	ax, es:[di+8]
		push	bx

loc_1AFA5:				; CODE XREF: sub_1AF14+97j
		shr	bx, 1
		jz	short loc_1AFAD
		shl	ax, 1
		jmp	short loc_1AFA5
; ---------------------------------------------------------------------------

loc_1AFAD:				; CODE XREF: sub_1AF14+93j
		pop	bx
		mov	[si+6],	ax

loc_1AFB1:				; CODE XREF: sub_1AF14+19j
					; sub_1AF14+1Fj
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1AF14	endp


; =============== S U B	R O U T	I N E =======================================


sub_1AFB7	proc near		; CODE XREF: sub_1AD8F-1F6p
					; sub_1B380+3p	...
		mov	ax, es:[di+6]
		push	cx

loc_1AFBC:				; CODE XREF: sub_1AFB7+Bj
		shr	cx, 1
		jz	short loc_1AFC4
		shl	ax, 1
		jmp	short loc_1AFBC
; ---------------------------------------------------------------------------

loc_1AFC4:				; CODE XREF: sub_1AFB7+7j
		pop	cx
		test	word ptr es:[di+1Ch], 200h
		jz	short loc_1AFD4
		inc	ax
		and	word ptr es:[di+1Ch], 0FDFFh

loc_1AFD4:				; CODE XREF: sub_1AFB7+14j
		mov	word_257D3, ax
		mov	ax, 14h
		cmp	byte_257CF, 1
		jz	short loc_1AFE5
		mov	ax, es:[di+0Ah]

loc_1AFE5:				; CODE XREF: sub_1AFB7+28j
		push	cx

loc_1AFE6:				; CODE XREF: sub_1AFB7+35j
		shr	cx, 1
		jz	short loc_1AFEE
		shl	ax, 1
		jmp	short loc_1AFE6
; ---------------------------------------------------------------------------

loc_1AFEE:				; CODE XREF: sub_1AFB7+31j
		pop	cx
		mov	word_257DB, ax
		mov	ax, es:[di+14h]
		push	cx

loc_1AFF7:				; CODE XREF: sub_1AFB7+46j
		shr	cx, 1
		jz	short loc_1AFFF
		shl	ax, 1
		jmp	short loc_1AFF7
; ---------------------------------------------------------------------------

loc_1AFFF:				; CODE XREF: sub_1AFB7+42j
		pop	cx
		test	word ptr es:[di+1Ch], 400h
		jz	short loc_1B00F
		inc	ax
		and	word ptr es:[di+1Ch], 0FBFFh

loc_1B00F:				; CODE XREF: sub_1AFB7+4Fj
		mov	word_257D1, ax
		mov	ax, 14h
		cmp	byte_257D0, 1
		jz	short loc_1B020
		mov	ax, es:[di+18h]

loc_1B020:				; CODE XREF: sub_1AFB7+63j
		push	cx

loc_1B021:				; CODE XREF: sub_1AFB7+70j
		shr	cx, 1
		jz	short loc_1B029
		shl	ax, 1
		jmp	short loc_1B021
; ---------------------------------------------------------------------------

loc_1B029:				; CODE XREF: sub_1AFB7+6Cj
		pop	cx
		mov	word_257D9, ax
		mov	ax, es:[di+1Eh]
		push	cx

loc_1B032:				; CODE XREF: sub_1AFB7+81j
		shr	cx, 1
		jz	short loc_1B03A
		shl	ax, 1
		jmp	short loc_1B032
; ---------------------------------------------------------------------------

loc_1B03A:				; CODE XREF: sub_1AFB7+7Dj
		pop	cx
		mov	word_257E1, ax
		mov	cx, 8
		mov	ax, es:[di+8]
		push	cx

loc_1B046:				; CODE XREF: sub_1AFB7+95j
		shr	cx, 1
		jz	short loc_1B04E
		shl	ax, 1
		jmp	short loc_1B046
; ---------------------------------------------------------------------------

loc_1B04E:				; CODE XREF: sub_1AFB7+91j
		pop	cx
		test	word ptr es:[di+1Ch], 100h
		jz	short loc_1B061
		add	ax, es:[di+26h]
		and	word ptr es:[di+1Ch], 0FEh

loc_1B061:				; CODE XREF: sub_1AFB7+9Ej
		mov	word_257DF, ax
		mov	ax, 19h
		cmp	byte_257CF, 1
		jz	short loc_1B072
		mov	ax, es:[di+0Ch]

loc_1B072:				; CODE XREF: sub_1AFB7+B5j
		push	cx

loc_1B073:				; CODE XREF: sub_1AFB7+C2j
		shr	cx, 1
		jz	short loc_1B07B
		shl	ax, 1
		jmp	short loc_1B073
; ---------------------------------------------------------------------------

loc_1B07B:				; CODE XREF: sub_1AFB7+BEj
		pop	cx
		mov	word_257D7, ax
		mov	ax, es:[di+16h]
		push	cx

loc_1B084:				; CODE XREF: sub_1AFB7+D3j
		shr	cx, 1
		jz	short loc_1B08C
		shl	ax, 1
		jmp	short loc_1B084
; ---------------------------------------------------------------------------

loc_1B08C:				; CODE XREF: sub_1AFB7+CFj
		pop	cx
		mov	word_257DD, ax
		mov	ax, 19h
		cmp	byte_257D0, 1
		jz	short loc_1B09E
		mov	ax, es:[di+1Ah]

loc_1B09E:				; CODE XREF: sub_1AFB7+E1j
		push	cx

loc_1B09F:				; CODE XREF: sub_1AFB7+EEj
		shr	cx, 1
		jz	short loc_1B0A7
		shl	ax, 1
		jmp	short loc_1B09F
; ---------------------------------------------------------------------------

loc_1B0A7:				; CODE XREF: sub_1AFB7+EAj
		pop	cx
		mov	word_257D5, ax
		mov	ax, es:[di+20h]
		push	cx

loc_1B0B0:				; CODE XREF: sub_1AFB7+FFj
		shr	cx, 1
		jz	short loc_1B0B8
		shl	ax, 1
		jmp	short loc_1B0B0
; ---------------------------------------------------------------------------

loc_1B0B8:				; CODE XREF: sub_1AFB7+FBj
		pop	cx
		mov	word_257E3, ax
		retn
sub_1AFB7	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B0BD	proc near		; CODE XREF: sub_1AD8F-1EBp
					; sub_1B380+1Cp ...
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		mov	bx, di
		cmp	byte_257CF, 2
		jz	short loc_1B106
		mov	ax, word_257DF
		mul	word_257DB
		add	ax, word_257D3
		mov	si, ax
		cmp	byte_257CF, 1
		jnz	short loc_1B0ED
		mov	bp, es:[bx]
		shl	bp, 1
		shl	bp, 1
		lds	ax, ds:[bp+5415h]
		jmp	short loc_1B0F1
; ---------------------------------------------------------------------------

loc_1B0ED:				; CODE XREF: sub_1B0BD+20j
		lds	ax, es:[bx+2]

loc_1B0F1:				; CODE XREF: sub_1B0BD+2Ej
		add	si, ax
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		push	bx
		call	sub_1CE29
		pop	bx
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing

loc_1B106:				; CODE XREF: sub_1B0BD+Cj
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_257DD
		mul	word_257D9
		add	ax, word_257D1
		mov	di, ax
		cmp	byte_257D0, 1
		jnz	short loc_1B130
		mov	bp, es:[bx+0Eh]
		shl	bp, 1
		shl	bp, 1
		les	ax, ds:[bp+5415h]
		pop	ds
		jmp	short loc_1B140
; ---------------------------------------------------------------------------

loc_1B130:				; CODE XREF: sub_1B0BD+61j
		les	ax, es:[bx+10h]
		pop	ds
		add	di, ax
		call	sub_1CE29
		mov	es, dx
		mov	di, ax

loc_1B140:				; CODE XREF: sub_1B0BD+71j
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
sub_1B0BD	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B146	proc near		; CODE XREF: sub_1B196+9p sub_1B1B0+9p ...
		mov	dx, bx
		shl	dx, 1
		shl	dx, 1
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	dx, ax
		shl	ax, 1
		add	ax, dx
		sub	ax, bx
		retn
sub_1B146	endp

; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_4. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1B15F	proc near		; CODE XREF: seg001:0036p seg001:007Dp ...
		xor	ax, ax
		mov	dl, [si+22h]
		test	dl, bh
		jz	short loc_1B16A
		mov	al, 1

loc_1B16A:				; CODE XREF: sub_1B15F+7j
		mov	dl, [si+23h]
		test	dl, bh
		jz	short loc_1B173
		or	al, 2

loc_1B173:				; CODE XREF: sub_1B15F+10j
		mov	dl, [si+24h]
		test	dl, bh
		jz	short loc_1B17C
		or	al, 4

loc_1B17C:				; CODE XREF: sub_1B15F+19j
		mov	dl, [si+25h]
		test	dl, bh
		jz	short loc_1B185
		or	al, 8

loc_1B185:				; CODE XREF: sub_1B15F+22j
		mov	dl, al
		shl	dl, 1
		shl	dl, 1
		shl	dl, 1
		shl	dl, 1
		or	al, dl
		mov	ah, al
		retn
sub_1B15F	endp

; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_5. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1B196	proc near		; CODE XREF: sub_1AD71+12p
					; DATA XREF: dseg:5437o
		mov	di, 5311h
		les	di, [di]
		mov	si, ax
		mov	ds, dx
		call	sub_1B146
		add	di, ax
		add	di, 23h	; '#'
		add	si, 23h	; '#'
		mov	cx, 8
		rep movsw
		retn
sub_1B196	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B1B0	proc near		; CODE XREF: sub_1AD71+12p
					; DATA XREF: dseg:5439o ...
		mov	di, 5311h
		les	di, [di]
		mov	si, ax
		mov	ds, dx
		call	sub_1B146
		add	di, ax
		add	di, 33h	; '3'
		add	si, 33h	; '3'
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		cmp	word_257CD, 5
		jnz	short loc_1B1D4
		add	di, 30h	; '0'

loc_1B1D4:				; CODE XREF: sub_1B1B0+1Fj
		pop	ds
		mov	cx, 18h
		rep movsw
		retn
sub_1B1B0	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_6. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_7. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1B1DD	proc near		; CODE XREF: sub_1AD8F-1FCp
					; sub_1B630+3p	...
		mov	dx, 3CEh
		mov	cx, 7

loc_1B1E3:				; CODE XREF: sub_1B1DD+8j
		lodsw
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		loop	loc_1B1E3
		mov	dx, 3C4h
		mov	ax, [si]
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		retn
sub_1B1DD	endp

; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_8. PRESS KEYPAD CTRL-"+" TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_9. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1B1F2	proc near		; CODE XREF: sub_1AD71+12p
					; sub_1AE41+12p
					; DATA XREF: ...
		mov	si, 5311h
		les	si, [si]
		call	sub_1B146
		add	si, ax
		add	si, 23h	; '#'
		mov	dx, si
		mov	ax, 1002h
		int	10h		; - VIDEO - SET	ALL PALETTE REGISTERS (Jr, PS, TANDY 1000, EGA,	VGA)
					; ES:DX	-> 17-byte palette register list
		retn
sub_1B1F2	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B207	proc near		; CODE XREF: sub_1AD71+12p
					; sub_1AE41+12p
					; DATA XREF: ...
		mov	si, 5311h
		les	si, [si]
		call	sub_1B146
		add	si, ax
		add	si, 33h	; '3'
		mov	dx, 3C8h
		mov	al, 0
		out	dx, al
		inc	dx
		mov	cx, 8

loc_1B21E:				; CODE XREF: sub_1B207+28j
		mov	al, es:[si]
		out	dx, al
		mov	al, es:[si+1]
		out	dx, al
		mov	al, es:[si+2]
		out	dx, al
		add	si, 3
		loop	loc_1B21E
		dec	dx
		mov	al, 10h
		out	dx, al
		inc	dx
		mov	cx, 8

loc_1B239:				; CODE XREF: sub_1B207+43j
		mov	al, es:[si]
		out	dx, al
		mov	al, es:[si+1]
		out	dx, al
		mov	al, es:[si+2]
		out	dx, al
		add	si, 3
		loop	loc_1B239
		retn
sub_1B207	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_10. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_11. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_12. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1B251	proc near		; CODE XREF: sub_1AEE1:loc_1AF09p
		cli
		mov	dx, 3D4h
		mov	al, 0Ch
		out	dx, al		; Video: CRT cntrlr addr
					; regen	start address (high)
		inc	dx
		in	al, dx		; Video: CRT controller	internal registers
		mov	ah, 20h	; ' '
		xor	al, ah
		out	dx, al		; Video: CRT controller	internal registers
		sti
		shl	bx, 1
		shl	bx, 1
		mov	ax, [si+2]
		xchg	ax, [bx+si+2]
		mov	[si+2],	ax
		retn
sub_1B251	endp

; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		align 2
		db 80h,	40h, 0C0h, 20h,	0A0h, 60h, 0E0h, 10h, 90h, 50h
		db 0D0h, 30h, 0B0h, 70h, 0F0h, 8, 88h, 48h, 0C8h, 28h
		db 0A8h, 68h, 0E8h, 18h, 98h, 58h, 0D8h, 38h, 0B8h, 78h
		db 0F8h, 4, 84h, 44h, 0C4h, 24h, 0A4h, 64h, 0E4h, 14h
		db 94h,	54h, 0D4h, 34h,	0B4h, 74h, 0F4h, 0Ch, 8Ch, 4Ch
		db 0CCh, 2Ch, 0ACh, 6Ch, 0ECh, 1Ch, 9Ch, 5Ch, 0DCh, 3Ch
		db 0BCh, 7Ch, 0FCh, 2, 82h, 42h, 0C2h, 22h, 0A2h, 62h
		db 0E2h, 12h, 92h, 52h,	0D2h, 32h, 0B2h, 72h, 0F2h, 0Ah
		db 8Ah,	4Ah, 0CAh, 2Ah,	0AAh, 6Ah, 0EAh, 1Ah, 9Ah, 5Ah
		db 0DAh, 3Ah, 0BAh, 7Ah, 0FAh, 6, 86h, 46h, 0C6h, 26h
		db 0A6h, 66h, 0E6h, 16h, 96h, 56h, 0D6h, 36h, 0B6h, 76h
		db 0F6h, 0Eh, 8Eh, 4Eh,	0CEh, 2Eh, 0AEh, 6Eh, 0EEh, 1Eh
		db 9Eh,	5Eh, 0DEh, 3Eh,	0BEh, 7Eh, 0FEh, 1, 81h, 41h, 0C1h
		db 21h,	0A1h, 61h, 0E1h, 11h, 91h, 51h,	0D1h, 31h, 0B1h
		db 71h,	0F1h, 9, 89h, 49h, 0C9h, 29h, 0A9h, 69h, 0E9h
		db 19h,	99h, 59h, 0D9h,	39h, 0B9h, 79h,	0F9h, 5, 85h, 45h
		db 0C5h, 25h, 0A5h, 65h, 0E5h, 15h, 95h, 55h, 0D5h, 35h
		db 0B5h, 75h, 0F5h, 0Dh, 8Dh, 4Dh, 0CDh, 2Dh, 0ADh, 6Dh
		db 0EDh, 1Dh, 9Dh, 5Dh,	0DDh, 3Dh, 0BDh, 7Dh, 0FDh, 3
		db 83h,	43h, 0C3h, 23h,	0A3h, 63h, 0E3h, 13h, 93h, 53h
		db 0D3h, 33h, 0B3h, 73h, 0F3h, 0Bh, 8Bh, 4Bh, 0CBh, 2Bh
		db 0ABh, 6Bh, 0EBh, 1Bh, 9Bh, 5Bh, 0DBh, 3Bh, 0BBh, 7Bh
		db 0FBh, 7, 87h, 47h, 0C7h, 27h, 0A7h, 67h, 0E7h, 17h
		db 97h,	57h, 0D7h, 37h,	0B7h, 77h, 0F7h, 0Fh, 8Fh, 4Fh
		db 0CFh, 2Fh, 0AFh, 6Fh, 0EFh, 1Fh, 9Fh, 5Fh, 0DFh, 3Fh
		db 0BFh, 7Fh, 0FFh, 0Fh	dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_1B380	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:5546o ...
		mov	cx, 2
		call	sub_1AFB7
		mov	ax, word_257DB
		mul	word_257D7
		mov	bp, ax
		mov	ax, word_257D9
		mul	word_257D5
		mov	bx, ax
		mov	ax, es:[di+1Ch]
		call	sub_1B0BD
		push	bx
		push	ds
		mov	bx, ax
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		mov	ax, [bx+5536h]
		pop	ds
		pop	bx
		call	ax
		retn
sub_1B380	endp

; ---------------------------------------------------------------------------
		cld
		xor	ax, ax

loc_1B3B6:				; CODE XREF: seg001:0856j
		call	sub_1B3E8
		inc	ah
		cmp	ah, 3
		jg	short locret_1B421
		add	si, bp
		add	di, bx
		push	ax
		push	bx
		push	dx
		push	di
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	di
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	dx
		pop	bx
		pop	ax
		jmp	short loc_1B3B6

; =============== S U B	R O U T	I N E =======================================


sub_1B3E8	proc near		; CODE XREF: seg001:loc_1B3B6p
		push	bx
		push	bp
		push	si
		push	di
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257DB
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B405:				; CODE XREF: sub_1B3E8+32j
		cmp	dl, 0
		jz	short loc_1B41C
		dec	dl
		shr	cx, 1
		rep movsw
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, bp
		jmp	short loc_1B405
; ---------------------------------------------------------------------------

loc_1B41C:				; CODE XREF: sub_1B3E8+20j
		pop	di
		pop	si
		pop	bp
		pop	bx
		retn
sub_1B3E8	endp

; ---------------------------------------------------------------------------

locret_1B421:				; CODE XREF: seg001:082Ej
		retn
; ---------------------------------------------------------------------------
		dd 203BB81Eh
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	ax, word_257D9
		mov	cs:word_1B62C, ax
		mov	ax, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short locret_1B4AD

loc_1B43F:				; CODE XREF: seg001:091Bj
		cmp	dl, 0
		jz	short locret_1B4AD
		dec	dl
		shr	cx, 1
		push	ax
		push	dx

loc_1B44A:				; CODE XREF: seg001:090Aj
		mov	dx, [si]
		add	si, bp
		add	di, bx
		or	dx, [si]
		add	si, bp
		add	di, bx
		or	dx, [si]
		add	si, bp
		add	di, bx
		or	dx, [si]
		not	dx
		mov	ax, es:[di]
		and	ax, dx
		or	ax, [si]
		mov	es:[di], ax
		sub	si, bp
		sub	di, bx
		mov	ax, es:[di]
		and	ax, dx
		or	ax, [si]
		mov	es:[di], ax
		sub	si, bp
		sub	di, bx
		mov	ax, es:[di]
		and	ax, dx
		or	ax, [si]
		mov	es:[di], ax
		sub	si, bp
		sub	di, bx
		mov	ax, es:[di]
		and	ax, dx
		or	ax, [si]
		mov	es:[di], ax
		add	si, 2
		add	di, 2
		loop	loc_1B44A
		pop	dx
		pop	ax
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, ax
		add	di, cs:word_1B62C
		jmp	short loc_1B43F
; ---------------------------------------------------------------------------

locret_1B4AD:				; CODE XREF: seg001:08ADj seg001:08B2j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		mov	cs:byte_1B503, 21h ; '!'
		jmp	short loc_1B4C5
; ---------------------------------------------------------------------------
		mov	cs:byte_1B503, 9
		jmp	short loc_1B4C5
; ---------------------------------------------------------------------------
		mov	cs:byte_1B503, 31h ; '1'

loc_1B4C5:				; CODE XREF: seg001:0925j seg001:092Dj
		xor	ax, ax

loc_1B4C7:				; CODE XREF: seg001:0945j
		call	loc_1B4D7
		inc	ah
		cmp	ah, 3
		jg	short locret_1B51F
		add	si, bp
		add	di, bx
		jmp	short loc_1B4C7
; ---------------------------------------------------------------------------

loc_1B4D7:				; CODE XREF: seg001:loc_1B4C7p
		push	ax
		push	bx
		push	bp
		push	si
		push	di
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257DB
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short loc_1B519

loc_1B4F7:				; CODE XREF: seg001:0987j
		cmp	dl, 0
		jz	short loc_1B519
		dec	dl
		shr	cx, 1

loc_1B500:				; CODE XREF: seg001:097Bj
		mov	ax, [si]
; ---------------------------------------------------------------------------
		db 26h
byte_1B503	db 21h			; DATA XREF: seg001:091Fw seg001:0927w ...
; ---------------------------------------------------------------------------
		add	ax, 0C683h
		add	al, [bp+di+2C7h]
		loop	loc_1B500
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, bp
		jmp	short loc_1B4F7
; ---------------------------------------------------------------------------

loc_1B519:				; CODE XREF: seg001:0965j seg001:096Aj
		pop	di
		pop	si
		pop	bp
		pop	bx
		pop	ax
		retn
; ---------------------------------------------------------------------------

locret_1B51F:				; CODE XREF: seg001:093Fj
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_13. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_14. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_15. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_16. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		cld
		xor	ax, ax

loc_1B52D:				; CODE XREF: seg001:09CCj
		jmp	short loc_1B55E
; ---------------------------------------------------------------------------

loc_1B52F:				; CODE XREF: seg001:0A05j
		inc	ah
		cmp	ah, 3
		jg	short locret_1B597
		add	si, bp
		add	di, bx
		push	ax
		push	bx
		push	dx
		push	di
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	di
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	dx
		pop	bx
		pop	ax
		jmp	short loc_1B52D
; ---------------------------------------------------------------------------

loc_1B55E:				; CODE XREF: seg001:loc_1B52Dj
		push	bx
		push	bp
		push	si
		push	di
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257DB
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B57B:				; CODE XREF: seg001:09FFj
		cmp	dl, ch
		jz	short loc_1B591
		dec	dl
		shr	cx, 1
		rep movsw
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, bp
		jmp	short loc_1B57B
; ---------------------------------------------------------------------------

loc_1B591:				; CODE XREF: seg001:09EDj
		pop	di
		pop	si
		pop	bp
		pop	bx
		jmp	short loc_1B52F
; ---------------------------------------------------------------------------

locret_1B597:				; CODE XREF: seg001:09A4j
		retn
; ---------------------------------------------------------------------------
		cld
		xor	ax, ax

loc_1B59B:				; CODE XREF: seg001:0A18j
		jmp	short loc_1B5AA
; ---------------------------------------------------------------------------

loc_1B59D:				; CODE XREF: seg001:0A6Dj
		inc	ah
		cmp	ah, 3
		jg	short locret_1B5FF
		add	si, bp
		add	di, bx
		jmp	short loc_1B59B
; ---------------------------------------------------------------------------

loc_1B5AA:				; CODE XREF: seg001:loc_1B59Bj
		push	ax
		push	bx
		push	bp
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_257DB
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B5C8:				; CODE XREF: seg001:0A66j
		cmp	dl, ch
		jz	short loc_1B5F8
		dec	dl

loc_1B5CE:				; CODE XREF: seg001:0A5Aj
		lodsb
		mov	ah, al
		test	ah, 0Fh
		jz	short loc_1B5D9
		or	ah, 0Fh

loc_1B5D9:				; CODE XREF: seg001:0A44j
		test	ah, 0F0h
		jz	short loc_1B5E1
		or	ah, 0F0h

loc_1B5E1:				; CODE XREF: seg001:0A4Cj
		not	ah
		and	es:[di], ah
		or	es:[di], al
		inc	di
		loop	loc_1B5CE
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, bp
		jmp	short loc_1B5C8
; ---------------------------------------------------------------------------

loc_1B5F8:				; CODE XREF: seg001:0A3Aj
		pop	di
		pop	si
		pop	bp
		pop	bx
		pop	ax
		jmp	short loc_1B59D
; ---------------------------------------------------------------------------

locret_1B5FF:				; CODE XREF: seg001:0A12j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1B603	proc far		; CODE XREF: sub_180AC+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	byte_257CF, 0
		mov	byte_257D0, 0
		mov	bx, word_257CD
		shl	bx, 1
		call	off_258F4[bx]
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1B603	endp

; ---------------------------------------------------------------------------
word_1B62C	dw 0			; DATA XREF: seg001:089Bw seg001:0916r
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_1B630	proc near		; CODE XREF: sub_1B603+1Fp
					; sub_1B907+27p
					; DATA XREF: ...
		mov	si, 556Ah
		call	sub_1B1DD
		mov	cx, 2
		call	sub_1AFB7
		mov	ax, word_257DB
		mul	word_257D7
		mov	bp, ax
		mov	bx, es:[di+1Ch]
		push	bx
		mov	bx, di
		call	sub_1B0BD
		pop	bx
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		mov	ax, [bx+5550h]
		pop	ds
		call	ax
		retn
sub_1B630	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B660	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:5550o
		cld
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		mov	al, 1

loc_1B669:				; CODE XREF: sub_1B660+2Ej
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		jmp	short loc_1B690
; ---------------------------------------------------------------------------

loc_1B66F:				; CODE XREF: sub_1B660+60j
		shl	al, 1
		cmp	al, 8
		jg	short locret_1B6C2
		add	si, bp
		push	ax
		push	bx
		push	di
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	di
		pop	bx
		pop	ax
		jmp	short loc_1B669
; ---------------------------------------------------------------------------

loc_1B690:				; CODE XREF: sub_1B660+Dj
		push	si
		push	di
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B6A7:				; CODE XREF: sub_1B660+5Cj
		cmp	dl, ch
		jz	short loc_1B6BE
		dec	dl
		shr	cx, 1
		rep movsw
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, 28h	; '('
		jmp	short loc_1B6A7
; ---------------------------------------------------------------------------

loc_1B6BE:				; CODE XREF: sub_1B660+49j
		pop	di
		pop	si
		jmp	short loc_1B66F
; ---------------------------------------------------------------------------

locret_1B6C2:				; CODE XREF: sub_1B660+13j
		retn
sub_1B660	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B6C3	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:555Co

; FUNCTION CHUNK AT 0B43 SIZE 0000003E BYTES

		mov	cs:word_1B711, 9090h
		jmp	short loc_1B6D3
sub_1B6C3	endp ; sp-analysis failed

; ---------------------------------------------------------------------------

loc_1B6CC:				; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:5554o
		mov	cs:word_1B711, 0D0F7h
; START	OF FUNCTION CHUNK FOR sub_1B6C3

loc_1B6D3:				; CODE XREF: sub_1B6C3+7j
		mov	dx, 3C4h
		mov	ax, 2
		out	dx, ax		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short loc_1B6F3
		jmp	short loc_1B6F6
; ---------------------------------------------------------------------------

loc_1B6F3:				; CODE XREF: sub_1B6C3+2Cj
		jmp	nullsub_38
; ---------------------------------------------------------------------------

loc_1B6F6:				; CODE XREF: sub_1B6C3+2Ej
					; seg001:0BF9j
		cmp	dl, ch
		jnz	short loc_1B6FD
		jmp	nullsub_38
; ---------------------------------------------------------------------------

loc_1B6FD:				; CODE XREF: sub_1B6C3+35j
		dec	dl
		shr	cx, 1
		push	dx

loc_1B702:				; CODE XREF: seg001:0BE9j
		mov	ax, [si]
		add	si, bp
		or	ax, [si]
		add	si, bp
		or	ax, [si]
		add	si, bp
		or	ax, [si]
		push	si
; END OF FUNCTION CHUNK	FOR sub_1B6C3
; ---------------------------------------------------------------------------
word_1B711	dw 9090h		; DATA XREF: sub_1B6C3w
					; seg001:loc_1B6CCw
; ---------------------------------------------------------------------------
		mov	ch, ah
		mov	ah, al
		mov	dx, 3CEh
		mov	al, 8
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	al, es:[di]
		mov	dx, 3C5h
		mov	al, 8
		out	dx, al		; EGA port: sequencer data register
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		movsb
		mov	ah, ch
		pop	si
		inc	si
		mov	dx, 3CEh
		mov	al, 8
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	al, es:[di]
		mov	dx, 3C5h
		mov	al, 8
		out	dx, al		; EGA port: sequencer data register
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		mov	ah, [si]
		mov	es:[di], ah
		shr	al, 1
		out	dx, al		; EGA port: sequencer data register
		sub	si, bp
		movsb
		dec	cl
		jnz	short loc_1B702
		pop	dx
		xor	ch, ch
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, 28h	; '('
		jmp	loc_1B6F6
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_38. PRESS	KEYPAD CTRL-"+"	TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1B78D	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:5558o
		mov	cs:byte_1B7F3, 21h ; '!'
		jmp	short loc_1B7A3
sub_1B78D	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B795	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:5556o
		mov	cs:byte_1B7F3, 9
		jmp	short loc_1B7A3
sub_1B795	endp


; =============== S U B	R O U T	I N E =======================================


sub_1B79D	proc near		; CODE XREF: sub_1B603+1Fp
					; DATA XREF: dseg:555Ao
		mov	cs:byte_1B7F3, 31h ; '1'

loc_1B7A3:				; CODE XREF: sub_1B78D+6j sub_1B795+6j
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		mov	al, 0
		mov	ah, 1

loc_1B7B3:				; CODE XREF: sub_1B79D+2Fj
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		xchg	al, ah
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		xchg	ah, al
		call	loc_1B7CE
		inc	al
		shl	ah, 1
		cmp	al, 3
		jg	short nullsub_39
		add	si, bp
		jmp	short loc_1B7B3
sub_1B79D	endp

; ---------------------------------------------------------------------------

loc_1B7CE:				; CODE XREF: sub_1B79D+22p
		push	ax
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short loc_1B80A

loc_1B7E8:				; CODE XREF: seg001:0C78j
		cmp	dl, ch
		jz	short loc_1B80A
		dec	dl
		shr	cx, 1

loc_1B7F0:				; CODE XREF: seg001:0C6Bj
		mov	ax, [si]
; ---------------------------------------------------------------------------
		db 26h
byte_1B7F3	db 21h			; DATA XREF: sub_1B78Dw sub_1B795w ...
; ---------------------------------------------------------------------------
		add	ax, 0C683h
		add	al, [bp+di+2C7h]
		loop	loc_1B7F0
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, bx
		add	di, 28h	; '('
		jmp	short loc_1B7E8
; ---------------------------------------------------------------------------

loc_1B80A:				; CODE XREF: seg001:0C56j seg001:0C5Aj
		pop	di
		pop	si
		pop	ax
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_39. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_17. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_18. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_19. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_20. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_21. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		mov	al, 1

loc_1B822:				; CODE XREF: seg001:0CB7j
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		jmp	short loc_1B849
; ---------------------------------------------------------------------------

loc_1B828:				; CODE XREF: seg001:0CFEj
		shl	al, 1
		cmp	al, 8
		jg	short locret_1B890
		add	si, bp
		push	ax
		push	bx
		push	di
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	di
		pop	bx
		pop	ax
		jmp	short loc_1B822
; ---------------------------------------------------------------------------

loc_1B849:				; CODE XREF: seg001:0C96j
		push	ax
		push	si
		push	di
		push	bp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bp, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B862:				; CODE XREF: seg001:0CF8j
		cmp	dl, ch
		jz	short loc_1B88A
		dec	dl

loc_1B868:				; CODE XREF: seg001:0CE9j
		lodsb
		mov	ah, al
		and	al, 0Fh
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		add	ax, 0
		stosw
		loop	loc_1B868
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		sub	di, cx
		add	si, bp
		add	di, 50h	; 'P'
		jmp	short loc_1B862
; ---------------------------------------------------------------------------

loc_1B88A:				; CODE XREF: seg001:0CD4j
		pop	bp
		pop	di
		pop	si
		pop	ax
		jmp	short loc_1B828
; ---------------------------------------------------------------------------

locret_1B890:				; CODE XREF: seg001:0C9Cj
		retn
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		mov	al, 1

loc_1B89A:				; CODE XREF: seg001:0D18j
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		jmp	short loc_1B8AA
; ---------------------------------------------------------------------------

loc_1B8A0:				; CODE XREF: seg001:0D71j
		shl	al, 1
		cmp	al, 8
		jg	short locret_1B903
		add	si, bp
		jmp	short loc_1B89A
; ---------------------------------------------------------------------------

loc_1B8AA:				; CODE XREF: seg001:0D0Ej
		push	ax
		push	si
		push	di
		push	bp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bp, word_257DB
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B8C3:				; CODE XREF: seg001:0D6Bj
		cmp	dl, ch
		jz	short loc_1B8FD
		dec	dl

loc_1B8C9:				; CODE XREF: seg001:0D5Cj
		lodsb
		mov	ah, al
		and	al, 0Fh
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		add	ax, 0
		cmp	al, 0
		jz	short loc_1B8E0
		mov	es:[di], al

loc_1B8E0:				; CODE XREF: seg001:0D4Bj
		cmp	ah, 0
		jz	short loc_1B8E9
		mov	es:[di+1], ah

loc_1B8E9:				; CODE XREF: seg001:0D53j
		add	di, 2
		loop	loc_1B8C9
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		sub	di, cx
		add	si, bp
		add	di, 50h	; 'P'
		jmp	short loc_1B8C3
; ---------------------------------------------------------------------------

loc_1B8FD:				; CODE XREF: seg001:0D35j
		pop	bp
		pop	di
		pop	si
		pop	ax
		jmp	short loc_1B8A0
; ---------------------------------------------------------------------------

locret_1B903:				; CODE XREF: seg001:0D14j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1B907	proc far		; CODE XREF: sub_180BC+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	bp, es:[di+0Eh]
		cmp	bp, 1
		jg	short loc_1B932
		mov	byte_257CF, 0
		mov	byte_257D0, 1
		mov	bx, word_257CD
		shl	bx, 1
		call	off_2590E[bx]

loc_1B932:				; CODE XREF: sub_1B907+15j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1B907	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1B940	proc near		; CODE XREF: sub_1BBB8+26p
					; DATA XREF: dseg:569Ao ...
		mov	si, 56A4h
		call	sub_1B1DD
		mov	cx, 2
		call	sub_1AFB7
		mov	ax, word_257D9
		mul	word_257D5
		mov	bp, ax
		mov	bx, es:[di+1Ch]
		push	bx
		mov	bx, di
		call	sub_1B0BD
		pop	bx
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		mov	ax, [bx+568Ah]
		pop	ds
		call	ax
		retn
sub_1B940	endp

; ---------------------------------------------------------------------------
		cld
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	al, 0

loc_1B979:				; CODE XREF: seg001:0E07j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		call	sub_1B999
		inc	al
		cmp	al, 3
		jg	short locret_1B9CB
		add	di, bp
		push	ax
		push	bx
		push	dx
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	dx
		pop	bx
		pop	ax
		jmp	short loc_1B979

; =============== S U B	R O U T	I N E =======================================


sub_1B999	proc near		; CODE XREF: seg001:0DEDp
		push	si
		push	di
		push	ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1B9B0:				; CODE XREF: sub_1B999+2Dj
		cmp	dl, 0
		jz	short loc_1B9C8
		dec	dl
		shr	cx, 1
		rep movsw
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, bx
		jmp	short loc_1B9B0
; ---------------------------------------------------------------------------

loc_1B9C8:				; CODE XREF: sub_1B999+1Aj
		pop	di
		pop	si
		retn
sub_1B999	endp

; ---------------------------------------------------------------------------

locret_1B9CB:				; CODE XREF: seg001:0DF4j
		retn
; ---------------------------------------------------------------------------
		dd 203BB81Eh
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	bx, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short locret_1BA52

loc_1B9E3:				; CODE XREF: seg001:0EC0j
		cmp	dl, 0
		jz	short locret_1BA52
		dec	dl
		shr	cx, 1
		push	bx
		push	dx
		mov	dx, 3CEh

loc_1B9F1:				; CODE XREF: seg001:0EB1j
		push	di
		mov	ax, 805h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	bx, [si]
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, 4
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	ax, es:[di]
		and	ax, bx
		or	ax, [si]
		mov	es:[di], ax
		add	di, bp
		mov	ax, 104h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, es:[di]
		and	ax, bx
		or	ax, [si]
		mov	es:[di], ax
		add	di, bp
		mov	ax, 204h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, es:[di]
		and	ax, bx
		or	ax, [si]
		mov	es:[di], ax
		add	di, bp
		mov	ax, 304h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, es:[di]
		and	ax, bx
		or	ax, [si]
		mov	es:[di], ax
		pop	di
		add	si, 2
		add	di, 2
		loop	loc_1B9F1
		pop	dx
		pop	bx
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, bx
		jmp	short loc_1B9E3
; ---------------------------------------------------------------------------

locret_1BA52:				; CODE XREF: seg001:0E51j seg001:0E56j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		mov	cs:byte_1BAA9, 21h ; '!'
		jmp	short loc_1BA6A
; ---------------------------------------------------------------------------
		mov	cs:byte_1BAA9, 9
		jmp	short loc_1BA6A
; ---------------------------------------------------------------------------
		mov	cs:byte_1BAA9, 31h ; '1'

loc_1BA6A:				; CODE XREF: seg001:0ECAj seg001:0ED2j
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	al, 0

loc_1BA72:				; CODE XREF: seg001:0EF1j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		call	loc_1BA83
		inc	al
		cmp	al, 3
		jg	short locret_1BAC4
		add	di, bp
		jmp	short loc_1BA72
; ---------------------------------------------------------------------------

loc_1BA83:				; CODE XREF: seg001:0EE6p
		push	ax
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds
		jcxz	short loc_1BAC0

loc_1BA9D:				; CODE XREF: seg001:0F2Ej
		cmp	dl, 0
		jz	short loc_1BAC0
		dec	dl
		shr	cx, 1

loc_1BAA6:				; CODE XREF: seg001:0F21j
		mov	ax, [si]
; ---------------------------------------------------------------------------
		db 26h
byte_1BAA9	db 21h			; DATA XREF: seg001:0EC4w seg001:0ECCw ...
; ---------------------------------------------------------------------------
		add	ax, 0C683h
		add	al, [bp+di+2C7h]
		loop	loc_1BAA6
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, bx
		jmp	short loc_1BA9D
; ---------------------------------------------------------------------------

loc_1BAC0:				; CODE XREF: seg001:0F0Bj seg001:0F10j
		pop	di
		pop	si
		pop	ax
		retn
; ---------------------------------------------------------------------------

locret_1BAC4:				; CODE XREF: seg001:0EEDj
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_22. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_23. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_24. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_25. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	al, 0

loc_1BAD8:				; CODE XREF: seg001:0F65j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		jmp	short loc_1BAF7
; ---------------------------------------------------------------------------

loc_1BADE:				; CODE XREF: seg001:0FA7j
		inc	al
		cmp	al, 3
		jg	short locret_1BB39
		add	di, bp
		push	ax
		push	bx
		push	dx
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	dx
		pop	bx
		pop	ax
		jmp	short loc_1BAD8
; ---------------------------------------------------------------------------

loc_1BAF7:				; CODE XREF: seg001:0F4Cj
		push	ax
		push	si
		push	di
		push	bp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1BB10:				; CODE XREF: seg001:0FA1j
		cmp	dl, ch
		jz	short loc_1BB33
		dec	dl

loc_1BB16:				; CODE XREF: seg001:0F92j
		lodsw
		shl	ah, 1
		shl	ah, 1
		shl	ah, 1
		shl	ah, 1
		or	al, ah
		stosb
		loop	loc_1BB16
		mov	cl, dh
		sub	si, cx
		sub	si, cx
		sub	di, cx
		add	si, 50h	; 'P'
		add	di, bp
		jmp	short loc_1BB10
; ---------------------------------------------------------------------------

loc_1BB33:				; CODE XREF: seg001:0F82j
		pop	bp
		pop	di
		pop	si
		pop	ax
		jmp	short loc_1BADE
; ---------------------------------------------------------------------------

locret_1BB39:				; CODE XREF: seg001:0F52j
		retn
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	al, 0

loc_1BB43:				; CODE XREF: seg001:0FD0j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		jmp	short loc_1BB62
; ---------------------------------------------------------------------------

loc_1BB49:				; CODE XREF: seg001:1022j
		inc	al
		cmp	al, 3
		jg	short locret_1BBB4
		add	di, bp
		push	ax
		push	bx
		push	dx
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	dx
		pop	bx
		pop	ax
		jmp	short loc_1BB43
; ---------------------------------------------------------------------------

loc_1BB62:				; CODE XREF: seg001:0FB7j
		push	ax
		push	si
		push	di
		push	bp
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bp, word_257D9
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1BB7B:				; CODE XREF: seg001:101Cj
		cmp	dl, ch
		jz	short loc_1BBAE
		dec	dl

loc_1BB81:				; CODE XREF: seg001:100Dj
		lodsb
		mov	ah, al
		test	ah, 0Fh
		jz	short loc_1BB8C
		or	ah, 0Fh

loc_1BB8C:				; CODE XREF: seg001:0FF7j
		test	ah, 0F0h
		jz	short loc_1BB94
		or	ah, 0F0h

loc_1BB94:				; CODE XREF: seg001:0FFFj
		not	ah
		and	es:[di], ah
		or	es:[di], al
		inc	di
		loop	loc_1BB81
		mov	cl, dh
		sub	si, cx
		sub	si, cx
		sub	di, cx
		add	si, 50h	; 'P'
		add	di, bp
		jmp	short loc_1BB7B
; ---------------------------------------------------------------------------

loc_1BBAE:				; CODE XREF: seg001:0FEDj
		pop	bp
		pop	di
		pop	si
		pop	ax
		jmp	short loc_1BB49
; ---------------------------------------------------------------------------

locret_1BBB4:				; CODE XREF: seg001:0FBDj
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1BBB8	proc far		; CODE XREF: sub_193B8+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	bp, es:[di]
		cmp	bp, 1
		jg	short loc_1BBE2
		mov	byte_257CF, 1
		mov	byte_257D0, 0
		mov	bx, word_257CD
		shl	bx, 1
		call	off_25A48[bx]

loc_1BBE2:				; CODE XREF: sub_1BBB8+14j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BBB8	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1BBF0	proc near		; CODE XREF: sub_1BDFE+2Fp
					; DATA XREF: dseg:56C4o ...
		mov	si, 56CEh
		call	sub_1B1DD
		mov	cx, 2
		call	sub_1AFB7
		mov	bx, es:[di+1Ch]
		push	bx
		mov	bx, di
		call	sub_1B0BD
		pop	bx
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		shl	bx, 1
		mov	ax, [bx+56B4h]
		pop	ds
		call	ax
		retn
sub_1BBF0	endp

; ---------------------------------------------------------------------------
		cld
		mov	dx, 3C4h
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1BC30:				; CODE XREF: seg001:10B5j
		cmp	dl, 0
		jz	short locret_1BC47
		dec	dl
		rep movsb
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, 28h	; '('
		jmp	short loc_1BC30
; ---------------------------------------------------------------------------

locret_1BC47:				; CODE XREF: seg001:10A3j
		retn
; ---------------------------------------------------------------------------
		mov	dx, 3CEh
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_257E3
		mov	cx, word_257E1
		mov	bh, cl
		pop	ds
		jcxz	short loc_1BC60
		jmp	short loc_1BC63
; ---------------------------------------------------------------------------

loc_1BC60:				; CODE XREF: seg001:10CCj
		jmp	locret_1BCE5
; ---------------------------------------------------------------------------

loc_1BC63:				; CODE XREF: seg001:10CEj
		mov	dx, 3CEh

loc_1BC66:				; CODE XREF: seg001:1153j
		cmp	bl, 0
		jz	short locret_1BCE5
		dec	bl
		shr	cx, 1

loc_1BC6F:				; CODE XREF: seg001:1145j
		mov	ax, 805h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, [si]
		mov	bp, ax
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, 4
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	dx, 3C4h
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	ax, es:[di]
		and	ax, bp
		or	ax, [si]
		mov	es:[di], ax
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 104h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, es:[di]
		and	ax, bp
		or	ax, [si]
		mov	es:[di], ax
		mov	ax, 204h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	dx, 3C4h
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	ax, es:[di]
		and	ax, bp
		or	ax, [si]
		mov	es:[di], ax
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 304h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, es:[di]
		and	ax, bp
		or	ax, [si]
		mov	es:[di], ax
		add	si, 2
		add	di, 2
		loop	loc_1BC6F
		mov	cl, bh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, 28h	; '('
		jmp	short loc_1BC66
; ---------------------------------------------------------------------------

locret_1BCE5:				; CODE XREF: seg001:loc_1BC60j
					; seg001:10D9j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		mov	cs:byte_1BD48, 21h ; '!'
		jmp	short loc_1BCFD
; ---------------------------------------------------------------------------
		mov	cs:byte_1BD48, 9
		jmp	short loc_1BCFD
; ---------------------------------------------------------------------------
		mov	cs:byte_1BD48, 31h ; '1'

loc_1BCFD:				; CODE XREF: seg001:115Dj seg001:1165j
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		mov	al, 0
		mov	ah, 1

loc_1BD0D:				; CODE XREF: seg001:1194j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		xchg	al, ah
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		xchg	ah, al
		call	loc_1BD26
		inc	al
		shl	ah, 1
		cmp	al, 3
		jg	short locret_1BD64
		jmp	short loc_1BD0D
; ---------------------------------------------------------------------------

loc_1BD26:				; CODE XREF: seg001:1189p
		push	ax
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		jcxz	short loc_1BD60
		pop	ds

loc_1BD3C:				; CODE XREF: seg001:11CEj
		cmp	dl, 0
		jz	short loc_1BD60
		dec	dl
		shr	cx, 1

loc_1BD45:				; CODE XREF: seg001:11C0j
		mov	ax, [si]
; ---------------------------------------------------------------------------
		db 26h
byte_1BD48	db 21h			; DATA XREF: seg001:1157w seg001:115Fw ...
; ---------------------------------------------------------------------------
		add	ax, 0C683h
		add	al, [bp+di+2C7h]
		loop	loc_1BD45
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 28h	; '('
		add	di, 28h	; '('
		jmp	short loc_1BD3C
; ---------------------------------------------------------------------------

loc_1BD60:				; CODE XREF: seg001:11A9j seg001:11AFj
		pop	di
		pop	si
		pop	ax
		retn
; ---------------------------------------------------------------------------

locret_1BD64:				; CODE XREF: seg001:1192j
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_26. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_27. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_28. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_29. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3C4h
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1BD88:				; CODE XREF: seg001:120Cj
		cmp	dl, ch
		jz	short locret_1BD9E
		dec	dl
		rep movsb
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 50h	; 'P'
		add	di, 50h	; 'P'
		jmp	short loc_1BD88
; ---------------------------------------------------------------------------

locret_1BD9E:				; CODE XREF: seg001:11FAj
		retn
; ---------------------------------------------------------------------------
		cld
		mov	dx, 3CEh
		mov	al, 4
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		mov	al, 0
		mov	ah, 1

loc_1BDAA:				; CODE XREF: seg001:1230j
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		xchg	al, ah
		mov	dx, 3C5h
		out	dx, al		; EGA port: sequencer data register
		xchg	ah, al
		jmp	short loc_1BDC2
; ---------------------------------------------------------------------------

loc_1BDB8:				; CODE XREF: seg001:1268j
		inc	al
		shl	ah, 1
		cmp	al, 3
		jg	short locret_1BDFA
		jmp	short loc_1BDAA
; ---------------------------------------------------------------------------

loc_1BDC2:				; CODE XREF: seg001:1226j
		push	ax
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	dx, word_257E3
		mov	cx, word_257E1
		mov	dh, cl
		pop	ds

loc_1BDD6:				; CODE XREF: seg001:1263j
		cmp	dl, ch
		jz	short loc_1BDF5
		dec	dl

loc_1BDDC:				; CODE XREF: seg001:1255j
		lodsb
		cmp	al, ch
		jz	short loc_1BDE4
		mov	es:[di], al

loc_1BDE4:				; CODE XREF: seg001:124Fj
		inc	di
		loop	loc_1BDDC
		mov	cl, dh
		sub	si, cx
		sub	di, cx
		add	si, 50h	; 'P'
		add	di, 50h	; 'P'
		jmp	short loc_1BDD6
; ---------------------------------------------------------------------------

loc_1BDF5:				; CODE XREF: seg001:1248j
		pop	di
		pop	si
		pop	ax
		jmp	short loc_1BDB8
; ---------------------------------------------------------------------------

locret_1BDFA:				; CODE XREF: seg001:122Ej
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1BDFE	proc far		; CODE XREF: sub_193C8+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	es, dx
		mov	di, ax
		mov	bx, es:[di]
		cmp	bx, 1
		jg	short loc_1BE31
		mov	bp, es:[di+0Eh]
		cmp	bp, 1
		jg	short loc_1BE31
		mov	byte_257CF, 1
		mov	byte_257D0, 1
		mov	si, word_257CD
		shl	si, 1
		call	off_25A72[si]

loc_1BE31:				; CODE XREF: sub_1BDFE+14j
					; sub_1BDFE+1Dj
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BDFE	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1BE40	proc far		; CODE XREF: seg000:97B9P
					; sub_1BE65+1Fp ...
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	di, 68A2h
		mov	bx, [di+2]
		mov	es, bx
		mov	di, [di]
		call	sub_1C063
		xor	ax, ax
		mov	al, [si]
		add	al, es:[di+4]
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BE40	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BE65	proc far		; CODE XREF: seg000:97BFP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	bx, seg	dseg
		mov	ds, bx
		mov	di, 68A2h
		mov	bx, [di+2]
		mov	es, bx
		mov	di, [di]
		xor	dl, dl
		mov	al, es:[di]
		mov	cl, al

loc_1BE81:				; CODE XREF: sub_1BE65+32j
		mov	dh, al
		push	cs
		call	near ptr sub_1BE40
		cmp	al, dl
		jbe	short loc_1BE8F
		mov	dl, al
		mov	cl, dh

loc_1BE8F:				; CODE XREF: sub_1BE65+24j
		mov	al, dh
		inc	al
		cmp	al, es:[di+1]
		jbe	short loc_1BE81
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		mov	al, cl
		retf
sub_1BE65	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BEA1	proc far		; CODE XREF: sub_197C5+AP
					; sub_1BF0B+38p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	bx, word_257CD
		shl	bx, 1
		call	off_26CF6[bx]
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BEA1	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BEBB	proc far		; CODE XREF: sub_197D5+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	word_26C54, dx
		mov	word_26C52, ax
		mov	di, 68A2h
		mov	bx, [di+2]
		mov	es, bx
		mov	di, [di]
		mov	al, es:[di+3]
		add	al, 2
		mov	byte_26CEE, al
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BEBB	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BEE5	proc far		; CODE XREF: seg000:97E5P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_26CF2
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BEE5	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BEF8	proc far		; CODE XREF: seg000:97EBP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_26CF4
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BEF8	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BF0B	proc far		; CODE XREF: sub_197F1P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 0Ah
		mov	dx, 0Ah
		push	cs
		call	near ptr sub_1BFD1
		mov	ax, 0
		mov	bx, 0
		mov	cx, 13Fh
		mov	dx, 0C7h ; '«'
		push	cs
		call	near ptr sub_1BFB2
		mov	bx, 0
		push	cs
		call	near ptr sub_1BF99
		mov	al, 8
		push	cs
		call	near ptr sub_1BFE8
		mov	ax, 0Fh
		mov	dx, 0
		push	cs
		call	near ptr sub_1BEA1
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BF0B	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BF4C	proc far		; CODE XREF: seg000:97FEP
					; sub_1BF7C+11p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	bx, seg	dseg
		mov	ds, bx
		mov	di, 68A2h
		mov	bx, [di+2]
		mov	es, bx
		mov	di, [di]
		cmp	al, es:[di]
		jb	short loc_1BF76
		cmp	al, es:[di+1]
		jnb	short loc_1BF76
		mov	bx, word_257CD
		shl	bx, 1
		call	off_26D02[bx]

loc_1BF76:				; CODE XREF: sub_1BF4C+18j
					; sub_1BF4C+1Ej
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BF4C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BF7C	proc far		; CODE XREF: sub_19804+AP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	ds, dx
		mov	si, ax

loc_1BF86:				; CODE XREF: sub_1BF7C+15j
		mov	al, [si]
		cmp	al, 0
		jz	short loc_1BF93
		push	cs
		call	near ptr sub_1BF4C
		inc	si
		jmp	short loc_1BF86
; ---------------------------------------------------------------------------

loc_1BF93:				; CODE XREF: sub_1BF7C+Ej
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BF7C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BF99	proc far		; CODE XREF: sub_19814+7P
					; sub_1BF0B+28p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cmp	bx, 1
		jg	short loc_1BFAC
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word_26CF0, bx

loc_1BFAC:				; CODE XREF: sub_1BF99+8j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BF99	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BFB2	proc far		; CODE XREF: sub_19821+10P
					; sub_1BF0B+21p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bp, seg	dseg
		mov	ds, bp
		mov	word_26CE6, ax
		mov	word_26CE8, bx
		mov	word_26CEA, cx
		mov	word_26CEC, dx
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BFB2	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BFD1	proc far		; CODE XREF: sub_19837+AP
					; sub_1BF0B+11p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	word_26CF4, dx
		mov	word_26CF2, ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BFD1	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BFE8	proc far		; CODE XREF: seg000:984EP
					; sub_1BF0B+2Ep
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	byte_26CEE, al
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BFE8	endp


; =============== S U B	R O U T	I N E =======================================


sub_1BFFB	proc far		; CODE XREF: seg000:985EP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		cld
		mov	ds, dx
		mov	si, ax
		xor	cx, cx

loc_1C007:				; CODE XREF: sub_1BFFB+19j
		mov	al, [si]
		cmp	al, 0
		jz	short loc_1C016
		push	cs
		call	near ptr sub_1BE40
		add	cx, ax
		inc	si
		jmp	short loc_1C007
; ---------------------------------------------------------------------------

loc_1C016:				; CODE XREF: sub_1BFFB+10j
		mov	ax, cx
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1BFFB	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C01E	proc near		; CODE XREF: sub_1C197+D3p
		mov	si, 695Eh
		mov	word ptr [si], 68B6h
		mov	word ptr [si+2], ds
		mov	bp, word_26CF0
		shl	bp, 1
		shl	bp, 1
		add	ax, ds:[bp+5415h]
		mov	[si+8],	ax
		mov	ax, ds:[bp+5417h]
		mov	[si+0Ah], ax
		xor	ax, ax
		mov	al, bl
		mov	[si+0Ch], ax
		mov	al, bh
		mov	[si+0Eh], ax
		mov	al, cl
		mov	[si+10h], ax
		mov	al, ch
		mov	[si+12h], ax
		mov	[si+16h], dl
		mov	dx, ds
		mov	ax, si
		call	sub_1FBD5
		retn
sub_1C01E	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C063	proc near		; CODE XREF: sub_1BE40+14p
					; sub_1C11E+3p
		sub	al, es:[di]
		xor	ah, ah
		shl	ax, 1
		mov	bx, es
		mov	ds, bx
		mov	si, di
		add	si, 6
		add	si, ax
		mov	ax, [si]
		xchg	ah, al
		add	ax, di
		mov	si, ax
		retn
sub_1C063	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_30. PRESS	KEYPAD CTRL-"+"	TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1C07F	proc near		; CODE XREF: sub_1BEA1+10p
					; DATA XREF: dseg:6948o ...
		mov	si, 68A6h
		call	sub_1C08F
		mov	si, 68AEh
		mov	ax, dx
		call	sub_1C08F
		jmp	short locret_1C0BD
sub_1C07F	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C08F	proc near		; CODE XREF: sub_1C07F+3p sub_1C07F+Bp
		mov	word ptr [si], 0
		mov	word ptr [si+2], 0
		test	ax, 1
		jz	short loc_1C0A0
		mov	byte ptr [si], 0FFh

loc_1C0A0:				; CODE XREF: sub_1C08F+Cj
		test	ax, 2
		jz	short loc_1C0A9
		mov	byte ptr [si+1], 0FFh

loc_1C0A9:				; CODE XREF: sub_1C08F+14j
		test	ax, 4
		jz	short loc_1C0B4
		mov	byte ptr [si+2], 0FFh
		jz	short $+2

loc_1C0B4:				; CODE XREF: sub_1C08F+1Dj
					; sub_1C08F+23j
		test	ax, 8
		jz	short locret_1C0BD
		mov	byte ptr [si+3], 0FFh

locret_1C0BD:				; CODE XREF: sub_1C07F+Ej
					; sub_1C08F+28j
		retn
sub_1C08F	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_31. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_32. PRESS	KEYPAD CTRL-"+"	TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1C0C0	proc near		; CODE XREF: sub_1C197:loc_1C238p
		push	ax
		push	dx
		cmp	ax, word_26CE6
		jl	short loc_1C0EB
		add	al, bh
		jnb	short loc_1C0CE
		inc	ah

loc_1C0CE:				; CODE XREF: sub_1C0C0+Aj
		dec	ax
		cmp	ax, word_26CEA
		jg	short loc_1C0EB
		cmp	dx, word_26CE8
		jl	short loc_1C0EB
		add	dl, bl
		jnb	short loc_1C0E1
		inc	dh

loc_1C0E1:				; CODE XREF: sub_1C0C0+1Dj
		dec	dx
		cmp	dx, word_26CEC
		jg	short loc_1C0EB
		clc
		jmp	short loc_1C0EC
; ---------------------------------------------------------------------------

loc_1C0EB:				; CODE XREF: sub_1C0C0+6j
					; sub_1C0C0+13j ...
		stc

loc_1C0EC:				; CODE XREF: sub_1C0C0+29j
		pop	dx
		pop	ax
		retn
sub_1C0C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C0EF	proc near		; CODE XREF: sub_1C11Ep
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		mov	si, 68AEh
		mov	di, 68B6h
		mov	cx, 80h	; 'Ä'
		shr	cx, 1
		shr	cx, 1

loc_1C105:				; CODE XREF: sub_1C0EF+23j
		mov	ax, [si]
		mov	[di], ax
		mov	ax, [si+2]
		mov	[di+2],	ax
		add	di, 4
		loop	loc_1C105
		pop	es
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
sub_1C0EF	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C11E	proc near		; CODE XREF: sub_1C197p
		call	sub_1C0EF
		call	sub_1C063
		mov	al, es:[di+2]
		mov	bl, es:[di+3]
		mov	bh, [si]
		mov	cl, bh
		add	bh, es:[di+4]
		mov	dl, [si+1]
		mov	dh, [si+2]
		add	si, 3
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	es, bp
		assume es:dseg
		mov	bp, 68A6h
		mov	di, 68B6h
		pop	ds
		retn
sub_1C11E	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C14D	proc near		; CODE XREF: sub_1C197+Cp
		push	ax
		push	bx
		push	cx
		push	dx
		push	bp
		push	di
		push	si
		push	ds
		push	es
		xor	ch, ch
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1
		shl	cx, 1
		shl	cx, 1
		add	di, cx
		mov	cl, bh
		and	cl, 7
		xor	al, al
		jcxz	short loc_1C18C

loc_1C16D:				; CODE XREF: sub_1C14D+23j
		stc
		rcr	al, 1
		loop	loc_1C16D
		mov	cx, 4

loc_1C175:				; CODE XREF: sub_1C14D+3Dj
		cmp	bl, 0
		jz	short loc_1C18C
		dec	bl

loc_1C17C:				; CODE XREF: sub_1C14D+33j
		and	es:[di], al
		inc	di
		loop	loc_1C17C
		mov	cx, 4
		sub	di, cx
		add	di, 8
		jmp	short loc_1C175
; ---------------------------------------------------------------------------

loc_1C18C:				; CODE XREF: sub_1C14D+1Ej
					; sub_1C14D+2Bj
		pop	es
		assume es:nothing
		pop	ds
		pop	si
		pop	di
		pop	bp
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn
sub_1C14D	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_33. PRESS	KEYPAD CTRL-"+"	TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1C197	proc near		; CODE XREF: sub_1BEA1+10p
					; sub_1BF4C+26p
					; DATA XREF: ...
		call	sub_1C11E
		cmp	cl, 0
		jnz	short loc_1C1A2
		jmp	loc_1C26D
; ---------------------------------------------------------------------------

loc_1C1A2:				; CODE XREF: sub_1C197+6j
		push	ax
		call	sub_1C14D
		mov	al, 8
		mul	dh
		xor	ah, ah
		add	di, ax
		xor	ch, ch
		dec	cl
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1
		inc	cx
		mov	dh, cl
		push	bx

loc_1C1BC:				; CODE XREF: sub_1C197+81j
		cmp	dl, 0
		jz	short loc_1C21A
		dec	dl
		push	di
		push	dx

loc_1C1C5:				; CODE XREF: sub_1C197+78j
		mov	al, [si]
		mov	bl, al
		mov	bh, al
		mov	ax, es:[bp+0]
		and	ax, bx
		mov	dx, ax
		mov	ax, es:[bp+2]
		and	ax, bx
		or	dx, ax
		or	dh, dl
		mov	dl, dh
		not	dx
		cmp	dx, 0FFFFh
		jz	short loc_1C202
		mov	ax, es:[bp+0]
		and	ax, bx
		and	es:[di], dx
		or	es:[di], ax
		mov	ax, es:[bp+2]
		and	ax, bx
		and	es:[di+2], dx
		or	es:[di+2], ax
		jmp	short loc_1C20B
; ---------------------------------------------------------------------------

loc_1C202:				; CODE XREF: sub_1C197+4Dj
		not	bx
		and	es:[di], bx
		and	es:[di+2], bx

loc_1C20B:				; CODE XREF: sub_1C197+69j
		inc	si
		add	di, 4
		loop	loc_1C1C5
		pop	dx
		mov	cl, dh
		pop	di
		add	di, 8
		jmp	short loc_1C1BC
; ---------------------------------------------------------------------------

loc_1C21A:				; CODE XREF: sub_1C197+28j
		pop	bx
		mov	ax, seg	dseg
		mov	ds, ax
		pop	dx
		xor	dh, dh
		neg	dx
		add	dx, word_26CF4
		mov	ax, word_26CF2
		add	byte ptr word_26CF2, bh
		jnb	short loc_1C238
		add	word_26CF2, 100h

loc_1C238:				; CODE XREF: sub_1C197+99j
		call	sub_1C0C0
		jb	short loc_1C26D
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		mov	cx, dx
		shl	cx, 1
		shl	cx, 1
		add	cx, dx
		mov	dx, ax
		and	dx, 7
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	ax, cx
		dec	bh
		shr	bh, 1
		shr	bh, 1
		shr	bh, 1
		inc	bh
		mov	cl, bh
		mov	ch, bl
		mov	bl, 2
		mov	bh, 28h	; '('
		call	sub_1C01E

loc_1C26D:				; CODE XREF: sub_1C197+8j
					; sub_1C197+A4j
		call	nullsub_8
		retn
sub_1C197	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_34. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_35. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
		align 10h
seg001		ends

; ===========================================================================

; Segment type:	Pure code
seg002		segment	byte public 'CODE' use16
		assume cs:seg002
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_1C280	proc far		; CODE XREF: sub_17B5A+16P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bp, seg	dseg
		mov	ds, bp
		mov	word_251C0, di
		mov	word_251BC, di
		mov	word_251BE, si
		mov	word_251BA, si
		mov	es, di
		mov	di, si
		mov	word_251C4, bx
		mov	word_251DA, bx
		mov	word_251C2, ax
		mov	word_251D8, ax
		mov	bx, dx
		mov	ax, cx
		call	sub_1CDA0
		mov	word_251BC, dx
		mov	word_251BA, ax

loc_1C2BC:				; CODE XREF: sub_1C280+76j
		call	sub_1CC89
		jnb	short loc_1C2C6
		mov	ax, 3
		jmp	short loc_1C2F8
; ---------------------------------------------------------------------------

loc_1C2C6:				; CODE XREF: sub_1C280+3Fj
		push	si
		push	ds
		mov	bp, seg	dseg
		mov	ds, bp
		mov	si, word_251E1
		and	si, 7FFFh
		dec	si
		shl	si, 1
		mov	bp, [si+4E37h]
		pop	ds
		pop	si
		call	bp
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_251E5
		mov	word_251DA, ax
		mov	ax, word_251E3
		mov	word_251D8, ax
		cmp	word_251E1, 0
		jg	short loc_1C2BC

loc_1C2F8:				; CODE XREF: sub_1C280+44j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1C280	endp


; =============== S U B	R O U T	I N E =======================================


sub_1C2FE	proc near		; CODE XREF: seg002:063Fp
		mov	dx, word_251D6
		mov	word_251C4, dx
		mov	ax, word_251D4
		mov	word_251C2, ax
		and	byte ptr word_251C2, 0F0h
		cmp	dx, word_251C4
		jnz	short loc_1C31D
		cmp	ax, word_251C2
		jz	short loc_1C328

loc_1C31D:				; CODE XREF: sub_1C2FE+17j
		add	word_251C2, 10h
		jnb	short loc_1C328
		inc	word_251C4

loc_1C328:				; CODE XREF: sub_1C2FE+1Dj
					; sub_1C2FE+24j
		mov	ax, word_251BC
		mov	word_251C8, ax
		mov	ax, word_251BA
		mov	word_251C6, ax
		mov	ax, word_251C8
		mov	es, ax
		mov	di, word_251C6
		mov	bx, word_251C4
		mov	ax, word_251C2
		call	sub_1CDE5
		and	al, 0FEh
		mov	word_251B8, dx
		mov	word_251B6, ax
		mov	es, dx
		mov	di, ax
		mov	bx, word_251C4
		mov	ax, word_251C2
		call	sub_1CDA0
		mov	word_251AC, dx
		mov	word_251AA, ax
		mov	ax, word_251C0
		mov	es, ax
		mov	di, word_251BE
		mov	bx, word_251C4
		mov	ax, word_251C2
		call	sub_1CDA0
		mov	word_251A8, dx
		mov	word_251A6, ax
		mov	es, dx
		mov	di, ax
		xor	bx, bx
		mov	ax, 10h
		call	sub_1CDA0
		mov	word_251B0, dx
		mov	word_251AE, ax
		cmp	dx, word_251AC
		jb	short loc_1C3B5
		jnz	short loc_1C3A8
		cmp	ax, word_251AA
		jbe	short loc_1C3B5

loc_1C3A8:				; CODE XREF: sub_1C2FE+A2j
		mov	word_251C4, 0
		mov	word_251C2, 2
		retn
; ---------------------------------------------------------------------------

loc_1C3B5:				; CODE XREF: sub_1C2FE+A0j
					; sub_1C2FE+A8j
		mov	cx, word_251C4
		mov	bx, word_251C2
		mov	ax, word_251AC
		mov	es, ax
		mov	di, word_251AA
		mov	si, word_251A6
		mov	ax, word_251A8
		mov	ds, ax

loc_1C3CF:				; CODE XREF: sub_1C2FE+FCj
					; sub_1C2FE+101j
		sub	si, 2
		jnb	short loc_1C3DC
		add	si, 10h
		mov	ax, ds
		dec	ax
		mov	ds, ax
		assume ds:seg009

loc_1C3DC:				; CODE XREF: sub_1C2FE+D4j
		sub	di, 2
		jnb	short loc_1C3E9
		add	di, 10h
		mov	ax, es
		dec	ax
		mov	es, ax
		assume es:nothing

loc_1C3E9:				; CODE XREF: sub_1C2FE+E1j
		mov	ax, [si]
		mov	es:[di], ax
		sub	bx, 2
		jnb	short loc_1C3F7
		add	bx, 10h
		dec	cx

loc_1C3F7:				; CODE XREF: sub_1C2FE+F3j
		cmp	cx, 0
		jnz	short loc_1C3CF
		cmp	bx, 0
		jnz	short loc_1C3CF
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	word_251C4, 0
		mov	word_251C2, 1
		retn
sub_1C2FE	endp

; ---------------------------------------------------------------------------
		dd 203BB8C3h
; ---------------------------------------------------------------------------
		mov	ds, ax
		mov	ax, word_251C0
		mov	es, ax
		assume es:nothing
		mov	di, word_251BE
		xor	bx, bx
		mov	ax, 0Ch
		call	sub_1CDA0
		mov	word_251B8, dx
		mov	word_251B6, ax
		mov	es, dx
		mov	di, ax
		mov	al, es:[di]
		mov	byte ptr word_251D2, al
		inc	word_251B6
		mov	ax, word_251C0
		mov	es, ax
		mov	di, word_251BE
		mov	bx, word_251D6
		mov	ax, word_251D4
		call	sub_1CDA0
		mov	word_251A8, dx
		mov	word_251A6, ax
		mov	bx, word_251DA
		mov	ax, word_251D8
		call	sub_1CDA0
		mov	word_251AC, dx
		mov	word_251AA, ax
		mov	ax, seg	dseg
		mov	es, ax
		assume es:dseg
		mov	di, 4E97h
		xor	bx, bx
		mov	ax, 400h
		call	sub_1CDA0
		mov	word_251B4, dx
		mov	word_251B2, ax
		mov	es, dx
		assume es:nothing
		mov	di, ax
		mov	word_251DF, dx
		mov	word_251DD, ax
		mov	si, word_251AA
		mov	ax, word_251AC
		mov	ds, ax
		mov	cx, 400h

loc_1C4A0:				; CODE XREF: seg002:025Cj
		sub	si, 1
		jnb	short loc_1C4AD
		add	si, 10h
		mov	ax, ds
		dec	ax
		mov	ds, ax
		assume ds:seg009

loc_1C4AD:				; CODE XREF: seg002:0223j
		sub	di, 1
		jnb	short loc_1C4BA
		add	di, 10h
		mov	ax, es
		dec	ax
		mov	es, ax
		assume es:nothing

loc_1C4BA:				; CODE XREF: seg002:0230j
		mov	al, [si]
		mov	es:[di], al
		mov	ax, ds
		mov	bp, cx
		mov	bx, seg	dseg
		mov	ds, bx
		assume ds:dseg
		mov	dx, word_251B8
		mov	cx, word_251B6
		mov	ds, ax
		assume ds:seg009
		cmp	ax, dx
		jnz	short loc_1C4DA
		cmp	si, cx
		jz	short loc_1C52F

loc_1C4DA:				; CODE XREF: seg002:0254j
		mov	cx, bp
		loop	loc_1C4A0
		mov	bp, ds
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	ax, word_251A8
		mov	word_251B4, ax
		mov	di, word_251A6
		mov	word_251B2, di
		mov	es, ax
		assume es:nothing
		mov	ds, bp
		assume ds:seg009

loc_1C4F7:				; CODE XREF: seg002:02A9j seg002:02ADj
		sub	si, 1
		jnb	short loc_1C504
		add	si, 10h
		mov	ax, ds
		dec	ax
		mov	ds, ax
		assume ds:nothing

loc_1C504:				; CODE XREF: seg002:027Aj
		sub	di, 1
		jnb	short loc_1C511
		add	di, 10h
		mov	ax, es
		dec	ax
		mov	es, ax
		assume es:nothing

loc_1C511:				; CODE XREF: seg002:0287j
		mov	al, [si]
		mov	es:[di], al
		mov	ax, ds
		mov	bx, seg	dseg
		mov	ds, bx
		assume ds:dseg
		mov	dx, word_251B8
		mov	cx, word_251B6
		mov	ds, ax
		assume ds:nothing
		cmp	ax, dx
		jnz	short loc_1C4F7
		cmp	si, cx
		jnz	short loc_1C4F7

loc_1C52F:				; CODE XREF: seg002:0258j
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	ax, word_251C0
		mov	word_251B0, ax
		mov	ax, word_251BE
		mov	word_251AE, ax
		mov	ax, es
		mov	ds, ax
		assume ds:nothing
		mov	si, di

loc_1C546:				; CODE XREF: seg002:045Fj seg002:0466j
		mov	al, [si]
		mov	bp, ds
		mov	bx, seg	dseg
		mov	ds, bx
		assume ds:dseg
		mov	byte_251DC, al
		mov	ds, bp
		assume ds:nothing
		mov	bp, bx
		add	si, 1
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		assume ds:dseg
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		mov	bx, ds
		mov	ds, bp
		mov	dx, word_251A8
		mov	cx, word_251A6
		mov	ds, bx
		cmp	bx, dx
		jnz	short loc_1C595
		cmp	si, cx
		jnz	short loc_1C595
		mov	ds, bp
		mov	ax, seg	dseg
		mov	word_251B4, ax
		mov	si, 4E97h
		mov	word_251B2, si
		mov	ds, ax

loc_1C595:				; CODE XREF: seg002:02FEj seg002:0302j
		mov	bp, ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	al, byte ptr word_251D2
		mov	ah, byte_251DC
		mov	ds, bp
		cmp	al, ah
		jz	short loc_1C5AC
		jmp	loc_1C695
; ---------------------------------------------------------------------------

loc_1C5AC:				; CODE XREF: seg002:0327j
		mov	al, [si]
		mov	ds, bx
		mov	byte ptr word_251CE, al
		mov	ds, bp
		mov	bp, bx
		add	si, 1
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		mov	bx, ds
		mov	ds, bp
		mov	dx, word_251A8
		mov	cx, word_251A6
		mov	ds, bx
		cmp	bx, dx
		jnz	short loc_1C5F6
		cmp	si, cx
		jnz	short loc_1C5F6
		mov	ds, bp
		mov	ax, seg	dseg
		mov	word_251B4, ax
		mov	si, 4E97h
		mov	word_251B2, si
		mov	ds, ax

loc_1C5F6:				; CODE XREF: seg002:035Fj seg002:0363j
		mov	bp, ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	al, byte ptr word_251D2
		mov	ah, byte ptr word_251CE
		mov	ds, bp
		cmp	al, ah
		jnz	short loc_1C60D
		jmp	loc_1C695
; ---------------------------------------------------------------------------

loc_1C60D:				; CODE XREF: seg002:0388j
		mov	al, [si]
		mov	ds, bx
		mov	byte ptr word_251C6, al
		mov	ds, bp
		mov	bp, bx
		add	si, 1
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		mov	bx, ds
		mov	ds, bp
		mov	dx, word_251A8
		mov	cx, word_251A6
		mov	ds, bx
		cmp	bx, dx
		jnz	short loc_1C657
		cmp	si, cx
		jnz	short loc_1C657
		mov	ds, bp
		mov	ax, seg	dseg
		mov	word_251B4, ax
		mov	si, 4E97h
		mov	word_251B2, si
		mov	ds, ax

loc_1C657:				; CODE XREF: seg002:03C0j seg002:03C4j ...
		mov	bp, ds
		mov	bx, seg	dseg
		mov	ds, bx
		mov	ax, word_251B0
		mov	es, ax
		mov	di, word_251AE
		mov	al, byte ptr word_251CE
		mov	es:[di], al
		add	di, 1
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		mov	word_251B0, dx
		mov	word_251AE, ax
		cmp	bp, dx
		jnz	short loc_1C68B
		cmp	si, di
		jnz	short loc_1C68B
		jmp	locret_1C72E
; ---------------------------------------------------------------------------

loc_1C68B:				; CODE XREF: seg002:0402j seg002:0406j
		dec	byte ptr word_251C6
		mov	ds, bp
		jnz	short loc_1C657
		jmp	short loc_1C6C0
; ---------------------------------------------------------------------------

loc_1C695:				; CODE XREF: seg002:0329j seg002:038Aj
		mov	bp, ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_251B0
		mov	es, ax
		mov	di, word_251AE
		mov	al, byte_251DC
		mov	es:[di], al
		add	di, 1
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		mov	word_251B0, dx
		mov	word_251AE, ax
		mov	ds, bp

loc_1C6C0:				; CODE XREF: seg002:0413j
		mov	bp, ds
		mov	dx, es
		cmp	bp, dx
		jnz	short loc_1C6CC
		cmp	si, di
		jz	short locret_1C72E

loc_1C6CC:				; CODE XREF: seg002:0446j
		mov	bx, seg	dseg
		mov	ds, bx
		mov	dx, word_251DF
		mov	cx, word_251DD
		mov	ds, bp
		cmp	bp, dx
		jz	short loc_1C6E2
		jmp	loc_1C546
; ---------------------------------------------------------------------------

loc_1C6E2:				; CODE XREF: seg002:045Dj
		cmp	si, cx
		jz	short loc_1C6E9
		jmp	loc_1C546
; ---------------------------------------------------------------------------

loc_1C6E9:				; CODE XREF: seg002:0464j
		mov	ax, seg	dseg
		mov	ds, ax
		push	di
		push	es
		mov	ax, word_251D6
		mov	es, ax
		mov	di, word_251D4
		call	sub_1CE29
		mov	word_251D6, dx
		mov	word_251D4, ax
		pop	es
		pop	di
		mov	ax, word_251BE
		sub	di, ax
		jnb	short loc_1C716
		add	di, 10h
		mov	ax, es
		dec	ax
		mov	es, ax
		assume es:nothing

loc_1C716:				; CODE XREF: seg002:048Cj
		mov	bx, word_251C0
		mov	ax, es
		sub	ax, bx
		cmp	ax, word_251D6
		jnz	short locret_1C72F
		cmp	di, word_251D4
		jnz	short locret_1C72F
		mov	ax, 1
		retn
; ---------------------------------------------------------------------------

locret_1C72E:				; CODE XREF: seg002:0408j seg002:044Aj ...
		retn
; ---------------------------------------------------------------------------

locret_1C72F:				; CODE XREF: seg002:04A2j seg002:04A8j
		retn
; ---------------------------------------------------------------------------
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_251C0
		mov	es, ax
		assume es:nothing
		mov	di, word_251BE
		mov	bx, word_251D6
		mov	ax, word_251D4
		call	sub_1CDA0
		cmp	dx, word_251BC
		ja	short locret_1C72E
		jnz	short loc_1C758
		cmp	ax, word_251BA
		ja	short locret_1C72E

loc_1C758:				; CODE XREF: seg002:04D0j
		mov	ax, word_251C0
		mov	es, ax
		mov	di, word_251BE
		xor	bx, bx
		mov	ax, 0Ch
		call	sub_1CDA0
		mov	word_251A8, dx
		mov	word_251A6, ax
		mov	es, dx
		mov	di, ax
		mov	ax, es:[di]
		xchg	ah, al
		mov	word_251D2, ax
		add	word_251A6, 2
		mov	dx, word_251D6
		mov	word_251D0, dx
		mov	ax, word_251D4
		mov	word_251CE, ax
		and	byte ptr word_251CE, 0E0h
		cmp	dx, word_251D0
		jnz	short loc_1C7A9
		cmp	ax, word_251CE
		jz	short loc_1C7AF
		mov	dx, word_251D0
		mov	ax, word_251CE

loc_1C7A9:				; CODE XREF: seg002:051Aj
		add	ax, 20h	; ' '
		jnb	short loc_1C7AF
		inc	dx

loc_1C7AF:				; CODE XREF: seg002:0520j seg002:052Cj
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		mov	word_251D0, dx
		mov	word_251CE, ax
		mov	ax, word_251BC
		mov	word_251C8, ax
		mov	di, word_251BA
		mov	word_251C6, di
		mov	es, ax
		mov	bx, word_251D0
		mov	ax, word_251CE
		call	sub_1CDE5
		mov	word_251C8, dx
		mov	word_251C6, ax
		and	byte ptr word_251C6, 0FEh
		mov	dx, word_251C8
		mov	word_251AC, dx
		mov	ax, word_251C6
		mov	word_251AA, ax
		mov	word_251B0, dx
		mov	word_251AE, ax
		mov	es, dx
		mov	di, ax
		mov	ax, word_251D0
		mov	word_251C8, ax
		mov	ax, word_251CE
		mov	word_251C6, ax
		mov	si, word_251A6
		mov	ax, word_251A8
		mov	ds, ax

loc_1C818:				; CODE XREF: seg002:05F2j seg002:05F7j
		mov	ax, [si+2]
		mov	es:[di+2], ax
		mov	ax, [si]
		mov	es:[di], ax
		add	si, 4
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		mov	bp, ds
		add	di, 4
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		mov	ax, seg	dseg
		mov	ds, ax
		push	di
		push	es
		mov	ax, word_251C8
		mov	es, ax
		mov	di, word_251C6
		xor	bx, bx
		mov	ax, 4
		call	sub_1CDE5
		pop	es
		pop	di
		mov	word_251C8, dx
		mov	word_251C6, ax
		mov	ds, bp
		cmp	dx, 0
		jnz	short loc_1C818
		cmp	ax, 0
		jnz	short loc_1C818
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word_251A8, bp
		mov	word_251A6, si
		mov	ax, es
		mov	word_251B0, ax
		mov	word_251AE, di
		mov	ax, word_251D6
		push	ax
		mov	ax, word_251D4
		push	ax
		mov	ax, word_251AC
		push	ax
		mov	ax, word_251AA
		push	ax
		mov	ax, word_251BC
		push	ax
		mov	ax, word_251BA
		push	ax
		mov	ax, word_251AC
		mov	word_251BC, ax
		mov	ax, word_251AA
		mov	word_251BA, ax
		mov	ax, word_251DA
		mov	word_251D6, ax
		mov	ax, word_251D8
		mov	word_251D4, ax
		call	sub_1C2FE
		pop	ax
		mov	word_251BA, ax
		pop	ax
		mov	word_251BC, ax
		pop	ax
		mov	word_251AA, ax
		pop	ax
		mov	word_251AC, ax
		pop	ax
		mov	word_251D4, ax
		pop	ax
		mov	word_251D6, ax
		cmp	word_251C4, 0
		jnz	short loc_1C8EB
		cmp	word_251C2, 2
		jnz	short loc_1C8EB
		jmp	locret_1C72E
; ---------------------------------------------------------------------------

loc_1C8EB:				; CODE XREF: seg002:065Fj seg002:0666j
		mov	ax, word_251D6
		push	ax
		mov	ax, word_251D4
		push	ax
		mov	ax, word_251DA
		push	ax
		mov	ax, word_251D8
		push	ax
		mov	ax, word_251BC
		push	ax
		mov	ax, word_251BA
		push	ax
		mov	ax, word_251B8
		mov	es, ax
		mov	di, word_251B6
		mov	bx, word_251DA
		mov	ax, word_251D8
		call	sub_1CDA0
		mov	word_251B4, dx
		mov	word_251B2, ax
		mov	bx, word_251D0
		mov	ax, word_251CE
		call	sub_1CDA0
		mov	es, dx
		mov	di, ax
		xor	bx, bx
		mov	ax, 0Eh
		call	sub_1CDA0
		mov	word_251B8, dx
		mov	word_251B6, ax
		mov	ax, word_251BC
		mov	word_251B0, ax
		mov	di, word_251BA
		mov	word_251AE, di
		mov	es, ax
		xor	bx, bx
		mov	ax, 400h
		call	sub_1CDE5
		mov	word_251B0, dx
		mov	word_251AE, ax
		mov	ax, word_251AC
		mov	word_251BC, ax
		mov	ax, word_251AA
		mov	word_251BA, ax
		mov	ax, word_251C0
		mov	word_251A8, ax
		mov	ax, word_251BE
		mov	word_251A6, ax
		mov	word_251CC, 0
		mov	word_251CA, 0
		mov	word_251C4, 0
		mov	word_251C2, 0
		mov	word_251C8, 0
		mov	word_251C6, 0

loc_1C99D:				; CODE XREF: seg002:0835j seg002:0840j ...
		sub	word_251C6, 1
		cmp	word_251C6, 0
		jns	short loc_1C9F2
		mov	bp, ds
		mov	si, word_251BA
		mov	ax, word_251BC
		mov	ds, ax
		mov	dx, [si+2]
		xchg	dh, dl
		mov	ax, [si]
		xchg	ah, al
		push	ax
		push	dx
		add	si, 4
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		pop	dx
		pop	ax
		mov	cx, ds
		mov	ds, bp
		mov	word_251BC, cx
		mov	word_251BA, si
		mov	word_251C6, 1Fh
		mov	word_251D6, ax
		mov	word_251D4, dx

loc_1C9F2:				; CODE XREF: seg002:0727j
		mov	dx, word_251D6
		mov	ax, word_251D4
		shl	ax, 1
		rcl	dx, 1
		mov	word_251D6, dx
		mov	word_251D4, ax
		jnb	short loc_1CA09
		jmp	loc_1CB57
; ---------------------------------------------------------------------------

loc_1CA09:				; CODE XREF: seg002:0784j
		mov	ax, word_251A8
		mov	es, ax
		mov	di, word_251A6
		mov	si, word_251B6
		mov	ax, word_251B8
		mov	ds, ax
		mov	al, [si]
		mov	es:[di], al
		add	si, 1
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		mov	bp, ds
		add	di, 1
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word_251B8, bp
		mov	word_251B6, si
		mov	ax, es
		mov	word_251A8, ax
		mov	word_251A6, di
		add	word_251C2, 1
		jnb	short loc_1CA67
		inc	word_251C4

loc_1CA67:				; CODE XREF: seg002:07E1j
		mov	dx, word_251B0
		mov	ax, word_251AE
		cmp	dx, word_251A8
		jnz	short loc_1CA92
		cmp	ax, word_251A6
		jnz	short loc_1CA92
		mov	ax, seg	dseg
		mov	word_251A8, ax
		mov	ax, 4E97h
		mov	word_251A6, ax
		mov	word_251CC, 0
		mov	word_251CA, 1

loc_1CA92:				; CODE XREF: seg002:07F2j seg002:07F8j
		mov	dx, word_251B8
		mov	ax, word_251B6
		cmp	dx, word_251B4
		jnz	short loc_1CAA8
		cmp	ax, word_251B2
		jnz	short loc_1CAA8
		jmp	loc_1CBB4
; ---------------------------------------------------------------------------

loc_1CAA8:				; CODE XREF: seg002:081Dj seg002:0823j ...
		mov	dx, word_251B8
		mov	ax, word_251B6
		cmp	dx, word_251A8
		jbe	short loc_1CAB8
		jmp	loc_1C99D
; ---------------------------------------------------------------------------

loc_1CAB8:				; CODE XREF: seg002:0833j
		jnz	short loc_1CAC3
		cmp	ax, word_251A6
		jbe	short loc_1CAC3
		jmp	loc_1C99D
; ---------------------------------------------------------------------------

loc_1CAC3:				; CODE XREF: seg002:loc_1CAB8j
					; seg002:083Ej
		cmp	word_251CC, 0
		jz	short loc_1CACD
		jmp	loc_1C99D
; ---------------------------------------------------------------------------

loc_1CACD:				; CODE XREF: seg002:0848j
		cmp	word_251CA, 0
		jz	short loc_1CAD7
		jmp	loc_1C99D
; ---------------------------------------------------------------------------

loc_1CAD7:				; CODE XREF: seg002:0852j
		mov	ax, word_251BC
		mov	word_251AC, ax
		mov	ax, word_251BA
		mov	word_251AA, ax
		mov	dx, word_251B8
		mov	cx, word_251B6
		mov	ax, word_251AC
		mov	es, ax
		mov	di, word_251AA
		mov	si, word_251B2
		mov	ax, word_251B4
		mov	ds, ax

loc_1CAFD:				; CODE XREF: seg002:08A0j seg002:08A4j
		sub	si, 1
		jnb	short loc_1CB0A
		add	si, 10h
		mov	ax, ds
		dec	ax
		mov	ds, ax
		assume ds:seg009

loc_1CB0A:				; CODE XREF: seg002:0880j
		sub	di, 1
		jnb	short loc_1CB17
		add	di, 10h
		mov	ax, es
		dec	ax
		mov	es, ax
		assume es:nothing

loc_1CB17:				; CODE XREF: seg002:088Dj
		mov	al, [si]
		mov	es:[di], al
		mov	ax, ds
		cmp	dx, ax
		jnz	short loc_1CAFD
		cmp	cx, si
		jnz	short loc_1CAFD
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	word_251B4, bp
		mov	word_251B2, si
		mov	ax, es
		mov	word_251AC, ax
		mov	word_251AA, di
		mov	ax, word_251AC
		mov	word_251B8, ax
		mov	ax, word_251AA
		mov	word_251B6, ax
		mov	ax, word_251BC
		mov	word_251B4, ax
		mov	ax, word_251BA
		mov	word_251B2, ax
		jmp	loc_1C99D
; ---------------------------------------------------------------------------

loc_1CB57:				; CODE XREF: seg002:0786j
		mov	ax, word_251A8
		mov	es, ax
		assume es:nothing
		mov	di, word_251A6
		mov	al, byte ptr word_251D2
		mov	es:[di], al
		add	di, 1
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		mov	ax, es
		mov	word_251A8, ax
		mov	word_251A6, di
		add	word_251C2, 1
		jnb	short loc_1CB86
		inc	word_251C4

loc_1CB86:				; CODE XREF: seg002:0900j
		mov	dx, word_251B0
		mov	ax, word_251AE
		cmp	dx, word_251A8
		jnz	short loc_1CBB1
		cmp	ax, word_251A6
		jnz	short loc_1CBB1
		mov	ax, seg	dseg
		mov	word_251A8, ax
		mov	ax, 4E97h
		mov	word_251A6, ax
		mov	word_251CC, 0
		mov	word_251CA, 1

loc_1CBB1:				; CODE XREF: seg002:0911j seg002:0917j
		jmp	loc_1CAA8
; ---------------------------------------------------------------------------

loc_1CBB4:				; CODE XREF: seg002:0825j
		pop	ax
		mov	word_251BA, ax
		pop	ax
		mov	word_251BC, ax
		pop	ax
		mov	word_251D8, ax
		pop	ax
		mov	word_251DA, ax
		pop	ax
		mov	word_251D4, ax
		pop	ax
		mov	word_251D6, ax

loc_1CBCC:				; CODE XREF: seg002:099Fj seg002:09A7j
		mov	al, byte ptr word_251D2
		mov	es:[di], al
		add	di, 1
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		add	word_251C2, 1
		jnb	short loc_1CBE9
		inc	word_251C4

loc_1CBE9:				; CODE XREF: seg002:0963j
		mov	dx, word_251B0
		mov	ax, word_251AE
		cmp	dx, word_251A8
		jnz	short loc_1CC14
		cmp	ax, word_251A6
		jnz	short loc_1CC14
		mov	ax, seg	dseg
		mov	word_251A8, ax
		mov	ax, 4E97h
		mov	word_251A6, ax
		mov	word_251CC, 0
		mov	word_251CA, 1

loc_1CC14:				; CODE XREF: seg002:0974j seg002:097Aj
		mov	dx, word_251D6
		mov	ax, word_251D4
		cmp	dx, word_251C4
		ja	short loc_1CBCC
		jnz	short loc_1CC29
		cmp	ax, word_251C2
		ja	short loc_1CBCC

loc_1CC29:				; CODE XREF: seg002:09A1j
		mov	ax, seg	dseg
		mov	word_251A8, ax
		mov	ax, 4E97h
		mov	word_251A6, ax
		mov	cx, 400h
		shr	cx, 1
		shr	cx, 1
		mov	ax, word_251B0
		mov	es, ax
		mov	di, word_251AE
		mov	si, word_251A6
		mov	ax, word_251A8
		mov	ds, ax

loc_1CC4E:				; CODE XREF: seg002:09FEj
		mov	ax, [si+2]
		mov	es:[di+2], ax
		mov	ax, [si]
		mov	es:[di], ax
		add	si, 4
		push	di
		push	bp
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	di, si
		call	sub_1CE29
		mov	ds, dx
		mov	si, ax
		pop	es
		assume es:nothing
		pop	bp
		pop	di
		add	di, 4
		call	sub_1CE29
		mov	es, dx
		mov	di, ax
		loop	loc_1CC4E
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 1
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1CC89	proc near		; CODE XREF: sub_1C280:loc_1C2BCp
		mov	ax, word_251DA
		push	ax
		mov	ax, word_251D8
		push	ax
		mov	ax, word_251BC
		push	ax
		mov	ax, word_251BA
		push	ax
		mov	ax, word_251C0
		mov	es, ax
		push	ax
		mov	ax, word_251BE
		mov	di, ax
		push	ax
		mov	ax, es:[di]
		xchg	ah, al
		mov	bx, es:[di+2]
		xchg	bh, bl
		mov	word_251D6, ax
		mov	word_251D4, bx
		mov	word_251E5, ax
		mov	word_251E3, bx
		cmp	ax, 0Fh
		ja	short loc_1CD36
		nop
		nop
		nop
		cmp	ax, 0Fh
		jnz	short loc_1CCD0
		cmp	bx, 0FFFFh
		ja	short loc_1CD36

loc_1CCD0:				; CODE XREF: sub_1CC89+40j
		mov	ax, es:[di+6]
		xchg	ah, al
		mov	bx, es:[di+4]
		xchg	bh, bl
		mov	word_251D0, ax
		mov	word_251CE, bx
		mov	ax, es:[di+8]
		xchg	ah, al
		mov	word_251E1, ax
		mov	si, ax
		and	si, 3Fh
		cmp	si, 1Eh
		ja	short loc_1CD36
		add	si, si
		mov	bx, [si+4E5Bh]
		xchg	bh, bl
		cmp	bx, 0
		jl	short loc_1CD36
		mov	si, ax
		and	si, 7F00h
		jnz	short loc_1CD36
		mov	bx, word_251D6
		mov	ax, word_251D4
		mov	si, word_251E1
		xor	si, bx
		xor	si, ax
		mov	word_251D6, bx
		mov	word_251D4, ax
		mov	ax, word_251D0
		mov	bx, word_251CE
		xor	si, bx
		xor	si, ax
		mov	ax, es:[di+0Ah]
		xchg	ah, al
		cmp	si, ax
		jz	short loc_1CD37

loc_1CD36:				; CODE XREF: sub_1CC89+38j
					; sub_1CC89+45j ...
		stc

loc_1CD37:				; CODE XREF: sub_1CC89+ABj
		pop	ax
		mov	word_251BE, ax
		pop	ax
		mov	word_251C0, ax
		pop	ax
		mov	word_251BA, ax
		pop	ax
		mov	word_251BC, ax
		pop	ax
		mov	word_251D8, ax
		pop	ax
		mov	word_251DA, ax
		retn
sub_1CC89	endp

seg002		ends

; ===========================================================================

; Segment type:	Pure code
seg003		segment	byte public 'CODE' use16
		assume cs:seg003
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_1CD50	proc far		; CODE XREF: sub_1808E+AP
					; sub_1ADC2+68P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		add	ax, 0Fh
		jnb	short loc_1CD5B
		inc	dx

loc_1CD5B:				; CODE XREF: sub_1CD50+8j
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		shr	dx, 1
		rcr	ax, 1
		mov	bx, ax
		mov	ah, 48h
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		jb	short loc_1CD78
		xor	dx, dx
		xchg	ax, dx
		jmp	short loc_1CD7C
; ---------------------------------------------------------------------------

loc_1CD78:				; CODE XREF: sub_1CD50+21j
		xor	dx, dx
		xor	ax, ax

loc_1CD7C:				; CODE XREF: sub_1CD50+26j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CD50	endp


; =============== S U B	R O U T	I N E =======================================


sub_1CD82	proc far		; CODE XREF: sub_1809E+7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	es, ax
		mov	ah, 49h
		int	21h		; DOS -	2+ - FREE MEMORY
					; ES = segment address of area to be freed
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CD82	endp

; ---------------------------------------------------------------------------
		align 10h
seg003		ends

; ===========================================================================

; Segment type:	Pure code
seg004		segment	byte public 'CODE' use16
		assume cs:seg004
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_1CDA0	proc far		; CODE XREF: seg000:936EP
					; sub_1C280+30P ...
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bp, seg	dseg
		mov	ds, bp
		push	ax
		push	bx
		push	cs
		call	near ptr sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	bx
		pop	ax
		mov	cx, ax
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		mov	bx, cx
		and	bx, 0Fh
		add	bx, di
		mov	dx, bx
		mov	bx, es
		add	ax, bx
		xchg	ax, dx
		cmp	ax, 0Fh
		jle	short loc_1CDDF
		and	ax, 0Fh
		inc	dx

loc_1CDDF:				; CODE XREF: sub_1CDA0+39j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CDA0	endp


; =============== S U B	R O U T	I N E =======================================


sub_1CDE5	proc far		; CODE XREF: seg000:9388P
					; sub_1C2FE+46P ...
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bp, seg	dseg
		mov	ds, bp
		push	ax
		push	bx
		push	cs
		call	near ptr sub_1CE29
		mov	es, dx
		mov	di, ax
		pop	bx
		pop	ax
		mov	cx, ax
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		shr	bx, 1
		rcr	ax, 1
		mov	bx, cx
		and	bx, 0Fh
		sub	di, bx
		jnb	short loc_1CE1A
		add	di, 10h
		inc	ax

loc_1CE1A:				; CODE XREF: sub_1CDE5+2Fj
		mov	dx, di
		mov	bx, es
		sub	bx, ax
		mov	ax, bx
		xchg	ax, dx
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CDE5	endp


; =============== S U B	R O U T	I N E =======================================


sub_1CE29	proc far		; CODE XREF: seg000:939CP
					; sub_1B0BD+3EP ...
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, di
		and	di, 0Fh
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	bx, es
		add	ax, bx
		mov	dx, ax
		mov	ax, di
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CE29	endp

; ---------------------------------------------------------------------------
		align 8
seg004		ends

; ===========================================================================

; Segment type:	Pure code
seg005		segment	byte public 'CODE' use16
		assume cs:seg005
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_1CE50	proc far		; CODE XREF: sub_193A4+7P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	word_25A26, ax
		mov	word_25A28, 0
		mov	word_25A2A, 0
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CE50	endp


; =============== S U B	R O U T	I N E =======================================


sub_1CE6F	proc far		; CODE XREF: sub_193B1P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_25A28
		mov	bp, word_25A2A
		mov	ax, bp
		add	ax, 2432h
		xor	ax, bx
		xor	ax, word_25A26
		mov	bp, ax
		ror	ax, 1
		sub	ax, word_25A26
		xor	ax, bx
		add	ax, 1C12h
		xor	ax, bp
		ror	ax, 1
		add	ax, bp
		rcr	ax, 1
		mov	bx, ax
		mov	ax, word_25A26
		add	ax, bp
		xor	ax, 3812h
		xor	ax, bx
		mov	word_25A26, ax
		mov	word_25A28, bx
		mov	word_25A2A, bp
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1CE6F	endp

; ---------------------------------------------------------------------------
		align 4
seg005		ends

; ===========================================================================

; Segment type:	Pure code
seg006		segment	byte public 'CODE' use16
		assume cs:seg006
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		mov	cx, [bp+6]
		shr	cx, 1
		shr	cx, 1
		add	cx, 1
		and	cx, 0FFFEh
		mov	di, [bp+4]
		shr	di, 1
		shr	di, 1
		and	di, 0FFFEh
		sub	cx, di
		add	cx, 1
		shr	cx, 1
		mov	bx, [bp+8]
		and	bx, 0FFFEh
		mov	dx, [bp+0Ah]
		sub	dx, bx
		shr	dx, 1
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	al, 28h	; '('
		mul	bl
		mov	bx, cx
		mov	si, 56E2h
		add	si, di
		add	di, ax
		add	ax, ax
		add	si, ax
		mov	ax, bx
		add	ax, ax
		mov	bp, 50h	; 'P'

loc_1CF08:				; CODE XREF: seg006:0067j
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		add	di, 1000h
		add	si, bp
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		sub	di, 1000h
		add	di, bp
		add	si, bp
		dec	dx
		jnz	short loc_1CF08
		retn
; ---------------------------------------------------------------------------

loc_1CF2A:				; CODE XREF: seg006:00A7j
		mov	ax, es
		mov	bx, es:[di]
		xchg	bh, bl
		ror	bx, 1
		ror	bx, 1
		ror	bx, 1
		ror	bx, 1
		add	ax, bx
		mov	cx, bx
		mov	bx, es:[di+2]
		or	cx, bx
		jz	short locret_1CF69
		xchg	bh, bl
		mov	cx, bx
		and	cx, 0Fh
		add	cx, 800h
		and	bx, 0FFF0h
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		add	ax, bx
		mov	es:[di+2], ax
		mov	es:[di], cx
		add	di, 4
		jmp	short loc_1CF2A
; ---------------------------------------------------------------------------

locret_1CF69:				; CODE XREF: seg006:0083j
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		lds	si, [bp+4]
		les	di, [bp+8]
		assume es:nothing
		mov	ax, [si-4]
		mov	bx, [si-2]
		mul	bx
		shr	ax, 1
		shr	ax, 1
		mov	cx, ax

loc_1CF86:				; CODE XREF: seg006:0178j
		push	cx
		mov	al, es:[di]
		mov	ah, es:[di+2]
		mov	bl, es:[di+4]
		mov	bh, es:[di+6]
		mov	cx, 8
		xor	si, si
		xor	dx, dx

loc_1CF9D:				; CODE XREF: seg006:loc_1CFD0j
		xor	bp, bp
		shl	bh, 1
		rcl	bp, 1
		shl	bl, 1
		rcl	bp, 1
		shl	ah, 1
		rcl	bp, 1
		shl	al, 1
		rcl	bp, 1
		add	bp, 67F9h
		shl	si, 1
		shl	si, 1
		shl	dx, 1
		shl	dx, 1
		cmp	bp, 67F9h
		mov	bp, [bp+0]
		jz	short loc_1CFCB
		and	bp, 3
		or	si, bp
		jmp	short loc_1CFD0
; ---------------------------------------------------------------------------

loc_1CFCB:				; CODE XREF: seg006:0102j
		and	bp, 3
		or	dx, bp

loc_1CFD0:				; CODE XREF: seg006:0109j
		loop	loc_1CF9D
		mov	al, es:[di+1]
		mov	ah, es:[di+3]
		mov	bl, es:[di+5]
		mov	bh, es:[di+7]
		mov	es:[di], si
		not	dx
		mov	es:[di+2], dx
		mov	cx, 8
		xor	si, si
		xor	dx, dx

loc_1CFF2:				; CODE XREF: seg006:loc_1D025j
		xor	bp, bp
		shl	bh, 1
		rcl	bp, 1
		shl	bl, 1
		rcl	bp, 1
		shl	ah, 1
		rcl	bp, 1
		shl	al, 1
		rcl	bp, 1
		add	bp, 67F9h
		shl	si, 1
		shl	si, 1
		shl	dx, 1
		shl	dx, 1
		cmp	bp, 67F9h
		mov	bp, [bp+0]
		jz	short loc_1D020
		and	bp, 3
		or	si, bp
		jmp	short loc_1D025
; ---------------------------------------------------------------------------

loc_1D020:				; CODE XREF: seg006:0157j
		and	bp, 3
		or	dx, bp

loc_1D025:				; CODE XREF: seg006:015Ej
		loop	loc_1CFF2
		mov	es:[di+4], si
		not	dx
		mov	es:[di+6], dx
		add	di, 8
		pop	cx
		dec	cx
		jz	short loc_1D03B
		jmp	loc_1CF86
; ---------------------------------------------------------------------------

loc_1D03B:				; CODE XREF: seg006:0176j
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		lds	si, [bp+4]
		les	di, [bp+8]
		mov	bx, si
		mov	al, [si-4]
		mov	ah, [si-2]
		mul	ah
		shr	ax, 1
		shr	ax, 1
		add	si, ax
		mov	cx, ax

loc_1D062:				; CODE XREF: seg006:01B4j
		push	cx
		mov	ah, [bx]
		inc	bx
		mov	cx, 8

loc_1D069:				; CODE XREF: seg006:01B1j
		xor	al, al
		shl	ah, 1
		jnb	short loc_1D070
		lodsb

loc_1D070:				; CODE XREF: seg006:01ADj
		stosb
		loop	loc_1D069
		pop	cx
		loop	loc_1D062
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		les	di, [bp+4]
		lds	si, [bp+8]
		mov	bx, di
		mov	al, es:[di-4]
		mov	ah, es:[di-2]
		mul	ah
		shr	ax, 1
		shr	ax, 1
		add	di, ax
		mov	cx, ax

loc_1D09F:				; CODE XREF: seg006:0216j
		push	cx
		push	bx
		mov	ax, [si]
		mov	bx, [si+2]
		mov	cx, [si+4]
		mov	dx, [si+6]
		mov	[si+1],	cl
		mov	[si+2],	ah
		mov	[si+3],	ch
		mov	[si+4],	bl
		mov	[si+5],	dl
		mov	[si+6],	bh
		pop	bx
		xor	ax, ax
		mov	cx, 8

loc_1D0C4:				; CODE XREF: seg006:loc_1D0CFj
		shl	ah, 1
		lodsb
		or	al, al
		jz	short loc_1D0CF
		stosb
		or	ah, 1

loc_1D0CF:				; CODE XREF: seg006:0209j
		loop	loc_1D0C4
		mov	es:[bx], ah
		inc	bx
		pop	cx
		loop	loc_1D09F
		mov	si, [bp+4]
		sub	di, si
		mov	ax, di
		xor	dx, dx
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		pop	bp
		retn
; ---------------------------------------------------------------------------
		mov	cx, [bp+6]
		shr	cx, 1
		shr	cx, 1
		add	cx, 1
		and	cx, 0FFFEh
		mov	di, [bp+4]
		shr	di, 1
		shr	di, 1
		and	di, 0FFFEh
		mov	word_26BC5, cx
		sub	cx, di
		mov	word_26BBD, di
		mov	word_26BBF, cx
		mov	di, [bp+8]
		mov	word_26BC1, di
		mov	cx, [bp+0Ah]
		mov	word_26BC7, cx
		sub	cx, di
		mov	word_26BC3, cx
		retn
; ---------------------------------------------------------------------------
		les	bx, [bp+4]
		or	bx, bx
		jz	short locret_1D12C
		call	sub_1D12D

locret_1D12C:				; CODE XREF: seg006:0267j
		retf

; =============== S U B	R O U T	I N E =======================================


sub_1D12D	proc near		; CODE XREF: seg006:0269p
		mov	word ptr dword_26BB9, bx
		mov	si, es
		mov	word ptr dword_26BB9+2,	si
		mov	ax, bx
		or	ax, si
		jz	short locret_1D140
		call	sub_1D141

locret_1D140:				; CODE XREF: sub_1D12D+Ej
		retn
sub_1D12D	endp


; =============== S U B	R O U T	I N E =======================================


sub_1D141	proc near		; CODE XREF: sub_1D12D+10p
		les	bx, dword_26BB9

loc_1D145:				; CODE XREF: sub_1D141+8Fj
		push	es
		les	di, es:[bx]
		mov	ax, es
		or	ax, di
		jz	short loc_1D155
		push	bx
		mov	si, 56E2h
		jmp	short loc_1D15B
; ---------------------------------------------------------------------------

loc_1D155:				; CODE XREF: sub_1D141+Cj
		jmp	short loc_1D1D3
; ---------------------------------------------------------------------------
		align 2

loc_1D158:				; CODE XREF: sub_1D141+20j
					; sub_1D141+64j ...
		jmp	short loc_1D1CB
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_1D15B:				; CODE XREF: sub_1D141+12j
		mov	al, es:[di+0Ah]
		test	al, 80h
		jz	short loc_1D158
		mov	ax, es:[di]
		sub	ax, es:[di+14h]
		mov	bx, ax
		and	bx, 3
		add	bx, bx
		mov	byte_26BEB, bl
		sar	ax, 1
		sar	ax, 1
		mov	word_26BD1, ax
		mov	ax, es:[di+2]
		sub	ax, es:[di+16h]
		mov	word_26BD3, ax
		mov	dx, word_26BC7
		mov	ax, word_26BD3
		cmp	dx, ax
		jle	short loc_1D1C9
		mov	dx, word_26BC5
		mov	ax, word_26BD1
		cmp	dx, ax
		jle	short loc_1D1C9
		mov	dx, ax
		mov	ax, es:[di+10h]
		add	dx, ax
		js	short loc_1D158
		mov	ax, word_26BBD
		cmp	dx, ax
		jle	short loc_1D1C9
		mov	ax, word_26BD3
		mov	dx, ax
		mov	ax, es:[di+12h]
		add	dx, ax
		js	short loc_1D1C9
		mov	ax, word_26BC1
		cmp	dx, ax
		jle	short loc_1D1C9
		push	bx
		push	di
		call	sub_1D2E6
		pop	di
		pop	bx

loc_1D1C9:				; CODE XREF: sub_1D141+4Fj
					; sub_1D141+5Aj ...
		jmp	short loc_1D158
; ---------------------------------------------------------------------------

loc_1D1CB:				; CODE XREF: sub_1D141:loc_1D158j
		pop	bx
		pop	es
		add	bx, 4
		jmp	loc_1D145
; ---------------------------------------------------------------------------

loc_1D1D3:				; CODE XREF: sub_1D141:loc_1D155j
		pop	es
		retn
sub_1D141	endp

; ---------------------------------------------------------------------------
		test	byte ptr es:[di+0Ah], 80h
		jnz	short loc_1D1DF

loc_1D1DC:				; CODE XREF: seg006:0326j seg006:032Cj
		jmp	short loc_1D255
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_1D1DF:				; CODE XREF: seg006:031Aj
		mov	ax, word_26BD1
		add	ax, es:[di+10h]
		js	short loc_1D1DC
		cmp	ax, word_26BBD
		jle	short loc_1D1DC
		mov	ax, word_26BD3
		add	ax, es:[di+12h]
		js	short loc_1D255
		cmp	ax, word_26BC1
		jle	short loc_1D255
		cmp	ax, word_26BD1
		jle	short loc_1D255
		mov	ax, word_26BC7
		cmp	ax, word_26BD3
		jle	short loc_1D255

; =============== S U B	R O U T	I N E =======================================


sub_1D20C	proc near		; CODE XREF: sub_1D2E6p
		mov	byte_26BEC, 0
		mov	word_26BC9, 0
		mov	ax, word_26BBD
		sub	ax, word_26BD1
		jns	short loc_1D227
		neg	ax
		mov	word_26BC9, ax
		xor	ax, ax

loc_1D227:				; CODE XREF: sub_1D20C+12j
		mov	word_26BCF, ax
		and	ax, ax
		jz	short loc_1D233
		or	byte_26BEC, 2

loc_1D233:				; CODE XREF: sub_1D20C+20j
		mov	ax, word_26BC5
		sub	ax, word_26BD1
		js	short loc_1D258
		sub	ax, es:[di+10h]
		js	short loc_1D258
		or	byte_26BEC, 1
		mov	ax, word_26BCF
		neg	ax
		add	ax, es:[di+10h]
		mov	word_26BE5, ax
		jmp	short loc_1D26A
; ---------------------------------------------------------------------------

loc_1D255:				; CODE XREF: seg006:loc_1D1DCj
					; seg006:0335j	...
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_1D258:				; CODE XREF: sub_1D20C+2Ej
					; sub_1D20C+34j
		or	byte_26BEC, 1
		mov	ax, word_26BCF
		neg	ax
		add	ax, word_26BC5
		sub	ax, word_26BD1

loc_1D26A:				; CODE XREF: sub_1D20C+47j
		mov	word_26BE5, ax
		mov	word_26BCB, 0
		mov	ax, word_26BC1
		sub	ax, word_26BD3
		jns	short loc_1D283
		neg	ax
		mov	word_26BCB, ax
		xor	ax, ax

loc_1D283:				; CODE XREF: sub_1D20C+6Ej
		mov	word_26BCD, ax
		mov	ax, word_26BC7
		sub	ax, word_26BD3
		js	short loc_1D2A0
		sub	ax, es:[di+12h]
		js	short loc_1D2A0
		mov	ax, word_26BCD
		neg	ax
		add	ax, es:[di+12h]
		jmp	short loc_1D2AD
; ---------------------------------------------------------------------------

loc_1D2A0:				; CODE XREF: sub_1D20C+81j
					; sub_1D20C+87j
		mov	ax, word_26BCD
		neg	ax
		add	ax, word_26BC7
		sub	ax, word_26BD3

loc_1D2AD:				; CODE XREF: sub_1D20C+92j
		mov	word_26BE7, ax
		mov	ax, word_26BCB
		add	ax, word_26BC1
		test	ax, ax
		jz	short loc_1D2BF
		mov	bl, 50h	; 'P'
		mul	bl

loc_1D2BF:				; CODE XREF: sub_1D20C+ADj
		add	ax, si
		add	ax, word_26BC9
		add	ax, word_26BBD
		mov	word_25A98, ax
		cmp	word_26BE5, 0FFFFh
		jz	short loc_1D2E3
		js	short loc_1D2E3
		test	word_26BE7, 0FFFFh
		jz	short loc_1D2E3
		js	short loc_1D2E3
		or	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_1D2E3:				; CODE XREF: sub_1D20C+C5j
					; sub_1D20C+C7j ...
		jmp	loc_1D255
sub_1D20C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1D2E6	proc near		; CODE XREF: sub_1D141+83p
		call	sub_1D20C
		mov	ax, word_26BCD
		test	ax, ax
		jz	short loc_1D2F6
		mov	bl, es:[di+10h]
		mul	bl

loc_1D2F6:				; CODE XREF: sub_1D2E6+8j
		add	ax, word_26BCF
		mov	word_25A96, ax
		mov	ax, word_26BE7
		mov	word_26BE7, ax
		mov	ax, word_26BE5
		mov	dx, es:[di+10h]
		mov	word_26BE1, dx
		mov	cx, 50h	; 'P'
		mov	word_26BE3, cx
		mov	word_26BE5, ax
		les	di, [di+0Ch]
		mov	ax, es
		mov	word_26BD7, ax
		sub	ax, [di+8]
		add	ax, word_25A9C
		mov	word_26BDB, ax
		add	di, word_25A96
		mov	word_26BD5, di
		mov	word_26BD9, di
		mov	si, word_25A98
		mov	word_26BDD, si
		mov	ax, ds
		mov	word_26BDF, ax
		mov	si, 6825h
		push	es
		push	di
		call	loc_1D34E
		pop	di
		pop	es
		retn
sub_1D2E6	endp

; ---------------------------------------------------------------------------

loc_1D34E:				; CODE XREF: sub_1D2E6+62p
		mov	ax, [si+12h]
		dec	ax
		mov	cs:word_200D3, ax
		mov	al, [si+17h]
		mov	cs:byte_200D5, al
		mov	bx, [si+0Ch]
		mov	ax, [si+10h]
		sub	bx, ax
		mov	cs:word_200D1, bx
		mov	bx, [si+0Eh]
		sub	bx, ax
		mov	cs:word_200CF, bx
		test	ax, 1
		mov	bx, 522h
		jnz	short loc_1D37F
		mov	bx, 53Eh

loc_1D37F:				; CODE XREF: seg006:04BAj
		mov	cs:word_1D3DE, bx
		test	ax, 1
		mov	bx, 8BAh
		jnz	short loc_1D38F
		mov	bx, 8D6h

loc_1D38F:				; CODE XREF: seg006:04CAj
		mov	cs:word_1D776, bx
		xchg	ax, bx
		and	bx, 0FFFEh
		mov	ax, cs:[bx+3217h]
		mov	cs:word_1D3FF, ax
		mov	ax, cs:[bx+324Fh]
		mov	cs:word_1D797, ax
		push	cs:word_200D3
		push	ds
		push	si
		les	bp, [si+4]
		mov	bl, [si+16h]
		mov	cl, bl
		xor	bh, bh
		mov	di, cs:[bx+3287h]
		lds	si, [si+8]
		mov	dx, di
		not	dx
		mov	al, cs:byte_200D5
		test	al, 2
		jz	short near ptr byte_1D3DD
		mov	dl, es:[bp-1]
		mov	dh, 0FFh
		ror	dx, cl
		not	di
		and	dx, di
		not	di
; ---------------------------------------------------------------------------
byte_1D3DD	db 0B8h			; CODE XREF: seg006:050Dj
word_1D3DE	dw 0			; DATA XREF: seg006:loc_1D37Fw
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		db 26h,	8Ah, 66h, 0, 0B0h, 0FFh, 0D3h, 0C8h, 8Bh, 0D8h
		db 23h,	0C7h, 0Bh, 0C2h, 20h, 24h, 46h,	45h, 0F7h, 0D7h
		db 86h,	0FBh, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h,	0B8h
word_1D3FF	dw 0			; DATA XREF: seg006:04DDw
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		db 26h,	8Bh, 46h, 0, 86h, 0C4h,	0D3h, 0C8h, 8Bh, 0D8h
		db 23h,	0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h
		db 8Bh,	0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h, 4
		db 2 dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 86h, 0C4h, 0D3h
		db 0C8h, 8Bh, 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 21h
		db 4, 2	dup(46h), 2 dup(45h), 0F7h, 0D7h, 23h, 0DFh, 8Bh
		db 0D3h, 0F7h, 0D7h, 2Eh, 0A0h,	15h, 32h, 24h, 1, 75h
		db 4, 0Bh, 0D7h, 20h, 34h, 2Eh,	0FFh, 0Eh, 13h,	32h, 78h
		db 0Dh,	2Eh, 3,	2Eh, 11h, 32h, 2Eh, 3, 36h, 0Fh, 32h, 0E9h
		db 76h,	0FCh, 5Eh, 1Fh,	2Eh, 8Fh, 6, 13h, 32h, 8Ah, 4Ch
		db 16h,	0C4h, 2Ch, 0C5h, 74h, 8, 0BAh, 2 dup(0), 2Eh, 0A0h
		db 15h,	32h, 0A8h, 2, 74h, 0Eh,	26h, 8Ah, 56h, 0FFh, 32h
		db 0F6h, 0D3h, 0CAh, 0F7h, 0D7h, 23h, 0D7h, 0F7h, 0D7h
		db 0B8h
word_1D776	dw 0			; DATA XREF: seg006:loc_1D38Fw
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		db 26h,	8Ah, 66h, 0, 32h, 0C0h,	0D3h, 0C8h, 8Bh, 0D8h
		db 23h,	0C7h, 0Bh, 0C2h, 8, 24h, 46h, 45h, 0F7h, 0D7h
		db 86h,	0FBh, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h,	0B8h
word_1D797	dw 0			; DATA XREF: seg006:04E6w
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		db 26h,	8Bh, 46h, 0, 86h, 0C4h,	0D3h, 0C8h, 8Bh, 0D8h
		db 23h,	0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2	dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh, 0D8h, 23h, 0C7h
		db 0Bh,	0C2h, 86h, 0C4h, 9, 4, 2 dup(46h), 2 dup(45h)
		db 0F7h, 0D7h, 23h, 0DFh, 8Bh, 0D3h, 0F7h, 0D7h, 26h, 8Bh
		db 46h,	0, 86h,	0C4h, 0D3h, 0C8h
		db 8Bh,	0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4, 2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 86h,	0C4h, 0D3h, 0C8h, 8Bh
		db 0D8h, 23h, 0C7h, 0Bh, 0C2h, 86h, 0C4h, 9, 4,	2 dup(46h)
		db 2 dup(45h), 0F7h, 0D7h, 23h,	0DFh, 8Bh, 0D3h, 0F7h
		db 0D7h, 2Eh, 0A0h, 15h, 32h, 24h, 1, 75h, 2, 8, 34h, 2Eh
		db 0FFh, 0Eh, 13h, 32h,	78h, 0Dh, 2Eh, 3, 2Eh, 11h, 32h
		db 2Eh,	3, 36h,	0Fh, 32h, 0E9h,	79h, 0FCh, 0C3h
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1DFA1

loc_1DAE4:				; CODE XREF: sub_1DFA1+E4j
		push	ax
		mov	ax, 3
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		pop	ax
		mov	dl, al
		mov	ah, 2
		int	21h		; DOS -	DISPLAY	OUTPUT
					; DL = character to send to standard output
		int	20h		; DOS -	PROGRAM	TERMINATION
; END OF FUNCTION CHUNK	FOR sub_1DFA1	; returns to DOS--identical to INT 21/AH=00h
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------

loc_1DAF4:				; CODE XREF: seg006:0C74j
		mov	ax, es
		mov	bx, es:[di]
		xchg	bh, bl
		ror	bx, 1
		ror	bx, 1
		ror	bx, 1
		ror	bx, 1
		add	ax, bx
		mov	cx, bx
		mov	bx, es:[di+2]
		or	cx, bx
		jz	short locret_1DB36
		xchg	bh, bl
		mov	cx, bx
		and	cx, 0Fh
		add	cx, 800h
		and	bx, 0FFF0h
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		add	ax, bx
		mov	es:[di+2], ax
		mov	es:[di], cx
		call	sub_1DB37
		add	di, 4
		jmp	short loc_1DAF4
; ---------------------------------------------------------------------------

locret_1DB36:				; CODE XREF: seg006:0C4Dj
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1DB37	proc near		; CODE XREF: seg006:0C6Ep
		push	ds
		push	di
		push	si
		push	ax
		push	cx
		mov	ax, word_257CD
		mov	cs:word_1DCAD, ax
		lds	di, es:[di]
		mov	cx, [di-2]
		xchg	ch, cl
		mov	[di-2],	cx
		and	cx, cx
		js	short loc_1DB56
		jz	short loc_1DB56
		jmp	short loc_1DB59
; ---------------------------------------------------------------------------

loc_1DB56:				; CODE XREF: sub_1DB37+19j
					; sub_1DB37+1Bj ...
		jmp	loc_1DCA7
; ---------------------------------------------------------------------------

loc_1DB59:				; CODE XREF: sub_1DB37+1Dj
		mov	ax, [di-4]
		xchg	ah, al
		mov	[di-4],	ax
		mov	ax, [di-6]
		xchg	ah, al
		mov	[di-6],	ax
		mov	ax, [di-8]
		xchg	ah, al
		mov	[di-8],	ax
		mov	ax, [di-0Ch]
		xchg	ah, al
		mov	[di-0Ch], ax
		mov	ax, [di-0Ah]
		xchg	al, ah
		mov	[di-0Ah], ax
		and	al, 0C0h
		jnz	short loc_1DB56
		mov	si, di
		mov	ax, cs:word_1DCAD
		cmp	ax, 0
		jz	short loc_1DB93
		jmp	loc_1DC6C
; ---------------------------------------------------------------------------

loc_1DB93:				; CODE XREF: sub_1DB37+57j
					; sub_1DB37:loc_1DC69j
		mov	ax, [di-4]
		shr	ax, 1
		shr	ax, 1
		mov	dx, ax
		and	dx, dx
		js	short loc_1DB56
		jz	short loc_1DB56

loc_1DBA2:				; CODE XREF: sub_1DB37:loc_1DC66j
		mov	al, [si+2]
		mov	ah, [si+1]
		mov	[si+1],	al
		mov	al, [si+4]
		mov	[si+4],	ah
		mov	[si+2],	al
		mov	al, [si+6]
		mov	ah, [si+3]
		mov	[si+3],	al
		mov	al, [si+5]
		mov	[si+5],	ah
		mov	[si+6],	al
		mov	ax, [si]
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		xchg	bh, bl
		mov	[si], bx
		mov	ax, [si+4]
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		shl	al, 1
		rcl	bx, 1
		shl	ah, 1
		rcl	bx, 1
		xchg	bh, bl
		mov	[si+4],	bx
		xor	ax, ax
		mov	[si+2],	ax
		mov	[si+6],	ax
		add	si, 8
		dec	dx
		jnz	short loc_1DC66
		loop	loc_1DC69
		jmp	short loc_1DCA7
; ---------------------------------------------------------------------------

loc_1DC66:				; CODE XREF: sub_1DB37+129j
		jmp	loc_1DBA2
; ---------------------------------------------------------------------------

loc_1DC69:				; CODE XREF: sub_1DB37+12Bj
		jmp	loc_1DB93
; ---------------------------------------------------------------------------

loc_1DC6C:				; CODE XREF: sub_1DB37+59j
					; sub_1DB37+16Ej
		mov	ax, [di-4]
		shr	ax, 1
		shr	ax, 1
		mov	dx, ax
		and	dx, dx
		js	short loc_1DCA7
		jz	short loc_1DCA7

loc_1DC7B:				; CODE XREF: sub_1DB37+16Cj
		mov	al, [si+2]
		mov	ah, [si+1]
		mov	[si+1],	al
		mov	al, [si+4]
		mov	[si+4],	ah
		mov	[si+2],	al
		mov	al, [si+6]
		mov	ah, [si+3]
		mov	[si+3],	al
		mov	al, [si+5]
		mov	[si+5],	ah
		mov	[si+6],	al
		add	si, 8
		dec	dx
		jnz	short loc_1DC7B
		loop	loc_1DC6C

loc_1DCA7:				; CODE XREF: sub_1DB37:loc_1DB56j
					; sub_1DB37+12Dj ...
		pop	cx
		pop	ax
		pop	si
		pop	di
		pop	ds
		retn
sub_1DB37	endp

; ---------------------------------------------------------------------------
word_1DCAD	dw 0			; DATA XREF: sub_1DB37+8w
					; sub_1DB37+50r ...

; =============== S U B	R O U T	I N E =======================================


sub_1DCAF	proc near
		mov	ax, [bp+4]
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FFFEh
		mov	word_26BBD, ax
		mov	dx, [bp+8]
		inc	dx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		and	dx, 0FFFEh
		mov	word_26BBF, dx
		sub	dx, ax
		mov	word_26BC5, dx
		mov	ax, [bp+6]
		mov	word_26BC1, ax
		mov	dx, [bp+0Ah]
		mov	word_26BC3, dx
		sub	dx, ax
		mov	word_26BC7, dx
		retn
sub_1DCAF	endp


; =============== S U B	R O U T	I N E =======================================


sub_1DCE9	proc near
		les	bx, [bp+4]
		or	bx, bx
		jz	short locret_1DCF3
		call	sub_1DCF4

locret_1DCF3:				; CODE XREF: sub_1DCE9+5j
		retn
sub_1DCE9	endp


; =============== S U B	R O U T	I N E =======================================


sub_1DCF4	proc near		; CODE XREF: sub_1DCE9+7p
		mov	word ptr dword_26BB9, bx
		mov	si, es
		mov	word ptr dword_26BB9+2,	si
		mov	ax, bx
		or	ax, si
		jz	short locret_1DD07
		call	sub_1DD08

locret_1DD07:				; CODE XREF: sub_1DCF4+Ej
		retn
sub_1DCF4	endp


; =============== S U B	R O U T	I N E =======================================


sub_1DD08	proc near		; CODE XREF: sub_1DCF4+10p
		les	bx, dword_26BB9

loc_1DD0C:				; CODE XREF: sub_1DD08+B4j
		push	es
		les	di, es:[bx]
		mov	ax, es
		or	ax, di
		jz	short loc_1DD19
		push	bx
		jmp	short loc_1DD1F
; ---------------------------------------------------------------------------

loc_1DD19:				; CODE XREF: sub_1DD08+Cj
		jmp	loc_1DDBF
; ---------------------------------------------------------------------------

loc_1DD1C:				; CODE XREF: sub_1DD08+1Dj
					; sub_1DD08+71j ...
		jmp	loc_1DDB7
; ---------------------------------------------------------------------------

loc_1DD1F:				; CODE XREF: sub_1DD08+Fj
		mov	al, es:[di+0Ah]
		test	al, 80h
		jz	short loc_1DD1C
		mov	ax, es:[di]
		test	byte ptr es:[di+0Ah], 20h
		jz	short loc_1DD41
		mov	bx, es:[di+10h]
		shl	bx, 1
		shl	bx, 1
		sub	ax, bx
		add	ax, es:[di+14h]
		jmp	short loc_1DD45
; ---------------------------------------------------------------------------

loc_1DD41:				; CODE XREF: sub_1DD08+27j
		sub	ax, es:[di+14h]

loc_1DD45:				; CODE XREF: sub_1DD08+37j
		test	byte ptr es:[di+0Ah], 1
		jz	short loc_1DD52
		add	ax, 4
		and	ax, 0FFF8h

loc_1DD52:				; CODE XREF: sub_1DD08+42j
		mov	bx, ax
		and	bx, 7
		mov	cs:byte_200D6, bl
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	word_26BD1, ax
		mov	ax, es:[di+2]
		sub	ax, es:[di+16h]
		mov	word_26BD3, ax
		mov	dx, word_26BC3
		mov	ax, word_26BD3
		cmp	dx, ax
		jle	short loc_1DD1C
		mov	dx, word_26BBF
		mov	ax, word_26BD1
		cmp	dx, ax
		jle	short loc_1DD1C
		mov	dx, ax
		mov	ax, es:[di+10h]
		shr	ax, 1
		add	dx, ax
		js	short loc_1DD1C
		mov	ax, word_26BBD
		cmp	dx, ax
		jl	short loc_1DD1C
		mov	ax, word_26BD3
		mov	dx, ax
		mov	ax, es:[di+12h]
		add	dx, ax
		js	short loc_1DDB7
		mov	ax, word_26BC1
		cmp	dx, ax
		jl	short loc_1DDB7
		push	bx
		push	di
		call	sub_1DEFD
		pop	di
		pop	bx
		jmp	loc_1DD1C
; ---------------------------------------------------------------------------

loc_1DDB7:				; CODE XREF: sub_1DD08:loc_1DD1Cj
					; sub_1DD08+9Cj ...
		pop	bx
		pop	es
		add	bx, 4
		jmp	loc_1DD0C
; ---------------------------------------------------------------------------

loc_1DDBF:				; CODE XREF: sub_1DD08:loc_1DD19j
		pop	es
		retn
sub_1DD08	endp

; ---------------------------------------------------------------------------
		test	byte ptr es:[di+0Ah], 80h
		jnz	short loc_1DDCB

loc_1DDC8:				; CODE XREF: seg006:0F15j seg006:0F1Bj ...
		jmp	loc_1DE5E
; ---------------------------------------------------------------------------

loc_1DDCB:				; CODE XREF: seg006:0F06j
		mov	ax, es:[di+10h]
		shr	ax, 1
		add	ax, word_26BD1
		js	short loc_1DDC8
		cmp	ax, word_26BBD
		jle	short loc_1DDC8
		mov	ax, es:[di+12h]
		cmp	ax, 64h	; 'd'
		jge	short loc_1DDC8
		add	ax, word_26BD3
		js	short loc_1DE5E
		nop
		nop
		nop
		cmp	ax, word_26BC1
		jle	short loc_1DE5E
		nop
		nop
		nop
		mov	ax, word_26BBF
		cmp	ax, word_26BD1
		jle	short loc_1DE5E
		mov	ax, word_26BC1
		add	ax, word_26BC3
		js	short loc_1DE5E
		cmp	ax, word_26BD3
		jle	short loc_1DE5E

; =============== S U B	R O U T	I N E =======================================


sub_1DE10	proc near		; CODE XREF: sub_1DEFDp
		mov	byte_26BEC, 0
		mov	word_26BC9, 0
		mov	ax, word_26BBD
		sub	ax, word_26BD1
		jns	short loc_1DE2B
		neg	ax
		mov	word_26BC9, ax
		xor	ax, ax

loc_1DE2B:				; CODE XREF: sub_1DE10+12j
		mov	word_26BCF, ax
		and	ax, ax
		jz	short loc_1DE37
		or	byte_26BEC, 2

loc_1DE37:				; CODE XREF: sub_1DE10+20j
		mov	ax, word_26BBF
		sub	ax, word_26BD1
		js	short loc_1DE61
		mov	bx, es:[di+10h]
		shr	bx, 1
		inc	bx
		sub	ax, bx
		js	short loc_1DE61
		mov	ax, es:[di+10h]
		shr	ax, 1
		sub	ax, word_26BCF
		jns	short loc_1DE59
		xor	ax, ax

loc_1DE59:				; CODE XREF: sub_1DE10+45j
		mov	word_26BE5, ax
		jmp	short loc_1DE73
; ---------------------------------------------------------------------------

loc_1DE5E:				; CODE XREF: seg006:loc_1DDC8j
					; seg006:0F2Aj	...
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_1DE61:				; CODE XREF: sub_1DE10+2Ej
					; sub_1DE10+39j
		mov	ax, word_26BCF
		neg	ax
		add	ax, word_26BBF
		sub	ax, word_26BD1
		or	byte_26BEC, 1

loc_1DE73:				; CODE XREF: sub_1DE10+4Cj
		mov	word_26BE5, ax
		mov	word_26BCB, 0
		mov	ax, word_26BC1
		sub	ax, word_26BD3
		jns	short loc_1DE8C
		neg	ax
		mov	word_26BCB, ax
		xor	ax, ax

loc_1DE8C:				; CODE XREF: sub_1DE10+73j
		mov	word_26BCD, ax
		mov	ax, word_26BC1
		add	ax, word_26BC7
		sub	ax, word_26BD3
		js	short loc_1DEAD
		sub	ax, es:[di+12h]
		js	short loc_1DEAD
		mov	ax, word_26BCD
		neg	ax
		add	ax, es:[di+12h]
		jmp	short loc_1DEBE
; ---------------------------------------------------------------------------

loc_1DEAD:				; CODE XREF: sub_1DE10+8Aj
					; sub_1DE10+90j
		mov	ax, word_26BCD
		neg	ax
		add	ax, word_26BC1
		add	ax, word_26BC7
		sub	ax, word_26BD3

loc_1DEBE:				; CODE XREF: sub_1DE10+9Bj
		mov	word_26BE7, ax
		mov	ax, word_26BCB
		add	ax, word_26BC1
		test	ax, ax
		jz	short loc_1DED0
		mov	bl, 28h	; '('
		mul	bl

loc_1DED0:				; CODE XREF: sub_1DE10+BAj
		add	ax, word_25A92
		add	ax, word_26BC9
		add	ax, word_26BBD
		mov	word_25A98, ax
		mov	ax, word_26BE5
		and	ax, ax
		jz	short loc_1DEFA
		js	short loc_1DEFA
		mov	ax, word_26BE7
		and	ax, ax
		jz	short loc_1DEFA
		js	short loc_1DEFA
		cmp	ax, 64h	; 'd'
		jge	short loc_1DEFA
		or	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_1DEFA:				; CODE XREF: sub_1DE10+D4j
					; sub_1DE10+D6j ...
		jmp	loc_1DE5E
sub_1DE10	endp


; =============== S U B	R O U T	I N E =======================================


sub_1DEFD	proc near		; CODE XREF: sub_1DD08+A7p
		call	sub_1DE10
		mov	ax, word_26BCD
		test	ax, ax
		jz	short loc_1DF0F
		mov	bl, es:[di+10h]
		add	bl, bl
		mul	bl

loc_1DF0F:				; CODE XREF: sub_1DEFD+8j
		add	ax, word_26BCF
		add	ax, word_26BCF
		add	ax, word_26BCF
		add	ax, word_26BCF
		mov	word_25A96, ax
		mov	ax, word_26BE5
		mov	dx, es:[di+10h]
		shr	dx, 1
		mov	cl, 28h	; '('
		sub	cl, al
		xor	ch, ch
		mov	dh, ch
		mov	byte_26BEA, 0
		jmp	short loc_1DF66
; ---------------------------------------------------------------------------
		mov	ax, word_26BCD
		test	ax, ax
		jz	short loc_1DF47
		mov	bl, es:[di+10h]
		mul	bl

loc_1DF47:				; CODE XREF: sub_1DEFD+42j
		add	ax, word_26BCF
		add	ax, word_26BCF
		mov	word_25A96, ax
		mov	ax, word_26BE5
		mov	dx, es:[di+10h]
		shr	dx, 1
		mov	cl, 28h	; '('
		sub	cl, al
		xor	ch, ch
		mov	byte_26BEA, 1

loc_1DF66:				; CODE XREF: sub_1DEFD+3Bj
		push	es
		push	di
		mov	al, cs:byte_200D6
		mov	byte_26BEB, al
		les	bp, es:[di+0Ch]
		add	bp, word_25A96
		mov	word_26BD5, bp
		mov	ax, es
		mov	word_26BD7, ax
		mov	si, word_25A98
		mov	word_26BDD, si
		mov	ax, word_25A94
		mov	word_26BDF, ax
		mov	word_26BE3, 28h	; '('
		mov	word_26BE1, dx
		mov	si, 6825h
		call	sub_1DFA1
		pop	di
		pop	es
		retn
sub_1DEFD	endp


; =============== S U B	R O U T	I N E =======================================


sub_1DFA1	proc near		; CODE XREF: sub_1DEFD+9Ep

; FUNCTION CHUNK AT 0C24 SIZE 0000000F BYTES

		push	ds
		mov	al, [si+17h]
		mov	cs:byte_200D5, al
		mov	al, [si+16h]
		mov	cs:byte_200D6, al
		mov	ax, [si+12h]
		dec	ax
		mov	cs:word_200D3, ax
		jns	short loc_1DFBD
		jmp	loc_1EFF9
; ---------------------------------------------------------------------------

loc_1DFBD:				; CODE XREF: sub_1DFA1+17j
		mov	bx, [si+10h]
		mov	ax, [si+0Eh]
		sub	ax, bx
		mov	cs:word_200CF, ax
		mov	cx, [si+0Ch]
		sub	cx, bx
		mov	al, [si+15h]
		push	dx
		push	ax
		mov	dx, 3CEh
		mov	al, 5
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1DFDB:				; CODE XREF: sub_1DFA1+38j
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1DFDD:				; CODE XREF: sub_1DFA1:loc_1DFDBj
		inc	dx
		mov	al, 0
		out	dx, al		; EGA port: graphics controller	data register
		pop	ax
		pop	dx
		push	dx
		push	ax
		mov	dx, 3CEh
		mov	al, 3
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; data rotate and function select for write mode 00. Bits:
					; 0-2: set rotate count	for write mode 00
					; 3-4: fn for write modes 00 and 02
					;      00=no change; 01=AND; 10=OR; 11=XOR
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1DFED:				; CODE XREF: sub_1DFA1+4Aj
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1DFEF:				; CODE XREF: sub_1DFA1:loc_1DFEDj
		inc	dx
		mov	al, 0
		out	dx, al		; EGA port: graphics controller	data register
		pop	ax
		pop	dx
		push	dx
		push	ax
		mov	dx, 3C4h
		mov	al, 2
		out	dx, al		; EGA: sequencer address reg
					; map mask: data bits 0-3 enable writes	to bit planes 0-3
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1DFFF:				; CODE XREF: sub_1DFA1+5Cj
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_1E001:				; CODE XREF: sub_1DFA1:loc_1DFFFj
		inc	dx
		mov	al, 0Fh
		out	dx, al		; EGA port: sequencer data register
		pop	ax
		pop	dx
		add	bx, bx
		xor	ah, ah
		add	ax, ax
		mov	dx, ax
		add	ax, ax
		add	ax, dx
		mov	bp, 328Fh
		add	bp, ax
		mov	dx, cs:[bp+4]
		mov	di, cs:[bp+0]
		mov	ax, cs:[bx+di]
		mov	cs:word_1F4A2, ax
		mov	ax, cs:[bp+2]
		push	ax
		push	bx
		mov	al, cs:byte_200CE
		mov	bx, 11DAh
		and	al, 40h
		jz	short loc_1E03B
		mov	bx, 11E2h

loc_1E03B:				; CODE XREF: sub_1DFA1+95j
		mov	ax, cs:[bx]
		mov	cs:word_1E095, ax
		mov	al, cs:[bx+2]
		mov	cs:byte_1E097, al
		mov	al, cs:[bx+4]
		mov	cs:byte_1E098, al
		mov	al, cs:[bx+6]
		mov	cs:byte_1E099, al
		pop	bx
		pop	ax
		les	bp, [si]
		lds	si, [si+8]
		mov	bl, cs:byte_200D6
		xor	bh, bh
		add	bx, bx
		mov	di, cs:[bx+3325h]
		cmp	dx, 4
		jz	short loc_1E08A
		cmp	dx, 2
		jz	short loc_1E08C
		cmp	dx, 1
		jz	short loc_1E088
		cmp	dx, 3
		jz	short loc_1E088

loc_1E083:				; CODE XREF: sub_1DFA1:loc_1E088j
		mov	ah, 1
		jmp	loc_1DAE4
; ---------------------------------------------------------------------------

loc_1E088:				; CODE XREF: sub_1DFA1+DBj
					; sub_1DFA1+E0j
		jmp	short loc_1E083
; ---------------------------------------------------------------------------

loc_1E08A:				; CODE XREF: sub_1DFA1+D1j
		add	cx, cx

loc_1E08C:				; CODE XREF: sub_1DFA1+D6j
		add	cx, cx
		mov	cs:word_200D1, cx
		jmp	ax
; ---------------------------------------------------------------------------
word_1E095	dw 0			; DATA XREF: sub_1DFA1+9Dw
byte_1E097	db 0			; DATA XREF: sub_1DFA1+A5w
byte_1E098	db 0			; DATA XREF: sub_1DFA1+ADw
byte_1E099	db 0			; DATA XREF: sub_1DFA1+B5w
		db 2, 1, 2, 0, 4, 0, 8,	0, 2, 1, 2, 0, 8, 0, 4,	0, 26h
		db 8Bh,	46h, 0,	26h, 8Bh, 56h, 2, 83h, 0C5h, 4,	51h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h
		db 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh
		db 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh, 3, 0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh
		db 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh,	23h, 0CFh
		db 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h,	2, 83h
		db 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h,	0C8h, 0D3h
		db 0CAh, 59h, 50h, 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h
		db 0Bh,	0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh
		db 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h
		db 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h, 1Ch
		db 2Eh,	0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h
		db 11h,	0EEh, 88h, 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h
		db 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h,	0FBh, 86h, 0E9h
		db 23h,	0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0
		db 26h,	8Bh, 56h, 2, 83h, 0C5h,	4, 51h,	2Eh, 8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh
		db 59h,	50h, 52h, 23h, 0C7h, 23h, 0D7h,	0Bh, 0D8h, 0Bh
		db 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh,	0CEh, 3
		db 0B0h, 8, 0EFh, 0BAh,	0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h
		db 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h, 1Ch
		db 2Eh,	0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h
		db 11h,	0EEh, 88h, 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h
		db 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h,	0FBh, 86h, 0E9h
		db 23h,	0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0
		db 26h,	8Bh, 56h, 2, 83h, 0C5h,	4, 51h,	2Eh, 8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h, 0Bh
		db 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 46h,	59h, 5Bh, 0F7h,	0D7h, 86h, 0FBh, 86h, 0E9h, 23h
		db 0DFh, 23h, 0CFh, 0F7h, 0D7h,	26h, 8Bh, 46h, 0, 26h
		db 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh, 16h
		db 32h,	0D3h, 0C8h, 0D3h, 0CAh,	59h, 50h, 52h, 23h, 0C7h
		db 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h
		db 0Ah,	0E0h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah
		db 24h,	88h
		db 1Ch,	2Eh, 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h
		db 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h, 11h, 0EEh
		db 88h,	2Ch, 46h, 59h, 5Bh, 0F7h, 0D7h,	86h, 0FBh, 86h
		db 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h,	8Bh, 46h
		db 0, 26h, 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h, 0Bh
		db 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 46h,	59h, 5Bh, 0F7h,	0D7h, 86h, 0FBh, 86h, 0E9h, 23h
		db 0DFh, 23h, 0CFh, 0F7h, 0D7h,	26h, 8Bh, 46h, 0, 26h
		db 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh, 16h
		db 32h,	0D3h, 0C8h, 0D3h, 0CAh,	59h, 50h, 52h, 23h, 0C7h
		db 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h
		db 0Ah,	0E0h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah
		db 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h,	0EEh, 88h, 3Ch
		db 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h
		db 11h,	0EEh, 88h, 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h
		db 0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h,	0D7h, 26h
		db 8Bh,	46h, 0,	26h, 8Bh, 56h, 2, 83h, 0C5h, 4,	51h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h
		db 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh
		db 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh, 3, 0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh
		db 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh,	23h, 0CFh
		db 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h, 0Bh
		db 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 46h,	59h, 5Bh, 0F7h,	0D7h, 86h, 0FBh, 86h, 0E9h, 23h
		db 0DFh, 23h, 0CFh, 0F7h, 0D7h,	26h, 8Bh, 46h, 0, 26h
		db 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh, 16h
		db 32h,	0D3h, 0C8h, 0D3h, 0CAh,	59h, 50h, 52h, 23h, 0C7h
		db 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h
		db 0Ah,	0E0h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah
		db 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h,	0EEh, 88h, 3Ch
		db 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h
		db 11h,	0EEh, 88h, 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h
		db 0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h,	0D7h, 26h
		db 8Bh,	46h, 0,	26h, 8Bh, 56h, 2, 83h, 0C5h, 4,	51h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h
		db 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh
		db 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh, 3, 0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh
		db 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh,	23h, 0CFh
		db 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h,	2, 83h
		db 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h,	0C8h, 0D3h
		db 0CAh, 59h, 50h, 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h
		db 0Bh,	0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh
		db 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah
		db 0E0h, 0BAh, 0CEh, 3,	0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh
		db 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h
		db 1Ch,	2Eh, 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h
		db 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h, 11h, 0EEh
		db 88h,	2Ch, 46h, 59h, 5Bh, 0F7h, 0D7h,	86h, 0FBh, 86h
		db 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h,	8Bh, 46h
		db 0, 26h, 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h, 0Bh
		db 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 46h,	59h, 5Bh, 0F7h,	0D7h, 86h, 0FBh, 86h, 0E9h, 23h
		db 0DFh, 23h, 0CFh, 0F7h, 0D7h,	26h, 8Bh, 46h, 0, 26h
		db 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh, 16h
		db 32h,	0D3h, 0C8h, 0D3h, 0CAh,	59h, 50h, 52h, 23h, 0C7h
		db 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h
		db 0Ah,	0E0h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah
		db 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h,	0EEh, 88h, 3Ch
		db 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h
		db 11h,	0EEh, 88h, 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h
		db 0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h,	0D7h, 26h
		db 8Bh,	46h, 0,	26h, 8Bh, 56h, 2, 83h, 0C5h, 4,	51h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h
		db 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh
		db 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh, 3, 0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh
		db 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh, 0F7h
		db 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h
		db 0D7h, 26h, 8Bh, 46h,	0, 26h,	8Bh, 56h, 2, 83h, 0C5h
		db 4, 51h, 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh
		db 59h,	50h, 52h, 23h, 0C7h, 23h, 0D7h,	0Bh, 0D8h, 0Bh
		db 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh,	0CEh, 3
		db 0B0h, 8, 0EFh, 0BAh,	0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h
		db 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h, 1Ch
		db 2Eh,	0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h
		db 11h,	0EEh, 88h, 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h
		db 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h,	0FBh, 86h, 0E9h
		db 23h,	0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0
		db 26h,	8Bh, 56h, 2, 83h, 0C5h,	4, 51h,	2Eh, 8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah,	0C4h, 42h, 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h
		db 11h,	0EEh, 88h, 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h
		db 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h
		db 5Bh,	0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh, 23h
		db 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h, 2
		db 83h,	0C5h, 4, 51h, 2Eh, 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h
		db 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h, 0Bh
		db 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 46h,	59h, 5Bh, 0F7h,	0D7h, 86h, 0FBh, 86h, 0E9h, 23h
		db 0DFh, 23h, 0CFh, 0F7h, 0D7h,	26h, 8Bh, 46h, 0, 26h
		db 8Bh,	56h, 2,	83h, 0C5h, 4, 51h, 2Eh,	8Ah, 0Eh, 16h
		db 32h,	0D3h, 0C8h, 0D3h, 0CAh,	59h, 50h, 52h, 23h, 0C7h
		db 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h
		db 0Ah,	0E0h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah
		db 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h,	0EEh, 88h, 3Ch
		db 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h, 0D9h
		db 11h,	0EEh, 88h, 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h
		db 0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h,	0D7h, 26h
		db 8Bh,	46h, 0,	26h, 8Bh, 56h, 2, 83h, 0C5h, 4,	51h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h
		db 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh
		db 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh, 3, 0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h, 0D5h, 11h, 0EFh, 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh
		db 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh,	23h, 0CFh
		db 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h,	2, 83h
		db 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h,	0C8h, 0D3h
		db 0CAh, 59h, 50h, 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h
		db 0Bh,	0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh
		db 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h
		db 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h, 1Ch
		db 2Eh,	0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h
		db 11h,	0EEh, 88h, 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h
		db 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h,	0FBh, 86h, 0E9h
		db 23h,	0DFh, 23h, 0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0
		db 26h,	8Bh, 56h, 2, 83h, 0C5h,	4, 51h,	2Eh, 8Ah, 0Eh
		db 16h,	32h, 0D3h, 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h
		db 0C7h, 23h, 0D7h, 0Bh, 0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh
		db 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h, 0EFh,	8Ah, 0C4h, 42h
		db 8Ah,	24h, 88h, 1Ch, 2Eh, 0A0h, 0D7h,	11h, 0EEh, 88h
		db 3Ch,	2Eh, 0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch, 2Eh, 0A0h
		db 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h,	5Bh, 0F7h, 0D7h
		db 86h,	0FBh, 86h, 0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h
		db 26h,	8Bh, 46h, 0, 26h, 8Bh, 56h, 2, 83h, 0C5h, 4, 51h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D3h, 0C8h,	0D3h, 0CAh, 59h
		db 50h,	52h, 23h, 0C7h,	23h, 0D7h, 0Bh,	0D8h, 0Bh, 0CAh
		db 8Bh,	0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh,	3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 2Eh,	0A1h, 0D5h, 11h, 0EFh
		db 8Ah
		db 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh, 0A0h, 0D7h, 11h
		db 0EEh, 88h, 3Ch, 2Eh,	0A0h, 0D8h, 11h, 0EEh, 88h, 0Ch
		db 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch, 46h, 59h, 5Bh
		db 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh,	23h, 0CFh
		db 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h,	2, 83h
		db 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h,	0C8h, 0D3h
		db 0CAh, 59h, 50h, 52h,	23h, 0C7h, 23h,	0D7h, 0Bh, 0D8h
		db 0Bh,	0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h, 0BAh, 0CEh
		db 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h, 11h
		db 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h,	1Ch, 2Eh, 0A0h
		db 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h, 0EEh
		db 88h,	0Ch, 2Eh, 0A0h,	0D9h, 11h, 0EEh, 88h, 2Ch, 46h
		db 59h,	5Bh, 0F7h, 0D7h, 86h, 0FBh, 86h, 0E9h, 23h, 0DFh
		db 23h,	0CFh, 0F7h, 0D7h, 26h, 8Bh, 46h, 0, 26h, 8Bh, 56h
		db 2, 83h, 0C5h, 4, 51h, 2Eh, 8Ah, 0Eh,	16h, 32h, 0D3h
		db 0C8h, 0D3h, 0CAh, 59h, 50h, 52h, 23h, 0C7h, 23h, 0D7h
		db 0Bh,	0D8h, 0Bh, 0CAh, 8Bh, 0C3h, 0Bh, 0C1h, 0Ah, 0E0h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	2Eh, 0A1h
		db 0D5h, 11h, 0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h, 88h, 1Ch
		db 2Eh,	0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h
		db 11h,	0EEh, 88h, 0Ch,	2Eh, 0A0h, 0D9h, 11h, 0EEh, 88h
		db 2Ch,	46h, 59h, 5Bh, 0F7h, 0D7h, 86h,	0FBh, 86h, 0E9h
		db 23h,	0DFh, 23h, 0CFh, 0F7h, 0D7h, 2Eh, 0A0h,	15h, 32h
		db 24h,	1, 75h,	30h, 8Bh, 0C3h,	0Bh, 0C1h, 0Ah,	0E0h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 2Eh, 0A1h, 0D5h
		db 11h,	0EFh, 8Ah, 0C4h, 42h, 8Ah, 24h,	88h, 1Ch, 2Eh
		db 0A0h, 0D7h, 11h, 0EEh, 88h, 3Ch, 2Eh, 0A0h, 0D8h, 11h
		db 0EEh, 88h, 0Ch, 2Eh,	0A0h, 0D9h, 11h, 0EEh, 88h, 2Ch
		db 2Eh,	0FFh, 0Eh, 13h,	32h, 78h, 38h, 2Eh, 3, 2Eh, 11h
		db 32h,	2Eh, 3,	36h, 0Fh, 32h, 33h, 0DBh, 33h, 0C9h, 2Eh
		db 0A0h, 15h, 32h, 24h,	2, 74h,	1Fh, 26h, 8Bh, 5Eh, 0FCh
		db 26h,	8Bh, 46h, 0FEh,	2Eh, 8Ah, 0Eh, 16h, 32h, 0D3h
		db 0CBh, 0D3h, 0C8h, 8Bh, 0C8h,	0F7h, 0D7h, 86h, 0FBh
		db 86h,	0E9h, 23h, 0DFh, 23h, 0CFh, 0F7h, 0D7h,	0E9h, 0A8h
		db 4
; ---------------------------------------------------------------------------

loc_1EFF9:				; CODE XREF: sub_1DFA1+19j
		mov	dx, 3CEh
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		pop	ds
		retn
sub_1DFA1	endp

; ---------------------------------------------------------------------------
		db 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h, 83h,	0C5h, 2
		db 52h,	0BAh, 0CEh, 3, 0B0h, 8,	0EFh, 0BAh, 0C4h, 3, 0B8h
		db 2, 4, 0EFh, 42h, 8Ah, 24h, 88h, 1Ch,	0B0h, 8, 0EEh
		db 88h,	3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h
		db 8Bh,	46h, 0,	8Bh, 0D8h, 0Ah,	0E0h, 83h, 0C5h, 2, 52h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	0B8h, 2
		db 4, 0EFh, 42h, 8Ah, 24h, 88h,	1Ch, 0B0h, 8, 0EEh, 88h
		db 3Ch,	0B0h, 3, 0EEh, 0C6h, 4,	0, 46h,	5Ah, 26h, 8Bh
		db 46h,	0, 8Bh,	0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh
		db 42h,	8Ah, 24h, 88h, 1Ch, 0B0h, 8, 0EEh, 88h,	3Ch, 0B0h
		db 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h, 8Bh, 46h, 0, 8Bh
		db 0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 0B8h, 2, 4, 0EFh, 42h, 8Ah
		db 24h,	88h, 1Ch, 0B0h,	8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh
		db 0C6h, 4, 0, 46h, 5Ah, 26h, 8Bh, 46h,	0, 8Bh,	0D8h, 0Ah
		db 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh
		db 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh, 42h, 8Ah, 24h, 88h
		db 1Ch,	0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh,	0C6h, 4
		db 0, 46h, 5Ah,	26h, 8Bh, 46h, 0, 8Bh, 0D8h, 0Ah, 0E0h
		db 83h,	0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 0B8h, 2, 4,	0EFh, 42h, 8Ah,	24h, 88h, 1Ch
		db 0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0
		db 46h,	5Ah, 26h, 8Bh, 46h, 0, 8Bh, 0D8h, 0Ah, 0E0h, 83h
		db 0C5h, 2, 52h, 0BAh, 0CEh, 3,	0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 0B8h, 2, 4, 0EFh,	42h, 8Ah, 24h, 88h, 1Ch, 0B0h
		db 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0, 46h, 5Ah
		db 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h, 83h,	0C5h, 2
		db 52h,	0BAh, 0CEh, 3, 0B0h, 8,	0EFh, 0BAh, 0C4h, 3, 0B8h
		db 2, 4, 0EFh, 42h, 8Ah, 24h, 88h, 1Ch,	0B0h, 8, 0EEh
		db 88h,	3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h
		db 8Bh,	46h, 0,	8Bh, 0D8h, 0Ah,	0E0h, 83h, 0C5h, 2, 52h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	0B8h, 2
		db 4, 0EFh, 42h, 8Ah, 24h, 88h,	1Ch, 0B0h, 8, 0EEh, 88h
		db 3Ch,	0B0h, 3, 0EEh, 0C6h, 4,	0, 46h,	5Ah, 26h, 8Bh
		db 46h,	0, 8Bh,	0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh
		db 42h,	8Ah, 24h, 88h, 1Ch, 0B0h, 8, 0EEh, 88h,	3Ch, 0B0h
		db 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h, 8Bh, 46h, 0, 8Bh
		db 0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 0B8h, 2, 4, 0EFh, 42h, 8Ah
		db 24h,	88h, 1Ch, 0B0h,	8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh
		db 0C6h, 4, 0, 46h, 5Ah, 26h, 8Bh, 46h,	0, 8Bh,	0D8h, 0Ah
		db 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh
		db 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh, 42h, 8Ah, 24h, 88h
		db 1Ch,	0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh,	0C6h
		db 4, 0, 46h, 5Ah, 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h
		db 83h,	0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 0B8h, 2, 4,	0EFh, 42h, 8Ah,	24h, 88h, 1Ch
		db 0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0
		db 46h,	5Ah, 26h, 8Bh, 46h, 0, 8Bh, 0D8h, 0Ah, 0E0h, 83h
		db 0C5h, 2, 52h, 0BAh, 0CEh, 3,	0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 0B8h, 2, 4, 0EFh,	42h, 8Ah, 24h, 88h, 1Ch, 0B0h
		db 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0, 46h, 5Ah
		db 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h, 83h,	0C5h, 2
		db 52h,	0BAh, 0CEh, 3, 0B0h, 8,	0EFh, 0BAh, 0C4h, 3, 0B8h
		db 2, 4, 0EFh, 42h, 8Ah, 24h, 88h, 1Ch,	0B0h, 8, 0EEh
		db 88h,	3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h
		db 8Bh,	46h, 0,	8Bh, 0D8h, 0Ah,	0E0h, 83h, 0C5h, 2, 52h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	0B8h, 2
		db 4, 0EFh, 42h, 8Ah, 24h, 88h,	1Ch, 0B0h, 8, 0EEh, 88h
		db 3Ch,	0B0h, 3, 0EEh, 0C6h, 4,	0, 46h,	5Ah, 26h, 8Bh
		db 46h,	0, 8Bh,	0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh
		db 42h,	8Ah, 24h, 88h, 1Ch, 0B0h, 8, 0EEh, 88h,	3Ch, 0B0h
		db 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h, 8Bh, 46h, 0, 8Bh
		db 0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h
		db 8, 0EFh, 0BAh, 0C4h,	3, 0B8h, 2, 4, 0EFh, 42h, 8Ah
		db 24h,	88h, 1Ch, 0B0h,	8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh
		db 0C6h, 4, 0, 46h, 5Ah, 26h, 8Bh, 46h,	0, 8Bh,	0D8h, 0Ah
		db 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh,	3, 0B0h, 8, 0EFh
		db 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh, 42h, 8Ah, 24h, 88h
		db 1Ch,	0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh,	0C6h, 4
		db 0, 46h, 5Ah,	26h, 8Bh, 46h, 0, 8Bh, 0D8h, 0Ah, 0E0h
		db 83h,	0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 0B8h, 2, 4,	0EFh, 42h, 8Ah,	24h, 88h, 1Ch
		db 0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0
		db 46h,	5Ah, 26h, 8Bh, 46h, 0, 8Bh, 0D8h, 0Ah, 0E0h, 83h
		db 0C5h, 2, 52h, 0BAh, 0CEh, 3,	0B0h, 8, 0EFh, 0BAh, 0C4h
		db 3, 0B8h, 2, 4, 0EFh,	42h, 8Ah, 24h, 88h, 1Ch, 0B0h
		db 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0, 46h, 5Ah
		db 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h, 83h,	0C5h, 2
		db 52h,	0BAh, 0CEh, 3, 0B0h, 8,	0EFh, 0BAh, 0C4h, 3, 0B8h
		db 2, 4, 0EFh, 42h, 8Ah, 24h, 88h, 1Ch,	0B0h, 8, 0EEh
		db 88h,	3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0,	46h, 5Ah, 26h
		db 8Bh,	46h, 0,	8Bh, 0D8h, 0Ah,	0E0h, 83h, 0C5h, 2, 52h
		db 0BAh, 0CEh, 3, 0B0h,	8, 0EFh, 0BAh, 0C4h, 3,	0B8h, 2
		db 4, 0EFh, 42h, 8Ah, 24h, 88h,	1Ch, 0B0h, 8, 0EEh, 88h
		db 3Ch,	0B0h, 3, 0EEh, 0C6h, 4,	0, 46h,	5Ah, 26h, 8Bh
		db 46h,	0, 8Bh,	0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh
		db 0CEh, 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 0B8h,	2, 4, 0EFh
		db 42h,	8Ah, 24h, 88h, 1Ch, 0B0h, 8, 0EEh, 88h,	3Ch
		db 0B0h, 3, 0EEh, 0C6h,	4, 0, 46h, 5Ah,	26h, 8Bh, 46h
		db 0, 8Bh, 0D8h, 0Ah, 0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh
		db 3, 0B0h, 8, 0EFh, 0BAh, 0C4h, 3, 0B8h, 2, 4,	0EFh, 42h
		db 8Ah,	24h, 88h, 1Ch, 0B0h, 8,	0EEh, 88h, 3Ch,	0B0h, 3
		db 0EEh, 0C6h, 4, 0, 46h, 5Ah, 26h, 8Bh, 46h, 0, 8Bh, 0D8h
		db 0Ah,	0E0h, 83h, 0C5h, 2, 52h, 0BAh, 0CEh, 3,	0B0h, 8
		db 0EFh, 0BAh, 0C4h, 3,	0B8h, 2, 4, 0EFh, 42h, 8Ah, 24h
		db 88h,	1Ch, 0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h
		db 4, 0, 46h, 5Ah, 26h,	8Bh, 46h, 0, 8Bh, 0D8h,	0Ah, 0E0h
		db 83h,	0C5h, 2, 52h, 0BAh, 0CEh, 3, 0B0h, 8, 0EFh, 0BAh
		db 0C4h, 3, 0B8h, 2, 4,	0EFh, 42h, 8Ah,	24h, 88h, 1Ch
		db 0B0h, 8, 0EEh, 88h, 3Ch, 0B0h, 3, 0EEh, 0C6h, 4, 0
		db 46h,	5Ah, 2Eh, 0FFh,	0Eh, 13h, 32h, 78h, 0Ch, 2Eh, 3
		db 2Eh,	11h, 32h, 2Eh, 3, 36h, 0Fh, 32h, 0EBh, 3, 0E9h
		db 58h,	0FBh, 0B8h
word_1F4A2	dw 0			; DATA XREF: sub_1DFA1+82w
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		mov	cx, [bp+6]
		shr	cx, 1
		add	cx, 1
		and	cx, 0FFFEh
		mov	di, [bp+4]
		shr	di, 1
		and	di, 0FFFEh
		sub	cx, di
		add	cx, 1
		shr	cx, 1
		mov	bx, [bp+8]
		and	bx, 0FFFCh
		mov	dx, [bp+0Ah]
		sub	dx, bx
		shr	dx, 1
		shr	dx, 1
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	al, 28h	; '('
		mul	bl
		mov	bx, cx
		mov	si, 56E2h
		add	si, di
		add	di, ax
		add	ax, ax
		add	si, ax
		mov	ax, bx
		add	ax, ax
		mov	bp, 0A0h ; '†'

loc_1F4EC:				; CODE XREF: seg006:2667j
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		add	di, 2000h
		add	si, bp
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		add	di, 2000h
		add	si, bp
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		add	di, 2000h
		add	si, bp
		mov	cx, bx
		rep movsw
		sub	si, ax
		sub	di, ax
		sub	di, 6000h
		add	di, bp
		add	si, bp
		dec	dx
		jnz	short loc_1F4EC
		retn
; ---------------------------------------------------------------------------
		db 1Eh,	57h, 56h, 50h, 53h, 51h, 52h, 26h, 0C5h, 3Dh, 8Bh
		db 4Dh,	0DCh, 86h, 0E9h, 23h, 0C9h, 78h, 6, 74h, 4, 8Bh
		db 0F7h, 0EBh, 3, 0E9h,	68h, 1,	8Bh, 45h, 0DEh,	86h, 0E0h
		db 0D1h, 0E8h, 0D1h, 0E8h, 8Bh,	0D0h, 23h, 0D2h, 78h, 0EEh
		db 74h,	0ECh, 8Bh, 45h,	0EAh, 86h, 0E0h, 3Dh, 3, 0, 74h
		db 3, 0E9h, 4Ch, 1, 51h, 52h, 57h, 8Bh,	4, 8Bh,	5Ch, 2
		db 8Bh,	4Ch, 4,	8Bh, 54h, 6, 86h, 0C4h,	86h, 0DFh, 86h
		db 0CDh, 86h, 0D6h, 0D1h, 0D2h,	0D1h, 0D7h, 3 dup(0D1h)
		db 0D7h, 0D1h, 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h
		db 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h),	0D7h, 0D1h, 0D3h
		db 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h, 0D2h, 0D1h
		db 0D7h, 3 dup(0D1h), 0D7h, 0D1h, 0D3h,	0D1h, 0D7h, 0D1h
		db 0D0h, 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h)
		db 0D7h, 0D1h, 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h
		db 97h,	86h, 0C4h, 89h,	4, 97h,	0D1h, 0D2h, 0D1h, 0D7h
		db 3 dup(0D1h),	0D7h, 0D1h, 0D3h, 0D1h,	0D7h, 0D1h, 0D0h
		db 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h), 0D7h
		db 0D1h, 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h
		db 0D2h, 0D1h, 0D7h, 3 dup(0D1h), 0D7h,	0D1h, 0D3h, 0D1h
		db 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h
		db 3 dup(0D1h),	0D7h, 0D1h, 0D3h, 0D1h,	0D7h, 0D1h, 0D0h
		db 0D1h, 0D7h, 97h, 86h, 0C4h, 89h, 44h, 2, 97h, 0D1h
		db 0D2h, 0D1h, 0D7h, 3 dup(0D1h), 0D7h,	0D1h, 0D3h, 0D1h
		db 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h
		db 3 dup(0D1h),	0D7h, 0D1h, 0D3h, 0D1h,	0D7h, 0D1h, 0D0h
		db 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h), 0D7h
		db 0D1h, 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h
		db 0D2h, 0D1h, 0D7h, 3 dup(0D1h), 0D7h,	0D1h, 0D3h, 0D1h
		db 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 97h, 86h, 0C4h, 89h, 44h
		db 4, 97h, 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h),	0D7h, 0D1h
		db 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 0D1h, 0D2h
		db 0D1h, 0D7h, 3 dup(0D1h), 0D7h, 0D1h,	0D3h, 0D1h, 0D7h
		db 0D1h, 0D0h, 0D1h, 0D7h, 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h)
		db 0D7h, 0D1h, 0D3h, 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h
		db 0D1h, 0D2h, 0D1h, 0D7h, 3 dup(0D1h),	0D7h, 0D1h, 0D3h
		db 0D1h, 0D7h, 0D1h, 0D0h, 0D1h, 0D7h, 97h, 86h, 0C4h
		db 89h,	44h, 6,	97h, 5Fh, 5Ah, 59h, 83h, 0C6h, 8, 4Ah
		db 75h,	0Dh, 0E2h, 8, 5Ah, 59h,	5Bh, 58h, 5Eh, 5Fh, 1Fh
		db 0C3h, 0E9h, 9Bh, 0FEh, 0E9h,	0B6h, 0FEh, 0EBh, 0F0h
		db 0EBh, 0EEh, 0C4h, 7Eh, 4, 8Ch, 0C0h,	26h, 8Bh, 1Dh
		db 83h,	0FBh, 0FFh, 74h, 38h, 86h, 0FBh, 0D1h, 0CBh, 0D1h
		db 0CBh, 0D1h, 0CBh, 0D1h, 0CBh, 3, 0C3h, 8Bh, 0CBh, 26h
		db 8Bh,	5Dh, 2,	0Bh, 0CBh, 74h,	27h, 86h, 0FBh,	8Bh, 0CBh
		db 83h,	0E1h, 0Fh, 81h,	0C1h, 0, 8, 83h, 0E3h, 0F0h, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 3,	0C3h, 26h
		db 89h,	45h, 2,	26h, 89h, 0Dh, 0E8h, 33h, 0FEh,	83h, 0C7h
		db 4, 0EBh, 0B9h, 0C3h,	8Bh, 4Eh, 6, 0D1h, 0E9h, 83h, 0C1h
		db 1, 83h, 0E1h, 0FEh, 8Bh, 7Eh, 4, 0D1h, 0EFh,	83h, 0E7h
		db 0FEh, 2Bh, 0CFh, 89h, 3Eh, 0Dh, 68h,	89h, 0Eh, 0Fh
		db 68h,	8Bh, 7Eh, 8, 89h, 3Eh, 11h, 68h, 8Bh, 4Eh, 0Ah
		db 2Bh,	0CFh, 89h, 0Eh,	13h, 68h, 0C3h,	0C4h, 5Eh, 4, 0Bh
		db 0DBh, 74h, 3, 0E8h, 1, 0, 0C3h, 89h,	1Eh, 9,	68h, 8Ch
		db 0C6h, 89h, 36h, 0Bh,	68h, 8Bh, 0C3h,	0Bh, 0C6h, 74h
		db 3, 0E8h, 1, 0, 0C3h
		db 0C4h, 1Eh, 9, 68h, 6, 26h, 0C4h, 3Fh, 8Ch, 0C0h, 0Bh
		db 0C7h, 74h, 3, 53h, 0EBh, 6, 0E9h, 8Fh, 0, 0E9h, 84h
		db 0, 26h, 8Ah,	45h, 0Ah, 0A8h,	80h, 74h, 0F5h,	26h, 8Bh
		db 5, 26h, 2Bh,	45h, 14h, 8Bh, 0D8h, 80h, 0E3h,	1, 2, 0DBh
		db 2, 0DBh, 2Eh, 88h, 1Eh, 16h,	32h, 0D1h, 0F8h, 0A3h
		db 21h,	68h, 26h, 8Bh, 45h, 2, 26h, 2Bh, 45h, 16h, 0A3h
		db 23h,	68h, 26h, 8Bh, 45h, 10h, 0D1h, 0E8h, 74h, 0C8h
		db 26h,	8Bh, 45h, 12h, 23h, 0C0h, 74h, 0C0h, 8Bh, 16h
		db 17h,	68h, 0A1h, 23h,	68h, 3Bh, 0D0h,	7Eh, 0B5h, 8Bh
		db 16h,	15h, 68h, 0A1h,	21h, 68h, 3Bh, 0D0h, 7Eh, 0AAh
		db 8Bh,	0D0h, 26h, 8Bh,	45h, 10h, 0D1h,	0E8h, 3, 0D0h
		db 78h,	9Eh, 0A1h, 0Dh,	68h, 3Bh, 0D0h,	7Eh, 97h, 0A1h
		db 23h,	68h, 8Bh, 0D0h,	26h, 8Bh, 45h, 12h, 3, 0D0h, 78h
		db 11h,	0A1h, 11h, 68h,	3Bh, 0D0h, 7Eh,	0Ah, 53h, 57h
		db 0E8h, 39h, 1, 5Fh, 5Bh, 0E9h, 79h, 0FFh, 5Bh, 7, 83h
		db 0C3h, 4, 0E9h, 61h, 0FFh, 7,	0C3h, 26h, 0F6h, 45h, 0Ah
		db 80h,	75h, 3,	0E9h, 8Ah, 0, 26h, 8Bh,	45h, 10h, 0D1h
		db 0E8h, 3, 6, 21h, 68h, 78h, 0F1h, 3Bh, 6, 0Dh, 68h, 7Eh
		db 0EBh, 26h, 8Bh, 45h,	12h, 3Dh, 64h, 0, 7Dh, 0E2h, 3
		db 6, 23h, 68h,	78h, 69h, 3 dup(90h), 3Bh, 6, 11h, 68h
		db 7Eh,	60h, 0A1h, 15h,	68h, 3Bh, 6, 21h, 68h, 7Eh, 57h
		db 0A1h, 17h, 68h, 3Bh,	6, 23h,	68h, 7Eh, 4Eh, 0C6h, 6
		db 3Ch,	68h, 0,	0C7h, 6, 19h, 68h, 2 dup(0), 0A1h, 0Dh
		db 68h,	2Bh, 6,	21h, 68h, 79h, 7, 0F7h,	0D8h, 0A3h, 19h
		db 68h,	33h, 0C0h, 0A3h, 1Fh, 68h, 23h,	0C0h, 74h, 5, 80h
		db 0Eh,	3Ch, 68h, 2, 0A1h, 15h,	68h, 2Bh, 6, 21h, 68h
		db 78h,	21h, 26h, 8Bh, 5Dh, 10h, 0D1h, 0EBh, 43h, 2Bh
		db 0C3h, 78h, 16h, 26h,	8Bh, 45h, 10h, 0D1h, 0E8h, 2Bh
		db 6, 1Fh, 68h,	79h, 2,	33h, 0C0h, 0A3h, 35h, 68h, 0EBh
		db 15h,	33h, 0C0h, 0C3h, 0A1h, 1Fh, 68h, 0F7h, 0D8h, 3
		db 6, 15h, 68h,	2Bh, 6,	21h, 68h, 80h, 0Eh, 3Ch, 68h, 1
		db 0A3h, 35h, 68h, 0C7h, 6, 1Bh, 68h, 2	dup(0),	0A1h, 11h
		db 68h,	2Bh, 6,	23h, 68h, 79h, 7, 0F7h,	0D8h, 0A3h, 1Bh
		db 68h,	33h, 0C0h, 0A3h, 1Dh, 68h, 0A1h, 17h, 68h, 2Bh
		db 6, 23h, 68h,	78h, 11h, 26h, 2Bh, 45h, 12h, 78h, 0Bh
		db 0A1h, 1Dh, 68h, 0F7h, 0D8h, 26h, 3, 45h, 12h, 0EBh
		db 0Dh,	0A1h, 1Dh, 68h,	0F7h, 0D8h, 3, 6, 17h, 68h, 2Bh
		db 6, 23h, 68h,	0A3h, 37h, 68h,	0A1h, 1Bh, 68h,	3, 6, 11h
		db 68h,	85h, 0C0h, 74h,	4, 0B3h, 0A0h, 0F6h, 0E3h, 5, 0E2h
		db 56h,	3, 6, 19h, 68h,	3, 6, 0Dh, 68h,	0A3h, 0E8h, 56h
		db 0A1h, 35h, 68h, 23h,	0C0h, 74h, 14h,	78h, 12h, 0A1h
		db 37h,	68h, 23h, 0C0h,	74h, 0Bh, 78h, 9, 3Dh, 64h, 0
		db 7Dh,	4, 0Dh,	1, 0, 0C3h, 0E9h, 6Ah, 0FFh, 0E8h, 19h
		db 0FFh, 0A1h, 1Dh, 68h, 85h, 0C0h, 74h, 8, 26h, 8Ah, 5Dh
		db 10h,	0D0h, 0EBh, 0F6h, 0E3h,	3, 6, 1Fh, 68h,	0A3h, 0E6h
		db 56h,	0A1h, 35h, 68h,	26h, 8Bh, 55h, 10h, 0D1h, 0EAh
		db 0B1h, 0A0h, 2Ah, 0C8h, 32h, 0EDh, 8Ah, 0F5h,	0C6h, 6
		db 3Ah,	68h, 0,	0EBh, 2Ch, 0A1h, 1Dh, 68h, 85h
		db 0C0h, 74h, 6, 26h, 8Ah, 5Dh,	10h, 0F6h, 0E3h, 3, 6
		db 1Fh,	68h, 3,	6, 1Fh,	68h, 0A3h, 0E6h, 56h, 0A1h, 35h
		db 68h,	26h, 8Bh, 55h, 10h, 0D1h, 0EAh,	0B1h, 0A0h, 2Ah
		db 0C8h, 32h, 0EDh, 0C6h, 6, 3Ah, 68h, 1, 6, 57h, 2Eh
		db 0A0h, 16h, 32h, 0A2h, 3Bh, 68h, 0C4h, 6Dh, 0Ch, 3, 2Eh
		db 0E6h, 56h, 89h, 2Eh,	25h, 68h, 8Ch, 0C0h, 0A3h, 27h
		db 68h,	8Bh, 36h, 0E8h,	56h, 89h, 36h, 2Dh, 68h, 0B8h
		dw seg dseg
; ---------------------------------------------------------------------------
		mov	word_26BDF, ax
		mov	word_26BE3, 0A0h ; '†'
		mov	word_26BE1, dx
		mov	si, 6825h
		call	sub_1F9B0
		pop	di
		pop	es
		assume es:nothing
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1F9B0	proc near		; CODE XREF: seg006:2AEAp
		push	ds
		mov	al, [si+17h]
		mov	cs:byte_200D5, al
		mov	al, [si+16h]
		mov	cs:byte_200D6, al
		mov	ax, [si+12h]
		dec	ax
		mov	cs:word_200D3, ax
		jns	short loc_1F9CC
		jmp	loc_1FA9F
; ---------------------------------------------------------------------------

loc_1F9CC:				; CODE XREF: sub_1F9B0+17j
		mov	bx, [si+10h]
		mov	ax, [si+0Eh]
		sub	ax, bx
		mov	cs:word_200CF, ax
		mov	cx, [si+0Ch]
		sub	cx, bx
		mov	al, [si+15h]
		mov	dh, bl
		add	bx, bx
		xor	ah, ah
		add	ax, ax
		mov	di, ax
		add	ax, ax
		add	ax, di
		mov	bp, 3335h
		add	bp, ax
		mov	di, cs:[bp+0]
		mov	ax, cs:[bx+di]
		mov	cs:word_1FAA4, ax
		mov	ax, cs:[bp+2]
		les	bp, [si]
		lds	si, [si+8]
		mov	bl, cs:byte_200D6
		xor	bh, bh
		sar	bx, 1
		sar	bx, 1
		mov	dl, cs:[bx+33FBh]
		mov	cs:word_200D1, cx
		jmp	ax
; ---------------------------------------------------------------------------
		db 52h,	22h, 0C9h, 75h,	18h, 26h, 8Ah, 5Eh, 0, 45h, 32h
		db 0FFh, 2Eh, 8Ah, 1, 22h, 4, 0Ah, 0C3h, 88h, 4, 46h, 0FEh
		db 0CEh, 75h, 0EBh, 5Ah, 0EBh, 33h, 26h, 8Ah, 46h, 0, 45h
		db 2Eh,	8Ah, 0Eh, 16h, 32h, 0D2h, 0C8h,	8Ah, 0E0h, 22h
		db 0C2h, 0Ah, 0D8h, 32h, 0FFh, 8Ah, 4, 2Eh, 22h, 1, 0Ah
		db 0C3h, 88h, 4, 46h, 8Ah, 0DCh, 0F6h, 0D2h, 22h, 0DAh
		db 0F6h, 0D2h, 0FEh, 0CEh, 75h,	0D6h, 5Ah, 2Eh,	0A0h, 15h
		db 32h,	24h, 1,	75h, 0,	2Eh, 0FFh, 0Eh,	13h, 32h, 78h
		db 2Ah,	2Eh, 3,	2Eh, 11h, 32h, 2Eh, 3, 36h, 0Fh, 32h, 2Eh
		db 8Ah,	0Eh, 16h, 32h, 0BFh, 0E8h, 2Bh,	32h, 0DBh, 2Eh
		db 0A0h, 15h, 32h, 24h,	2, 74h,	0Ch, 26h, 8Ah, 5Eh, 0FFh
		db 0D2h, 0CBh, 0F6h, 0D2h, 22h,	0DAh, 0F6h, 0D2h, 0EBh
		db 4
; ---------------------------------------------------------------------------

loc_1FA9F:				; CODE XREF: sub_1F9B0+19j
					; seg006:2BE1j
		pop	ds
		retn
sub_1F9B0	endp

; ---------------------------------------------------------------------------
		jmp	short loc_1FA9F
; ---------------------------------------------------------------------------
		db 0B8h
word_1FAA4	dw 0			; DATA XREF: sub_1F9B0+4Aw
; ---------------------------------------------------------------------------
		jmp	ax
; ---------------------------------------------------------------------------
		db 0FFh, 0Fh dup(0F0h),	0Fh, 0Fh dup(0), 0Fh, 0Fh dup(0)
		db 0Fh,	0Fh dup(0), 0Fh, 0Fh dup(0), 0Fh, 0Fh dup(0), 0Fh
		db 0Fh dup(0), 0Fh, 0Fh	dup(0),	0Fh, 0Fh dup(0), 0Fh, 0Fh dup(0)
		db 0Fh,	0Fh dup(0), 0Fh, 0Fh dup(0), 0Fh, 0Fh dup(0), 0Fh
		db 0Fh dup(0), 0Fh, 0Fh	dup(0),	0Fh, 0Fh dup(0), 5 dup(0C3h)

; =============== S U B	R O U T	I N E =======================================


sub_1FBAD	proc far		; CODE XREF: sub_193D8+3P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, 2D09h
		mov	di, word_257CD
		add	di, di
		mov	ax, cs:[bx+di]
		les	di, [bp+4]
		call	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FBAD	endp

; ---------------------------------------------------------------------------
		db 6Ah,	0, 34h,	0Ch, 34h, 0Ch, 0F2h, 27h, 24h, 0Ch, 0E8h
		db 2Ch

; =============== S U B	R O U T	I N E =======================================


sub_1FBD5	proc far		; CODE XREF: seg000:93ECP
					; sub_1C01E+3FP
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, seg	dseg
		mov	ds, bx
		mov	ds, dx
		mov	si, ax
		mov	bx, 2D37h
		mov	di, word_257CD
		add	di, di
		mov	ax, cs:[bx+di]
		call	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FBD5	endp

; ---------------------------------------------------------------------------
		db 8Eh,	4, 0E1h, 10h, 0E1h, 10h, 0F0h, 2Ah, 24h, 0Ch, 0E9h
		db 2Ch

; =============== S U B	R O U T	I N E =======================================


sub_1FC03	proc far		; CODE XREF: seg000:93F5P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, 2D61h
		mov	di, word_257CD
		add	di, di
		mov	ax, cs:[bx+di]
		call	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FC03	endp

; ---------------------------------------------------------------------------
		db 2 dup(0), 33h, 0Ch, 33h, 0Ch, 0E6h, 25h, 24h, 0Ch, 0EAh
		db 2Ch

; =============== S U B	R O U T	I N E =======================================


sub_1FC2D	proc far		; CODE XREF: seg000:93FFP
					; sub_20077+4Bp
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		push	ds
		lds	si, dword ptr word_25A8E
		lds	si, [si]
		mov	ax, ds
		pop	ds
		mov	word_25A92, si
		mov	word_25A94, ax
		mov	bx, 2D9Ch
		mov	di, word_257CD
		add	di, di
		mov	ax, cs:[bx+di]
		call	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FC2D	endp

; ---------------------------------------------------------------------------
		db 62h,	2, 29h,	0Eh, 29h, 0Eh, 6Bh, 28h, 24h, 0Ch, 0EBh
		db 2Ch

; =============== S U B	R O U T	I N E =======================================


sub_1FC68	proc far		; CODE XREF: sub_19406+3P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, 2DC6h
		mov	di, word_257CD
		add	di, di
		mov	ax, cs:[bx+di]
		call	ax
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FC68	endp

; ---------------------------------------------------------------------------
		db 28h,	2, 0EFh, 0Dh, 0EFh, 0Dh, 3Dh, 28h, 24h,	0Ch, 0ECh
		db 2Ch

; =============== S U B	R O U T	I N E =======================================


sub_1FC92	proc far		; CODE XREF: sub_19410+3P
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, [bp+4]
		shl	ax, 1
		shl	ax, 1
		add	ax, 5415h
		mov	word_25A8E, ax
		mov	ax, seg	dseg
		mov	seg_25A90, ax
		pop	ds
		retf
sub_1FC92	endp


; =============== S U B	R O U T	I N E =======================================


sub_1FCAD	proc far		; CODE XREF: seg000:941DP
					; sub_20077+34p
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		les	si, [bp+4]
		mov	word_25A9E, 56F0h

loc_1FCC0:				; CODE XREF: sub_1FCAD+B2j
		push	es
		les	bx, es:[si]
		mov	ax, es
		or	ax, bx
		jnz	short loc_1FCD1
		pop	es
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
; ---------------------------------------------------------------------------

loc_1FCD1:				; CODE XREF: sub_1FCAD+1Bj
		mov	ax, es:[bx+4]
		shl	ax, 1
		shl	ax, 1
		mov	di, seg	dseg
		mov	ds, di
		lds	di, es:[bx+6]
		add	di, ax
		lds	di, [di]
		mov	es:[bx+0Ch], di
		mov	ax, ds
		mov	es:[bx+0Eh], ax
		or	ax, di
		jnz	short loc_1FCFA
		mov	word ptr es:[bx+0Ah], 0

loc_1FCFA:				; CODE XREF: sub_1FCAD+45j
		mov	ax, [di-2]
		mov	es:[bx+12h], ax
		mov	ax, [di-4]
		mov	es:[bx+10h], ax
		mov	ax, [di-6]
		mov	es:[bx+14h], ax
		mov	ax, [di-8]
		mov	es:[bx+16h], ax
		mov	ax, [di-0Ch]
		mov	es:[bx+18h], ax
		cmp	ax, 3
		jb	short loc_1FD25
		mov	ax, 3

loc_1FD25:				; CODE XREF: sub_1FCAD+73j
		mov	es:[bx+18h], ax
		or	ax, ax
		jz	short loc_1FD50
		push	ds
		push	di
		push	es
		push	si
		push	cx
		mov	cx, ax
		lea	si, [di-0Ch]
		lea	di, [bx+1Ah]

loc_1FD3A:				; CODE XREF: sub_1FCAD+9Cj
		dec	si
		dec	si
		movsw
		dec	si
		dec	si
		dec	si
		dec	si
		movsw
		dec	si
		dec	si
		dec	si
		dec	si
		movsw
		dec	si
		dec	si
		loop	loc_1FD3A
		pop	cx
		pop	si
		pop	es
		pop	di
		pop	ds

loc_1FD50:				; CODE XREF: sub_1FCAD+7Ej
		mov	al, [di-0Ah]
		mov	es:[bx+0Bh], al
		and	al, 0C0h
		jnz	short loc_1FD62

loc_1FD5B:				; CODE XREF: sub_1FCAD+213j
					; sub_1FCAD+278j ...
		add	si, 4
		pop	es
		jmp	loc_1FCC0
; ---------------------------------------------------------------------------

loc_1FD62:				; CODE XREF: sub_1FCAD+ACj
		test	al, 40h
		jnz	short loc_1FD69
		jmp	loc_1FF28
; ---------------------------------------------------------------------------

loc_1FD69:				; CODE XREF: sub_1FCAD+B7j
		push	si
		push	di
		mov	dh, es:[bx+0Ah]
		mov	ax, es:56EEh
		mov	si, di
		sub	si, 0Ch
		mov	di, ax
		add	ax, 0Ch
		mov	es:[bx+0Ch], ax
		mov	ax, seg	dseg
		mov	es:[bx+0Eh], ax
		mov	es, ax
		assume es:dseg
		mov	cx, 6
		rep movsw
		mov	bx, si
		mov	al, [si-4]
		shr	al, 1
		shr	al, 1
		mov	ah, [si-2]
		mul	ah
		add	si, ax
		mov	cx, ax
		test	dh, 20h
		jnz	short loc_1FDA9
		jmp	loc_1FEC3
; ---------------------------------------------------------------------------

loc_1FDA9:				; CODE XREF: sub_1FCAD+F7j
		mov	cx, [bx-4]
		mov	bp, cx
		shl	cx, 1
		sub	di, cx
		sub	di, 8
		mov	cx, [bx-2]

loc_1FDB8:				; CODE XREF: sub_1FCAD+202j
		push	cx
		mov	cx, bp
		shl	cx, 1
		shl	cx, 1
		add	di, cx
		mov	cx, bp
		shr	cx, 1
		shr	cx, 1

loc_1FDC7:				; CODE XREF: sub_1FCAD+1F9j
		push	cx
		mov	cl, [bx]
		inc	bx
		push	bx
		xor	ah, ah
		xor	al, al
		test	cl, 80h
		jz	short loc_1FDE0
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FDE0:				; CODE XREF: sub_1FCAD+126j
		mov	ch, al
		xor	al, al
		test	cl, 40h
		jz	short loc_1FDF4
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FDF4:				; CODE XREF: sub_1FCAD+13Aj
		stosb
		xor	al, al
		test	cl, 20h
		jz	short loc_1FE07
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FE07:				; CODE XREF: sub_1FCAD+14Dj
		mov	dl, al
		xor	al, al
		test	cl, 10h
		jz	short loc_1FE1B
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FE1B:				; CODE XREF: sub_1FCAD+161j
		stosb
		xor	al, al
		test	cl, 8
		jz	short loc_1FE2E
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FE2E:				; CODE XREF: sub_1FCAD+174j
		mov	dh, al
		xor	al, al
		test	cl, 4
		jz	short loc_1FE42
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FE42:				; CODE XREF: sub_1FCAD+188j
		stosb
		xor	al, al
		test	cl, 2
		jz	short loc_1FE55
		mov	al, [si]
		mov	bx, 66F0h
		add	bx, ax
		mov	al, es:[bx]
		inc	si

loc_1FE55:				; CODE XREF: sub_1FCAD+19Bj
		mov	ah, al
		xor	al, al
		test	cl, 1
		jz	short loc_1FE6C
		mov	al, [si]
		mov	bx, 66F0h
		add	bl, al
		adc	bh, 0
		mov	al, es:[bx]
		inc	si

loc_1FE6C:				; CODE XREF: sub_1FCAD+1AFj
		stosb
		mov	cl, ah
		mov	ax, cs:word_1DCAD
		cmp	ax, 0
		jnz	short loc_1FE90
		mov	ax, es:[di-2]
		xchg	ah, al
		mov	es:[di-2], ax
		mov	ax, es:[di-4]
		xchg	ah, al
		mov	es:[di-4], ax
		xchg	ch, dl
		xchg	dh, cl

loc_1FE90:				; CODE XREF: sub_1FCAD+1C9j
		mov	al, ch
		stosb
		mov	al, dl
		stosb
		mov	al, dh
		stosb
		mov	al, cl
		stosb
		sub	di, 10h
		pop	bx
		pop	cx
		dec	cx
		or	cx, cx
		jz	short loc_1FEA9
		jmp	loc_1FDC7
; ---------------------------------------------------------------------------

loc_1FEA9:				; CODE XREF: sub_1FCAD+1F7j
		pop	cx
		dec	cx
		or	cx, cx
		jz	short loc_1FEB2
		jmp	loc_1FDB8
; ---------------------------------------------------------------------------

loc_1FEB2:				; CODE XREF: sub_1FCAD+200j
		shl	bp, 1
		add	di, bp
		add	di, 8
		mov	es:word_25A9E, di
		pop	di
		pop	si
		jmp	loc_1FD5B
; ---------------------------------------------------------------------------

loc_1FEC3:				; CODE XREF: sub_1FCAD+F9j
					; sub_1FCAD+26Fj
		push	cx
		mov	cl, [bx]
		inc	bx
		xor	ax, ax
		shl	cx, 1
		jnb	short loc_1FED0
		mov	al, [si]
		inc	si

loc_1FED0:				; CODE XREF: sub_1FCAD+21Ej
		stosb
		shl	cx, 1
		jnb	short loc_1FED8
		mov	ah, [si]
		inc	si

loc_1FED8:				; CODE XREF: sub_1FCAD+226j
		xor	al, al
		shl	cx, 1
		jnb	short loc_1FEE1
		mov	al, [si]
		inc	si

loc_1FEE1:				; CODE XREF: sub_1FCAD+22Fj
		stosb
		xor	ch, ch
		shl	cx, 1
		jnb	short loc_1FEEB
		mov	ch, [si]
		inc	si

loc_1FEEB:				; CODE XREF: sub_1FCAD+239j
		xor	al, al
		shl	cx, 1
		jnb	short loc_1FEF4
		mov	al, [si]
		inc	si

loc_1FEF4:				; CODE XREF: sub_1FCAD+242j
		stosb
		xor	dl, dl
		shl	cx, 1
		jnb	short loc_1FEFE
		mov	dl, [si]
		inc	si

loc_1FEFE:				; CODE XREF: sub_1FCAD+24Cj
		xor	al, al
		shl	cx, 1
		jnb	short loc_1FF07
		mov	al, [si]
		inc	si

loc_1FF07:				; CODE XREF: sub_1FCAD+255j
		stosb
		mov	al, ah
		stosb
		mov	al, ch
		stosb
		mov	al, dl
		stosb
		xor	al, al
		shl	cx, 1
		jnb	short loc_1FF1A
		mov	al, [si]
		inc	si

loc_1FF1A:				; CODE XREF: sub_1FCAD+268j
		stosb
		pop	cx
		loop	loc_1FEC3
		mov	es:word_25A9E, di
		pop	di
		pop	si
		jmp	loc_1FD5B
; ---------------------------------------------------------------------------

loc_1FF28:				; CODE XREF: sub_1FCAD+B9j
		jmp	loc_1FD5B
sub_1FCAD	endp

; ---------------------------------------------------------------------------
		push	si
		push	di
		mov	ax, es:word_25A9E
		mov	si, di
		sub	si, 0Ch
		mov	di, ax
		add	ax, 0Ch
		mov	es:[bx+0Ch], ax
		mov	ax, seg	dseg
		mov	es:[bx+0Eh], ax
		mov	es, ax
		mov	cx, 6
		rep movsw
		mov	cx, [si-4]
		mov	bp, cx
		shl	cx, 1
		sub	di, cx
		sub	di, 8
		mov	cx, [si-2]
		mov	ax, es
		mov	dx, ds
		mov	es, dx
		mov	ds, ax
		mov	bx, 66F0h

loc_1FF67:				; CODE XREF: seg006:311Cj
		push	cx
		mov	cx, bp
		shl	cx, 1
		shl	cx, 1
		add	di, cx
		mov	cx, bp
		shr	cx, 1
		shr	cx, 1

loc_1FF76:				; CODE XREF: seg006:3119j
		push	cx
		mov	al, es:[si]
		inc	si
		xlat
		mov	cl, al
		mov	al, es:[si]
		inc	si
		xlat
		mov	ch, al
		mov	al, es:[si]
		inc	si
		xlat
		mov	dl, al
		mov	al, es:[si]
		inc	si
		xlat
		mov	dh, al
		mov	al, es:[si]
		inc	si
		xlat
		mov	[di], al
		inc	di
		mov	al, es:[si]
		inc	si
		xlat
		mov	[di], al
		inc	di
		mov	al, es:[si]
		inc	si
		xlat
		mov	[di], al
		inc	di
		mov	al, es:[si]
		inc	si
		xlat
		mov	[di], al
		inc	di
		mov	ax, cs:word_1DCAD
		cmp	ax, 0
		jnz	short loc_1FFD0
		mov	ax, [di-2]
		xchg	ah, al
		mov	[di-2],	ax
		mov	ax, [di-4]
		xchg	ah, al
		mov	[di-4],	ax
		xchg	dh, dl
		xchg	ch, cl

loc_1FFD0:				; CODE XREF: seg006:30FAj
		mov	[di], cx
		mov	[di+2],	dx
		sub	di, 0Ch
		pop	cx
		loop	loc_1FF76
		pop	cx
		loop	loc_1FF67
		mov	ax, es
		mov	dx, ds
		mov	es, dx
		mov	ds, ax
		shl	bp, 1
		add	di, bp
		add	di, 8
		mov	es:word_25A9E, di
		pop	di
		pop	si
		jmp	loc_1FD5B

; =============== S U B	R O U T	I N E =======================================


sub_1FFF7	proc far		; CODE XREF: sub_19424P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, 66F0h
		mov	cx, 0
		mov	ax, word_257CD
		cmp	ax, 0
		jnz	short loc_20045

loc_2000F:				; CODE XREF: sub_1FFF7+4Aj
		mov	dl, cl
		shr	dl, 1
		rcr	al, 1
		shr	dl, 1
		rcl	ah, 1
		shl	ax, 1
		shr	dl, 1
		rcr	al, 1
		shr	dl, 1
		rcl	ah, 1
		shl	ax, 1
		shr	dl, 1
		rcr	al, 1
		shr	dl, 1
		rcl	ah, 1
		shl	ax, 1
		shr	dl, 1
		rcr	al, 1
		shr	dl, 1
		rcl	ah, 1
		shl	ax, 1
		mov	[bx], ah
		inc	bx
		inc	cx
		cmp	cx, 0FFh
		jle	short loc_2000F
		jmp	short loc_20071
; ---------------------------------------------------------------------------

loc_20045:				; CODE XREF: sub_1FFF7+16j
					; sub_1FFF7+78j
		mov	ah, cl
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		shr	ah, 1
		rcl	al, 1
		mov	[bx], al
		inc	bx
		inc	cx
		cmp	cx, 0FFh
		jle	short loc_20045

loc_20071:				; CODE XREF: sub_1FFF7+4Cj
		pop	es
		assume es:nothing
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_1FFF7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_20077	proc far		; CODE XREF: sub_1942A+3P

var_s4		= word ptr  4
var_s6		= word ptr  6

		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, [bp+var_s4]
		mov	word_26BA0, ax
		mov	dx, [bp+var_s6]
		mov	word_26BA2, dx
		mov	es, dx
		mov	di, ax
		mov	al, es:[di+0Ah]
		mov	cs:byte_200CE, al
		mov	bp, sp
		mov	ax, seg	dseg
		push	ax
		mov	ax, 67F0h
		push	ax
		push	bp
		mov	bp, sp
		sub	bp, 2
		push	cs
		call	near ptr sub_1FCAD
		pop	bp
		mov	sp, bp
		mov	bp, sp
		mov	ax, seg	dseg
		push	ax
		mov	ax, 67F0h
		push	ax
		push	bp
		mov	bp, sp
		sub	bp, 2
		push	cs
		call	near ptr sub_1FC2D
		pop	bp
		mov	sp, bp
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_20077	endp

; ---------------------------------------------------------------------------
byte_200CE	db 0			; DATA XREF: sub_1DFA1+8Cr
					; sub_20077+1Fw
word_200CF	dw 0			; DATA XREF: seg006:04AFw
					; sub_1DFA1+24w ...
word_200D1	dw 0			; DATA XREF: seg006:04A5w
					; sub_1DFA1+EDw ...
word_200D3	dw 0			; DATA XREF: seg006:0492w seg006:04EAr ...
byte_200D5	db 0			; DATA XREF: seg006:0499w seg006:0507r ...
byte_200D6	db 0			; DATA XREF: sub_1DD08+4Fw
					; sub_1DEFD+6Br ...
		db 79h,	8, 4Fh,	8, 31h,	8, 13h,	8, 0F5h, 7, 0D7h, 7, 0B9h
		db 7, 9Bh, 7, 7Dh, 7, 5Fh, 7, 41h, 7, 23h, 7, 5, 7, 0E7h
		db 6, 0C9h, 6, 0ABh, 6,	8Dh, 6,	6Fh, 6,	51h, 6,	33h, 6
		db 15h,	6, 0F7h, 5, 0D9h, 5, 0BBh, 5, 9Dh, 5, 7Fh, 5, 61h
		db 5, 43h, 5, 0Fh, 0Ch,	0E7h, 0Bh, 0C9h, 0Bh, 0ABh, 0Bh
		db 8Dh,	0Bh, 6Fh, 0Bh, 51h, 0Bh, 33h, 0Bh, 15h,	0Bh, 0F7h
		db 0Ah,	0D9h, 0Ah, 0BBh, 0Ah, 9Dh, 0Ah,	7Fh, 0Ah, 61h
		db 0Ah,	43h, 0Ah, 25h, 0Ah, 7, 0Ah, 0E9h, 9, 0CBh, 9, 0ADh
		db 9, 8Fh, 9, 71h, 9, 53h, 9, 35h, 9, 17h, 9, 0F9h, 8
		db 0DBh, 8, 3 dup(0FFh), 3Fh, 0FFh, 0Fh, 0FFh, 3, 9Bh
		db 32h,	0Bh, 21h, 4, 0,	0EDh, 32h, 0DCh, 25h, 2, 0, 0FAh
		db 20h,	63h, 20h, 4, 20h, 0A5h,	1Fh, 46h, 1Fh, 0E7h, 1Eh
		db 88h,	1Eh, 29h, 1Eh, 0CAh, 1Dh, 6Bh, 1Dh, 0Ch, 1Dh, 0ADh
		db 1Ch,	4Eh, 1Ch, 0EFh,	1Bh, 90h, 1Bh, 31h, 1Bh, 0D2h
		db 1Ah,	73h, 1Ah, 14h, 1Ah, 0B5h, 19h, 56h, 19h, 0F7h
		db 18h,	98h, 18h, 39h, 18h, 0DAh, 17h, 7Bh, 17h, 1Ch, 17h
		db 0BDh, 16h, 5Eh, 16h,	0FFh, 15h, 0A0h, 15h, 41h, 15h
		db 0E2h, 14h, 83h, 14h,	24h, 14h, 0C5h,	13h, 66h, 13h
		db 7, 13h, 0A8h, 12h, 49h, 12h,	0EAh, 11h, 0CBh, 25h, 0A0h
		db 25h,	75h, 25h, 4Ah, 25h, 1Fh, 25h, 0F4h, 24h, 0C9h
		db 24h,	9Eh, 24h, 73h, 24h, 48h, 24h, 1Dh, 24h,	0F2h, 23h
		db 0C7h, 23h, 9Ch, 23h,	71h, 23h, 46h, 23h, 1Bh, 23h, 0F0h
		db 22h,	0C5h, 22h, 9Ah,	22h, 6Fh, 22h, 44h, 22h, 19h, 22h
		db 0EEh, 21h, 0C3h, 21h, 98h, 21h, 6Dh,	21h, 42h, 21h
		db 2 dup(0FFh),	2 dup(7Fh), 2 dup(3Fh),	2 dup(1Fh), 2 dup(0Fh)
		db 2 dup(7), 2 dup(3), 2 dup(1), 3Bh, 33h, 0BFh, 2Bh, 4
		db 0, 0AEh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh,	2Bh, 5Eh
		db 2Bh,	5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 5Eh, 2Bh,	5Eh, 2Bh
		db 5Eh,	2Bh, 5Eh, 2Bh, 5Eh, 2Bh, 0FFh, 0Fh, 3 dup(0)
seg006		ends

; ===========================================================================

; Segment type:	Pure code
seg007		segment	byte public 'CODE' use16
		assume cs:seg007
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_202C0	proc far		; CODE XREF: sub_197A4P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, 2
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	si, 6840h
		xor	bh, bh
		mov	dx, 101h
		mov	ah, 2
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number
		mov	ah, 9
		mov	dx, si
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		mov	si, 6858h
		mov	di, 689Eh
		mov	bh, 0
		mov	cx, 4
		mov	dx, 0A21h

loc_202EF:				; CODE XREF: sub_202C0+46j
		cmp	byte ptr [di], 1
		jnz	short loc_20302
		mov	ah, 2
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number
		push	dx
		mov	ah, 9
		mov	dx, si
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		pop	dx
		inc	dh

loc_20302:				; CODE XREF: sub_202C0+32j
		add	si, 11h
		inc	di
		loop	loc_202EF

loc_20308:				; CODE XREF: sub_202C0+6Cj
		mov	al, 3Fh	; '?'
		call	sub_197AA
		jnz	short loc_2032E
		mov	al, 40h	; '@'
		call	sub_197AA
		jnz	short loc_20336
		mov	al, 41h	; 'A'
		call	sub_197AA
		jnz	short loc_2033E
		mov	al, 42h	; 'B'
		call	sub_197AA
		jnz	short loc_20346
		jmp	short loc_20308
; ---------------------------------------------------------------------------

loc_2032E:				; CODE XREF: sub_202C0+4Fj
		mov	word_26C4C, 8000h
		jmp	short loc_20353
; ---------------------------------------------------------------------------

loc_20336:				; CODE XREF: sub_202C0+58j
		mov	word_26C4C, 0
		jmp	short loc_20353
; ---------------------------------------------------------------------------

loc_2033E:				; CODE XREF: sub_202C0+61j
		mov	word_26C4C, 1
		jmp	short loc_20353
; ---------------------------------------------------------------------------

loc_20346:				; CODE XREF: sub_202C0+6Aj
		mov	word_26C4C, 4
		jmp	short loc_20353
; ---------------------------------------------------------------------------
		call	sub_197AE

loc_20353:				; CODE XREF: sub_202C0+74j
					; sub_202C0+7Cj ...
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_202C0	endp

; ---------------------------------------------------------------------------
		align 8
seg007		ends

; ===========================================================================

; Segment type:	Pure code
seg008		segment	byte public 'CODE' use16
		assume cs:seg008
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_20360	proc far		; CODE XREF: sub_19864P
		push	di
		push	si
		push	bp
		push	ds
		push	es
		mov	bx, word_257CD
		shl	bx, 1
		call	off_26D26[bx]
		pop	es
		pop	ds
		pop	bp
		pop	si
		pop	di
		retf
sub_20360	endp


; =============== S U B	R O U T	I N E =======================================


sub_20375	proc near		; CODE XREF: sub_20360+Bp
					; DATA XREF: dseg:off_26D26o ...
		mov	dx, 3DAh

loc_20378:				; CODE XREF: sub_20375+6j
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		test	al, 8
		jz	short loc_20378

loc_2037D:				; CODE XREF: sub_20375+Bj
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		test	al, 8
		jnz	short loc_2037D
		retn
sub_20375	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_36. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_37. PRESS	KEYPAD CTRL-"+"	TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_20385	proc near
		mov	dx, 3BAh

loc_20388:				; CODE XREF: sub_20385+6j
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		and	al, 80h
		jnz	short loc_20388

loc_2038D:				; CODE XREF: sub_20385+Bj
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		and	al, 80h
		jz	short loc_2038D
		retn
sub_20385	endp

; ---------------------------------------------------------------------------
		align 10h
seg008		ends

; ===========================================================================

; Segment type:	Regular
seg009		segment	byte public 'UNK' use16
		assume cs:seg009
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db    0
		db    2
		db  62h	; b
		db  9Ch	; ú
		db    0
		db    0
		db    0
		db  10h
		db  4Eh	; N
		db 0AAh	; ™
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
seg009		ends

; ===========================================================================

; Segment type:	Pure data
dseg		segment	para public 'DATA' use16
		assume cs:dseg
word_203B0	dw 0			; DATA XREF: sub_1A55E+20r
					; sub_1A55E:loc_1A5B9r	...
word_203B2	dw 0			; DATA XREF: sub_1A4FC+9r sub_1A4FC+Dr ...
off_203B4	dw offset loc_17553+1	; DATA XREF: sub_17235+4Fr
					; sub_1A5CF+Cr	...
off_203B6	dw offset sub_16272	; DATA XREF: sub_1A5CF+2r sub_1A5CF+8r ...
word_203B8	dw 206Fh		; DATA XREF: sub_1A4FC+24r
					; sub_1A55E+Dw	...
		db  43h	; C
		db  2Bh	; +
		db  2Bh	; +
		db  20h
		db  2Dh	; -
		db  20h
		db  43h	; C
		db  6Fh	; o
		db  70h	; p
		db  79h	; y
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  74h	; t
		db  20h
		db  31h	; 1
		db  39h	; 9
		db  39h	; 9
		db  30h	; 0
		db  20h
		db  42h	; B
		db  6Fh	; o
		db  72h	; r
		db  6Ch	; l
		db  61h	; a
		db  6Eh	; n
		db  64h	; d
		db  20h
		db  49h	; I
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  2Eh	; .
		db    0
		db  44h	; D
		db  69h	; i
		db  76h	; v
		db  69h	; i
		db  64h	; d
		db  65h	; e
		db  20h
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  0Dh
		db  0Ah
unk_203EB	db  41h	; A		; DATA XREF: _abort+3o
		db  62h	; b
		db  6Eh	; n
		db  6Fh	; o
		db  72h	; r
		db  6Dh	; m
		db  61h	; a
		db  6Ch	; l
		db  20h
		db  70h	; p
		db  72h	; r
		db  6Fh	; o
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  6Dh	; m
		db  20h
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  6Dh	; m
		db  69h	; i
		db  6Eh	; n
		db  61h	; a
		db  74h	; t
		db  69h	; i
		db  6Fh	; o
		db  6Eh	; n
		db  0Dh
		db  0Ah
dword_20409	dd 0			; DATA XREF: sub_1012F+6w
					; __restorezero+4r ...
dword_2040D	dd 0			; DATA XREF: sub_1012F+13w
					; __restorezero+Fr ...
dword_20411	dd 0			; DATA XREF: sub_1012F+20w
					; __restorezero+1Ar ...
dword_20415	dd 0			; DATA XREF: sub_1012F+2Dw
					; __restorezero+25r ...
; int unk_20419
unk_20419	db    0			; DATA XREF: start+EBr	seg000:AB5Ew
		db    0
; char **unk_2041B
unk_2041B	db    0			; DATA XREF: start+E7r	seg000:AB6Aw
		db    0
word_2041D	dw 0			; DATA XREF: start+E3r	seg000:AB64w
; char **unk_2041F
unk_2041F	db    0			; DATA XREF: start+DFr
		db    0
word_20421	dw 0			; DATA XREF: start+DBr
dword_20423	dd 0			; DATA XREF: start+28r	start+43w ...
word_20427	dw 0			; DATA XREF: start+52w
; unsigned int unk_20429
unk_20429	db    0			; DATA XREF: start+19w	start+83r ...
		db    0
word_2042B	dw 0			; DATA XREF: start+16w	seg000:AA82r
word_2042D	dw 0			; DATA XREF: __IOERROR:loc_1A1A9w
word_2042F	dw 0			; DATA XREF: start+B2w
word_20431	dw 0			; DATA XREF: start+B6w
word_20433	dw 0			; DATA XREF: __brk+7r __sbrk+20r
word_20435	dw 0			; DATA XREF: start+7Bw	__brk+3r ...
word_20437	dw 0			; DATA XREF: sub_198DD+26w __sbrk+Ar ...
word_20439	dw 0			; DATA XREF: start+7Fw	sub_198DD+2Aw ...
word_2043B	dw 0			; DATA XREF: sub_198DD+6Dw __brk+1Ar ...
word_2043D	dw 0			; DATA XREF: start+21w	sub_198DD+36r ...
		align 2
off_20440	dd unk_20948		; DATA XREF: sub_12D14+C3r
		db  62h	; b
		db    0
word_20446	dw 7806h		; DATA XREF: sub_12D14+100r
					; sub_12D14+123r
word_20448	dw 0			; DATA XREF: sub_12D14+FCr
					; sub_12D14+11Fr
off_2044A	dd unk_2094F		; DATA XREF: sub_12D14+D0r
		db  62h	; b
		db    0
word_20450	dw 2F96h		; DATA XREF: sub_12D14+152r
					; sub_12D14+175r
word_20452	dw 0			; DATA XREF: sub_12D14+14Er
					; sub_12D14+171r
		dd unk_20956
		db  61h	; a
		db    0
		db 0B8h	; ∏
		db  0Bh
		db    0
		db    0
		dd unk_20963
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_20970
		db  61h	; a
		db    0
word_2046E	dw 7C3h			; DATA XREF: sub_10A07+21r
word_20470	dw 0			; DATA XREF: sub_10A07+1Dr
		dd unk_2097D
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_2098A
		db  61h	; a
		db    0
		db 0E8h	; Ë
		db  80h	; Ä
		db    0
		db    0
		dd unk_20997
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
off_20490	dd unk_209A4		; DATA XREF: sub_12D14+DDr
		db  62h	; b
		db    0
word_20496	dw 0B60h		; DATA XREF: sub_12D14+1A4r
					; sub_12D14+1C7r
word_20498	dw 0			; DATA XREF: sub_12D14+1A0r
					; sub_12D14+1C3r
		dd unk_209AB
		db  61h	; a
		db    0
word_204A0	dw 898h			; DATA XREF: sub_10A07+5Fr
word_204A2	dw 0			; DATA XREF: sub_10A07+5Br
		db    0
		db    0
		db  18h
		db    0
		db  28h	; (
		db    0
		db  18h
		db    0
		db  50h	; P
		db    0
		db  18h
		db    0
		db  78h	; x
		db    0
		db  18h
		db    0
		db 0A0h	; †
		db    0
		db  18h
		db    0
		db 0C8h	; »
		db    0
		db  18h
		db    0
		db 0F0h	; 
		db    0
		db  18h
		db    0
		db  18h
		db    1
		db  18h
		db    0
		db    0
		db    0
		db  38h	; 8
		db    0
		db  28h	; (
		db    0
		db  38h	; 8
		db    0
		db  50h	; P
		db    0
		db  38h	; 8
		db    0
		db  78h	; x
		db    0
		db  38h	; 8
		db    0
		db 0A0h	; †
		db    0
		db  38h	; 8
		db    0
		db 0C8h	; »
		db    0
		db  38h	; 8
		db    0
		db 0F0h	; 
		db    0
		db  38h	; 8
		db    0
		db  18h
		db    1
		db  38h	; 8
		db    0
		db    0
		db    0
		db  58h	; X
		db    0
		db  28h	; (
		db    0
		db  58h	; X
		db    0
		db  50h	; P
		db    0
		db  58h	; X
		db    0
		db  78h	; x
		db    0
		db  58h	; X
		db    0
		db 0A0h	; †
		db    0
		db  58h	; X
		db    0
		db 0C8h	; »
		db    0
		db  58h	; X
		db    0
		db 0F0h	; 
		db    0
		db  58h	; X
		db    0
		db  18h
		db    1
		db  58h	; X
		db    0
		db    0
		db    0
		db  78h	; x
		db    0
		db  28h	; (
		db    0
		db  78h	; x
		db    0
		db  50h	; P
		db    0
		db  78h	; x
		db    0
		db  78h	; x
		db    0
		db  78h	; x
		db    0
		db 0A0h	; †
		db    0
		db  78h	; x
		db    0
		db 0C8h	; »
		db    0
		db  78h	; x
		db    0
		db 0F0h	; 
		db    0
		db  78h	; x
		db    0
		db  18h
		db    1
		db  78h	; x
		db    0
		db    0
		db    0
		db  98h	; ò
		db    0
		db  28h	; (
		db    0
		db  98h	; ò
		db    0
		db  50h	; P
		db    0
		db  98h	; ò
		db    0
		db  78h	; x
		db    0
		db  98h	; ò
		db    0
		db 0A0h	; †
		db    0
		db  98h	; ò
		db    0
		db 0C8h	; »
		db    0
		db  98h	; ò
		db    0
		db 0F0h	; 
		db    0
		db  98h	; ò
		db    0
		db  18h
		db    1
		db  98h	; ò
		db    0
		db    0
		db    0
		db 0B8h	; ∏
		db    0
		db  28h	; (
		db    0
		db 0B8h	; ∏
		db    0
		db  50h	; P
		db    0
		db 0B8h	; ∏
		db    0
		db  78h	; x
		db    0
		db 0B8h	; ∏
		db    0
		db 0A0h	; †
		db    0
		db 0B8h	; ∏
		db    0
		db 0C8h	; »
		db    0
		db 0B8h	; ∏
		db    0
		db 0F0h	; 
		db    0
		db 0B8h	; ∏
		db    0
		db  18h
		db    1
		db 0B8h	; ∏
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    8
		db    0
		db  30h	; 0
		db    0
		db    8
		db    0
		db  58h	; X
		db    0
		db    8
		db    0
		db  80h	; Ä
		db    0
		db    8
		db    0
		db 0A8h	; ®
		db    0
		db    8
		db    0
		db 0D0h	; –
		db    0
		db    8
		db    0
		db 0F8h	; ¯
		db    0
		db    8
		db    0
		db  20h
		db    1
		db    8
		db    0
		db    8
		db    0
		db  28h	; (
		db    0
		db  30h	; 0
		db    0
		db  28h	; (
		db    0
		db  58h	; X
		db    0
		db  28h	; (
		db    0
		db  80h	; Ä
		db    0
		db  28h	; (
		db    0
		db 0A8h	; ®
		db    0
		db  28h	; (
		db    0
		db 0D0h	; –
		db    0
		db  28h	; (
		db    0
		db 0F8h	; ¯
		db    0
		db  28h	; (
		db    0
		db  20h
		db    1
		db  28h	; (
		db    0
		db    8
		db    0
		db  48h	; H
		db    0
		db  30h	; 0
		db    0
		db  48h	; H
		db    0
		db  58h	; X
		db    0
		db  48h	; H
		db    0
		db  80h	; Ä
		db    0
		db  48h	; H
		db    0
		db 0A8h	; ®
		db    0
		db  48h	; H
		db    0
		db 0D0h	; –
		db    0
		db  48h	; H
		db    0
		db 0F8h	; ¯
		db    0
		db  48h	; H
		db    0
		db  20h
		db    1
		db  48h	; H
		db    0
		db    8
		db    0
		db  68h	; h
		db    0
		db  30h	; 0
		db    0
		db  68h	; h
		db    0
		db  58h	; X
		db    0
		db  68h	; h
		db    0
		db  80h	; Ä
		db    0
		db  68h	; h
		db    0
		db 0A8h	; ®
		db    0
		db  68h	; h
		db    0
		db 0D0h	; –
		db    0
		db  68h	; h
		db    0
		db 0F8h	; ¯
		db    0
		db  68h	; h
		db    0
		db  20h
		db    1
		db  68h	; h
		db    0
		db    8
		db    0
		db  88h	; à
		db    0
		db  30h	; 0
		db    0
		db  88h	; à
		db    0
		db  58h	; X
		db    0
		db  88h	; à
		db    0
		db  80h	; Ä
		db    0
		db  88h	; à
		db    0
		db 0A8h	; ®
		db    0
		db  88h	; à
		db    0
		db 0D0h	; –
		db    0
		db  88h	; à
		db    0
		db 0F8h	; ¯
		db    0
		db  88h	; à
		db    0
		db  20h
		db    1
		db  88h	; à
		db    0
		db    8
		db    0
		db 0A8h	; ®
		db    0
		db  30h	; 0
		db    0
		db 0A8h	; ®
		db    0
		db  58h	; X
		db    0
		db 0A8h	; ®
		db    0
		db  80h	; Ä
		db    0
		db 0A8h	; ®
		db    0
		db 0A8h	; ®
		db    0
		db 0A8h	; ®
		db    0
		db 0D0h	; –
		db    0
		db 0A8h	; ®
		db    0
		db 0F8h	; ¯
		db    0
		db 0A8h	; ®
		db    0
		db  20h
		db    1
		db 0A8h	; ®
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  20h
		db    0
		db    0
		db    0
		db  48h	; H
		db    0
		db    0
		db    0
		db  70h	; p
		db    0
		db    0
		db    0
		db  98h	; ò
		db    0
		db    0
		db    0
		db 0C0h	; ¿
		db    0
		db    0
		db    0
		db 0E8h	; Ë
		db    0
		db    0
		db    0
		db  10h
		db    1
		db    0
		db    0
		db  38h	; 8
		db    1
		db    0
		db    0
		db  20h
		db    0
		db  20h
		db    0
		db  48h	; H
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db  98h	; ò
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db 0E8h	; Ë
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  38h	; 8
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  40h	; @
		db    0
		db  48h	; H
		db    0
		db  40h	; @
		db    0
		db  70h	; p
		db    0
		db  40h	; @
		db    0
		db  98h	; ò
		db    0
		db  40h	; @
		db    0
		db 0C0h	; ¿
		db    0
		db  40h	; @
		db    0
		db 0E8h	; Ë
		db    0
		db  40h	; @
		db    0
		db  10h
		db    1
		db  40h	; @
		db    0
		db  38h	; 8
		db    1
		db  40h	; @
		db    0
		db  20h
		db    0
		db  60h	; `
		db    0
		db  48h	; H
		db    0
		db  60h	; `
		db    0
		db  70h	; p
		db    0
		db  60h	; `
		db    0
		db  98h	; ò
		db    0
		db  60h	; `
		db    0
		db 0C0h	; ¿
		db    0
		db  60h	; `
		db    0
		db 0E8h	; Ë
		db    0
		db  60h	; `
		db    0
		db  10h
		db    1
		db  60h	; `
		db    0
		db  38h	; 8
		db    1
		db  60h	; `
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  48h	; H
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db  98h	; ò
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db 0E8h	; Ë
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  38h	; 8
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0A0h	; †
		db    0
		db  48h	; H
		db    0
		db 0A0h	; †
		db    0
		db  70h	; p
		db    0
		db 0A0h	; †
		db    0
		db  98h	; ò
		db    0
		db 0A0h	; †
		db    0
		db 0C0h	; ¿
		db    0
		db 0A0h	; †
		db    0
		db 0E8h	; Ë
		db    0
		db 0A0h	; †
		db    0
		db  10h
		db    1
		db 0A0h	; †
		db    0
		db  38h	; 8
		db    1
		db 0A0h	; †
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_20924	dw 7350h		; DATA XREF: seg000:06BDr seg000:070Fr ...
seg_20926	dw seg dseg		; DATA XREF: seg000:070Br seg000:078Cr ...
		db    0
		db    0
		db    0
		db    3
		db    6
		db    0
		db  20h
		db    4
		db  44h	; D
		db    4
		db  66h	; f
		db    0
		db    6
		db    6
		db  40h	; @
		db    4
		db  60h	; `
		db    6
		db    4
		db    4
		db  44h	; D
		db    0
		db  22h	; "
		db    2
		db  40h	; @
		db    0
		db    4
		db    0
		db  50h	; P
		db    0
		db  77h	; w
		db    7
unk_20948	db  44h	; D		; DATA XREF: dseg:off_20440o
		db  31h	; 1
		db  2Eh	; .
		db  50h	; P
		db  41h	; A
		db  56h	; V
		db    0
unk_2094F	db  44h	; D		; DATA XREF: dseg:off_2044Ao
		db  31h	; 1
		db  2Eh	; .
		db  44h	; D
		db  45h	; E
		db  43h	; C
		db    0
unk_20956	db  53h	; S		; DATA XREF: dseg:00A4o
		db  50h	; P
		db  52h	; R
		db  49h	; I
		db  54h	; T
		db  45h	; E
		db  20h
		db  20h
		db  2Eh	; .
		db  42h	; B
		db  49h	; I
		db  4Eh	; N
		db    0
unk_20963	db  47h	; G		; DATA XREF: dseg:00AEo
		db  52h	; R
		db  49h	; I
		db  4Ch	; L
		db  4Ch	; L
		db  45h	; E
		db  20h
		db  20h
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_20970	db  44h	; D		; DATA XREF: dseg:00B8o
		db  44h	; D
		db  46h	; F
		db  4Eh	; N
		db  54h	; T
		db  32h	; 2
		db  20h
		db  20h
		db  2Eh	; .
		db  43h	; C
		db  41h	; A
		db  52h	; R
		db    0
unk_2097D	db  42h	; B		; DATA XREF: dseg:00C2o
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  4Fh	; O
		db  42h	; B
		db  4Ah	; J
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_2098A	db  42h	; B		; DATA XREF: dseg:00CCo
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  53h	; S
		db  50h	; P
		db  52h	; R
		db  2Eh	; .
		db  42h	; B
		db  49h	; I
		db  4Eh	; N
		db    0
unk_20997	db  47h	; G		; DATA XREF: dseg:00D6o
		db  52h	; R
		db  49h	; I
		db  4Ch	; L
		db  4Ch	; L
		db  4Fh	; O
		db  42h	; B
		db  4Ah	; J
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_209A4	db  44h	; D		; DATA XREF: dseg:off_20490o
		db  31h	; 1
		db  2Eh	; .
		db  42h	; B
		db  55h	; U
		db  4Dh	; M
		db    0
unk_209AB	db  46h	; F		; DATA XREF: dseg:00EAo
		db  4Ch	; L
		db  45h	; E
		db  43h	; C
		db  48h	; H
		db  45h	; E
		db  2Eh	; .
		db  42h	; B
		db  49h	; I
		db  4Eh	; N
		db    0
		db  49h	; I
		db  4Eh	; N
		db  53h	; S
		db  45h	; E
		db  52h	; R
		db  54h	; T
		db  20h
		db  54h	; T
		db  48h	; H
		db  45h	; E
		db  20h
		db  4Fh	; O
		db  54h	; T
		db  48h	; H
		db  45h	; E
		db  52h	; R
		db  20h
		db  44h	; D
		db  49h	; I
		db  53h	; S
		db  4Bh	; K
		db  20h
		db  41h	; A
		db  4Eh	; N
		db  44h	; D
		db  20h
		db  50h	; P
		db  52h	; R
		db  45h	; E
		db  53h	; S
		db  53h	; S
		db  20h
		db  41h	; A
		db  20h
		db  4Bh	; K
		db  45h	; E
		db  59h	; Y
		db  20h
		db  21h	; !
		db    0
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db  20h
		db  46h	; F
		db  4Ch	; L
		db  4Fh	; O
		db  57h	; W
		db  20h
		db  21h	; !
		db    0
		db    0
		db    0
		db    0
		db    4
		db    6
		db  0Ch
		db  0Ch
		db  0Bh
		db    9
		db    4
		db    6
		db  0Ch
		db  0Eh
		db  0Eh
		db  0Fh
		db  0Fh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  0Ah
		db    4
		db    6
		db    6
		db  0Ch
		db  0Eh
		db  0Fh
		db  0Fh
unk_20A0A	db    0			; DATA XREF: dseg:06EAo
		db    0
		db    1
		db    9
		db  0Bh
		db    5
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    9
		db  0Bh
		db    5
		db    7
		db    0
unk_20A1A	db    0			; DATA XREF: dseg:06EEo
		db    0
		db    6
		db  0Eh
		db    7
		db    8
		db    4
		db    6
		db  0Bh
		db    2
		db  0Ah
		db    1
		db    9
		db    7
		db  0Bh
		db    0
unk_20A2A	db    0			; DATA XREF: dseg:06F2o
		db    0
		db    4
		db  0Bh
		db    7
		db    8
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    1
		db    9
		db    7
		db    7
		db    0
unk_20A3A	db    0			; DATA XREF: dseg:06F6o
		db    0
		db    6
		db  0Eh
		db  0Bh
		db    1
		db  0Ch
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    9
		db  0Bh
		db    9
		db    7
		db    0
unk_20A4A	db    0			; DATA XREF: dseg:06FAo
		db    8
		db    4
		db    7
		db    9
		db    1
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    1
		db    9
		db    9
		db    7
		db    0
unk_20A5A	db    0			; DATA XREF: dseg:06FEo
		db    1
		db    9
		db    8
		db    7
		db    9
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    9
		db  0Bh
		db  0Bh
		db    7
		db    0
unk_20A6A	db    0			; DATA XREF: dseg:0702o
		db    8
		db    9
		db    7
		db    1
		db    9
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    8
		db    1
		db  0Bh
		db    7
		db    0
unk_20A7A	db    0			; DATA XREF: dseg:0706o
		db    4
		db    6
		db  0Ch
		db  0Ch
		db    1
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    9
		db    9
		db    9
		db    7
		db    0
unk_20A8A	db    0			; DATA XREF: dseg:070Ao
		db    7
		db    9
		db    9
		db  0Dh
		db    0
		db    4
		db    6
		db    9
		db    2
		db  0Ah
		db    7
		db    9
		db    5
		db    7
		db    0
		dd unk_20A0A
		dd unk_20A1A
		dd unk_20A2A
		dd unk_20A3A
		dd unk_20A4A
		dd unk_20A5A
		dd unk_20A6A
		dd unk_20A7A
		dd unk_20A8A
		db    0
		db    1
		db    9
		db  0Eh
		db  0Ah
		db    5
		db    4
		db    6
		db  0Ch
		db    2
		db  0Ah
		db    9
		db  0Bh
		db    5
		db    7
		db    0
		db    0
		db    1
		db    8
		db    8
		db    7
		db  0Bh
		db  0Bh
		db    9
		db    1
		db    9
		db    4
		db    4
		db    6
		db  0Ch
		db  0Ch
		db    1
		db    0
		db    0
		db    0
		db    4
		db    6
		db  0Ch
		db  0Ch
		db  0Bh
		db    9
		db    4
		db    6
		db  0Ch
		db  0Eh
		db  0Eh
		db  0Fh
		db  0Fh
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    7
		db  50h	; P
		db    0
		db  42h	; B
		db    3
		db    2
		db    4
		db    0
		db    5
		db  20h
		db    6
		db  30h	; 0
		db    0
		db  21h	; !
		db    0
		db  32h	; 2
		db    0
		db  27h	; '
		db    2
		db  37h	; 7
		db    4
		db  13h
		db    4
		db  43h	; C
		db    0
		db    1
		dd unk_28F38
		dd unk_285FE
		dd unk_28932
		db    3
		db    0
		db    6
		db  40h	; @
		db    6
		db  41h	; A
		db    6
		db  42h	; B
		db    0
		db    0
		db  2Bh	; +
		db  43h	; C
		db  2Bh	; +
		db  44h	; D
		db    6
		db  45h	; E
		db    6
		db  46h	; F
		db    6
		db  47h	; G
		db    6
		db  48h	; H
		db    7
		db    0
		db    6
		db  49h	; I
		db    6
		db  4Ah	; J
		db  0Ah
		db  24h	; $
		db    6
		db  27h	; '
		db    3
		db  33h	; 3
		db    6
		db  4Ch	; L
		db  2Ch	; ,
		db    0
		db    6
		db  4Dh	; M
		db  2Bh	; +
		db  57h	; W
		db  2Bh	; +
		db  58h	; X
		db    6
		db  4Eh	; N
		db    6
		db  4Fh	; O
		db    6
		db  50h	; P
		db    3
		db  3Fh	; ?
		db    6
		db  51h	; Q
		db    6
		db  52h	; R
		db    6
		db  53h	; S
		db    6
		db  54h	; T
		db  2Ch	; ,
		db  55h	; U
		db    6
		db  56h	; V
		db    6
		db    0
		db    6
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
off_20B7A	dw offset sub_128F9	; DATA XREF: sub_11E02+30r
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_123B6
		dw offset sub_128F9
		dw offset sub_12423
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_12470
		dw offset sub_1248E
		dw offset sub_124D7
		dw offset sub_1250A
		dw offset sub_125AD
		dw offset sub_123B6
		dw offset sub_122B0
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_14344
		dw offset sub_14437
		dw offset sub_14437
		dw offset sub_14437
		dw offset sub_14437
		dw offset sub_11E5E
		dw offset sub_11E90
		dw offset sub_11EC2
		dw offset sub_11F3E
		dw offset sub_12138
		dw offset sub_121E7
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_122B0
		dw offset sub_122C1
		dw offset sub_122D2
		dw offset sub_12810
		dw offset sub_11E3D
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		dw offset sub_128F9
		align 4
word_20BFC	dw 0			; DATA XREF: sub_15085+1Bw
					; sub_150FB:loc_15137r
word_20BFE	dw 0			; DATA XREF: sub_15085+24w
					; sub_150FB+2Fr
word_20C00	dw 0			; DATA XREF: sub_15085+2Dw
					; sub_150FB:loc_15157r
word_20C02	dw 0			; DATA XREF: sub_15085+36w
					; sub_150FB+4Fr
word_20C04	dw 0			; DATA XREF: sub_150C0+1Bw
					; sub_150FB+2Cr
word_20C06	dw 0			; DATA XREF: sub_150C0+24w
					; sub_150FB+3Fr
word_20C08	dw 0			; DATA XREF: sub_150C0+2Dw
					; sub_150FB:loc_15147r
word_20C0A	dw 0			; DATA XREF: sub_150C0+36w
					; sub_150FB+5Fr
off_20C0C	dw offset sub_17111	; DATA XREF: sub_15003+1Cr
		dw offset sub_15025
		dw offset sub_1503F
		dw offset sub_15059
		dw offset sub_1506F
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
off_20C20	dw offset sub_17111	; DATA XREF: sub_14C99+120r
		dw offset sub_14DBF
		dw offset sub_14E44
		dw offset sub_14EC9
		dw offset sub_14F4E
		dw offset sub_14DBF
		dw offset sub_14DBF
		dw offset sub_14DBF
		dw offset sub_14DBF
		dw offset sub_14DBF
		dw offset sub_17111
unk_20C36	db 0FFh			; DATA XREF: sub_131DE+6Do
					; sub_16183:loc_16191o	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_20C68	dw 737Ah		; DATA XREF: sub_11BD7:loc_11C11r
					; sub_11BD7+5Er ...
seg_20C6A	dw seg dseg		; DATA XREF: sub_11BD7+5Ar
word_20C6C	dw 73A4h		; DATA XREF: sub_11B2B+54r
					; sub_11B2B+6Fr ...
seg_20C6E	dw seg dseg		; DATA XREF: sub_11B2B+8Er
word_20C70	dw 73CEh		; DATA XREF: sub_11A67+55r
					; sub_11A67+70r ...
seg_20C72	dw seg dseg		; DATA XREF: sub_11A67:loc_11B0Dr
word_20C74	dw 73F8h		; DATA XREF: sub_119E4:loc_119F0r
					; sub_119E4+30r ...
seg_20C76	dw seg dseg		; DATA XREF: sub_119E4+2Cr
word_20C78	dw 7422h		; DATA XREF: sub_117C7+6Br
					; sub_117C7+7Br ...
seg_20C7A	dw seg dseg		; DATA XREF: sub_117C7+77r
word_20C7C	dw 744Ch		; DATA XREF: sub_117C7+85r
					; sub_117C7+B3r ...
seg_20C7E	dw seg dseg		; DATA XREF: sub_117C7+AFr
					; sub_117C7+D7r ...
word_20C80	dw 7476h		; DATA XREF: sub_117C7:loc_11961r
					; sub_117C7+1BEr ...
seg_20C82	dw seg dseg		; DATA XREF: sub_117C7+1BAr
word_20C84	dw 74A0h		; DATA XREF: sub_1165E+6Br
					; sub_1165E:loc_116E4r	...
seg_20C86	dw seg dseg		; DATA XREF: sub_1165E+9Er
off_20C88	dd unk_2787A		; DATA XREF: sub_1535E+240r
off_20C8C	dd unk_278A4		; DATA XREF: sub_1535E+28Cr
word_20C90	dw 751Eh		; DATA XREF: sub_1165E:loc_1176Fr
					; sub_1165E+14Dr ...
seg_20C92	dw seg dseg		; DATA XREF: sub_1165E:loc_117A7r
word_20C94	dw 7548h		; DATA XREF: sub_11A20+17r
					; sub_11A20+3Br ...
seg_20C96	dw seg dseg		; DATA XREF: sub_11A20+37r
word_20C98	dw 7572h		; DATA XREF: sub_119A1+13r
					; sub_119A1+37r ...
seg_20C9A	dw seg dseg		; DATA XREF: sub_119A1+33r
word_20C9C	dw 759Ch		; DATA XREF: sub_11C41:loc_11C82r
					; sub_11C41+65r ...
seg_20C9E	dw seg dseg		; DATA XREF: sub_11C41+61r
		dd unk_21596
		db  40h	; @
		db  4Bh	; K
		db  4Ch	; L
		db    0
		dd unk_2159F
		db 0C0h	; ¿
		db 0C6h	; ∆
		db  2Dh	; -
		db    0
		dd unk_215A8
		db  40h	; @
		db  42h	; B
		db  0Fh
		db    0
		dd unk_215B1
		db  40h	; @
		db  0Dh
		db    3
		db    0
		dd unk_215BA
		db  30h	; 0
		db  75h	; u
		db    0
		db    0
		dd unk_215C3
		db 0A0h	; †
		db  0Fh
		db    0
		db    0
word_20CD0	dw 121Ch		; DATA XREF: sub_157E1+70r
seg_20CD2	dw seg dseg		; DATA XREF: sub_157E1+6Dr
		db 0F4h	; Ù
		db    1
		db    0
		db    0
		dd unk_215D5
		db  61h	; a
		db    0
word_20CDE	dw 5F90h		; DATA XREF: sub_12EF8+34r
word_20CE0	dw 1			; DATA XREF: sub_12EF8+30r
		dd unk_215E2
		db  61h	; a
		db    0
word_20CE8	dw 7D63h		; DATA XREF: sub_12EF8+72r
word_20CEA	dw 0			; DATA XREF: sub_12EF8+6Er
		dd unk_215EF
		db  61h	; a
		db    0
word_20CF2	dw 7D63h		; DATA XREF: sub_12FAC+28r
word_20CF4	dw 0			; DATA XREF: sub_12FAC+24r
		dd unk_215FC
		db  61h	; a
		db    0
word_20CFC	dw 7D63h		; DATA XREF: sub_15681+41r
word_20CFE	dw 0			; DATA XREF: sub_15681+3Dr
		dd unk_21606
		db  62h	; b
		db    0
word_20D06	dw 1A5Ch		; DATA XREF: sub_130DD+27r
word_20D08	dw 0			; DATA XREF: sub_130DD+23r
		dd unk_21610
		db  62h	; b
		db    0
word_20D10	dw 8945h		; DATA XREF: sub_130DD+57r
word_20D12	dw 0			; DATA XREF: sub_130DD+53r
		dd asc_2161A		; " "
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db    0
		dd asc_2161C		; " "
		db  7Ah	; z
		db    0
		db    0
		db    0
		db    0
		db    0
		dd unk_2161E
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21629
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21634
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_2163F
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_2164A
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21655
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21660
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_2166B
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21676
		db  61h	; a
		db    0
		db  63h	; c
		db  7Dh	; }
		db    0
		db    0
		dd unk_21681
		db  62h	; b
		db    0
word_20D88	dw 7D63h		; DATA XREF: sub_13ED4+2Br
word_20D8A	dw 0			; DATA XREF: sub_13ED4+27r
		dd unk_2168D
		db  62h	; b
		db    0
word_20D92	dw 7D63h		; DATA XREF: sub_135A5+40r
word_20D94	dw 0			; DATA XREF: sub_135A5+3Cr
unk_20D96	db    0			; DATA XREF: dseg:10CCo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    9
		db  60h	; `
		db    1
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  50h	; P
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    7
		db  50h	; P
		db    0
		db    4
		db  30h	; 0
		db    0
		db    0
		db    6
		db  50h	; P
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    9
		db  50h	; P
		db    0
		db    2
		db  60h	; `
		db    0
		db    0
		db    8
		db  50h	; P
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  50h	; P
		db    0
		db    0
		db    0
		db  0Fh
		db  30h	; 0
		db  0Ah
		db  50h	; P
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ch
		db  50h	; P
		db  0Eh
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db  0Fh
		db  50h	; P
		db    0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db  0Eh
		db  50h	; P
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_20E30	db  20h			; DATA XREF: dseg:10F0o
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_20E6C	db    0			; DATA XREF: dseg:10D0o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  30h	; 0
		db    9
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  30h	; 0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db  0Dh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db  0Eh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db  0Fh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db    0
		db    9
		db  30h	; 0
		db    0
		db    0
		db  0Ch
		db  50h	; P
		db  0Eh
		db  50h	; P
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db  0Fh
		db  50h	; P
		db    0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db  0Eh
		db  50h	; P
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_20F06	db  70h	; p		; DATA XREF: dseg:10F4o
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_20F42	db    0			; DATA XREF: dseg:10D4o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  50h	; P
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  30h	; 0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    9
		db  50h	; P
		db    0
		db    0
		db    0
		db  0Dh
		db  30h	; 0
		db    8
		db  50h	; P
		db  0Ah
		db  50h	; P
		db    0
		db    6
		db  30h	; 0
		db  0Eh
		db  30h	; 0
		db    9
		db  50h	; P
		db  0Bh
		db  50h	; P
		db    0
		db    7
		db  30h	; 0
		db  0Fh
		db  30h	; 0
		db  0Ah
		db  50h	; P
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_20FDC	db  20h			; DATA XREF: dseg:10F8o
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_21018	db    0			; DATA XREF: dseg:10D8o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  30h	; 0
		db    6
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  50h	; P
		db    0
		db    4
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    6
		db  50h	; P
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    9
		db  50h	; P
		db    0
		db    2
		db  60h	; `
		db    0
		db    0
		db    8
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  50h	; P
		db    0
		db    7
		db  30h	; 0
		db    0
		db    0
		db  0Ah
		db  50h	; P
		db  0Ch
		db  50h	; P
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db  0Bh
		db  50h	; P
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21096	db  20h			; DATA XREF: dseg:10FCo
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
unk_210C6	db    0			; DATA XREF: dseg:10DCo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    1
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  50h	; P
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    2
		db  30h	; 0
		db    9
		db  30h	; 0
		db    0
		db    0
		db    6
		db  50h	; P
		db    0
		db    0
		db    0
		db  0Ah
		db  30h	; 0
		db    5
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  50h	; P
		db    0
		db    4
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    7
		db  50h	; P
		db    9
		db  50h	; P
		db    0
		db    5
		db  30h	; 0
		db    0
		db    0
		db    8
		db  50h	; P
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21144	db  70h	; p		; DATA XREF: dseg:1100o
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_21174	db    0			; DATA XREF: dseg:10E0o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    0
		db    0
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  30h	; 0
		db  0Ch
		db  60h	; `
		db    0
		db    0
		db    6
		db  50h	; P
		db    0
		db    2
		db  30h	; 0
		db    0
		db    0
		db    5
		db  50h	; P
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    8
		db  50h	; P
		db    0
		db    4
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    7
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ah
		db  50h	; P
		db    0
		db    7
		db  30h	; 0
		db  0Eh
		db  30h	; 0
		db    9
		db  50h	; P
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db  0Fh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Eh
		db  50h	; P
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db    0
		db    0
		db    0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_2120E	db  20h			; DATA XREF: dseg:1104o
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_2124A	db    0			; DATA XREF: dseg:10E4o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    1
		db  50h	; P
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    9
		db  60h	; `
		db    2
		db  50h	; P
		db    4
		db  50h	; P
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  30h	; 0
		db  0Bh
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  30h	; 0
		db  0Ch
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  50h	; P
		db    0
		db    6
		db  60h	; `
		db    0
		db    0
		db  0Ah
		db  50h	; P
		db  0Ch
		db 0A0h	; †
		db    0
		db    7
		db  60h	; `
		db    0
		db    0
		db  0Bh
		db 0A0h	; †
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_212C8	db  20h			; DATA XREF: dseg:1108o
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  20h
		db    0
		db  50h	; P
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
unk_212F8	db    0			; DATA XREF: dseg:10E8o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  60h	; `
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    1
		db  50h	; P
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db    2
		db  50h	; P
		db    4
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  60h	; `
		db    0
		db    0
		db    0
		db    2
		db  30h	; 0
		db    9
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  30h	; 0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    7
		db  60h	; `
		db    0
		db    0
		db    0
		db  0Bh
		db  30h	; 0
		db    6
		db  60h	; `
		db    0
		db    0
		db    0
		db    1
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    9
		db  50h	; P
		db    0
		db    5
		db  30h	; 0
		db  0Dh
		db  30h	; 0
		db    8
		db  50h	; P
		db  0Ah
		db  50h	; P
		db    0
		db    6
		db  30h	; 0
		db  0Eh
		db  30h	; 0
		db    9
		db  50h	; P
		db  0Bh
		db  60h	; `
		db    0
		db    7
		db  30h	; 0
		db  0Fh
		db  30h	; 0
		db  0Ah
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db    0
		db    9
		db  30h	; 0
		db    0
		db    0
		db  0Ch
		db  50h	; P
		db  0Eh
		db  50h	; P
		db    0
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db  0Dh
		db  50h	; P
		db    0
		db    0
		db    0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21392	db  20h			; DATA XREF: dseg:110Co
		db    0
		db  20h
		db    0
		db  70h	; p
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  20h
		db    1
		db  20h
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  20h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db 0C0h	; ¿
		db    0
		db  80h	; Ä
		db    0
		db  20h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db 0C0h	; ¿
		db    0
		db 0B0h	; ∞
		db    0
		db  20h
		db    1
		db 0B0h	; ∞
		db    0
unk_213CE	db    0			; DATA XREF: dseg:10ECo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  60h	; `
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  30h	; 0
		db    0
		db    0
		db    3
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db    5
		db  50h	; P
		db    0
		db    2
		db  30h	; 0
		db    0
		db    0
		db    4
		db  50h	; P
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  60h	; `
		db  0Ah
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  30h	; 0
		db  0Bh
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db  30h	; 0
		db  0Ch
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  50h	; P
		db    0
		db    8
		db  30h	; 0
		db    0
		db    0
		db  0Ah
		db  50h	; P
		db  0Ch
		db 0A0h	; †
		db    0
		db    9
		db  30h	; 0
		db    0
		db    0
		db  0Bh
		db 0A0h	; †
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_2144C	db  20h			; DATA XREF: dseg:1110o
		db    0
		db  20h
		db    0
		db 0C0h	; ¿
		db    0
		db  20h
		db    0
		db  10h
		db    1
		db  20h
		db    0
		db  70h	; p
		db    0
		db  50h	; P
		db    0
		db 0C0h	; ¿
		db    0
		db  50h	; P
		db    0
		db  10h
		db    1
		db  50h	; P
		db    0
		db  20h
		db    0
		db  80h	; Ä
		db    0
		db  70h	; p
		db    0
		db  80h	; Ä
		db    0
		db  10h
		db    1
		db  80h	; Ä
		db    0
		db  20h
		db    0
		db 0B0h	; ∞
		db    0
		db  70h	; p
		db    0
		db 0B0h	; ∞
		db    0
		db  10h
		db    1
		db 0B0h	; ∞
		db    0
		dd unk_20D96
		dd unk_20E6C
		dd unk_20F42
		dd unk_21018
		dd unk_210C6
		dd unk_21174
		dd unk_2124A
		dd unk_212F8
		dd unk_213CE
		dd unk_20E30
		dd unk_20F06
		dd unk_20FDC
		dd unk_21096
		dd unk_21144
		dd unk_2120E
		dd unk_212C8
		dd unk_21392
		dd unk_2144C
unk_214C4	db    1			; DATA XREF: sub_13CF7+61o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db    5
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db    0
		db    0
		db    1
		db    0
		db    7
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db  13h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  16h
		db    0
		db    0
		db    0
		db    3
		db    0
		db  19h
		db    0
		db    0
		db    0
		db    3
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		db    3
		db    0
		db  1Fh
		db    0
		db    0
		db    0
		db    3
		db    0
		db  64h	; d
		db    0
		db    0
		db    0
		db    0
		db    0
		db  23h	; #
		db    1
byte_2154A	db 0			; DATA XREF: sub_12D14+1Br
					; sub_12D14:loc_12D3Br	...
		align 2
word_2154C	dw 1E61h		; DATA XREF: sub_130DD:loc_13173r
					; sub_130DD+9Cw ...
		dd unk_21697
		dd unk_216A5
		dd unk_216B9
		dd unk_216C8
		dd unk_216D7
		db 0FFh
		db 0AAh	; ™
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  46h	; F
		db    0
		db  4Fh	; O
		db    0
		db  51h	; Q
		db    0
		db  93h	; ì
		db    0
		db  9Fh	; ü
		db    0
		db 0A8h	; ®
		db    0
		db 0B4h	; ¥
		db    0
		db 0B3h	; ≥
		db    0
		db 0BEh	; æ
		db    0
		db 0C4h	; ƒ
		db    0
		db 0CAh	;  
		db    0
		db 0CBh	; À
		db    0
		db 0DAh	; ⁄
		db    0
		db 0E1h	; ·
		db    0
		db    0
		db    0
		db    4
		db    6
		db    7
		db    5
		db  0Fh
		db  10h
		db  18h
		db  13h
		db  1Ch
		db  1Ah
		db  19h
		db  1Bh
		db  11h
		db  12h
unk_21596	db  42h	; B		; DATA XREF: dseg:08F0o
		db  49h	; I
		db  47h	; G
		db  20h
		db  4Ah	; J
		db  49h	; I
		db  4Dh	; M
		db  2Eh	; .
		db    0
unk_2159F	db  53h	; S		; DATA XREF: dseg:08F8o
		db  55h	; U
		db  50h	; P
		db  45h	; E
		db  52h	; R
		db  20h
		db  4Ah	; J
		db  4Fh	; O
		db    0
unk_215A8	db  53h	; S		; DATA XREF: dseg:0900o
		db  54h	; T
		db  45h	; E
		db  56h	; V
		db  45h	; E
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db    0
unk_215B1	db  57h	; W		; DATA XREF: dseg:0908o
		db  49h	; I
		db  4Ch	; L
		db  49h	; I
		db  41h	; A
		db  4Dh	; M
		db  2Eh	; .
		db  2Eh	; .
		db    0
unk_215BA	db  4Ah	; J		; DATA XREF: dseg:0910o
		db  4Fh	; O
		db  48h	; H
		db  4Eh	; N
		db  4Eh	; N
		db  59h	; Y
		db  2Eh	; .
		db  2Eh	; .
		db    0
unk_215C3	db  46h	; F		; DATA XREF: dseg:0918o
		db  52h	; R
		db  41h	; A
		db  4Eh	; N
		db  4Bh	; K
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db    0
		db  4Dh	; M
		db  49h	; I
		db  4Bh	; K
		db  45h	; E
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db    0
unk_215D5	db  42h	; B		; DATA XREF: dseg:0928o
		db  55h	; U
		db  4Dh	; M
		db  53h	; S
		db  50h	; P
		db  4Ah	; J
		db  45h	; E
		db  55h	; U
		db  2Eh	; .
		db  42h	; B
		db  49h	; I
		db  4Eh	; N
		db    0
unk_215E2	db  4Dh	; M		; DATA XREF: dseg:0932o
		db  41h	; A
		db  53h	; S
		db  4Bh	; K
		db  42h	; B
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_215EF	db  42h	; B		; DATA XREF: dseg:093Co
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  52h	; R
		db  45h	; E
		db  53h	; S
		db  45h	; E
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_215FC	db  53h	; S		; DATA XREF: dseg:0946o
		db  43h	; C
		db  4Fh	; O
		db  52h	; R
		db  45h	; E
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21606	db  42h	; B		; DATA XREF: dseg:0950o
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  2Eh	; .
		db  42h	; B
		db  4Eh	; N
		db  4Bh	; K
		db    0
unk_21610	db  42h	; B		; DATA XREF: dseg:095Ao
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  2Eh	; .
		db  4Dh	; M
		db  49h	; I
		db  44h	; D
		db    0
asc_2161A	db ' ',0                ; DATA XREF: dseg:0964o
asc_2161C	db ' ',0                ; DATA XREF: dseg:096Eo
unk_2161E	db  4Dh	; M		; DATA XREF: dseg:0978o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  31h	; 1
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21629	db  4Dh	; M		; DATA XREF: dseg:0982o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  32h	; 2
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21634	db  4Dh	; M		; DATA XREF: dseg:098Co
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  33h	; 3
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_2163F	db  4Dh	; M		; DATA XREF: dseg:0996o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  34h	; 4
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_2164A	db  4Dh	; M		; DATA XREF: dseg:09A0o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  35h	; 5
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21655	db  4Dh	; M		; DATA XREF: dseg:09AAo
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  36h	; 6
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21660	db  4Dh	; M		; DATA XREF: dseg:09B4o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  37h	; 7
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_2166B	db  4Dh	; M		; DATA XREF: dseg:09BEo
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  38h	; 8
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21676	db  4Dh	; M		; DATA XREF: dseg:09C8o
		db  4Fh	; O
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  39h	; 9
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21681	db  44h	; D		; DATA XREF: dseg:09D2o
		db  45h	; E
		db  53h	; S
		db  53h	; S
		db  46h	; F
		db  49h	; I
		db  4Eh	; N
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_2168D	db  54h	; T		; DATA XREF: dseg:09DCo
		db  49h	; I
		db  54h	; T
		db  52h	; R
		db  45h	; E
		db  2Eh	; .
		db  56h	; V
		db  45h	; E
		db  43h	; C
		db    0
unk_21697	db  59h	; Y		; DATA XREF: dseg:119Eo
		db  4Fh	; O
		db  55h	; U
		db  52h	; R
		db  20h
		db  50h	; P
		db  41h	; A
		db  53h	; S
		db  53h	; S
		db  57h	; W
		db  4Fh	; O
		db  52h	; R
		db  44h	; D
		db    0
unk_216A5	db  45h	; E		; DATA XREF: dseg:11A2o
		db  4Eh	; N
		db  54h	; T
		db  45h	; E
		db  52h	; R
		db  20h
		db  59h	; Y
		db  4Fh	; O
		db  55h	; U
		db  52h	; R
		db  20h
		db  50h	; P
		db  41h	; A
		db  53h	; S
		db  53h	; S
		db  57h	; W
		db  4Fh	; O
		db  52h	; R
		db  44h	; D
		db    0
unk_216B9	db  20h			; DATA XREF: dseg:11A6o
		db  50h	; P
		db  41h	; A
		db  53h	; S
		db  53h	; S
		db  57h	; W
		db  4Fh	; O
		db  52h	; R
		db  44h	; D
		db  20h
		db  4Fh	; O
		db  4Bh	; K
		db  20h
		db  20h
		db    0
unk_216C8	db  50h	; P		; DATA XREF: dseg:11AAo
		db  41h	; A
		db  53h	; S
		db  53h	; S
		db  57h	; W
		db  4Fh	; O
		db  52h	; R
		db  44h	; D
		db  20h
		db  45h	; E
		db  52h	; R
		db  52h	; R
		db  4Fh	; O
		db  52h	; R
		db    0
unk_216D7	db  47h	; G		; DATA XREF: dseg:11AEo
		db  41h	; A
		db  4Dh	; M
		db  45h	; E
		db  20h
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db    0
		db  45h	; E
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  20h
		db  74h	; t
		db  68h	; h
		db  65h	; e
		db  20h
		db  70h	; p
		db  6Ch	; l
		db  61h	; a
		db  74h	; t
		db  66h	; f
		db  6Fh	; o
		db  72h	; r
		db  6Dh	; m
		db  20h
		db  6Eh	; n
		db  75h	; u
		db  6Dh	; m
		db  62h	; b
		db  65h	; e
		db  72h	; r
		db    0
		db '    ',0
		db '    ',0
		db  45h	; E
		db  52h	; R
		db  52h	; R
		db  4Fh	; O
		db  52h	; R
		db    0
		align 2
		dd unk_2291E
		dd unk_22925
		dd unk_2292C
		dd unk_22933
		dd unk_2293A
		dd unk_22941
		dd unk_22948
		dd unk_2294F
unk_2172C	db    0			; DATA XREF: dseg:13D2o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
unk_21744	db    0			; DATA XREF: sub_131DE+93o
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21780	db  0Eh			; DATA XREF: dseg:2252o
		db    0
		dd unk_2172C
unk_21786	db    7			; DATA XREF: dseg:1426o
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    7
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db    0
		db    0
		db    6
		db    0
		db    4
		db    0
		db    1
		db    0
		db    6
		db    0
		db    4
		db    0
		db    2
		db    0
unk_217BC	db    7			; DATA XREF: sub_11F03+11o
		db    0
		db    4
		db    0
		db    2
		db    0
		db    7
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_217D4	db  0Dh			; DATA XREF: dseg:2256o
		db    1
		dd unk_21786
unk_217DA	db    1			; DATA XREF: dseg:147Ao
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    1
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    2
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    2
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    1
		db    0
		db    2
		db    0
		db    4
		db    0
		db    2
		db    0
unk_21810	db    1			; DATA XREF: sub_11F7F+11o
		db    0
		db    4
		db    0
		db    2
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_21828	db  0Dh			; DATA XREF: dseg:225Ao
		db    0
		dd unk_217DA
unk_2182E	db  0Bh			; DATA XREF: dseg:14B0o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
unk_2185E	db    8			; DATA XREF: dseg:225Eo
		db    0
		dd unk_2182E
unk_21864	db    1			; DATA XREF: dseg:14E6o
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    4
		db    0
		db    4
		db    0
		db    0
		db    0
		db    4
		db    0
		db    5
		db    0
		db    0
		db    0
		db    4
		db    0
		db    6
		db    0
		db    0
		db    0
		db    4
		db    0
		db    7
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21894	db    8			; DATA XREF: dseg:2262o dseg:2306o
		db    0
		dd unk_21864
unk_2189A	db    9			; DATA XREF: sub_12423+17o
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db    0
		db    6
		db    0
		db    6
		db    0
		db    7
		db    0
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    2
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Ch
		db    0
		db  0Dh
		db    0
		db  0Eh
		db    0
		db  0Fh
		db    0
		db  10h
		db    0
		db    9
		db    0
		db  0Ch
		db    0
		db  0Dh
		db    0
		db  0Eh
		db    0
		db  0Fh
		db    0
		db  10h
		db    0
		db    9
		db    0
		db    8
		db    0
		db    9
		db    0
unk_218DC	db    0			; DATA XREF: dseg:156Ao
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  11h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  11h
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21918	db  0Ah			; DATA XREF: dseg:226Ao
		db    0
		dd unk_218DC
unk_2191E	db    0			; DATA XREF: dseg:15B2o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21960	db  0Bh			; DATA XREF: dseg:226Eo
		db    0
		dd unk_2191E
unk_21966	db  0Bh			; DATA XREF: dseg:15FAo dseg:1600o
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    1
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
unk_219A8	db  0Bh			; DATA XREF: dseg:2272o
		db    1
		dd unk_21966
unk_219AE	db  0Bh			; DATA XREF: dseg:2276o
		db    0
		dd unk_21966
unk_219B4	db    0			; DATA XREF: dseg:1660o
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0F9h	; ˘
		db 0FFh
		db    7
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    1
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    7
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    7
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21A0E	db  0Fh			; DATA XREF: dseg:227Ao
		db    0
		dd unk_219B4
unk_21A14	db    0			; DATA XREF: sub_1248E+17o
		db    0
		db  2Dh	; -
		db    0
		db  2Eh	; .
		db    0
		db  2Fh	; /
		db    0
		db  30h	; 0
		db    0
		db  31h	; 1
		db    0
		db  32h	; 2
		db    0
		db  33h	; 3
		db    0
		db  34h	; 4
		db    0
		db  35h	; 5
		db    0
		db  36h	; 6
		db    0
		db  37h	; 7
		db    0
		db  32h	; 2
		db    0
		db  2Fh	; /
		db    0
		db  2Eh	; .
		db    0
		db  2Dh	; -
		db    0
		db    0
		db    0
		db    7
		db    0
		db    1
		db    0
		db    7
		db    0
		db    1
		db    0
		db    7
		db    0
		db    1
		db    0
		db    7
		db    0
		db    1
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Bh
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db    9
		db    0
		db    9
		db    0
		db    8
		db    0
		db    8
		db    0
		db    9
		db    0
		db    9
		db    0
unk_21A5E	db    0			; DATA XREF: dseg:16C8o
		db    0
		db    0
		db    0
		db    3
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21A76	db    4			; DATA XREF: dseg:2282o
		db    0
		dd unk_21A5E
unk_21A7C	db    9			; DATA XREF: dseg:16DAo
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    9
		db    0
		db    0
		db    0
		db    2
		db    0
unk_21A88	db    2			; DATA XREF: dseg:2286o
		db    0
		dd unk_21A7C
unk_21A8E	db  13h			; DATA XREF: dseg:1758o
		db    0
		db    0
		db    0
		db    0
		db    0
		db  13h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  14h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  15h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  15h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  16h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  16h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  17h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  17h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  18h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  18h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  19h
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Ah
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Bh
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Dh
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Eh
		db    0
		db    0
		db    0
		db    1
		db    0
		db  1Fh
		db    0
		db    0
		db    0
		db    1
		db    0
		db  20h
		db    0
		db    0
		db    0
		db    1
		db    0
unk_21B06	db  14h			; DATA XREF: dseg:228Ao dseg:2312o ...
		db    0
		dd unk_21A8E
unk_21B0C	db  20h			; DATA XREF: dseg:1794o
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Fh
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  1Eh
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  1Dh
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  1Ch
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  1Ah
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  18h
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  15h
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
unk_21B42	db    9			; DATA XREF: dseg:228Eo
		db    0
		dd unk_21B0C
unk_21B48	db  22h	; "		; DATA XREF: dseg:1800o
		db    0
		db    1
		db    0
		db    2
		db    0
		db  22h	; "
		db    0
		db    0
		db    0
		db    0
		db    0
		db  23h	; #
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  23h	; #
		db    0
		db    0
		db    0
		db    0
		db    0
		db  24h	; $
		db    0
		db    0
		db    0
		db    0
		db    0
		db  24h	; $
		db    0
		db    0
		db    0
		db    0
		db    0
		db  25h	; %
		db    0
		db    0
		db    0
		db    1
		db    0
		db  25h	; %
		db    0
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db    0
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db    0
		db    0
		db    0
		db    0
		db    0
		db  27h	; '
		db    0
		db    0
		db    0
		db    0
		db    0
		db  27h	; '
		db    0
		db    0
		db    0
		db    0
		db    0
		db  28h	; (
		db    0
		db    0
		db    0
		db    0
		db    0
		db  28h	; (
		db    0
		db    0
		db    0
		db    0
		db    0
		db  29h	; )
		db    0
		db    0
		db    0
		db    1
		db    0
		db  29h	; )
		db    0
		db    0
		db    0
		db    0
		db    0
		db  64h	; d
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21BAE	db  11h			; DATA XREF: dseg:2292o
		db    0
		dd unk_21B48
unk_21BB4	db  0Bh			; DATA XREF: dseg:184Eo
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21BFC	db  0Ch			; DATA XREF: dseg:2296o
		db    0
		dd unk_21BB4
unk_21C02	db    0			; DATA XREF: dseg:1896o
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    1
		db    0
		db    0
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_21C44	db  0Bh			; DATA XREF: dseg:229Ao
		db    0
		dd unk_21C02
unk_21C4A	db    0			; DATA XREF: dseg:18DEo
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_21C8C	db  0Bh			; DATA XREF: dseg:229Eo
		db    0
		dd unk_21C4A
unk_21C92	db  0Bh			; DATA XREF: dseg:192Co
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    2
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db    1
		db    0
		db    0
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_21CDA	db  0Ch			; DATA XREF: dseg:22A2o
		db    0
		dd unk_21C92
unk_21CE0	db  0Bh			; DATA XREF: dseg:197Ao
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_21D28	db  0Ch			; DATA XREF: dseg:22A6o
		db    0
		dd unk_21CE0
unk_21D2E	db    7			; DATA XREF: dseg:19E0o
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FCh	; ¸
		db 0FFh
		db    7
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    6
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    1
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_21D8E	db  10h			; DATA XREF: dseg:22AAo
		db    0
		dd unk_21D2E
unk_21D94	db    7			; DATA XREF: dseg:1A46o
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    7
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    6
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_21DF4	db  10h			; DATA XREF: dseg:22AEo
		db    0
		dd unk_21D94
unk_21DFA	db  0Bh			; DATA XREF: dseg:1AACo
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    2
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
unk_21E5A	db  10h			; DATA XREF: dseg:22B2o
		db    0
		dd unk_21DFA
unk_21E60	db  0Bh			; DATA XREF: dseg:1B12o
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_21EC0	db  10h			; DATA XREF: dseg:22B6o
		db    0
		dd unk_21E60
unk_21EC6	db    0			; DATA XREF: dseg:1B66o dseg:1B6Co
		db    0
		db    6
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    6
		db    0
		db    1
		db    0
		db    0
		db    0
		db    6
		db    0
		db    1
		db    0
		db    0
		db    0
		db    6
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
unk_21F14	db  0Dh			; DATA XREF: dseg:22BAo
		db    1
		dd unk_21EC6
unk_21F1A	db  0Dh			; DATA XREF: dseg:22BEo
		db    0
		dd unk_21EC6
unk_21F20	db    7			; DATA XREF: sub_14361+17o
		db    0
		db    6
		db    0
		db    6
		db    0
		db    5
		db    0
		db    5
		db    0
		db    6
		db    0
		db    6
		db    0
		db    7
		db    0
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    2
		db    0
		db    3
		db    0
		db    3
		db    0
		db    2
		db    0
		db    2
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_21F4C	db  21h	; !		; DATA XREF: dseg:1BCEo
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  21h	; !
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
unk_21F7C	db    8			; DATA XREF: dseg:22C6o
		db    0
		dd unk_21F4C
unk_21F82	db  21h	; !		; DATA XREF: dseg:1C04o
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
		db  21h	; !
		db    0
		db    0
		db    0
		db    4
		db    0
unk_21FB2	db    8			; DATA XREF: dseg:22CAo
		db    0
		dd unk_21F82
unk_21FB8	db  21h	; !		; DATA XREF: dseg:1C46o dseg:1C4Co
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
		db  21h	; !
		db    0
		db    4
		db    0
		db    0
		db    0
unk_21FF4	db  0Ah			; DATA XREF: dseg:22CEo
		db    1
		dd unk_21FB8
unk_21FFA	db  0Ah			; DATA XREF: dseg:22D2o
		db    0
		dd unk_21FB8
unk_22000	db    0			; DATA XREF: dseg:1C9Ao dseg:1CA0o
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
unk_22048	db  0Ch			; DATA XREF: dseg:22D6o
		db    1
		dd unk_22000
unk_2204E	db  0Ch			; DATA XREF: dseg:22DAo
		db    0
		dd unk_22000
unk_22054	db    8			; DATA XREF: sub_11EC2+17o
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
unk_2206A	db    8			; DATA XREF: sub_11F3E+17o
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db    9
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
		db  0Ah
		db    0
unk_22080	db    0			; DATA XREF: dseg:1CF0o dseg:1CF6o
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
unk_2209E	db    5			; DATA XREF: dseg:22E6o
		db    1
		dd unk_22080
unk_220A4	db    5			; DATA XREF: dseg:22EAo
		db    0
		dd unk_22080
unk_220AA	db    0			; DATA XREF: dseg:1D38o dseg:1D3Eo
		db    0
		db 8			; Method
		db 0
		db 0			; Procedure
		db 0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_220E6	db  0Ah			; DATA XREF: dseg:22EEo
		db    1
		dd unk_220AA
unk_220EC	db  0Ah			; DATA XREF: dseg:22F2o
		db    0
		dd unk_220AA
unk_220F2	db    0			; DATA XREF: dseg:1D92o dseg:1D98o
		db    0
		db 8			; Method
		db 0
		db 0			; Procedure
		db 0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_22140	db  0Dh			; DATA XREF: dseg:22F6o
		db    1
		dd unk_220F2
unk_22146	db  0Dh			; DATA XREF: dseg:22FAo
		db    0
		dd unk_220F2
unk_2214C	db    0			; DATA XREF: dseg:1DDAo
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  11h
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_22188	db  0Ah			; DATA XREF: dseg:22FEo
		db    0
		dd unk_2214C
unk_2218E	db    0			; DATA XREF: dseg:1E52o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  22h	; "
		db    0
		db    1
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  22h	; "
		db    0
		db    0
		db    0
		db    0
		db    0
		db  23h	; #
		db    0
		db 0FFh
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db  23h	; #
		db    0
		db    0
		db    0
		db    0
		db    0
		db  24h	; $
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  24h	; $
		db    0
		db    0
		db    0
		db    0
		db    0
		db  25h	; %
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  25h	; %
		db    0
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  26h	; &
		db    0
		db    0
		db    0
		db    0
		db    0
		db  27h	; '
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  27h	; '
		db    0
		db    0
		db    0
		db    0
		db    0
		db  28h	; (
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  28h	; (
		db    0
		db    0
		db    0
		db    0
		db    0
		db  29h	; )
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  29h	; )
		db    0
		db    0
		db    0
		db    0
		db    0
		db  64h	; d
		db    0
		db    0
		db    0
		db    0
		db    0
unk_22200	db  13h			; DATA XREF: dseg:2302o
		db    0
		dd unk_2218E
unk_22206	db  0Bh			; DATA XREF: dseg:1EF4o
		db    0
		db  12h
		db    0
		db    6
		db    0
		db  0Bh
		db    0
		db  0Ah
		db    0
		db  0Ch
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db  12h
		db    0
		db  0Bh
		db    0
		db 0F6h	; ˆ
		db 0FFh
		db  10h
		db    0
		db  0Bh
		db    0
		db 0F1h	; Ò
		db 0FFh
		db  0Ah
		db    0
		db  0Bh
		db    0
		db 0EEh	; Ó
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db 0F0h	; 
		db 0FFh
		db 0F4h	; Ù
		db 0FFh
		db  0Bh
		db    0
		db 0FAh	; ˙
		db 0FFh
		db 0EEh	; Ó
		db 0FFh
		db  0Bh
		db    0
		db    4
		db    0
		db 0EEh	; Ó
		db 0FFh
		db  0Bh
		db    0
		db  0Ch
		db    0
		db 0F0h	; 
		db 0FFh
		db  0Bh
		db    0
		db  12h
		db    0
		db 0FAh	; ˙
		db 0FFh
		db  0Bh
		db    0
		db  12h
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  0Bh
		db    0
		db  12h
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db  12h
		db    0
		db 0FAh	; ˙
		db 0FFh
		db  0Bh
		db    0
		db  0Ah
		db    0
		db 0F4h	; Ù
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0EEh	; Ó
		db 0FFh
		db  0Bh
		db    0
		db 0F6h	; ˆ
		db 0FFh
		db 0F0h	; 
		db 0FFh
		db  0Bh
		db    0
		db 0F1h	; Ò
		db 0FFh
		db 0F6h	; ˆ
		db 0FFh
		db  0Bh
		db    0
		db 0EEh	; Ó
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db 0F0h	; 
		db 0FFh
		db  0Ch
		db    0
		db  0Bh
		db    0
		db 0FAh	; ˙
		db 0FFh
		db  12h
		db    0
		db  0Bh
		db    0
		db    4
		db    0
		db  12h
		db    0
		db  0Bh
		db    0
		db  0Ch
		db    0
		db  10h
		db    0
		db  0Bh
		db    0
		db  12h
		db    0
		db    6
		db    0
		db  0Bh
		db    0
		db  12h
		db    0
		db    4
		db    0
		db  0Bh
		db    0
		db  12h
		db    0
		db    0
		db    0
unk_222A2	db  1Ah			; DATA XREF: dseg:230Ao
		db    0
		dd unk_22206
unk_222A8	db  0Bh			; DATA XREF: dseg:1F1Eo
		db    0
		db    0
		db    0
		db    2
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    2
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  0Bh
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
unk_222CC	db    6			; DATA XREF: dseg:230Eo
		db    0
		dd unk_222A8
unk_222D2	db  0Bh			; DATA XREF: dseg:1F60o dseg:1F66o
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    2
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    3
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    3
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db    4
		db    0
unk_2230E	db  0Ah			; DATA XREF: dseg:231Ao
		db    0
		dd unk_222D2
unk_22314	db  0Ah			; DATA XREF: dseg:231Eo
		db    1
		dd unk_222D2
unk_2231A	db    0			; DATA XREF: dseg:1FC6o dseg:1FCCo
		db    0
		db    6
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_22374	db  0Fh			; DATA XREF: dseg:2322o
		db    1
		dd unk_2231A
unk_2237A	db  0Fh			; DATA XREF: dseg:2326o
		db    0
		dd unk_2231A
unk_22380	db    0			; DATA XREF: dseg:2038o dseg:203Eo
		db    0
		db    6
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    0
		db    1
		db    0
		db    0
		db    0
		db    4
		db    0
		db    1
		db    0
		db  12h
		db    0
		db    2
		db    0
		db    0
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db  12h
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
unk_223E6	db  11h			; DATA XREF: dseg:232Ao
		db    1
		dd unk_22380
unk_223EC	db  11h			; DATA XREF: dseg:232Eo
		db    0
		dd unk_22380
unk_223F2	db    0			; DATA XREF: dseg:2086o dseg:208Co
		db    0
		db    6
		db    0
		db 0FBh	; ˚
		db 0FFh
		db  12h
		db    0
		db    4
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  12h
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FAh	; ˙
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    5
		db    0
unk_22434	db  0Bh			; DATA XREF: dseg:2332o
		db    1
		dd unk_223F2
unk_2243A	db  0Bh			; DATA XREF: dseg:2336o
		db    0
		dd unk_223F2
unk_22440	db    0			; DATA XREF: dseg:20E0o dseg:20E6o
		db    0
		db    6
		db    0
		db 0FBh	; ˚
		db 0FFh
		db    0
		db    0
		db    8
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  12h
		db    0
		db    4
		db    0
		db 0FFh
		db 0FFh
		db  12h
		db    0
		db 0FAh	; ˙
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db 0FFh
		db 0FFh
		db    0
		db    0
		db 0F8h	; ¯
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FAh	; ˙
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FAh	; ˙
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    4
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    5
		db    0
unk_2248E	db  0Dh			; DATA XREF: dseg:233Ao
		db    1
		dd unk_22440
unk_22494	db  0Dh			; DATA XREF: dseg:233Eo
		db    0
		dd unk_22440
unk_2249A	db    0			; DATA XREF: dseg:2140o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  38h	; 8
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db  39h	; 9
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db  3Ah	; :
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  3Bh	; ;
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  3Ch	; <
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  3Dh	; =
		db    0
		db    0
		db    0
		db    0
		db    0
		db  3Eh	; >
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_224EE	db  0Eh			; DATA XREF: dseg:2342o
		db    0
		dd unk_2249A
unk_224F4	db 0D1h	; —		; DATA XREF: dseg:219Ao
		db    1
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0D1h	; —
		db    1
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db 0D2h	; “
		db    1
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db 0D2h	; “
		db    1
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0D3h	; ”
		db    1
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0D3h	; ”
		db    1
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0D4h	; ‘
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0D4h	; ‘
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0D5h	; ’
		db    1
		db    0
		db    0
		db    1
		db    0
		db 0D5h	; ’
		db    1
		db    0
		db    0
		db    1
		db    0
		db 0D6h	; ÷
		db    1
		db    0
		db    0
		db    2
		db    0
		db 0D6h	; ÷
		db    1
		db    0
		db    0
		db    3
		db    0
		db 0D7h	; ◊
		db    1
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_22548	db  0Eh			; DATA XREF: dseg:2346o
		db    0
		dd unk_224F4
unk_2254E	db    0			; DATA XREF: dseg:21F4o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db  3Eh	; >
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db  3Dh	; =
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db  3Ch	; <
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db  3Bh	; ;
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  3Ah	; :
		db    0
		db    0
		db    0
		db 0FFh
		db 0FFh
		db  39h	; 9
		db    0
		db    0
		db    0
		db    0
		db    0
		db  38h	; 8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_225A2	db  0Eh			; DATA XREF: dseg:234Ao
		db    0
		dd unk_2254E
unk_225A8	db 0D7h	; ◊		; DATA XREF: dseg:224Eo
		db    1
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db 0D7h	; ◊
		db    1
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db 0D6h	; ÷
		db    1
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db 0D6h	; ÷
		db    1
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db 0D5h	; ’
		db    1
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0D5h	; ’
		db    1
		db    0
		db    0
		db 0FFh
		db 0FFh
		db 0D4h	; ‘
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0D4h	; ‘
		db    1
		db    0
		db    0
		db    0
		db    0
		db 0D3h	; ”
		db    1
		db    0
		db    0
		db    1
		db    0
		db 0D3h	; ”
		db    1
		db    0
		db    0
		db    1
		db    0
		db 0D2h	; “
		db    1
		db    0
		db    0
		db    2
		db    0
		db 0D2h	; “
		db    1
		db    0
		db    0
		db    3
		db    0
		db 0D1h	; —
		db    1
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
unk_225FC	db  0Eh			; DATA XREF: dseg:234Eo
		db    0
		dd unk_225A8
		dd unk_21780
		dd unk_217D4
		dd unk_21828
		dd unk_2185E
		dd unk_21894
		db    0
		db    0
		db    0
		db    0
		dd unk_21918
		dd unk_21960
		dd unk_219A8
		dd unk_219AE
		dd unk_21A0E
		db    0
		db    0
		db    0
		db    0
		dd unk_21A76
		dd unk_21A88
		dd unk_21B06
		dd unk_21B42
		dd unk_21BAE
		dd unk_21BFC
		dd unk_21C44
		dd unk_21C8C
		dd unk_21CDA
		dd unk_21D28
		dd unk_21D8E
		dd unk_21DF4
		dd unk_21E5A
		dd unk_21EC0
		dd unk_21F14
		dd unk_21F1A
		db    0
		db    0
		db    0
		db    0
		dd unk_21F7C
		dd unk_21FB2
		dd unk_21FF4
		dd unk_21FFA
		dd unk_22048
		dd unk_2204E
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		dd unk_2209E
		dd unk_220A4
		dd unk_220E6
		dd unk_220EC
		dd unk_22140
		dd unk_22146
		dd unk_22188
		dd unk_22200
		dd unk_21894
		dd unk_222A2
		dd unk_222CC
		dd unk_21B06
		dd unk_21B06
		dd unk_2230E
		dd unk_22314
		dd unk_22374
		dd unk_2237A
		dd unk_223E6
		dd unk_223EC
		dd unk_22434
		dd unk_2243A
		dd unk_2248E
		dd unk_22494
		dd unk_224EE
		dd unk_22548
		dd unk_225A2
		dd unk_225FC
unk_22702	db    0			; DATA XREF: dseg:2384o
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db 0FCh	; ¸
		db 0FFh
unk_22732	db    8			; DATA XREF: dseg:2524o
		db    0
		dd unk_22702
unk_22738	db    0			; DATA XREF: dseg:23BAo
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    1
		db    0
		db    0
		db    0
		db    4
		db    0
		db    1
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    4
		db    0
		db    3
		db    0
		db    0
		db    0
		db    4
		db    0
unk_22768	db    8			; DATA XREF: dseg:2528o
		db    0
		dd unk_22738
unk_2276E	db    1			; DATA XREF: dseg:23FCo dseg:2402o
		db    0
		db    4
		db    0
		db    0
		db    0
		db    1
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    1
		db    0
		db    4
		db    0
		db    0
		db    0
		db    1
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    0
		db    0
		db    3
		db    0
		db    4
		db    0
		db    0
		db    0
		db    3
		db    0
		db    4
		db    0
		db    0
		db    0
unk_227AA	db  0Ah			; DATA XREF: dseg:252Co
		db    1
		dd unk_2276E
unk_227B0	db  0Ah			; DATA XREF: dseg:2530o
		db    0
		dd unk_2276E
unk_227B6	db    1			; DATA XREF: dseg:243Eo
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    3
		db    0
		db    1
		db    0
		db    0
		db    0
		db    3
		db    0
		db    1
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
unk_227EC	db    9			; DATA XREF: dseg:2534o
		db    0
		dd unk_227B6
unk_227F2	db    1			; DATA XREF: dseg:247Ao
		db    0
		db    0
		db    0
		db    3
		db    0
		db    1
		db    0
		db    0
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    2
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    1
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    1
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FDh	; ˝
		db 0FFh
unk_22828	db    9			; DATA XREF: dseg:2538o
		db    0
		dd unk_227F2
unk_2282E	db    0			; DATA XREF: dseg:24BCo dseg:24C2o
		db    0
		db    3
		db    0
		db    0
		db    0
		db    1
		db    0
		db    3
		db    0
		db    0
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db 0FCh	; ¸
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db 0FDh	; ˝
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db 0FEh	; ˛
		db 0FFh
		db    0
		db    0
		db    1
		db    0
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    2
		db    0
		db    0
		db    0
unk_2286A	db  0Ah			; DATA XREF: dseg:253Co
		db    1
		dd unk_2282E
unk_22870	db  0Ah			; DATA XREF: dseg:2540o
		db    0
		dd unk_2282E
unk_22876	db    1			; DATA XREF: dseg:251Co
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_228CA	db  0Eh			; DATA XREF: dseg:2544o
		db    0
		dd unk_22876
		db    0
		db    0
		db    0
		db    0
		dd unk_22732
		dd unk_22768
		dd unk_227AA
		dd unk_227B0
		dd unk_227EC
		dd unk_22828
		dd unk_2286A
		dd unk_22870
		dd unk_228CA
		db  5Ah	; Z
		db    1
		db  5Eh	; ^
		db    1
		db  62h	; b
		db    1
		db  66h	; f
		db    1
		db  6Ah	; j
		db    1
		db  6Eh	; n
		db    1
		db  72h	; r
		db    1
		db  76h	; v
		db    1
		db 0DBh	; €
		db    1
		db 0DFh	; ﬂ
		db    1
		db 0E3h	; „
		db    1
		db 0E7h	; Á
		db    1
		db 0EBh	; Î
		db    1
		db 0EFh	; Ô
		db    1
		db 0F3h	; Û
		db    1
		db 0F7h	; ˜
		db    1
		db 0FBh	; ˚
		db    1
		dd unk_22956
unk_2291E	db  41h	; A		; DATA XREF: dseg:135Co
		db  43h	; C
		db  43h	; C
		db  45h	; E
		db  53h	; S
		db  53h	; S
		db    0
unk_22925	db  42h	; B		; DATA XREF: dseg:1360o
		db  55h	; U
		db  54h	; T
		db  54h	; T
		db  4Fh	; O
		db  4Eh	; N
		db    0
unk_2292C	db  49h	; I		; DATA XREF: dseg:1364o
		db  53h	; S
		db  4Ch	; L
		db  41h	; A
		db  4Eh	; N
		db  44h	; D
		db    0
unk_22933	db  50h	; P		; DATA XREF: dseg:1368o
		db  52h	; R
		db  45h	; E
		db  54h	; T
		db  54h	; T
		db  59h	; Y
		db    0
unk_2293A	db  57h	; W		; DATA XREF: dseg:136Co
		db  49h	; I
		db  4Eh	; N
		db  4Eh	; N
		db  45h	; E
		db  52h	; R
		db    0
unk_22941	db  5Ah	; Z		; DATA XREF: dseg:1370o
		db  4Fh	; O
		db  4Dh	; M
		db  42h	; B
		db  49h	; I
		db  45h	; E
		db    0
unk_22948	db  4Ch	; L		; DATA XREF: dseg:1374o
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  4Ch	; L
		db  59h	; Y
		db    0
unk_2294F	db  53h	; S		; DATA XREF: dseg:1378o
		db  59h	; Y
		db  53h	; S
		db  54h	; T
		db  45h	; E
		db  4Dh	; M
		db    0
unk_22956	db  41h	; A		; DATA XREF: dseg:256Ao
		db  41h	; A
		db  41h	; A
		db  41h	; A
		db  41h	; A
		db  41h	; A
		db    0
		db    0
		db    0
		db    1
		db    2
		db    0
		db    3
		db    4
		db    4
		db    5
		db    6
		db    7
		db    8
		db    0
		db    9
		db  0Ah
		db  0Bh
		db    0
		db  0Ch
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Eh
		db  0Eh
		db    0
		db  0Fh
		db  0Fh
		db  0Fh
		db  0Fh
		db  10h
		db  11h
		db    0
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    0
		db  0Bh
		db    9
		db    9
		db    5
		db    6
		db    7
		db    9
		db    0
		db    9
		db    9
		db    1
		db    0
		db    1
		db  0Ah
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    0
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  13h
		db  14h
		db  15h
		db  16h
		db  17h
		db  17h
		db  18h
		db  19h
		db  1Ah
		db  1Bh
		db    0
		db  1Ch
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db  11h
		db    0
		db    0
		db    0
		db    0
		db  22h	; "
		db  22h	; "
		db    0
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db    0
		db    0
		db  25h	; %
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db  0Eh
		db  0Bh
		db    3
		db    3
		db    5
		db    6
		db    7
		db    1
		db    0
		db    4
		db    1
		db    1
		db    1
		db    1
		db    8
		db  12h
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    0
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db    0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    4
		db    4
		db    0
		db    0
		db    0
		db    4
		db    4
		db    4
		db    4
		db    0
		db    4
		db    4
		db    4
		db    0
		db    4
		db    0
		db    0
		db    4
		db    4
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    2
		db    2
		db    0
		db    0
		db    0
		db    2
		db    2
		db    2
		db    2
		db    0
		db    2
		db    2
		db    2
		db    0
		db    2
		db    0
		db    0
		db    2
		db    2
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    3
		db    3
		db    0
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    0
		db    3
		db    0
		db    3
		db  11h
		db    3
		db    3
		db    3
		db    0
		db    3
		db    3
		db    0
		db    3
		db    3
		db    3
		db    3
		db  11h
		db    3
		db    3
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db  0Bh
		db  0Bh
		db    9
		db    9
		db    9
		db    9
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db  0Bh
		db    0
		db    9
		db  12h
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db  0Bh
		db  0Bh
		db    0
		db  0Bh
		db  0Bh
		db  0Bh
		db  0Bh
		db  12h
		db  0Bh
		db  0Bh
		db  0Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db  2Fh	; /
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Dh
		db  0Dh
		db  0Dh
		db  0Dh
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    7
		db  0Dh
		db  0Dh
		db  0Dh
		db  0Dh
		db  0Dh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db  0Eh
		db  10h
		db  10h
		db  10h
		db  12h
		db  0Eh
		db  0Ah
		db  0Ah
		db  0Ah
		db  0Ah
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db    0
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Ch
		db  0Eh
		db  10h
		db  10h
		db  11h
		db  12h
		db  0Eh
		db  0Ah
		db  0Ah
		db  0Ah
		db  0Ah
		db  0Ch
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    0
		db  23h	; #
		db  7Fh	; 
		db  41h	; A
		db  7Fh	; 
		db  28h	; (
		db  7Fh	; 
		db  26h	; &
		db  7Fh	; 
		db  40h	; @
		db  7Fh	; 
		db  3Fh	; ?
		db  7Fh	; 
		db  3Eh	; >
		db  7Fh	; 
		db  27h	; '
		db  7Fh	; 
		db  54h	; T
		db  7Fh	; 
		db  43h	; C
		db  7Fh	; 
		db  47h	; G
		db  7Fh	; 
		db  41h	; A
		db  7Fh	; 
		db  4Dh	; M
		db  7Fh	; 
		db  3Dh	; =
		db  7Fh	; 
		db  29h	; )
		db  7Fh	; 
		db  2Ah	; *
		db  7Fh	; 
		db  5Bh	; [
		db  7Fh	; 
		db  2Eh	; .
		db  7Fh	; 
		db  25h	; %
		db  7Fh	; 
		db  38h	; 8
		db  7Fh	; 
		db  4Fh	; O
		db  7Fh	; 
		db  28h	; (
		db  7Fh	; 
		db  26h	; &
		db  7Fh	; 
		db  40h	; @
		db  7Fh	; 
		db  3Fh	; ?
		db  7Fh	; 
		db  3Eh	; >
		db  7Fh	; 
		db  46h	; F
		db  7Fh	; 
		db  60h	; `
		db  7Fh	; 
		db  44h	; D
		db  7Fh	; 
		db  47h	; G
		db  7Fh	; 
		db  31h	; 1
		db  7Fh	; 
		db  38h	; 8
		db  7Fh	; 
		db  42h	; B
		db  7Fh	; 
		db  3Dh	; =
		db  7Fh	; 
		db  29h	; )
		db  7Fh	; 
		db  2Ch	; ,
		db  7Fh	; 
		db  2Eh	; .
		db  7Fh	; 
		db  4Eh	; N
		db  7Fh	; 
		db  49h	; I
		db  7Fh	; 
		db  53h	; S
		db  7Fh	; 
		db  55h	; U
		db  7Fh	; 
		db  58h	; X
		db  7Fh	; 
		db  62h	; b
		db  7Fh	; 
		db  5Ah	; Z
		db  7Fh	; 
		db  63h	; c
		db  7Fh	; 
		db  63h	; c
		db  7Fh	; 
		db  45h	; E
		db  7Fh	; 
		db    0
		db    0
byte_22BC0	db 0			; DATA XREF: sub_16C14:loc_16C20w
unk_22BC1	db    6			; DATA XREF: dseg:281Co
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db 0FFh
		db    0
unk_22BCA	db    1			; DATA XREF: dseg:2EE2o
		db    0
		dd unk_22BC1
unk_22BD0	db    5			; DATA XREF: dseg:282Ao
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db 0FFh
unk_22BD8	db    1			; DATA XREF: dseg:2EE6o
		db    0
		dd unk_22BD0
unk_22BDE	db    2			; DATA XREF: dseg:283Eo
		db    0
		db    3
		db    0
		db    2
		db    1
		db    4
		db    0
		db    0
		db    0
		db    1
		db    1
		db 0FFh
		db    0
unk_22BEC	db    1			; DATA XREF: dseg:2EEAo
		db    0
		dd unk_22BDE
unk_22BF2	db 0B8h	; ∏		; DATA XREF: dseg:284Ao
		db    0
		db    0
		db    1
		db    1
		db 0FFh
unk_22BF8	db    1			; DATA XREF: dseg:2EEEo
		db    0
		dd unk_22BF2
unk_22BFE	db  0Fh			; DATA XREF: dseg:2858o
		db    0
		db    0
		db    0
		db    0
		db    7
		db    7
		db 0FFh
unk_22C06	db    3			; DATA XREF: dseg:2EF2o
		db    0
		dd unk_22BFE
unk_22C0C	db  0Eh			; DATA XREF: dseg:2866o
		db    0
		db    0
		db    0
		db    0
		db    7
		db    7
		db 0FFh
unk_22C14	db    3			; DATA XREF: dseg:2EF6o
		db    0
		dd unk_22C0C
unk_22C1A	db    8			; DATA XREF: dseg:287Ao
		db    0
		db    9
		db    0
		db  0Ah
		db  0Bh
		db  0Ch
		db    0
		db    0
		db  0Dh
		db    7
		db    7
		db 0FFh
		db    0
unk_22C28	db    3			; DATA XREF: dseg:2EFAo
		db    0
		dd unk_22C1A
unk_22C2E	db  19h			; DATA XREF: dseg:2890o
		db    0
		db    0
		db    0
		db  14h
		db    0
		db  1Ah
		db    0
		db  1Bh
		db    0
		db  1Ch
		db    0
		db  1Dh
		db  1Dh
		db 0FFh
		db    0
unk_22C3E	db    8			; DATA XREF: dseg:2EFEo
		db    0
		dd unk_22C2E
unk_22C44	db  18h			; DATA XREF: dseg:28A6o
		db    0
		db    0
		db    0
		db  14h
		db    0
		db  1Ah
		db    0
		db  1Bh
		db    0
		db  1Ch
		db    0
		db  1Dh
		db  1Dh
		db 0FFh
		db    0
unk_22C54	db    8			; DATA XREF: dseg:2F02o
		db    0
		dd unk_22C44
unk_22C5A	db  15h			; DATA XREF: dseg:28BEo
		db    0
		db  16h
		db    0
		db  15h
		db  14h
		db  17h
		db    0
		db    0
		db  1Ah
		db    0
		db  1Bh
		db    0
		db  1Ch
		db    0
		db  1Dh
		db  1Dh
		db 0FFh
unk_22C6C	db    8			; DATA XREF: dseg:2F06o
		db    0
		dd unk_22C5A
unk_22C72	db  22h	; "		; DATA XREF: dseg:28D4o
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db  23h	; #
		db    0
		db  24h	; $
		db    0
		db  25h	; %
		db    0
		db  26h	; &
		db  26h	; &
		db 0FFh
		db    0
unk_22C82	db    9			; DATA XREF: dseg:2F0Ao
		db    0
		dd unk_22C72
unk_22C88	db  21h	; !		; DATA XREF: dseg:28EAo
		db    0
		db    0
		db    0
		db  1Dh
		db    0
		db  23h	; #
		db    0
		db  24h	; $
		db    0
		db  25h	; %
		db    0
		db  26h	; &
		db  26h	; &
		db 0FFh
		db    0
unk_22C98	db    9			; DATA XREF: dseg:2F0Eo
		db    0
		dd unk_22C88
unk_22C9E	db  1Eh			; DATA XREF: dseg:2902o
		db    0
		db  1Fh
		db    0
		db  1Eh
		db  1Dh
		db  20h
		db    0
		db    0
		db  23h	; #
		db    0
		db  24h	; $
		db    0
		db  25h	; %
		db    0
		db  26h	; &
		db  26h	; &
		db 0FFh
unk_22CB0	db    9			; DATA XREF: dseg:2F12o
		db    0
		dd unk_22C9E
unk_22CB6	db  2Bh	; +		; DATA XREF: dseg:291Co
		db    0
		db    0
		db    0
		db  26h	; &
		db    0
		db  2Ch	; ,
		db    0
		db  2Dh	; -
		db    0
		db  2Eh	; .
		db    0
		db  2Fh	; /
		db    0
		db  30h	; 0
		db    0
		db  31h	; 1
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
unk_22CCA	db    0			; DATA XREF: dseg:2F16o
		db    0
		dd unk_22CB6
unk_22CD0	db  2Ah	; *		; DATA XREF: dseg:2936o
		db    0
		db    0
		db    0
		db  26h	; &
		db    0
		db  2Ch	; ,
		db    0
		db  2Dh	; -
		db    0
		db  2Eh	; .
		db    0
		db  2Fh	; /
		db    0
		db  30h	; 0
		db    0
		db  31h	; 1
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
unk_22CE4	db    0			; DATA XREF: dseg:2F1Ao
		db    0
		dd unk_22CD0
unk_22CEA	db  27h	; '             ; DATA XREF: dseg:2954o
		db    0
		db  28h	; (
		db    0
		db  27h	; '
		db  26h	; &
		db  29h	; )
		db    0
		db    0
		db  2Ch	; ,
		db    0
		db  2Dh	; -
		db    0
		db  2Eh	; .
		db    0
		db  2Fh	; /
		db    0
		db  30h	; 0
		db    0
		db  31h	; 1
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22D02	db    0			; DATA XREF: dseg:2F1Eo
		db    0
		dd unk_22CEA
unk_22D08	db  1Ah			; DATA XREF: dseg:2964o
		db    0
		db  1Bh
		db    0
		db  1Ch
		db    0
		db  1Dh
		db  1Dh
		db 0FFh
		db    0
unk_22D12	db    8			; DATA XREF: dseg:2F22o
		db    0
		dd unk_22D08
unk_22D18	db  23h	; #		; DATA XREF: dseg:2974o
		db    0
		db  24h	; $
		db    0
		db  25h	; %
		db    0
		db  26h	; &
		db  26h	; &
		db 0FFh
		db    0
unk_22D22	db    9			; DATA XREF: dseg:2F26o
		db    0
		dd unk_22D18
unk_22D28	db  2Ch	; ,		; DATA XREF: dseg:298Ao
		db    0
		db  2Dh	; -
		db    0
		db  2Eh	; .
		db    0
		db  2Fh	; /
		db    0
		db  30h	; 0
		db    0
		db  31h	; 1
		db    0
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22D38	db    0			; DATA XREF: dseg:2F2Ao
		db    0
		dd unk_22D28
unk_22D3E	db  11h			; DATA XREF: dseg:2996o
		db    0
		db    0
		db  10h
		db  10h
		db 0FFh
unk_22D44	db    5			; DATA XREF: dseg:2FA2o
		db    0
		dd unk_22D3E
unk_22D4A	db  13h			; DATA XREF: dseg:29A2o
		db    0
		db    0
		db  12h
		db  12h
		db 0FFh
unk_22D50	db    6			; DATA XREF: dseg:2FA6o
		db    0
		dd unk_22D4A
unk_22D56	db  37h	; 7		; DATA XREF: dseg:29B0o
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
unk_22D5E	db  0Ah			; DATA XREF: dseg:2F2Eo
		db    0
		dd unk_22D56
unk_22D64	db  36h	; 6		; DATA XREF: dseg:29BEo
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
unk_22D6C	db  0Ah			; DATA XREF: dseg:2F32o
		db    0
		dd unk_22D64
unk_22D72	db  33h	; 3		; DATA XREF: dseg:29D2o
		db    0
		db  34h	; 4
		db    0
		db  33h	; 3
		db  32h	; 2
		db  35h	; 5
		db    0
		db    0
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
		db    0
unk_22D80	db  0Ah			; DATA XREF: dseg:2F36o
		db    0
		dd unk_22D72
unk_22D86	db  38h	; 8		; DATA XREF: dseg:29E6o
		db    0
		db  39h	; 9
		db    0
		db  3Ah	; :
		db    0
		db  3Bh	; ;
		db    0
		db  3Ch	; <
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
		db    0
unk_22D94	db  0Ah			; DATA XREF: dseg:2F3Ao
		db    0
		dd unk_22D86
unk_22D9A	db  3Dh	; =		; DATA XREF: dseg:29F8o
		db    0
		db  3Eh	; >
		db    0
		db  3Fh	; ?
		db    0
		db  40h	; @
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
		db    0
unk_22DA6	db  0Ah			; DATA XREF: dseg:2F3Eo
		db    0
		dd unk_22D9A
unk_22DAC	db  41h	; A		; DATA XREF: dseg:2A0Ao
		db    0
		db  42h	; B
		db    0
		db  43h	; C
		db    0
		db  44h	; D
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
		db    0
unk_22DB8	db  0Ah			; DATA XREF: dseg:2F42o
		db    0
		dd unk_22DAC
unk_22DBE	db  4Ah	; J		; DATA XREF: dseg:2A14o
		db  4Ah	; J
		db 0FFh
		db    0
unk_22DC2	db  17h			; DATA XREF: dseg:2F46o
		db    0
		dd unk_22DBE
unk_22DC8	db  49h	; I		; DATA XREF: dseg:2A1Eo
		db  49h	; I
		db 0FFh
		db    0
unk_22DCC	db  18h			; DATA XREF: dseg:2F4Ao
		db    0
		dd unk_22DC8
unk_22DD2	db  46h	; F		; DATA XREF: dseg:2A32o
		db    0
		db  47h	; G
		db    0
		db  46h	; F
		db  45h	; E
		db  48h	; H
		db    0
		db    0
		db    0
		db  45h	; E
		db  45h	; E
		db 0FFh
		db    0
unk_22DE0	db  0Ch			; DATA XREF: dseg:2F4Eo
		db    0
		dd unk_22DD2
unk_22DE6	db  45h	; E		; DATA XREF: dseg:2A44o
		db    0
		db  4Ah	; J
		db    0
		db  45h	; E
		db    0
		db  49h	; I
		db    0
		db  45h	; E
		db  45h	; E
		db 0FFh
		db    0
unk_22DF2	db  0Ch			; DATA XREF: dseg:2F52o
		db    0
		dd unk_22DE6
unk_22DF8	db  4Ch	; L		; DATA XREF: dseg:2A54o
		db  4Dh	; M
		db  4Eh	; N
		db  4Fh	; O
		db  50h	; P
		db  51h	; Q
		db  52h	; R
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
unk_22E02	db    0			; DATA XREF: dseg:2FDAo
		db    0
		dd unk_22DF8
unk_22E08	db  22h	; "		; DATA XREF: dseg:2A68o
		db  19h
		db    0
		db  14h
		db  1Bh
		db  1Dh
		db  24h	; $
		db  26h	; &
		db  2Dh	; -
		db  2Fh	; /
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22E16	db  0Dh			; DATA XREF: dseg:2F56o
		db    0
		dd unk_22E08
unk_22E1C	db  21h	; !		; DATA XREF: dseg:2A7Co
		db  18h
		db    0
		db  14h
		db  1Bh
		db  1Dh
		db  24h	; $
		db  26h	; &
		db  2Dh	; -
		db  2Fh	; /
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22E2A	db  0Dh			; DATA XREF: dseg:2F5Ao
		db    0
		dd unk_22E1C
unk_22E30	db  15h			; DATA XREF: dseg:2A94o
		db    0
		db  16h
		db    0
		db  15h
		db  14h
		db  17h
		db    0
		db  1Bh
		db  1Dh
		db  24h	; $
		db  26h	; &
		db  2Dh	; -
		db  2Fh	; /
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22E42	db  0Dh			; DATA XREF: dseg:2F5Eo
		db    0
		dd unk_22E30
unk_22E48	db  14h			; DATA XREF: dseg:2AA4o
		db  1Bh
		db  1Dh
		db  24h	; $
		db  26h	; &
		db  2Dh	; -
		db  2Fh	; /
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
unk_22E52	db  0Dh			; DATA XREF: dseg:2F62o
		db    0
		dd unk_22E48
unk_22E58	db  53h	; S		; DATA XREF: dseg:2AB2o
		db  55h	; U
		db  57h	; W
		db  59h	; Y
		db  5Bh	; [
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
unk_22E60	db  0Eh			; DATA XREF: dseg:2F6Ao
		db    0
		dd unk_22E58
unk_22E66	db  53h	; S		; DATA XREF: dseg:2ACEo
		db    0
		db  54h	; T
		db    0
		db  55h	; U
		db    0
		db  56h	; V
		db    0
		db  57h	; W
		db    0
		db  58h	; X
		db    0
		db  59h	; Y
		db    0
		db  5Ah	; Z
		db    0
		db  5Bh	; [
		db    0
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
		db    0
unk_22E7C	db  0Eh			; DATA XREF: dseg:2F6Eo
		db    0
		dd unk_22E66
unk_22E82	db  5Dh	; ]		; DATA XREF: dseg:2AE0o
		db    0
		db  5Eh	; ^
		db    0
		db  5Dh	; ]
		db  5Ch	; \
		db  5Fh	; _
		db    0
		db    0
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
unk_22E8E	db  0Eh			; DATA XREF: dseg:2F66o
		db    0
		dd unk_22E82
unk_22E94	db 0ABh	; ´		; DATA XREF: dseg:2AF2o
		db    0
		db    0
		db    0
		db  5Ch	; \
		db  53h	; S
		db  55h	; U
		db  57h	; W
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
		db    0
unk_22EA0	db  0Eh			; DATA XREF: dseg:2FB2o
		db    0
		dd unk_22E94
unk_22EA6	db 0AAh	; ™		; DATA XREF: dseg:2B04o
		db    0
		db    0
		db    0
		db  5Ch	; \
		db  53h	; S
		db  55h	; U
		db  57h	; W
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
		db    0
unk_22EB2	db  0Eh			; DATA XREF: dseg:2FB6o
		db    0
		dd unk_22EA6
unk_22EB8	db  63h	; c		; DATA XREF: dseg:2B14o
		db    0
		db  62h	; b
		db    0
		db  61h	; a
		db    0
		db  60h	; `
		db  60h	; `
		db 0FFh
		db    0
unk_22EC2	db  0Fh			; DATA XREF: dseg:2F72o
		db    0
		dd unk_22EB8
unk_22EC8	db  61h	; a		; DATA XREF: dseg:2B24o
		db    0
		db  62h	; b
		db    0
		db  63h	; c
		db    0
		db  60h	; `
		db  60h	; `
		db 0FFh
		db    0
unk_22ED2	db  0Fh			; DATA XREF: dseg:2F76o
		db    0
		dd unk_22EC8
unk_22ED8	db  61h	; a		; DATA XREF: dseg:2B3Co
		db    0
		db  62h	; b
		db    0
		db  63h	; c
		db    0
		db  60h	; `
		db    0
		db  61h	; a
		db    0
		db  62h	; b
		db    0
		db  63h	; c
		db    0
		db  60h	; `
		db  60h	; `
		db 0FFh
		db    0
unk_22EEA	db  0Fh			; DATA XREF: dseg:2F7Ao
		db    0
		dd unk_22ED8
unk_22EF0	db  65h	; e		; DATA XREF: dseg:2B50o
		db  66h	; f
		db  67h	; g
		db  68h	; h
		db    0
		align 4
		db  67h	; g
		db  66h	; f
		db  65h	; e
		db  64h	; d
		db  64h	; d
		db 0FFh
unk_22EFE	db  10h			; DATA XREF: dseg:2FAAo
		db    0
		dd unk_22EF0
unk_22F04	db 0B0h	; ∞		; DATA XREF: dseg:2B5Eo
		db    0
		db    0
		db    0
		db    0
		db  64h	; d
		db  64h	; d
		db 0FFh
unk_22F0C	db  10h			; DATA XREF: dseg:2FBAo
		db    0
		dd unk_22F04
unk_22F12	db 0AFh	; Ø		; DATA XREF: dseg:2B6Co
		db    0
		db    0
		db    0
		db    0
		db  64h	; d
		db  64h	; d
		db 0FFh
unk_22F1A	db  10h			; DATA XREF: dseg:2FBEo
		db    0
		dd unk_22F12
unk_22F20	db 0ACh	; ¨		; DATA XREF: dseg:2B80o
		db    0
		db 0ADh	; ≠
		db    0
		db 0ACh	; ¨
		db  64h	; d
		db 0AEh	; Æ
		db    0
		db    0
		db    0
		db  64h	; d
		db  64h	; d
		db 0FFh
		db    0
unk_22F2E	db  10h			; DATA XREF: dseg:2FC2o
		db    0
		dd unk_22F20
unk_22F34	db 0B6h	; ∂		; DATA XREF: dseg:2B8Co
		db    0
		db    0
		db  64h	; d
		db  64h	; d
		db 0FFh
unk_22F3A	db  10h			; DATA XREF: dseg:2FC6o
		db    0
		dd unk_22F34
unk_22F40	db  8Eh	; é		; DATA XREF: dseg:2BA0o
		db  8Fh	; è
		db  90h	; ê
		db  91h	; ë
		db    0
		align 4
		db  90h	; ê
		db  8Fh	; è
		db  8Eh	; é
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
unk_22F4E	db    2			; DATA XREF: dseg:2FAEo
		db    0
		dd unk_22F40
unk_22F54	db 0B5h	; µ		; DATA XREF: dseg:2BAEo
		db    0
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
unk_22F5C	db    2			; DATA XREF: dseg:2FCAo
		db    0
		dd unk_22F54
unk_22F62	db 0B4h	; ¥		; DATA XREF: dseg:2BBCo
		db    0
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
unk_22F6A	db    2			; DATA XREF: dseg:2FCEo
		db    0
		dd unk_22F62
unk_22F70	db 0B1h	; ±		; DATA XREF: dseg:2BD0o
		db    0
		db 0B2h	; ≤
		db    0
		db 0B1h	; ±
		db  8Dh	; ç
		db 0B3h	; ≥
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
		db    0
unk_22F7E	db    2			; DATA XREF: dseg:2FD2o
		db    0
		dd unk_22F70
unk_22F84	db 0B7h	; ∑		; DATA XREF: dseg:2BDCo
		db    0
		db    0
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
unk_22F8A	db    2			; DATA XREF: dseg:2FD6o
		db    0
		dd unk_22F84
unk_22F90	db  6Eh	; n		; DATA XREF: dseg:2BECo
		db  69h	; i
		db  6Dh	; m
		db  6Eh	; n
		db  6Dh	; m
		db  6Eh	; n
		db  69h	; i
		db  69h	; i
		db 0FFh
		db    0
unk_22F9A	db  11h			; DATA XREF: dseg:2F7Eo
		db    0
		dd unk_22F90
unk_22FA0	db  6Eh	; n		; DATA XREF: dseg:2BFCo
		db  69h	; i
		db  6Dh	; m
		db  6Eh	; n
		db  6Dh	; m
		db  6Eh	; n
		db  69h	; i
		db  69h	; i
		db 0FFh
		db    0
unk_22FAA	db  11h			; DATA XREF: dseg:2F82o
		db    0
		dd unk_22FA0
unk_22FB0	db  69h	; i		; DATA XREF: dseg:2C14o
		db    0
		db    0
		db    0
		db  6Ah	; j
		db    0
		db    0
		db  6Bh	; k
		db    0
		db  6Ah	; j
		db  69h	; i
		db  6Dh	; m
		db  6Eh	; n
		db  6Dh	; m
		db  6Eh	; n
		db  69h	; i
		db  69h	; i
		db 0FFh
unk_22FC2	db  11h			; DATA XREF: dseg:2F86o
		db    0
		dd unk_22FB0
unk_22FC8	db  6Eh	; n		; DATA XREF: dseg:2C26o
		db    0
		db  6Fh	; o
		db  70h	; p
		db  71h	; q
		db  72h	; r
		db    0
		db  73h	; s
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_22FD4	db    0			; DATA XREF: dseg:2F8Ao
		db    0
		dd unk_22FC8
unk_22FDA	db  76h	; v		; DATA XREF: dseg:2C3Co
		db  77h	; w
		db  78h	; x
		db  79h	; y
		db  7Ah	; z
		db  7Bh	; {
		db    0
		db  7Ch	; |
		db  7Dh	; }
		db  75h	; u
		db  7Dh	; }
		db  75h	; u
		db  7Dh	; }
		db  75h	; u
		db  75h	; u
		db 0FFh
unk_22FEA	db  13h			; DATA XREF: dseg:2F8Eo
		db    0
		dd unk_22FDA
unk_22FF0	db  85h	; Ö		; DATA XREF: dseg:2C56o
		db    0
		db    0
		db    0
		db  84h	; Ñ
		db  83h	; É
		db  82h	; Ç
		db  81h	; Å
		db  80h	; Ä
		db    0
		db    0
		db  81h	; Å
		db  82h	; Ç
		db  83h	; É
		db    0
		db  84h	; Ñ
		db    0
		db  85h	; Ö
		db  85h	; Ö
		db 0FFh
unk_23004	db  14h			; DATA XREF: dseg:2F92o
		db    0
		dd unk_22FF0
unk_2300A	db  8Bh	; ã		; DATA XREF: dseg:2C70o
		db    0
		db    0
		db    0
		db  8Ah	; ä
		db  89h	; â
		db  88h	; à
		db  87h	; á
		db  86h	; Ü
		db    0
		db    0
		db  87h	; á
		db  88h	; à
		db  89h	; â
		db    0
		db  8Ah	; ä
		db    0
		db  8Bh	; ã
		db  8Bh	; ã
		db 0FFh
unk_2301E	db  15h			; DATA XREF: dseg:2F96o
		db    0
		dd unk_2300A
unk_23024	db  8Ch	; å		; DATA XREF: dseg:2C7Ao
		db  8Ch	; å
		db 0FFh
		db    0
unk_23028	db  16h			; DATA XREF: dseg:2F9Ao
		db    0
		dd unk_23024
unk_2302E	db 0B9h	; π		; DATA XREF: dseg:2C84o
		db 0B9h	; π
		db 0FFh
		db    0
unk_23032	db    0			; DATA XREF: dseg:2F9Eo
		db    0
		dd unk_2302E
unk_23038	db    1			; DATA XREF: dseg:2C96o
		db    0
		db    0
		db    0
		db    0
		db 0BAh	; ∫
		db    0
		db    0
		db    0
		db    1
		db    1
		db 0FFh
unk_23044	db    1			; DATA XREF: dseg:2FDEo
		db    0
		dd unk_23038
unk_2304A	db  8Dh	; ç		; DATA XREF: dseg:2CA8o
		db    0
		db    0
		db    0
		db    0
		db 0BBh	; ª
		db    0
		db    0
		db    0
		db  8Dh	; ç
		db  8Dh	; ç
		db 0FFh
unk_23056	db    2			; DATA XREF: dseg:2FE2o
		db    0
		dd unk_2304A
unk_2305C	db    7			; DATA XREF: dseg:2CBAo
		db    0
		db    0
		db    0
		db    0
		db 0BCh	; º
		db    0
		db    0
		db    0
		db    7
		db    7
		db 0FFh
unk_23068	db    3			; DATA XREF: dseg:2FE6o
		db    0
		dd unk_2305C
unk_2306E	db  10h			; DATA XREF: dseg:2CCCo
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db  10h
		db  10h
		db 0FFh
unk_2307A	db    5			; DATA XREF: dseg:2FEAo
		db    0
		dd unk_2306E
unk_23080	db  12h			; DATA XREF: dseg:2CDEo
		db    0
		db    0
		db    0
		db    0
		db  13h
		db    0
		db    0
		db    0
		db  12h
		db  12h
		db 0FFh
unk_2308C	db    6			; DATA XREF: dseg:2FEEo
		db    0
		dd unk_23080
unk_23092	db  14h			; DATA XREF: dseg:2CF0o
		db    0
		db    0
		db    0
		db    0
		db 0BDh	; Ω
		db    0
		db    0
		db    0
		db  14h
		db  14h
		db 0FFh
unk_2309E	db    7			; DATA XREF: dseg:2FF2o
		db    0
		dd unk_23092
unk_230A4	db  1Dh			; DATA XREF: dseg:2D02o
		db    0
		db    0
		db    0
		db    0
		db 0BEh	; æ
		db    0
		db    0
		db    0
		db  1Dh
		db  1Dh
		db 0FFh
unk_230B0	db    8			; DATA XREF: dseg:2FF6o
		db    0
		dd unk_230A4
unk_230B6	db  26h	; &		; DATA XREF: dseg:2D14o
		db    0
		db    0
		db    0
		db    0
		db 0BFh	; ø
		db    0
		db    0
		db    0
		db  26h	; &
		db  26h	; &
		db 0FFh
unk_230C2	db    9			; DATA XREF: dseg:2FFAo
		db    0
		dd unk_230B6
unk_230C8	db  32h	; 2		; DATA XREF: dseg:2D26o
		db    0
		db    0
		db    0
		db    0
		db 0C0h	; ¿
		db    0
		db    0
		db    0
		db  32h	; 2
		db  32h	; 2
		db 0FFh
unk_230D4	db  0Ah			; DATA XREF: dseg:2FFEo
		db    0
		dd unk_230C8
unk_230DA	db  45h	; E		; DATA XREF: dseg:2D38o
		db    0
		db    0
		db    0
		db    0
		db 0C1h	; ¡
		db    0
		db    0
		db    0
		db  45h	; E
		db  45h	; E
		db 0FFh
unk_230E6	db  0Ch			; DATA XREF: dseg:3002o
		db    0
		dd unk_230DA
unk_230EC	db 0B9h	; π		; DATA XREF: dseg:2D4Eo
		db    0
		db  26h	; &
		db    0
		db    0
		db 0BFh	; ø
		db    0
		db    0
		db    0
		db  26h	; &
		db  2Dh	; -
		db  2Fh	; /
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
		db    0
unk_230FC	db  0Dh			; DATA XREF: dseg:3006o
		db    0
		dd unk_230EC
unk_23102	db  60h	; `		; DATA XREF: dseg:2D68o
		db    0
		db  61h	; a
		db    0
		db  62h	; b
		db    0
		db  63h	; c
		db    0
		db  60h	; `
		db    0
		db  61h	; a
		db    0
		db  62h	; b
		db    0
		db  63h	; c
		db    0
		db  60h	; `
		db  60h	; `
		db 0FFh
		db    0
unk_23116	db  0Fh			; DATA XREF: dseg:300Ao
		db    0
		dd unk_23102
unk_2311C	db  69h	; i		; DATA XREF: dseg:2D80o
		db    0
		db    0
		db    0
		db    0
		db  6Dh	; m
		db    0
		db    0
		db  6Eh	; n
		db  6Dh	; m
		db  6Eh	; n
		db  6Dh	; m
		db  6Eh	; n
		db  6Dh	; m
		db  69h	; i
		db  69h	; i
		db 0FFh
		db    0
unk_2312E	db  11h			; DATA XREF: dseg:300Eo
		db    0
		dd unk_2311C
unk_23134	db  75h	; u		; DATA XREF: dseg:2D92o
		db    0
		db    0
		db    0
		db    0
		db  6Ch	; l
		db    0
		db    0
		db    0
		db  75h	; u
		db  75h	; u
		db 0FFh
unk_23140	db  13h			; DATA XREF: dseg:3012o
		db    0
		dd unk_23134
unk_23146	db  85h	; Ö		; DATA XREF: dseg:2DA6o
		db  85h	; Ö
		db    0
		db    0
		db  84h	; Ñ
		db  83h	; É
		db  82h	; Ç
		db    0
		db  83h	; É
		db  84h	; Ñ
		db  85h	; Ö
		db  85h	; Ö
		db 0FFh
		db    0
unk_23154	db  14h			; DATA XREF: dseg:303Ao
		db    0
		dd unk_23146
unk_2315A	db  8Bh	; ã		; DATA XREF: dseg:2DBAo
		db  8Bh	; ã
		db    0
		db    0
		db  8Ah	; ä
		db  89h	; â
		db  88h	; à
		db    0
		db  89h	; â
		db  8Ah	; ä
		db  8Bh	; ã
		db  8Bh	; ã
		db 0FFh
		db    0
unk_23168	db  15h			; DATA XREF: dseg:303Eo
		db    0
		dd unk_2315A
unk_2316E	db  8Ch	; å		; DATA XREF: dseg:2DCCo
		db    0
		db    0
		db    0
		db    0
		db 0C2h	; ¬
		db    0
		db    0
		db    0
		db  8Ch	; å
		db  8Ch	; å
		db 0FFh
unk_2317A	db  16h			; DATA XREF: dseg:3016o
		db    0
		dd unk_2316E
unk_23180	db  4Ah	; J		; DATA XREF: dseg:2DDEo
		db    0
		db    0
		db    0
		db    0
		db 0C3h	; √
		db    0
		db    0
		db    0
		db  4Ah	; J
		db  4Ah	; J
		db 0FFh
unk_2318C	db  17h			; DATA XREF: dseg:301Ao
		db    0
		dd unk_23180
unk_23192	db  49h	; I		; DATA XREF: dseg:2DF0o
		db    0
		db    0
		db    0
		db    0
		db 0C4h	; ƒ
		db    0
		db    0
		db    0
		db  49h	; I
		db  49h	; I
		db 0FFh
unk_2319E	db  18h			; DATA XREF: dseg:301Eo
		db    0
		dd unk_23192
unk_231A4	db  98h	; ò		; DATA XREF: dseg:2E06o
		db    0
		db    0
		db    0
		db    0
		db  99h	; ô
		db    0
		db    0
		db    0
		db  9Ah	; ö
		db    0
		db  9Bh	; õ
		db    0
		db 0B9h	; π
		db 0B9h	; π
		db 0FFh
unk_231B4	db    0			; DATA XREF: dseg:3022o
		db    0
		dd unk_231A4
unk_231BA	db  96h	; ñ		; DATA XREF: dseg:2E18o
		db    0
		db    0
		db    0
		db    0
		db  97h	; ó
		db    0
		db    0
		db    0
		db  98h	; ò
		db  98h	; ò
		db 0FFh
unk_231C6	db  1Ah			; DATA XREF: dseg:3026o
		db    0
		dd unk_231BA
unk_231CC	db  94h	; î		; DATA XREF: dseg:2E2Ao
		db    0
		db    0
		db    0
		db    0
		db  95h	; ï
		db    0
		db    0
		db    0
		db  96h	; ñ
		db  96h	; ñ
		db 0FFh
unk_231D8	db  1Bh			; DATA XREF: dseg:302Ao
		db    0
		dd unk_231CC
unk_231DE	db  92h	; í		; DATA XREF: dseg:2E3Co
		db    0
		db    0
		db    0
		db    0
		db  93h	; ì
		db    0
		db    0
		db    0
		db  94h	; î
		db  94h	; î
		db 0FFh
unk_231EA	db  1Ch			; DATA XREF: dseg:302Eo
		db    0
		dd unk_231DE
unk_231F0	db  9Eh	; û		; DATA XREF: dseg:2E52o
		db    0
		db  9Fh	; ü
		db    0
		db 0A0h	; †
		db    0
		db 0A1h	; °
		db    0
		db 0A2h	; ¢
		db    0
		db  9Ch	; ú
		db    0
		db  9Dh	; ù
		db  9Dh	; ù
		db 0FFh
		db    0
unk_23200	db  1Eh			; DATA XREF: dseg:3032o
		db    0
		dd unk_231F0
unk_23206	db 0A5h	; •		; DATA XREF: dseg:2E68o
		db    0
		db 0A6h	; ¶
		db    0
		db 0A7h	; ß
		db    0
		db 0A8h	; ®
		db    0
		db 0A9h	; ©
		db    0
		db 0A3h	; £
		db    0
		db 0A4h	; §
		db 0A4h	; §
		db 0FFh
		db    0
unk_23216	db  1Fh			; DATA XREF: dseg:3036o
		db    0
		dd unk_23206
unk_2321C	db    2			; DATA XREF: dseg:2E86o
		db    0
		db    4
		db    0
		db    2
		db    0
		db    4
		db    0
		db    2
		db    4
		db    2
		db    4
		db    2
		db    4
		db    2
		db    4
		db    2
		db    4
		db    2
		db    4
		db  7Eh	; ~
		db  7Eh	; ~
		db 0FFh
		db    0
unk_23234	db  20h			; DATA XREF: dseg:3042o
		db    0
		dd unk_2321C
unk_2323A	db  7Eh	; ~		; DATA XREF: dseg:2E92o
		db    0
		db    0
		db  7Fh	; 
		db  7Fh	; 
		db 0FFh
unk_23240	db  20h			; DATA XREF: dseg:3046o
		db    0
		dd unk_2323A
unk_23246	db  7Eh	; ~		; DATA XREF: dseg:2E9Co
		db  7Eh	; ~
		db 0FFh
		db    0
unk_2324A	db  20h			; DATA XREF: dseg:304Ao
		db    0
		dd unk_23246
unk_23250	db    6			; DATA XREF: dseg:2EAAo
		db    0
		db    0
		db    0
		db    0
		db  7Eh	; ~
		db  7Eh	; ~
		db 0FFh
unk_23258	db  21h	; !		; DATA XREF: dseg:304Eo
		db    0
		dd unk_23250
unk_2325E	db    5			; DATA XREF: dseg:2EB8o
		db    0
		db    0
		db    0
		db    0
		db  7Eh	; ~
		db  7Eh	; ~
		db 0FFh
unk_23266	db  21h	; !		; DATA XREF: dseg:3052o
		db    0
		dd unk_2325E
unk_2326C	db    2			; DATA XREF: dseg:2ECCo
		db    0
		db    3
		db    0
		db    2
		db    1
		db    4
		db    0
		db    0
		db    0
		db    1
		db  7Eh	; ~
		db  7Eh	; ~
		db 0FFh
unk_2327A	db  21h	; !		; DATA XREF: dseg:3056o
		db    0
		dd unk_2326C
unk_23280	db 0B8h	; ∏		; DATA XREF: dseg:2EDAo
		db    0
		db    0
		db    1
		db  7Eh	; ~
		db  7Eh	; ~
		db 0FFh
		db    0
unk_23288	db  21h	; !		; DATA XREF: dseg:305Ao
		db    0
		dd unk_23280
		db    0
		db    0
		db    0
		db    0
		dd unk_22BCA
		dd unk_22BD8
		dd unk_22BEC
		dd unk_22BF8
		dd unk_22C06
		dd unk_22C14
		dd unk_22C28
		dd unk_22C3E
		dd unk_22C54
		dd unk_22C6C
		dd unk_22C82
		dd unk_22C98
		dd unk_22CB0
		dd unk_22CCA
		dd unk_22CE4
		dd unk_22D02
		dd unk_22D12
		dd unk_22D22
		dd unk_22D38
		dd unk_22D5E
		dd unk_22D6C
		dd unk_22D80
		dd unk_22D94
		dd unk_22DA6
		dd unk_22DB8
		dd unk_22DC2
		dd unk_22DCC
		dd unk_22DE0
		dd unk_22DF2
		dd unk_22E16
		dd unk_22E2A
		dd unk_22E42
		dd unk_22E52
		dd unk_22E8E
		dd unk_22E60
		dd unk_22E7C
		dd unk_22EC2
		dd unk_22ED2
		dd unk_22EEA
		dd unk_22F9A
		dd unk_22FAA
		dd unk_22FC2
		dd unk_22FD4
		dd unk_22FEA
		dd unk_23004
		dd unk_2301E
		dd unk_23028
		dd unk_23032
		dd unk_22D44
		dd unk_22D50
		dd unk_22EFE
		dd unk_22F4E
		dd unk_22EA0
		dd unk_22EB2
		dd unk_22F0C
		dd unk_22F1A
		dd unk_22F2E
		dd unk_22F3A
		dd unk_22F5C
		dd unk_22F6A
		dd unk_22F7E
		dd unk_22F8A
		dd unk_22E02
		dd unk_23044
		dd unk_23056
		dd unk_23068
		dd unk_2307A
		dd unk_2308C
		dd unk_2309E
		dd unk_230B0
		dd unk_230C2
		dd unk_230D4
		dd unk_230E6
		dd unk_230FC
		dd unk_23116
		dd unk_2312E
		dd unk_23140
		dd unk_2317A
		dd unk_2318C
		dd unk_2319E
		dd unk_231B4
		dd unk_231C6
		dd unk_231D8
		dd unk_231EA
		dd unk_23200
		dd unk_23216
		dd unk_23154
		dd unk_23168
		dd unk_23234
		dd unk_23240
		dd unk_2324A
		dd unk_23258
		dd unk_23266
		dd unk_2327A
		dd unk_23288
		db    0
		db    0
		db    0
		db    0
unk_23412	db    1			; DATA XREF: dseg:306Co
		db    0
		db    0
		db    2
		db    0
		db    1
		db    1
		db 0FFh
unk_2341A	db    1			; DATA XREF: dseg:325Ao
		db    0
		dd unk_23412
unk_23420	db    4			; DATA XREF: dseg:3084o
		db    5
		db    6
		db    7
		db    8
		db    0
		db    0
		db    0
		db    0
		db    9
		db  0Ah
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Eh
		db 0FFh
		db    0
unk_23432	db    3			; DATA XREF: dseg:325Eo
		db    0
		dd unk_23420
unk_23438	db  0Fh			; DATA XREF: dseg:309Co
		db  10h
		db  11h
		db  12h
		db    8
		db    0
		db    0
		db    0
		db    0
		db  13h
		db  14h
		db  15h
		db  16h
		db  17h
		db  18h
		db  18h
		db 0FFh
		db    0
unk_2344A	db    4			; DATA XREF: dseg:3262o
		db    0
		dd unk_23438
unk_23450	db  19h			; DATA XREF: dseg:30B4o
		db  1Ah
		db  1Bh
		db  1Ch
		db    8
		db    0
		db    0
		db    0
		db    0
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db    1
		db    1
		db 0FFh
		db    0
unk_23462	db    1			; DATA XREF: dseg:3266o
		db    0
		dd unk_23450
unk_23468	db  23h	; #		; DATA XREF: dseg:30C8o
		db  25h	; %
		db  27h	; '
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db  25h	; %
		db  24h	; $
		db  23h	; #
		db  22h	; "
		db  22h	; "
		db 0FFh
unk_23476	db    6			; DATA XREF: dseg:326Ao
		db    0
		dd unk_23468
unk_2347C	db  29h	; )		; DATA XREF: dseg:30DCo
		db  2Bh	; +
		db  2Dh	; -
		db    0
		db    0
		db    0
		db    0
		db  2Ch	; ,
		db  2Bh	; +
		db  2Ah	; *
		db  29h	; )
		db  28h	; (
		db  28h	; (
		db 0FFh
unk_2348A	db    7			; DATA XREF: dseg:326Eo
		db    0
		dd unk_2347C
unk_23490	db  30h	; 0		; DATA XREF: dseg:30F4o
		db  31h	; 1
		db  32h	; 2
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  39h	; 9
		db  3Ah	; :
		db  3Bh	; ;
		db  3Ch	; <
		db  3Dh	; =
		db  2Eh	; .
		db  2Fh	; /
		db  2Fh	; /
		db 0FFh
unk_234A2	db    8			; DATA XREF: dseg:3272o
		db    0
		dd unk_23490
unk_234A8	db  3Eh	; >		; DATA XREF: dseg:3102o
		db    0
		db    0
		db  5Eh	; ^
		db    0
		db  3Fh	; ?
		db  3Fh	; ?
		db 0FFh
unk_234B0	db  0Ah			; DATA XREF: dseg:3276o
		db    0
		dd unk_234A8
unk_234B6	db  3Fh	; ?		; DATA XREF: dseg:3110o
		db    0
		db    0
		db  5Eh	; ^
		db    0
		db  40h	; @
		db  40h	; @
		db 0FFh
unk_234BE	db  0Bh			; DATA XREF: dseg:327Ao
		db    0
		dd unk_234B6
unk_234C4	db  40h	; @		; DATA XREF: dseg:3128o
		db    0
		db    0
		db  5Eh	; ^
		db    0
		db  41h	; A
		db    0
		db  42h	; B
		db    0
		db  43h	; C
		db    0
		db  44h	; D
		db    0
		db  45h	; E
		db  6Ah	; j
		db  6Ah	; j
		db 0FFh
		db    0
unk_234D6	db    0			; DATA XREF: dseg:327Eo
		db    0
		dd unk_234C4
unk_234DC	db  5Ch	; \		; DATA XREF: dseg:313Co
		db    0
		db    0
		db    0
		db  5Dh	; ]
		db    0
		db  5Eh	; ^
		db    0
		db  60h	; `
		db    0
		db  5Fh	; _
		db  5Fh	; _
		db 0FFh
		db    0
unk_234EA	db  0Fh			; DATA XREF: dseg:3282o
		db    0
		dd unk_234DC
unk_234F0	db  5Fh	; _		; DATA XREF: dseg:3150o
		db    0
		db    0
		db    0
		db  60h	; `
		db    0
		db  5Eh	; ^
		db    0
		db  62h	; b
		db    0
		db  61h	; a
		db  61h	; a
		db 0FFh
		db    0
unk_234FE	db  10h			; DATA XREF: dseg:3286o
		db    0
		dd unk_234F0
unk_23504	db  61h	; a		; DATA XREF: dseg:3164o
		db    0
		db    0
		db    0
		db  62h	; b
		db    0
		db  5Eh	; ^
		db    0
		db  64h	; d
		db    0
		db  63h	; c
		db  63h	; c
		db 0FFh
		db    0
unk_23512	db  11h			; DATA XREF: dseg:328Ao
		db    0
		dd unk_23504
unk_23518	db  63h	; c		; DATA XREF: dseg:3178o
		db    0
		db    0
		db    0
		db  64h	; d
		db    0
		db  5Eh	; ^
		db    0
		db  5Dh	; ]
		db    0
		db  5Ch	; \
		db  5Ch	; \
		db 0FFh
		db    0
unk_23526	db  0Eh			; DATA XREF: dseg:328Eo
		db    0
		dd unk_23518
unk_2352C	db  65h	; e		; DATA XREF: dseg:318Co
		db  66h	; f
		db  67h	; g
		db  68h	; h
		db  69h	; i
		db    0
		db    0
		db  68h	; h
		db  67h	; g
		db  66h	; f
		db  65h	; e
		db  6Ah	; j
		db  6Ah	; j
		db 0FFh
unk_2353A	db  12h			; DATA XREF: dseg:3292o
		db    0
		dd unk_2352C
unk_23540	db  68h	; h		; DATA XREF: dseg:319Ao
		db  67h	; g
		db  66h	; f
		db  65h	; e
		db  6Ah	; j
		db  6Ah	; j
		db 0FFh
		db    0
unk_23548	db    0			; DATA XREF: dseg:3296o
		db    0
		dd unk_23540
unk_2354E	db    5			; DATA XREF: dseg:31B0o
		db    6
		db    7
		db    8
		db    0
		db    0
		db    0
		db    9
		db  0Ah
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Eh
		db 0FFh
		db    0
unk_2355E	db    3			; DATA XREF: dseg:329Ao
		db    0
		dd unk_2354E
unk_23564	db  10h			; DATA XREF: dseg:31C6o
		db  11h
		db  12h
		db    8
		db    0
		db    0
		db    0
		db  13h
		db  14h
		db  15h
		db  16h
		db  17h
		db  18h
		db  18h
		db 0FFh
		db    0
unk_23574	db    4			; DATA XREF: dseg:329Eo
		db    0
		dd unk_23564
unk_2357A	db  1Ah			; DATA XREF: dseg:31DCo
		db  1Bh
		db  1Ch
		db    8
		db    0
		db    0
		db    0
		db  1Dh
		db  1Eh
		db  1Fh
		db  20h
		db  21h	; !
		db    1
		db    1
		db 0FFh
		db    0
unk_2358A	db    1			; DATA XREF: dseg:32A2o
		db    0
		dd unk_2357A
unk_23590	db  23h	; #		; DATA XREF: dseg:31F0o
		db  25h	; %
		db  27h	; '
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db  25h	; %
		db  24h	; $
		db  23h	; #
		db  22h	; "
		db  22h	; "
		db 0FFh
unk_2359E	db    6			; DATA XREF: dseg:32A6o
		db    0
		dd unk_23590
unk_235A4	db  29h	; )		; DATA XREF: dseg:3204o
		db  2Bh	; +
		db  2Dh	; -
		db    0
		db    0
		db    0
		db    0
		db  2Ch	; ,
		db  2Bh	; +
		db  2Ah	; *
		db  29h	; )
		db  28h	; (
		db  28h	; (
		db 0FFh
unk_235B2	db    7			; DATA XREF: dseg:32AAo
		db    0
		dd unk_235A4
unk_235B8	db  4Eh	; N		; DATA XREF: dseg:3228o
		db    0
		db  4Fh	; O
		db    0
		db  50h	; P
		db    0
		db  51h	; Q
		db    0
		db  52h	; R
		db    0
		db  53h	; S
		db    0
		db  54h	; T
		db    0
		db  55h	; U
		db    0
		db  56h	; V
		db    0
		db  57h	; W
		db    0
		db  58h	; X
		db    0
		db  59h	; Y
		db    0
		db  5Ah	; Z
		db    0
		db  4Dh	; M
		db  4Dh	; M
		db 0FFh
		db    0
unk_235D6	db  0Dh			; DATA XREF: dseg:32AEo
		db    0
		dd unk_235B8
unk_235DC	db  47h	; G		; DATA XREF: dseg:323Eo
		db    0
		db    0
		db  5Eh	; ^
		db    0
		db  5Dh	; ]
		db    0
		db  60h	; `
		db    0
		db  62h	; b
		db    0
		db  64h	; d
		db  5Eh	; ^
		db  47h	; G
		db  47h	; G
		db 0FFh
unk_235EC	db    5			; DATA XREF: dseg:32B2o
		db    0
		dd unk_235DC
unk_235F2	db  48h	; H		; DATA XREF: dseg:3252o
		db    0
		db  49h	; I
		db    0
		db  4Ah	; J
		db    0
		db  4Bh	; K
		db    0
		db  4Ch	; L
		db    0
		db  6Ah	; j
		db  6Ah	; j
		db 0FFh
		db    0
unk_23600	db    0			; DATA XREF: dseg:32B6o
		db    0
		dd unk_235F2
		db    0
		db    0
		db    0
		db    0
		dd unk_2341A
		dd unk_23432
		dd unk_2344A
		dd unk_23462
		dd unk_23476
		dd unk_2348A
		dd unk_234A2
		dd unk_234B0
		dd unk_234BE
		dd unk_234D6
		dd unk_234EA
		dd unk_234FE
		dd unk_23512
		dd unk_23526
		dd unk_2353A
		dd unk_23548
		dd unk_2355E
		dd unk_23574
		dd unk_2358A
		dd unk_2359E
		dd unk_235B2
		dd unk_235D6
		dd unk_235EC
		dd unk_23600
		align 8
		db    3
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    3
		db    0
		db    7
		db    0
		db    3
		db    0
		db  0Ah
		db    0
		db    3
		db    0
		db  0Ch
		db    0
		db    3
		db    0
		db  0Fh
		db    0
		db    3
		db    0
		db  11h
		db    0
		db    3
		db    0
		db    0
		db    0
		db    7
		db    0
		db    2
		db    0
		db    7
		db    0
		db    5
		db    0
		db    7
		db    0
		db    7
		db    0
		db    7
		db    0
		db  0Ah
		db    0
		db    7
		db    0
		db  0Ch
		db    0
		db    7
		db    0
		db  0Fh
		db    0
		db    7
		db    0
		db  11h
		db    0
		db    7
		db    0
		db    0
		db    0
		db  0Bh
		db    0
		db    2
		db    0
		db  0Bh
		db    0
		db    5
		db    0
		db  0Bh
		db    0
		db    7
		db    0
		db  0Bh
		db    0
		db  0Ah
		db    0
		db  0Bh
		db    0
		db  0Ch
		db    0
		db  0Bh
		db    0
		db  0Fh
		db    0
		db  0Bh
		db    0
		db  11h
		db    0
		db  0Bh
		db    0
		db    0
		db    0
		db  0Fh
		db    0
		db    2
		db    0
		db  0Fh
		db    0
		db    5
		db    0
		db  0Fh
		db    0
		db    7
		db    0
		db  0Fh
		db    0
		db  0Ah
		db    0
		db  0Fh
		db    0
		db  0Ch
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db  11h
		db    0
		db  0Fh
		db    0
		db    0
		db    0
		db  13h
		db    0
		db    2
		db    0
		db  13h
		db    0
		db    5
		db    0
		db  13h
		db    0
		db    7
		db    0
		db  13h
		db    0
		db  0Ah
		db    0
		db  13h
		db    0
		db  0Ch
		db    0
		db  13h
		db    0
		db  0Fh
		db    0
		db  13h
		db    0
		db  11h
		db    0
		db  13h
		db    0
		db    0
		db    0
		db  17h
		db    0
		db    2
		db    0
		db  17h
		db    0
		db    5
		db    0
		db  17h
		db    0
		db    7
		db    0
		db  17h
		db    0
		db  0Ah
		db    0
		db  17h
		db    0
		db  0Ch
		db    0
		db  17h
		db    0
		db  0Fh
		db    0
		db  17h
		db    0
		db  11h
		db    0
		db  17h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    0
		db    0
		db    0
		db    4
		db    0
		db    0
		db    0
		db    7
		db    0
		db    0
		db    0
		db    9
		db    0
		db    0
		db    0
		db  0Ch
		db    0
		db    0
		db    0
		db  0Eh
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db    2
		db    0
		db    4
		db    0
		db    4
		db    0
		db    4
		db    0
		db    7
		db    0
		db    4
		db    0
		db    9
		db    0
		db    4
		db    0
		db  0Ch
		db    0
		db    4
		db    0
		db  0Eh
		db    0
		db    4
		db    0
		db  11h
		db    0
		db    4
		db    0
		db  11h
		db    0
		db    4
		db    0
		db    2
		db    0
		db    8
		db    0
		db    4
		db    0
		db    8
		db    0
		db    7
		db    0
		db    8
		db    0
		db    9
		db    0
		db    8
		db    0
		db  0Ch
		db    0
		db    8
		db    0
		db  0Eh
		db    0
		db    8
		db    0
		db  11h
		db    0
		db    8
		db    0
		db  11h
		db    0
		db    8
		db    0
		db    2
		db    0
		db  0Ch
		db    0
		db    4
		db    0
		db  0Ch
		db    0
		db    7
		db    0
		db  0Ch
		db    0
		db    9
		db    0
		db  0Ch
		db    0
		db  0Ch
		db    0
		db  0Ch
		db    0
		db  0Eh
		db    0
		db  0Ch
		db    0
		db  11h
		db    0
		db  0Ch
		db    0
		db  11h
		db    0
		db  0Ch
		db    0
		db    2
		db    0
		db  10h
		db    0
		db    4
		db    0
		db  10h
		db    0
		db    7
		db    0
		db  10h
		db    0
		db    9
		db    0
		db  10h
		db    0
		db  0Ch
		db    0
		db  10h
		db    0
		db  0Eh
		db    0
		db  10h
		db    0
		db  11h
		db    0
		db  10h
		db    0
		db  11h
		db    0
		db  10h
		db    0
		db    2
		db    0
		db  14h
		db    0
		db    4
		db    0
		db  14h
		db    0
		db    7
		db    0
		db  14h
		db    0
		db    9
		db    0
		db  14h
		db    0
		db  0Ch
		db    0
		db  14h
		db    0
		db  0Eh
		db    0
		db  14h
		db    0
		db  11h
		db    0
		db  14h
		db    0
		db  11h
		db    0
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    3
		db    4
		db  17h
		db    5
		db    0
		db    7
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    3
		db    4
		db  17h
		db    0
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    3
		db    4
		db  17h
		db    5
		db    0
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    2
		db    3
		db    4
		db  17h
		db    0
		db    6
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  11h
		db  12h
		db  13h
		db  17h
		db  14h
		db    0
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  11h
		db  12h
		db  13h
		db  17h
		db    0
		db  15h
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  11h
		db  12h
		db  13h
		db  17h
		db  14h
		db    0
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  11h
		db  12h
		db  13h
		db  17h
		db    0
		db  15h
		db    0
		db    8
		db    9
		db  0Ah
		db    0
		db    0
		db  0Bh
		db  0Ch
		db  0Dh
		db  0Eh
		db  0Fh
		db  10h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db    0
		db    1
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Eh
		db    0
		db  11h
		db  10h
		db    3
		db  1Ah
		db  1Bh
		db    0
		db    1
		db    2
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db  10h
		db  30h	; 0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    2
		db    1
		db    1
		db    1
		db    1
		db    0
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db  10h
		db    3
		db  1Ah
		db  1Bh
		db    0
		db    1
		db    2
		db    3
		db    1
		db    1
		db    1
		db    1
		db    1
		db  10h
		db  30h	; 0
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db    2
		db    2
		db    2
		db    2
		db    1
		db    2
		db    2
		db    2
		db    2
		db    2
		db    0
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db  10h
		db    3
		db  1Ah
		db  1Bh
		db    0
		db    1
		db    2
		db    3
		db    2
		db    2
		db    2
		db    2
		db    2
		db  10h
		db  30h	; 0
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db  11h
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db  11h
		db  11h
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    9
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db    9
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db    8
		db    9
		db    8
		db    9
		db    8
		db    9
		db    8
		db    8
		db    9
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db    8
		db    9
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db    8
		db    9
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_23B6E	db    5			; DATA XREF: dseg:3D6Eo
		db    0
		db  40h	; @
		db    0
unk_23B72	db    5			; DATA XREF: dseg:3D72o
		db    0
		db  41h	; A
		db    0
unk_23B76	db    4			; DATA XREF: dseg:3D76o
		db    0
		db  42h	; B
		db    0
unk_23B7A	db    2			; DATA XREF: dseg:3D7Ao
		db    0
		db  43h	; C
		db    0
unk_23B7E	db    2			; DATA XREF: dseg:3D7Eo
		db    0
		db  44h	; D
		db    0
unk_23B82	db    2			; DATA XREF: dseg:3D82o
		db    0
		db  45h	; E
		db    0
unk_23B86	db    5			; DATA XREF: dseg:3D86o
		db    0
		db  46h	; F
		db    0
unk_23B8A	db    5			; DATA XREF: dseg:3D8Ao
		db    0
		db  47h	; G
		db    0
unk_23B8E	db    4			; DATA XREF: dseg:3D8Eo
		db    0
		db  48h	; H
		db    0
unk_23B92	db    5			; DATA XREF: dseg:3D92o
		db    0
		db  49h	; I
		db    0
unk_23B96	db    5			; DATA XREF: dseg:3D96o
		db    0
		db  4Ah	; J
		db    0
unk_23B9A	db    1			; DATA XREF: dseg:3D9Ao
		db    0
		db  4Bh	; K
		db    0
unk_23B9E	db    5			; DATA XREF: dseg:3D9Eo
		db    0
		db  4Ch	; L
		db    0
unk_23BA2	db    2			; DATA XREF: dseg:3DA2o
		db    0
		db  4Dh	; M
		db    0
unk_23BA6	db    2			; DATA XREF: dseg:3DA6o
		db    0
		db  4Eh	; N
		db    0
unk_23BAA	db    3			; DATA XREF: dseg:3DAAo
		db    0
		db  4Fh	; O
		db    0
unk_23BAE	db    3			; DATA XREF: dseg:3DAEo
		db    0
		db  50h	; P
		db    0
unk_23BB2	db    3			; DATA XREF: dseg:3DB2o
		db    0
		db  51h	; Q
		db    0
unk_23BB6	db    3			; DATA XREF: dseg:3DB6o
		db    0
		db  52h	; R
		db    0
unk_23BBA	db    5			; DATA XREF: dseg:3DBAo
		db    0
		db  53h	; S
		db    0
unk_23BBE	db    5			; DATA XREF: dseg:3DBEo
		db    0
		db  54h	; T
		db    0
unk_23BC2	db    4			; DATA XREF: dseg:3DC2o
		db    0
		db  55h	; U
		db    0
unk_23BC6	db    2			; DATA XREF: dseg:3DC6o
		db    0
		db  56h	; V
		db    0
unk_23BCA	db    2			; DATA XREF: dseg:3DCAo
		db    0
		db  57h	; W
		db    0
unk_23BCE	db    2			; DATA XREF: dseg:3DCEo
		db    0
		db  58h	; X
		db    0
unk_23BD2	db    5			; DATA XREF: dseg:3DD2o
		db    0
		db  59h	; Y
		db    0
unk_23BD6	db    5			; DATA XREF: dseg:3DD6o
		db    0
		db  5Ah	; Z
		db    0
unk_23BDA	db    5			; DATA XREF: dseg:3DDAo
		db    0
		db  5Bh	; [
		db    0
unk_23BDE	db    5			; DATA XREF: dseg:3DDEo
		db    0
		db  5Ch	; \
		db    0
unk_23BE2	db    5			; DATA XREF: dseg:3DE2o
		db    0
		db  5Dh	; ]
		db    0
unk_23BE6	db    4			; DATA XREF: dseg:3DE6o
		db    0
		db  5Eh	; ^
		db    0
unk_23BEA	db    3			; DATA XREF: dseg:3DEAo
		db    0
		db  5Fh	; _
		db    0
unk_23BEE	db    3			; DATA XREF: dseg:3DEEo
		db    0
		db  60h	; `
		db    0
unk_23BF2	db    3			; DATA XREF: dseg:3DF2o
		db    0
		db  61h	; a
		db    0
unk_23BF6	db    5			; DATA XREF: dseg:3DF6o
		db    0
		db  62h	; b
		db    0
unk_23BFA	db    5			; DATA XREF: dseg:3DFAo
		db    0
		db  63h	; c
		db    0
unk_23BFE	db    5			; DATA XREF: dseg:3DFEo
		db    0
		db  64h	; d
		db    0
unk_23C02	db    5			; DATA XREF: dseg:3E02o
		db    0
		db  65h	; e
		db    0
unk_23C06	db    5			; DATA XREF: dseg:3E06o
		db    0
		db  66h	; f
		db    0
unk_23C0A	db    5			; DATA XREF: dseg:3E0Ao
		db    0
		db  67h	; g
		db    0
unk_23C0E	db    4			; DATA XREF: dseg:3E0Eo
		db    0
		db  68h	; h
		db    0
unk_23C12	db    3			; DATA XREF: dseg:3E12o
		db    0
		db  69h	; i
		db    0
unk_23C16	db    3			; DATA XREF: dseg:3E16o
		db    0
		db  6Ah	; j
		db    0
unk_23C1A	db    5			; DATA XREF: dseg:3E1Ao
		db    0
		db  6Bh	; k
		db    0
unk_23C1E	db    5			; DATA XREF: dseg:3E1Eo
		db    0
		db  6Ch	; l
		db    0
unk_23C22	db    5			; DATA XREF: dseg:3E22o
		db    0
		db  6Dh	; m
		db    0
unk_23C26	db    6			; DATA XREF: dseg:3E26o
		db    0
		db  6Eh	; n
		db    0
unk_23C2A	db    5			; DATA XREF: dseg:3E2Ao
		db    0
		db  6Fh	; o
		db    0
unk_23C2E	db    4			; DATA XREF: dseg:3E2Eo
		db    0
		db  70h	; p
		db    0
unk_23C32	db    5			; DATA XREF: dseg:3E32o
		db    0
		db  71h	; q
		db    0
unk_23C36	db    5			; DATA XREF: dseg:3E36o
		db    0
		db  72h	; r
		db    0
unk_23C3A	db    4			; DATA XREF: dseg:3E3Ao
		db    0
		db  73h	; s
		db    0
unk_23C3E	db    2			; DATA XREF: dseg:3E3Eo
		db    0
		db  74h	; t
		db    0
unk_23C42	db    2			; DATA XREF: dseg:3E42o
		db    0
		db  75h	; u
		db    0
unk_23C46	db    2			; DATA XREF: dseg:3E46o
		db    0
		db  76h	; v
		db    0
unk_23C4A	db    3			; DATA XREF: dseg:3E4Ao
		db    0
		db  77h	; w
		db    0
unk_23C4E	db    2			; DATA XREF: dseg:3E4Eo
		db    0
		db  78h	; x
		db    0
unk_23C52	db    1			; DATA XREF: dseg:3E52o
		db    0
		db  79h	; y
		db    0
unk_23C56	db    2			; DATA XREF: dseg:3E56o
		db    0
		db  7Ah	; z
		db    0
unk_23C5A	db    3			; DATA XREF: dseg:3E5Ao
		db    0
		db  7Bh	; {
		db    0
unk_23C5E	db    4			; DATA XREF: dseg:3E5Eo
		db    0
		db  7Ch	; |
		db    0
unk_23C62	db    3			; DATA XREF: dseg:3E62o
		db    0
		db  7Dh	; }
		db    0
unk_23C66	db    3			; DATA XREF: dseg:3E66o
		db    0
		db  7Eh	; ~
		db    0
unk_23C6A	db    4			; DATA XREF: dseg:3E6Ao
		db    0
		db  7Fh	; 
		db    0
unk_23C6E	db    4			; DATA XREF: dseg:3E6Eo
		db    0
		db  80h	; Ä
		db    0
unk_23C72	db    3			; DATA XREF: dseg:3E72o
		db    0
		db  81h	; Å
		db    0
unk_23C76	db    3			; DATA XREF: dseg:3E76o
		db    0
		db  82h	; Ç
		db    0
unk_23C7A	db    4			; DATA XREF: dseg:3E7Ao
		db    0
		db  83h	; É
		db    0
unk_23C7E	db    5			; DATA XREF: dseg:3E7Eo
		db    0
		db  84h	; Ñ
		db    0
unk_23C82	db    5			; DATA XREF: dseg:3E82o
		db    0
		db  85h	; Ö
		db    0
unk_23C86	db    4			; DATA XREF: dseg:3E86o
		db    0
		db  86h	; Ü
		db    0
unk_23C8A	db    2			; DATA XREF: dseg:3E8Ao
		db    0
		db  87h	; á
		db    0
unk_23C8E	db    2			; DATA XREF: dseg:3E8Eo
		db    0
		db  88h	; à
		db    0
unk_23C92	db    2			; DATA XREF: dseg:3E92o
		db    0
		db  89h	; â
		db    0
unk_23C96	db    5			; DATA XREF: dseg:3E96o
		db    0
		db  8Ah	; ä
		db    0
unk_23C9A	db    5			; DATA XREF: dseg:3E9Ao
		db    0
		db  8Bh	; ã
		db    0
unk_23C9E	db    5			; DATA XREF: dseg:3E9Eo
		db    0
		db  8Ch	; å
		db    0
unk_23CA2	db    5			; DATA XREF: dseg:3EA2o
		db    0
		db  8Dh	; ç
		db    0
unk_23CA6	db    5			; DATA XREF: dseg:3EA6o
		db    0
		db  8Eh	; é
		db    0
unk_23CAA	db    5			; DATA XREF: dseg:3EAAo
		db    0
		db  8Fh	; è
		db    0
unk_23CAE	db    5			; DATA XREF: dseg:3EAEo
		db    0
		db  90h	; ê
		db    0
unk_23CB2	db    5			; DATA XREF: dseg:3EB2o
		db    0
		db  91h	; ë
		db    0
unk_23CB6	db    3			; DATA XREF: dseg:3EB6o
		db    0
		db  92h	; í
		db    0
unk_23CBA	db    0			; DATA XREF: dseg:3EBAo
		db    0
		db  93h	; ì
		db    0
unk_23CBE	db    3			; DATA XREF: dseg:3EBEo
		db    0
		db  94h	; î
		db    0
unk_23CC2	db    0			; DATA XREF: dseg:3EC2o
		db    0
		db  95h	; ï
		db    0
unk_23CC6	db    0			; DATA XREF: dseg:3EC6o
		db    0
		db  96h	; ñ
		db    0
unk_23CCA	db    0			; DATA XREF: dseg:3ECAo
		db    0
		db  97h	; ó
		db    0
unk_23CCE	db    0			; DATA XREF: dseg:3ECEo
		db    0
		db  98h	; ò
		db    0
unk_23CD2	db    2			; DATA XREF: dseg:3ED2o
		db    0
		db  99h	; ô
		db    0
unk_23CD6	db    3			; DATA XREF: dseg:3ED6o
		db    0
		db  9Ah	; ö
		db    0
unk_23CDA	db    5			; DATA XREF: dseg:3EDAo
		db    0
		db  9Bh	; õ
		db    0
unk_23CDE	db    5			; DATA XREF: dseg:3EDEo
		db    0
		db  9Ch	; ú
		db    0
unk_23CE2	db    4			; DATA XREF: dseg:3EE2o
		db    0
		db  9Dh	; ù
		db    0
unk_23CE6	db    2			; DATA XREF: dseg:3EE6o
		db    0
		db  9Eh	; û
		db    0
unk_23CEA	db    2			; DATA XREF: dseg:4012o
		db    0
		db 0E5h	; Â
		db    0
unk_23CEE	db    2			; DATA XREF: dseg:4016o
		db    0
		db 0E6h	; Ê
		db    0
unk_23CF2	db    2			; DATA XREF: dseg:3EEAo
		db    0
		db  9Fh	; ü
		db    0
unk_23CF6	db    2			; DATA XREF: dseg:3EEEo
		db    0
		db 0A0h	; †
		db    0
unk_23CFA	db    2			; DATA XREF: dseg:3EF2o
		db    0
		db 0A1h	; °
		db    0
unk_23CFE	db    2			; DATA XREF: dseg:3EF6o
		db    0
		db 0A2h	; ¢
		db    0
unk_23D02	db    5			; DATA XREF: dseg:3EFAo
		db    0
		db 0A3h	; £
		db    0
unk_23D06	db    5			; DATA XREF: dseg:3EFEo
		db    0
		db 0A4h	; §
		db    0
unk_23D0A	db    5			; DATA XREF: dseg:3F02o
		db    0
		db 0A5h	; •
		db    0
unk_23D0E	db    5			; DATA XREF: dseg:3F06o
		db    0
		db 0A6h	; ¶
		db    0
unk_23D12	db    5			; DATA XREF: dseg:3F0Ao
		db    0
		db 0A7h	; ß
		db    0
unk_23D16	db    5			; DATA XREF: dseg:401Ao
		db    0
		db 0E7h	; Á
		db    0
unk_23D1A	db    4			; DATA XREF: dseg:401Eo
		db    0
		db 0E8h	; Ë
		db    0
unk_23D1E	db    2			; DATA XREF: dseg:4022o
		db    0
		db 0E9h	; È
		db    0
unk_23D22	db    2			; DATA XREF: dseg:4026o
		db    0
		db 0EAh	; Í
		db    0
unk_23D26	db    2			; DATA XREF: dseg:402Ao
		db    0
		db 0EBh	; Î
		db    0
unk_23D2A	db    6			; DATA XREF: dseg:4042o
		db    0
		db 0A3h	; £
		db    0
unk_23D2E	db    4			; DATA XREF: dseg:3F0Eo
		db    0
		db 0A8h	; ®
		db    0
unk_23D32	db    4			; DATA XREF: dseg:3F12o
		db    0
		db 0A9h	; ©
		db    0
unk_23D36	db    4			; DATA XREF: dseg:3F16o
		db    0
		db 0AAh	; ™
		db    0
unk_23D3A	db    0			; DATA XREF: dseg:3F1Ao
		db    0
		db 0ABh	; ´
		db    0
unk_23D3E	db    4			; DATA XREF: dseg:3F1Eo
		db    0
		db 0ACh	; ¨
		db    0
unk_23D42	db    4			; DATA XREF: dseg:3F22o
		db    0
		db 0ADh	; ≠
		db    0
unk_23D46	db    4			; DATA XREF: dseg:3F26o
		db    0
		db 0AEh	; Æ
		db    0
unk_23D4A	db    4			; DATA XREF: dseg:3F2Ao
		db    0
		db 0AFh	; Ø
		db    0
unk_23D4E	db    4			; DATA XREF: dseg:3F2Eo
		db    0
		db 0B0h	; ∞
		db    0
unk_23D52	db    4			; DATA XREF: dseg:3F32o
		db    0
		db 0B1h	; ±
		db    0
unk_23D56	db    4			; DATA XREF: dseg:3F36o
		db    0
		db 0B2h	; ≤
		db    0
unk_23D5A	db    1			; DATA XREF: dseg:3F3Ao
		db    0
		db 0B3h	; ≥
		db    0
unk_23D5E	db    0			; DATA XREF: dseg:3F3Eo
		db    0
		db 0B4h	; ¥
		db    0
unk_23D62	db    1			; DATA XREF: dseg:3F42o
		db    0
		db 0B5h	; µ
		db    0
unk_23D66	db    2			; DATA XREF: dseg:3F46o
		db    0
		db 0B6h	; ∂
		db    0
unk_23D6A	db    3			; DATA XREF: dseg:3F4Ao
		db    0
		db 0B7h	; ∑
		db    0
unk_23D6E	db    4			; DATA XREF: dseg:3F4Eo
		db    0
		db 0B8h	; ∏
		db    0
unk_23D72	db    5			; DATA XREF: dseg:3F52o
		db    0
		db 0B9h	; π
		db    0
unk_23D76	db    6			; DATA XREF: dseg:3F56o
		db    0
		db 0BAh	; ∫
		db    0
unk_23D7A	db    3			; DATA XREF: dseg:3F5Ao
		db    0
		db 0BBh	; ª
		db    0
unk_23D7E	db    1			; DATA XREF: dseg:3F5Eo
		db    0
		db 0BCh	; º
		db    0
unk_23D82	db    2			; DATA XREF: dseg:3F62o
		db    0
		db 0BDh	; Ω
		db    0
unk_23D86	db    0			; DATA XREF: dseg:3F66o
		db    0
		db 0BEh	; æ
		db    0
unk_23D8A	db    0			; DATA XREF: dseg:3F6Ao
		db    0
		db 0BFh	; ø
		db    0
unk_23D8E	db    0			; DATA XREF: dseg:3F6Eo
		db    0
		db 0C0h	; ¿
		db    0
unk_23D92	db    0			; DATA XREF: dseg:3F72o
		db    0
		db 0C1h	; ¡
		db    0
unk_23D96	db    0			; DATA XREF: dseg:3F76o
		db    0
		db 0C2h	; ¬
		db    0
unk_23D9A	db    0			; DATA XREF: dseg:3F7Ao
		db    0
		db 0C3h	; √
		db    0
unk_23D9E	db    0			; DATA XREF: dseg:3F7Eo
		db    0
		db 0C4h	; ƒ
		db    0
unk_23DA2	db    0			; DATA XREF: dseg:3F82o
		db    0
		db 0C5h	; ≈
		db    0
unk_23DA6	db    0			; DATA XREF: dseg:3F86o
		db    0
		db 0C6h	; ∆
		db    0
unk_23DAA	db    0			; DATA XREF: dseg:3F8Ao
		db    0
		db 0C7h	; «
		db    0
unk_23DAE	db    0			; DATA XREF: dseg:3F8Eo
		db    0
		db 0C8h	; »
		db    0
unk_23DB2	db    0			; DATA XREF: dseg:3F92o
		db    0
		db 0C9h	; …
		db    0
unk_23DB6	db    0			; DATA XREF: dseg:3F96o
		db    0
		db 0CAh	;  
		db    0
unk_23DBA	db    2			; DATA XREF: dseg:3F9Ao
		db    0
		db 0CBh	; À
		db    0
unk_23DBE	db    5			; DATA XREF: dseg:3F9Eo
		db    0
		db 0CCh	; Ã
		db    0
unk_23DC2	db    5			; DATA XREF: dseg:3FA2o
		db    0
		db 0CDh	; Õ
		db    0
unk_23DC6	db    5			; DATA XREF: dseg:3FA6o
		db    0
		db 0CEh	; Œ
		db    0
unk_23DCA	db    5			; DATA XREF: dseg:3FAAo
		db    0
		db 0CFh	; œ
		db    0
unk_23DCE	db    5			; DATA XREF: dseg:3FAEo
		db    0
		db 0D0h	; –
		db    0
unk_23DD2	db    5			; DATA XREF: dseg:402Eo
		db    0
		db 0ECh	; Ï
		db    0
unk_23DD6	db    4			; DATA XREF: dseg:4032o
		db    0
		db 0EDh	; Ì
		db    0
unk_23DDA	db    2			; DATA XREF: dseg:4036o
		db    0
		db 0EEh	; Ó
		db    0
unk_23DDE	db    2			; DATA XREF: dseg:403Ao
		db    0
		db 0EFh	; Ô
		db    0
unk_23DE2	db    2			; DATA XREF: dseg:403Eo
		db    0
		db 0F0h	; 
		db    0
unk_23DE6	db    6			; DATA XREF: dseg:4046o
		db    0
		db 0CCh	; Ã
		db    0
unk_23DEA	db    5			; DATA XREF: dseg:3FB2o
		db    0
		db 0D1h	; —
		db    0
unk_23DEE	db    3			; DATA XREF: dseg:3FB6o
		db    0
		db 0D1h	; —
		db    0
unk_23DF2	db    5			; DATA XREF: dseg:3FBAo
		db    0
		db 0D2h	; “
		db    0
unk_23DF6	db    3			; DATA XREF: dseg:3FBEo
		db    0
		db 0D2h	; “
		db    0
unk_23DFA	db    5			; DATA XREF: dseg:3FC2o
		db    0
		db 0D3h	; ”
		db    0
unk_23DFE	db    3			; DATA XREF: dseg:3FC6o
		db    0
		db 0D3h	; ”
		db    0
unk_23E02	db    5			; DATA XREF: dseg:3FCAo
		db    0
		db 0D4h	; ‘
		db    0
unk_23E06	db    3			; DATA XREF: dseg:3FCEo
		db    0
		db 0D4h	; ‘
		db    0
unk_23E0A	db    5			; DATA XREF: dseg:3FD2o
		db    0
		db 0D5h	; ’
		db    0
unk_23E0E	db    5			; DATA XREF: dseg:3FD6o
		db    0
		db 0D6h	; ÷
		db    0
unk_23E12	db    4			; DATA XREF: dseg:3FDAo
		db    0
		db 0D7h	; ◊
		db    0
unk_23E16	db    4			; DATA XREF: dseg:3FDEo
		db    0
		db 0D8h	; ÿ
		db    0
unk_23E1A	db    4			; DATA XREF: dseg:3FE2o
		db    0
		db 0D9h	; Ÿ
		db    0
unk_23E1E	db    4			; DATA XREF: dseg:3FE6o
		db    0
		db 0DAh	; ⁄
		db    0
unk_23E22	db    4			; DATA XREF: dseg:3FEAo
		db    0
		db 0DBh	; €
		db    0
unk_23E26	db    4			; DATA XREF: dseg:3FEEo
		db    0
		db 0DCh	; ‹
		db    0
unk_23E2A	db    4			; DATA XREF: dseg:3FF2o
		db    0
		db 0DDh	; ›
		db    0
unk_23E2E	db    5			; DATA XREF: dseg:3FF6o
		db    0
		db 0DEh	; ﬁ
		db    0
unk_23E32	db    2			; DATA XREF: dseg:3FFAo
		db    0
		db 0DFh	; ﬂ
		db    0
unk_23E36	db    0			; DATA XREF: dseg:3FFEo
		db    0
		db 0E0h	; ‡
		db    0
unk_23E3A	db    0			; DATA XREF: dseg:4002o
		db    0
		db 0E1h	; ·
		db    0
unk_23E3E	db    0			; DATA XREF: dseg:4006o
		db    0
		db 0E2h	; ‚
		db    0
unk_23E42	db    0			; DATA XREF: dseg:400Ao
		db    0
		db 0E3h	; „
		db    0
unk_23E46	db    2			; DATA XREF: dseg:400Eo
		db    0
		db 0E4h	; ‰
		db    0
unk_23E4A	db    6			; DATA XREF: dseg:404Ao
		db    0
		db  40h	; @
		db    0
unk_23E4E	db    0			; DATA XREF: dseg:404Eo
		db    0
		db    0
		db    2
unk_23E52	db    3			; DATA XREF: dseg:4052o
		db    0
		db  40h	; @
		db    0
unk_23E56	db    3			; DATA XREF: dseg:4056o
		db    0
		db 0CCh	; Ã
		db    0
unk_23E5A	db    3			; DATA XREF: dseg:405Ao
		db    0
		db  46h	; F
		db    0
unk_23E5E	db    3			; DATA XREF: dseg:405Eo
		db    0
		db  53h	; S
		db    0
unk_23E62	db    3			; DATA XREF: dseg:4062o
		db    0
		db  5Ch	; \
		db    0
unk_23E66	db    3			; DATA XREF: dseg:4066o
		db    0
		db  65h	; e
		db    0
unk_23E6A	db    3			; DATA XREF: dseg:406Ao
		db    0
		db  71h	; q
		db    0
unk_23E6E	db    3			; DATA XREF: dseg:406Eo
		db    0
		db  84h	; Ñ
		db    0
unk_23E72	db    0			; DATA XREF: dseg:4072o
		db    0
		db 0CBh	; À
		db    0
unk_23E76	db    0			; DATA XREF: dseg:4076o
		db    0
		db  89h	; â
		db    0
unk_23E7A	db    0			; DATA XREF: dseg:407Ao
		db    0
		db  88h	; à
		db    0
unk_23E7E	db 0E6h	; Ê		; DATA XREF: dseg:407Eo
		db 0FFh
		db  3Fh	; ?
		db    0
unk_23E82	db    2			; DATA XREF: dseg:40AAo
		db    0
		db    0
		db    0
unk_23E86	db    2			; DATA XREF: dseg:40AEo
		db    0
		db    1
		db    0
unk_23E8A	db    2			; DATA XREF: dseg:40B2o
		db    0
		db    2
		db    0
unk_23E8E	db    2			; DATA XREF: dseg:40B6o
		db    0
		db    3
		db    0
unk_23E92	db    2			; DATA XREF: dseg:40BAo
		db    0
		db    4
		db    0
unk_23E96	db    2			; DATA XREF: dseg:40BEo
		db    0
		db    5
		db    0
unk_23E9A	db    2			; DATA XREF: dseg:40C2o
		db    0
		db    6
		db    0
unk_23E9E	db  11h			; DATA XREF: dseg:40C6o
		db    0
		db    7
		db    0
unk_23EA2	db  0Eh			; DATA XREF: dseg:40CAo
		db    0
		db    8
		db    0
unk_23EA6	db  0Ch			; DATA XREF: dseg:40CEo
		db    0
		db    9
		db    0
unk_23EAA	db  0Ah			; DATA XREF: dseg:40D2o
		db    0
		db  0Ah
		db    0
unk_23EAE	db    8			; DATA XREF: dseg:40D6o
		db    0
		db  0Bh
		db    0
unk_23EB2	db    6			; DATA XREF: dseg:40DAo
		db    0
		db  0Ch
		db    0
unk_23EB6	db    2			; DATA XREF: dseg:40DEo
		db    0
		db  0Dh
		db    0
unk_23EBA	db    2			; DATA XREF: dseg:40E2o
		db    0
		db  0Eh
		db    0
unk_23EBE	db    2			; DATA XREF: dseg:40E6o
		db    0
		db  0Fh
		db    0
unk_23EC2	db    2			; DATA XREF: dseg:40EAo
		db    0
		db  10h
		db    0
unk_23EC6	db    1			; DATA XREF: dseg:40EEo
		db    0
		db  11h
		db    0
unk_23ECA	db  0Eh			; DATA XREF: dseg:40F2o
		db    0
		db  12h
		db    0
unk_23ECE	db  0Ch			; DATA XREF: dseg:40F6o
		db    0
		db  13h
		db    0
unk_23ED2	db  0Ah			; DATA XREF: dseg:40FAo
		db    0
		db  14h
		db    0
unk_23ED6	db    8			; DATA XREF: dseg:40FEo
		db    0
		db  15h
		db    0
unk_23EDA	db    6			; DATA XREF: dseg:4102o
		db    0
		db  16h
		db    0
unk_23EDE	db    2			; DATA XREF: dseg:4106o
		db    0
		db  17h
		db    0
unk_23EE2	db    2			; DATA XREF: dseg:410Ao
		db    0
		db  18h
		db    0
unk_23EE6	db    2			; DATA XREF: dseg:410Eo
		db    0
		db  19h
		db    0
unk_23EEA	db    2			; DATA XREF: dseg:4112o
		db    0
		db  1Ah
		db    0
unk_23EEE	db    3			; DATA XREF: dseg:4116o
		db    0
		db  1Bh
		db    0
unk_23EF2	db  0Eh			; DATA XREF: dseg:411Ao
		db    0
		db  1Ch
		db    0
unk_23EF6	db  0Ch			; DATA XREF: dseg:411Eo
		db    0
		db  1Dh
		db    0
unk_23EFA	db  0Ah			; DATA XREF: dseg:4122o
		db    0
		db  1Eh
		db    0
unk_23EFE	db    8			; DATA XREF: dseg:4126o
		db    0
		db  1Fh
		db    0
unk_23F02	db    6			; DATA XREF: dseg:412Ao
		db    0
		db  20h
		db    0
unk_23F06	db    2			; DATA XREF: dseg:412Eo
		db    0
		db  21h	; !
		db    0
unk_23F0A	db    5			; DATA XREF: dseg:4132o
		db    0
		db  22h	; "
		db    0
unk_23F0E	db    8			; DATA XREF: dseg:4136o
		db    0
		db  23h	; #
		db    0
unk_23F12	db  0Bh			; DATA XREF: dseg:413Ao
		db    0
		db  24h	; $
		db    0
unk_23F16	db  0Eh			; DATA XREF: dseg:413Eo
		db    0
		db  25h	; %
		db    0
unk_23F1A	db  10h			; DATA XREF: dseg:4142o
		db    0
		db  26h	; &
		db    0
unk_23F1E	db    2			; DATA XREF: dseg:4146o
		db    0
		db  27h	; '
		db    0
unk_23F22	db    5			; DATA XREF: dseg:414Ao
		db    0
		db  28h	; (
		db    0
unk_23F26	db    8			; DATA XREF: dseg:414Eo
		db    0
		db  29h	; )
		db    0
unk_23F2A	db  0Bh			; DATA XREF: dseg:4152o
		db    0
		db  2Ah	; *
		db    0
unk_23F2E	db  0Eh			; DATA XREF: dseg:4156o
		db    0
		db  2Bh	; +
		db    0
unk_23F32	db  10h			; DATA XREF: dseg:415Ao
		db    0
		db  2Ch	; ,
		db    0
unk_23F36	db    4			; DATA XREF: dseg:415Eo
		db    0
		db  2Dh	; -
		db    0
unk_23F3A	db    4			; DATA XREF: dseg:4162o
		db    0
		db  2Eh	; .
		db    0
unk_23F3E	db    4			; DATA XREF: dseg:4166o
		db    0
		db  2Fh	; /
		db    0
unk_23F42	db    4			; DATA XREF: dseg:416Ao
		db    0
		db  30h	; 0
		db    0
unk_23F46	db    4			; DATA XREF: dseg:416Eo
		db    0
		db  31h	; 1
		db    0
unk_23F4A	db    4			; DATA XREF: dseg:4172o
		db    0
		db  32h	; 2
		db    0
unk_23F4E	db    4			; DATA XREF: dseg:4176o
		db    0
		db  33h	; 3
		db    0
unk_23F52	db    4			; DATA XREF: dseg:417Ao
		db    0
		db  34h	; 4
		db    0
unk_23F56	db    4			; DATA XREF: dseg:417Eo
		db    0
		db  35h	; 5
		db    0
unk_23F5A	db    4			; DATA XREF: dseg:4182o
		db    0
		db  36h	; 6
		db    0
unk_23F5E	db    4			; DATA XREF: dseg:4186o
		db    0
		db  37h	; 7
		db    0
unk_23F62	db    2			; DATA XREF: dseg:418Ao
		db    0
		db  38h	; 8
		db    0
unk_23F66	db    2			; DATA XREF: dseg:418Eo
		db    0
		db  39h	; 9
		db    0
unk_23F6A	db    2			; DATA XREF: dseg:4192o
		db    0
		db  3Ah	; :
		db    0
unk_23F6E	db    2			; DATA XREF: dseg:4196o
		db    0
		db  3Bh	; ;
		db    0
unk_23F72	db    2			; DATA XREF: dseg:419Ao
		db    0
		db  3Ch	; <
		db    0
unk_23F76	db    1			; DATA XREF: dseg:419Eo
		db    0
		db  3Dh	; =
		db    0
unk_23F7A	db    1			; DATA XREF: dseg:41A2o
		db    0
		db  3Eh	; >
		db    0
unk_23F7E	db    1			; DATA XREF: dseg:41A6o
		db    0
		db  3Fh	; ?
		db    0
unk_23F82	db    1			; DATA XREF: dseg:41AAo
		db    0
		db  40h	; @
		db    0
unk_23F86	db    1			; DATA XREF: dseg:41AEo
		db    0
		db  41h	; A
		db    0
unk_23F8A	db    1			; DATA XREF: dseg:41B2o
		db    0
		db  42h	; B
		db    0
unk_23F8E	db    2			; DATA XREF: dseg:41B6o
		db    0
		db  43h	; C
		db    0
unk_23F92	db    2			; DATA XREF: dseg:41BAo
		db    0
		db  44h	; D
		db    0
unk_23F96	db    2			; DATA XREF: dseg:41BEo
		db    0
		db  45h	; E
		db    0
unk_23F9A	db    2			; DATA XREF: dseg:41C2o
		db    0
		db  46h	; F
		db    0
unk_23F9E	db    2			; DATA XREF: dseg:41C6o
		db    0
		db  47h	; G
		db    0
unk_23FA2	db    2			; DATA XREF: dseg:41CAo
		db    0
		db  48h	; H
		db    0
unk_23FA6	db    2			; DATA XREF: dseg:41CEo
		db    0
		db  49h	; I
		db    0
unk_23FAA	db    2			; DATA XREF: dseg:41D2o
		db    0
		db  4Ah	; J
		db    0
unk_23FAE	db    2			; DATA XREF: dseg:41D6o
		db    0
		db  4Bh	; K
		db    0
unk_23FB2	db    2			; DATA XREF: dseg:41DAo
		db    0
		db  4Ch	; L
		db    0
unk_23FB6	db    2			; DATA XREF: dseg:41DEo
		db    0
		db  4Dh	; M
		db    0
unk_23FBA	db    2			; DATA XREF: dseg:41E2o
		db    0
		db  4Eh	; N
		db    0
unk_23FBE	db    2			; DATA XREF: dseg:41E6o
		db    0
		db  4Fh	; O
		db    0
unk_23FC2	db    2			; DATA XREF: dseg:41EAo
		db    0
		db  50h	; P
		db    0
unk_23FC6	db    2			; DATA XREF: dseg:41EEo
		db    0
		db  51h	; Q
		db    0
unk_23FCA	db    2			; DATA XREF: dseg:41F2o
		db    0
		db  52h	; R
		db    0
unk_23FCE	db    2			; DATA XREF: dseg:41F6o
		db    0
		db  53h	; S
		db    0
unk_23FD2	db    2			; DATA XREF: dseg:41FAo
		db    0
		db  54h	; T
		db    0
unk_23FD6	db    2			; DATA XREF: dseg:41FEo
		db    0
		db  55h	; U
		db    0
unk_23FDA	db    2			; DATA XREF: dseg:4202o
		db    0
		db  56h	; V
		db    0
unk_23FDE	db    2			; DATA XREF: dseg:4206o
		db    0
		db  57h	; W
		db    0
unk_23FE2	db    2			; DATA XREF: dseg:420Ao
		db    0
		db  58h	; X
		db    0
unk_23FE6	db    2			; DATA XREF: dseg:420Eo
		db    0
		db  59h	; Y
		db    0
unk_23FEA	db    2			; DATA XREF: dseg:4212o
		db    0
		db  5Ah	; Z
		db    0
unk_23FEE	db    2			; DATA XREF: dseg:4216o
		db    0
		db  5Bh	; [
		db    0
unk_23FF2	db    2			; DATA XREF: dseg:421Ao
		db    0
		db  5Ch	; \
		db    0
unk_23FF6	db    2			; DATA XREF: dseg:421Eo
		db    0
		db  5Dh	; ]
		db    0
unk_23FFA	db    2			; DATA XREF: dseg:4222o
		db    0
		db  5Eh	; ^
		db    0
unk_23FFE	db    2			; DATA XREF: dseg:4226o
		db    0
		db  5Fh	; _
		db    0
unk_24002	db    2			; DATA XREF: dseg:422Ao
		db    0
		db  60h	; `
		db    0
unk_24006	db    2			; DATA XREF: dseg:422Eo
		db    0
		db  61h	; a
		db    0
unk_2400A	db    2			; DATA XREF: dseg:4232o
		db    0
		db  62h	; b
		db    0
unk_2400E	db    2			; DATA XREF: dseg:4236o
		db    0
		db  63h	; c
		db    0
unk_24012	db    8			; DATA XREF: dseg:423Ao
		db    0
		db  64h	; d
		db    0
unk_24016	db    2			; DATA XREF: dseg:423Eo
		db    0
		db  65h	; e
		db    0
unk_2401A	db    2			; DATA XREF: dseg:4242o
		db    0
		db  66h	; f
		db    0
unk_2401E	db    2			; DATA XREF: dseg:4246o
		db    0
		db  67h	; g
		db    0
unk_24022	db    2			; DATA XREF: dseg:424Ao
		db    0
		db  68h	; h
		db    0
unk_24026	db    0			; DATA XREF: dseg:424Eo
		db    0
		db    0
		db    2
		db    0
		db    1
		db  3Bh	; ;
		db    5
		db    0
		db  31h	; 1
		db  32h	; 2
		db    8
		db  0Bh
		db  0Eh
		db  14h
		db    0
		db  1Ah
		db  1Eh
		db  35h	; 5
		db  25h	; %
		db  37h	; 7
		db  28h	; (
		db    0
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  55h	; U
		db    0
		db    0
		db  5Ch	; \
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  3Ch	; <
		db    6
		db    0
		db  31h	; 1
		db  32h	; 2
		db    9
		db  0Ch
		db  0Fh
		db  15h
		db    0
		db  1Bh
		db  1Fh
		db  36h	; 6
		db  26h	; &
		db  38h	; 8
		db  29h	; )
		db    0
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  55h	; U
		db    0
		db    0
		db  5Dh	; ]
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    3
		db  3Dh	; =
		db    7
		db    0
		db    0
		db    0
		db  0Ah
		db  0Dh
		db  10h
		db  16h
		db    0
		db  1Ch
		db  20h
		db  22h	; "
		db    0
		db  39h	; 9
		db  2Ah	; *
		db    0
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  5Eh	; ^
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  3Eh	; >
		db    0
		db    0
		db    0
		db    0
		db  11h
		db  12h
		db  13h
		db  17h
		db    0
		db  1Dh
		db  21h	; !
		db  23h	; #
		db  27h	; '
		db  3Ah	; :
		db  2Bh	; +
		db    0
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  55h	; U
		db    0
		db    0
		db  5Fh	; _
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  8Dh	; ç
		db    7
		db    0
		db  10h
		db  12h
		db  14h
		db  1Dh
		db  26h	; &
		db  32h	; 2
		db 0C5h	; ≈
		db  45h	; E
		db  2Fh	; /
		db  5Ch	; \
		db  60h	; `
		db  64h	; d
		db  69h	; i
		db  74h	; t
		db  75h	; u
		db  85h	; Ö
		db  8Bh	; ã
		db  8Ch	; å
		db  4Ah	; J
		db  49h	; I
		db  4Bh	; K
		db  98h	; ò
		db  96h	; ñ
		db  94h	; î
		db  92h	; í
		db  9Dh	; ù
		db 0A4h	; §
		db  7Fh	; 
		db  7Eh	; ~
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		dd unk_23B6E
		dd unk_23B72
		dd unk_23B76
		dd unk_23B7A
		dd unk_23B7E
		dd unk_23B82
		dd unk_23B86
		dd unk_23B8A
		dd unk_23B8E
		dd unk_23B92
		dd unk_23B96
		dd unk_23B9A
		dd unk_23B9E
		dd unk_23BA2
		dd unk_23BA6
		dd unk_23BAA
		dd unk_23BAE
		dd unk_23BB2
		dd unk_23BB6
		dd unk_23BBA
		dd unk_23BBE
		dd unk_23BC2
		dd unk_23BC6
		dd unk_23BCA
		dd unk_23BCE
		dd unk_23BD2
		dd unk_23BD6
		dd unk_23BDA
		dd unk_23BDE
		dd unk_23BE2
		dd unk_23BE6
		dd unk_23BEA
		dd unk_23BEE
		dd unk_23BF2
		dd unk_23BF6
		dd unk_23BFA
		dd unk_23BFE
		dd unk_23C02
		dd unk_23C06
		dd unk_23C0A
		dd unk_23C0E
		dd unk_23C12
		dd unk_23C16
		dd unk_23C1A
		dd unk_23C1E
		dd unk_23C22
		dd unk_23C26
		dd unk_23C2A
		dd unk_23C2E
		dd unk_23C32
		dd unk_23C36
		dd unk_23C3A
		dd unk_23C3E
		dd unk_23C42
		dd unk_23C46
		dd unk_23C4A
		dd unk_23C4E
		dd unk_23C52
		dd unk_23C56
		dd unk_23C5A
		dd unk_23C5E
		dd unk_23C62
		dd unk_23C66
		dd unk_23C6A
		dd unk_23C6E
		dd unk_23C72
		dd unk_23C76
		dd unk_23C7A
		dd unk_23C7E
		dd unk_23C82
		dd unk_23C86
		dd unk_23C8A
		dd unk_23C8E
		dd unk_23C92
		dd unk_23C96
		dd unk_23C9A
		dd unk_23C9E
		dd unk_23CA2
		dd unk_23CA6
		dd unk_23CAA
		dd unk_23CAE
		dd unk_23CB2
		dd unk_23CB6
		dd unk_23CBA
		dd unk_23CBE
		dd unk_23CC2
		dd unk_23CC6
		dd unk_23CCA
		dd unk_23CCE
		dd unk_23CD2
		dd unk_23CD6
		dd unk_23CDA
		dd unk_23CDE
		dd unk_23CE2
		dd unk_23CE6
		dd unk_23CF2
		dd unk_23CF6
		dd unk_23CFA
		dd unk_23CFE
		dd unk_23D02
		dd unk_23D06
		dd unk_23D0A
		dd unk_23D0E
		dd unk_23D12
		dd unk_23D2E
		dd unk_23D32
		dd unk_23D36
		dd unk_23D3A
		dd unk_23D3E
		dd unk_23D42
		dd unk_23D46
		dd unk_23D4A
		dd unk_23D4E
		dd unk_23D52
		dd unk_23D56
		dd unk_23D5A
		dd unk_23D5E
		dd unk_23D62
		dd unk_23D66
		dd unk_23D6A
		dd unk_23D6E
		dd unk_23D72
		dd unk_23D76
		dd unk_23D7A
		dd unk_23D7E
		dd unk_23D82
		dd unk_23D86
		dd unk_23D8A
		dd unk_23D8E
		dd unk_23D92
		dd unk_23D96
		dd unk_23D9A
		dd unk_23D9E
		dd unk_23DA2
		dd unk_23DA6
		dd unk_23DAA
		dd unk_23DAE
		dd unk_23DB2
		dd unk_23DB6
		dd unk_23DBA
		dd unk_23DBE
		dd unk_23DC2
		dd unk_23DC6
		dd unk_23DCA
		dd unk_23DCE
		dd unk_23DEA
		dd unk_23DEE
		dd unk_23DF2
		dd unk_23DF6
		dd unk_23DFA
		dd unk_23DFE
		dd unk_23E02
		dd unk_23E06
		dd unk_23E0A
		dd unk_23E0E
		dd unk_23E12
		dd unk_23E16
		dd unk_23E1A
		dd unk_23E1E
		dd unk_23E22
		dd unk_23E26
		dd unk_23E2A
		dd unk_23E2E
		dd unk_23E32
		dd unk_23E36
		dd unk_23E3A
		dd unk_23E3E
		dd unk_23E42
		dd unk_23E46
		dd unk_23CEA
		dd unk_23CEE
		dd unk_23D16
		dd unk_23D1A
		dd unk_23D1E
		dd unk_23D22
		dd unk_23D26
		dd unk_23DD2
		dd unk_23DD6
		dd unk_23DDA
		dd unk_23DDE
		dd unk_23DE2
		dd unk_23D2A
		dd unk_23DE6
		dd unk_23E4A
		dd unk_23E4E
		dd unk_23E52
		dd unk_23E56
		dd unk_23E5A
		dd unk_23E5E
		dd unk_23E62
		dd unk_23E66
		dd unk_23E6A
		dd unk_23E6E
		dd unk_23E72
		dd unk_23E76
		dd unk_23E7A
		dd unk_23E7E
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    3
		db  0Eh
		db  18h
		db  47h	; G
		db  22h	; "
		db  28h	; (
		db  2Fh	; /
		db  3Eh	; >
		db  3Fh	; ?
		db  40h	; @
		db  46h	; F
		db  4Dh	; M
		db  5Ch	; \
		db  5Fh	; _
		db  61h	; a
		db  63h	; c
		db  65h	; e
		db  69h	; i
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		dd unk_23E82
		dd unk_23E86
		dd unk_23E8A
		dd unk_23E8E
		dd unk_23E92
		dd unk_23E96
		dd unk_23E9A
		dd unk_23E9E
		dd unk_23EA2
		dd unk_23EA6
		dd unk_23EAA
		dd unk_23EAE
		dd unk_23EB2
		dd unk_23EB6
		dd unk_23EBA
		dd unk_23EBE
		dd unk_23EC2
		dd unk_23EC6
		dd unk_23ECA
		dd unk_23ECE
		dd unk_23ED2
		dd unk_23ED6
		dd unk_23EDA
		dd unk_23EDE
		dd unk_23EE2
		dd unk_23EE6
		dd unk_23EEA
		dd unk_23EEE
		dd unk_23EF2
		dd unk_23EF6
		dd unk_23EFA
		dd unk_23EFE
		dd unk_23F02
		dd unk_23F06
		dd unk_23F0A
		dd unk_23F0E
		dd unk_23F12
		dd unk_23F16
		dd unk_23F1A
		dd unk_23F1E
		dd unk_23F22
		dd unk_23F26
		dd unk_23F2A
		dd unk_23F2E
		dd unk_23F32
		dd unk_23F36
		dd unk_23F3A
		dd unk_23F3E
		dd unk_23F42
		dd unk_23F46
		dd unk_23F4A
		dd unk_23F4E
		dd unk_23F52
		dd unk_23F56
		dd unk_23F5A
		dd unk_23F5E
		dd unk_23F62
		dd unk_23F66
		dd unk_23F6A
		dd unk_23F6E
		dd unk_23F72
		dd unk_23F76
		dd unk_23F7A
		dd unk_23F7E
		dd unk_23F82
		dd unk_23F86
		dd unk_23F8A
		dd unk_23F8E
		dd unk_23F92
		dd unk_23F96
		dd unk_23F9A
		dd unk_23F9E
		dd unk_23FA2
		dd unk_23FA6
		dd unk_23FAA
		dd unk_23FAE
		dd unk_23FB2
		dd unk_23FB6
		dd unk_23FBA
		dd unk_23FBE
		dd unk_23FC2
		dd unk_23FC6
		dd unk_23FCA
		dd unk_23FCE
		dd unk_23FD2
		dd unk_23FD6
		dd unk_23FDA
		dd unk_23FDE
		dd unk_23FE2
		dd unk_23FE6
		dd unk_23FEA
		dd unk_23FEE
		dd unk_23FF2
		dd unk_23FF6
		dd unk_23FFA
		dd unk_23FFE
		dd unk_24002
		dd unk_24006
		dd unk_2400A
		dd unk_2400E
		dd unk_24012
		dd unk_24016
		dd unk_2401A
		dd unk_2401E
		dd unk_24022
		dd unk_24026
		db    0
		db    0
		db    0
		db    0
		db    1
		db  12h
		db    1
		db    1
		db    1
		db  12h
		db    1
		db  12h
		db  21h	; !
		db  12h
		db  12h
		db  12h
		db    1
		db  21h	; !
		db  12h
		db  12h
		db  12h
		db  12h
		db  12h
		db    1
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    2
		db  13h
		db    2
		db    2
		db    2
		db  13h
		db  13h
		db    2
		db  22h	; "
		db  13h
		db  13h
		db  13h
		db    2
		db  22h	; "
		db  13h
		db  13h
		db  13h
		db  13h
		db  13h
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db    8
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db  14h
		db    8
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    9
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db    9
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db  15h
		db    9
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  25h	; %
		db  27h	; '
		db  25h	; %
		db  25h	; %
		db  25h	; %
		db  27h	; '
		db  25h	; %
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  27h	; '
		db  25h	; %
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  26h	; &
		db  28h	; (
		db  26h	; &
		db  26h	; &
		db  26h	; &
		db  28h	; (
		db  28h	; (
		db  26h	; &
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  28h	; (
		db  26h	; &
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Ah
		db  34h	; 4
		db  1Ah
		db  1Ah
		db  1Ah
		db  34h	; 4
		db  1Ah
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  1Ah
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  34h	; 4
		db  1Ah
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  35h	; 5
		db  1Bh
		db  1Bh
		db  1Bh
		db  35h	; 5
		db  35h	; 5
		db  1Bh
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  1Bh
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  35h	; 5
		db  1Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Ah
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  1Ah
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  38h	; 8
		db  1Ah
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Bh
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  1Bh
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  39h	; 9
		db  1Bh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Ch	; ,
		db  2Dh	; -
		db  2Eh	; .
		db    0
		db    0
		db    0
		db  3Fh	; ?
		db    0
		db    0
		db    0
		db    0
		db    0
		db  56h	; V
		db  5Bh	; [
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
off_24770	dw offset sub_16648	; DATA XREF: sub_1238E+22r
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_16717
		dw offset sub_1654E
		dw offset sub_16587
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_17111
		dw offset sub_165FB
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  99h	; ô
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  26h	; &
		db  63h	; c
		db  1Ch
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0D8h	; ÿ
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  72h	; r
		db  63h	; c
		db  35h	; 5
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  3Ah	; :
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0E2h	; ‚
		db  64h	; d
		db  11h
		db  66h	; f
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db  64h	; d
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  3Ah	; :
		db  67h	; g
		db  11h
		db  66h	; f
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  7Eh	; ~
		db  64h	; d
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  3Ah	; :
		db  67h	; g
		db  11h
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  7Eh	; ~
		db  64h	; d
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  67h	; g
		db  11h
		db  71h	; q
		db  26h	; &
		db  63h	; c
		db  1Ch
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  89h	; â
		db  67h	; g
		db  11h
		db  71h	; q
		db  72h	; r
		db  63h	; c
		db  35h	; 5
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db    5
		db  63h	; c
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  48h	; H
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  99h	; ô
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0D8h	; ÿ
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  89h	; â
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  99h	; ô
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  26h	; &
		db  63h	; c
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db 0D8h	; ÿ
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  72h	; r
		db  63h	; c
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  48h	; H
		db  67h	; g
		db  11h
		db  71h	; q
		db  26h	; &
		db  63h	; c
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  89h	; â
		db  67h	; g
		db  11h
		db  71h	; q
		db  72h	; r
		db  63h	; c
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db 0D2h	; “
		db  65h	; e
		db  26h	; &
		db  63h	; c
		db  1Ch
		db  65h	; e
		db 0FEh	; ˛
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  1Ch
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0D2h	; “
		db  65h	; e
		db  72h	; r
		db  63h	; c
		db  35h	; 5
		db  65h	; e
		db  3Ah	; :
		db  69h	; i
		db  27h	; '
		db  66h	; f
		db  35h	; 5
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0E2h	; ‚
		db  64h	; d
		db  17h
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db 0E5h	; Â
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db  64h	; d
		db  17h
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db 0E5h	; Â
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  1Ch
		db  65h	; e
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db 0E5h	; Â
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  35h	; 5
		db  65h	; e
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db 0E5h	; Â
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  99h	; ô
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0C1h	; ¡
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0D8h	; ÿ
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0C1h	; ¡
		db  64h	; d
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0E2h	; ‚
		db  67h	; g
		db  27h	; '
		db  66h	; f
		db  1Ch
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  13h
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  35h	; 5
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0CAh	;  
		db  67h	; g
		db  27h	; '
		db  66h	; f
		db  0Ch
		db  64h	; d
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  26h	; &
		db  63h	; c
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0FBh	; ˚
		db  67h	; g
		db  27h	; '
		db  66h	; f
		db  0Ch
		db  64h	; d
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  72h	; r
		db  63h	; c
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  32h	; 2
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  26h	; &
		db  63h	; c
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  4Bh	; K
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  72h	; r
		db  63h	; c
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  3Ah	; :
		db  67h	; g
		db  11h
		db  66h	; f
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  7Eh	; ~
		db  64h	; d
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    5
		db  63h	; c
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0D2h	; “
		db  65h	; e
		db  26h	; &
		db  63h	; c
		db  1Ch
		db  65h	; e
		db 0E6h	; Ê
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  26h	; &
		db  63h	; c
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0D2h	; “
		db  65h	; e
		db  72h	; r
		db  63h	; c
		db  35h	; 5
		db  65h	; e
		db  22h	; "
		db  69h	; i
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  0Ch
		db  64h	; d
		db  72h	; r
		db  63h	; c
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0D2h	; “
		db  65h	; e
		db  26h	; &
		db  63h	; c
		db  1Ch
		db  65h	; e
		db 0E6h	; Ê
		db  68h	; h
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db 0D2h	; “
		db  65h	; e
		db  72h	; r
		db  63h	; c
		db  35h	; 5
		db  65h	; e
		db  22h	; "
		db  69h	; i
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  90h	; ê
		db  68h	; h
		db  26h	; &
		db  63h	; c
		db  0Ch
		db  64h	; d
		db  35h	; 5
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0BBh	; ª
		db  68h	; h
		db  72h	; r
		db  63h	; c
		db  0Ch
		db  64h	; d
		db  1Ch
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  90h	; ê
		db  68h	; h
		db  26h	; &
		db  63h	; c
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  35h	; 5
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0BBh	; ª
		db  68h	; h
		db  72h	; r
		db  63h	; c
		db 0D2h	; “
		db  65h	; e
		db  11h
		db  71h	; q
		db  5Dh	; ]
		db  64h	; d
		db  1Ch
		db  65h	; e
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db 0E5h	; Â
		db  65h	; e
		db  27h	; '
		db  66h	; f
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  48h	; H
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  48h	; H
		db  66h	; f
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  17h
		db  67h	; g
		db  4Eh	; N
		db  65h	; e
		db  87h	; á
		db  65h	; e
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db  11h
		db  71h	; q
		db 0FBh	; ˚
		db  65h	; e
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_24FF0	db 0			; DATA XREF: sub_12A78:loc_12A89w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_24FFC	db 0			; DATA XREF: sub_12A78+16w dseg:4C74o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_25008	db 0			; DATA XREF: sub_12A78+1Bw dseg:4C78o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_25014	db 0FFh			; DATA XREF: dseg:4C7Co
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_25020	dw 4C40h		; DATA XREF: sub_12A78+37r
seg_25022	dw seg dseg		; DATA XREF: sub_12A78+34r
		dd byte_24FFC
		dd byte_25008
		dd unk_25014
byte_25030	db 0			; DATA XREF: sub_12A78+20w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2503C	db 0			; DATA XREF: sub_12A78+25w dseg:4CC0o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_25048	db 0			; DATA XREF: sub_12A78+2Aw dseg:4CC4o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_25054	db 0			; DATA XREF: sub_12A78+2Fw dseg:4CC8o
		align 10h
unk_25060	db 0FFh			; DATA XREF: dseg:4CCCo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_2506C	dw 4C80h		; DATA XREF: sub_12A78+44r
seg_2506E	dw seg dseg		; DATA XREF: sub_12A78+41r
		dd byte_2503C
		dd byte_25048
		dd byte_25054
		dd unk_25060
		db    0
		db 0FEh	; ˛
		db    1
		db  48h	; H
		db 0FDh	; ˝
		db    2
		db  50h	; P
		db 0FDh	; ˝
		db    4
		db  4Bh	; K
		db 0FDh	; ˝
		db    8
		db  4Dh	; M
		db 0FDh	; ˝
		db  10h
		db  1Ch
		db  74h	; t
		db  39h	; 9
		db 0FDh	; ˝
		db 0FEh	; ˛
		db 0FFh
		db    0
byte_25096	db 0			; DATA XREF: sub_172EF+11w
					; sub_1736F+Er
byte_25097	db 61h			; DATA XREF: sub_1736F+91w
		db  51h	; Q
		db  55h	; U
		db  45h	; E
		db  4Ch	; L
		db  44h	; D
		db  49h	; I
		db  53h	; S
		db  4Bh	; K
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_250E2	dw 0			; DATA XREF: sub_17861+7Bw
					; sub_17861+8Dw ...
byte_250E4	db 0			; DATA XREF: sub_1773C:loc_177D3w
byte_250E5	db 0			; DATA XREF: sub_1773C:loc_1778Fw
byte_250E6	db 0			; DATA XREF: sub_1773C:loc_177ABr
					; sub_177D9:loc_1782Cw
byte_250E7	db 0			; DATA XREF: sub_1773C:loc_17797r
					; sub_177D9+57w
byte_250E8	db 0			; DATA XREF: sub_1773C:loc_177B6r
					; sub_177D9+5Bw
byte_250E9	db 0			; DATA XREF: sub_1773C:loc_177A2r
					; sub_177D9+5Fw
byte_250EA	db 0			; DATA XREF: sub_1773C:loc_17767r
					; sub_177D9+41w
byte_250EB	db 0			; DATA XREF: sub_1773C+17r
					; sub_177D9+45w
byte_250EC	db 0			; DATA XREF: sub_1773C:loc_17772r
					; sub_177D9+49w
byte_250ED	db 0			; DATA XREF: sub_1773C:loc_1775Er
					; sub_177D9+4Dw
word_250EE	dw 0			; DATA XREF: sub_1798A+36w
					; sub_17A77+16r
word_250F0	dw 0			; DATA XREF: sub_1798A+3Fw
					; sub_17A77+1Ar
word_250F2	dw 4D44h		; DATA XREF: sub_175A2+53r
					; sub_1798A+Cr	...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_25174	dw 0			; DATA XREF: sub_1798A+1Cr
					; sub_1798A+24w ...
word_25176	dw 0			; DATA XREF: sub_17861+B4w
					; sub_17861:loc_17933r
word_25178	dw 0			; DATA XREF: sub_17861+C2w
					; sub_17861+E0r
byte_2517A	db 0			; DATA XREF: sub_17861+23r
					; sub_17861+FCw
byte_2517B	db 0			; DATA XREF: sub_17861+Fr
					; sub_17861+110w
		db  2Bh	; +
		db    0
		db  78h	; x
		db    1
		db 0C6h	; ∆
		db    0
		db  1Dh
		db    1
		db  15h
		db    1
		db  25h	; %
		db    1
		db  72h	; r
		db    0
off_2518A	dw offset nullsub_2	; DATA XREF: sub_1AD09+2Br
		align 8
		db 0AFh	; Ø
		db    1
		db 0B0h	; ∞
		db    1
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    7
		db  0Fh
		db    8
		db 0FFh
		db    2
		db    0
word_251A6	dw 0			; DATA XREF: sub_1C2FE+84w
					; sub_1C2FE+C8r ...
word_251A8	dw 0			; DATA XREF: sub_1C2FE+80w
					; sub_1C2FE+CCr ...
word_251AA	dw 0			; DATA XREF: sub_1C2FE+68w
					; sub_1C2FE+A4r ...
word_251AC	dw 0			; DATA XREF: sub_1C2FE+64w
					; sub_1C2FE+9Cr ...
word_251AE	dw 0			; DATA XREF: sub_1C2FE+99w
					; seg002:02BDw	...
word_251B0	dw 0			; DATA XREF: sub_1C2FE+95w
					; seg002:02B7w	...
word_251B2	dw 0			; DATA XREF: seg002:0206w seg002:026Fw ...
word_251B4	dw 0			; DATA XREF: seg002:0202w seg002:0268w ...
word_251B6	dw 0			; DATA XREF: sub_1C2FE+51w
					; seg002:01B0w	...
word_251B8	dw 0			; DATA XREF: sub_1C2FE+4Dw
					; seg002:01ACw	...
word_251BA	dw 0			; DATA XREF: sub_1C280+16w
					; sub_1C280+39w ...
word_251BC	dw 0			; DATA XREF: sub_1C280+Ew
					; sub_1C280+35w ...
word_251BE	dw 0			; DATA XREF: sub_1C280+12w
					; sub_1C2FE+70r ...
word_251C0	dw 0			; DATA XREF: sub_1C280+Aw
					; sub_1C2FE+6Br ...
word_251C2	dw 0			; DATA XREF: sub_1C280+26w
					; sub_1C2FE+Bw	...
word_251C4	dw 0			; DATA XREF: sub_1C280+1Ew
					; sub_1C2FE+4w	...
word_251C6	dw 0			; DATA XREF: sub_1C2FE+33w
					; sub_1C2FE+3Br ...
word_251C8	dw 0			; DATA XREF: sub_1C2FE+2Dw
					; sub_1C2FE+36r ...
word_251CA	dw 0			; DATA XREF: seg002:06FFw seg002:080Cw ...
word_251CC	dw 0			; DATA XREF: seg002:06F9w seg002:0806w ...
word_251CE	dw 0			; DATA XREF: seg002:0330w seg002:0380r ...
word_251D0	dw 0			; DATA XREF: seg002:0507w seg002:0516r ...
word_251D2	dw 0			; DATA XREF: seg002:01BAw seg002:031Cr ...
word_251D4	dw 0			; DATA XREF: sub_1C2FE+8r seg002:01CEr ...
word_251D6	dw 0			; DATA XREF: sub_1C2FEr seg002:01CAr ...
word_251D8	dw 0			; DATA XREF: sub_1C280+29w
					; sub_1C280+6Ew ...
word_251DA	dw 0			; DATA XREF: sub_1C280+22w
					; sub_1C280+68w ...
byte_251DC	db 0			; DATA XREF: seg002:02CFw seg002:031Fr ...
word_251DD	dw 1			; DATA XREF: seg002:0211w seg002:0455r
word_251DF	dw 0			; DATA XREF: seg002:020Dw seg002:0451r
word_251E1	dw 0			; DATA XREF: sub_1C280+4Dr
					; sub_1C280+71r ...
word_251E3	dw 0			; DATA XREF: sub_1C280+6Br
					; sub_1CC89+31w
word_251E5	dw 0			; DATA XREF: sub_1C280+65r
					; sub_1CC89+2Ew
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  94h	; î
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db 0B0h	; ∞
		db    4
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db  93h	; ì
		db    1
		db 0FFh
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    0
		db    1
		db    0
		db    1
		db    0
		db    2
		db    0
		db    2
		db    0
		db    0
		db    0
		db    1
		db    0
		db    3
		db    0
		db    3
		db    0
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    1
		db    0
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    3
		db    0
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    3
		db    0
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  42h	; B
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  20h
		db  28h	; (
		db  43h	; C
		db  29h	; )
		db  20h
		db  4Ch	; L
		db  4Fh	; O
		db  52h	; R
		db  49h	; I
		db  43h	; C
		db  49h	; I
		db  45h	; E
		db  4Ch	; L
		db  20h
		db  31h	; 1
		db  39h	; 9
		db  39h	; 9
		db  32h	; 2
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  31h	; 1
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  43h	; C
		db  47h	; G
		db  41h	; A
		db  20h
		db  20h
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  32h	; 2
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  45h	; E
		db  47h	; G
		db  41h	; A
		db  20h
		db  20h
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  33h	; 3
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  56h	; V
		db  47h	; G
		db  41h	; A
		db  20h
		db  20h
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  34h	; 4
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  54h	; T
		db  41h	; A
		db  4Eh	; N
		db  44h	; D
		db  59h	; Y
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  35h	; 5
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  4Dh	; M
		db  43h	; C
		db  47h	; G
		db  41h	; A
		db  20h
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  36h	; 6
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  56h	; V
		db  47h	; G
		db  41h	; A
		db  32h	; 2
		db  35h	; 5
		db  36h	; 6
		db  24h	; $
word_256BE	dw 0			; DATA XREF: sub_1AE5E+62w
					; sub_1AE5E+70w
		db    0
word_256C1	dw 0			; DATA XREF: sub_1ADAB+Ew
word_256C3	dw 0			; DATA XREF: sub_1ADAB+Aw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_257CD	dw 0			; DATA XREF: sub_108D1+18r
					; sub_10D9D+6Fr ...
byte_257CF	db 0			; DATA XREF: sub_1AD09+1Bw
					; sub_1AFB7+23r ...
byte_257D0	db 0			; DATA XREF: sub_1AD09+20w
					; sub_1AFB7+5Er ...
word_257D1	dw 0			; DATA XREF: sub_1AFB7:loc_1B00Fw
					; sub_1B0BD+56r
word_257D3	dw 0			; DATA XREF: sub_1AFB7:loc_1AFD4w
					; sub_1B0BD+15r
word_257D5	dw 0			; DATA XREF: sub_1AFB7+F1w
					; sub_1B380+12r ...
word_257D7	dw 0			; DATA XREF: sub_1AFB7+C5w
					; sub_1B380+9r	...
word_257D9	dw 0			; DATA XREF: sub_1ABD7+7r seg001:0094r ...
word_257DB	dw 0			; DATA XREF: sub_1AFB7+38w
					; sub_1B0BD+11r ...
word_257DD	dw 0			; DATA XREF: sub_1AFB7+D6w
					; sub_1B0BD+4Fr
word_257DF	dw 0			; DATA XREF: sub_1AFB7:loc_1B061w
					; sub_1B0BD+Er
word_257E1	dw 0			; DATA XREF: sub_1ABD7+Fr seg001:009Cr ...
word_257E3	dw 0			; DATA XREF: sub_1ABD7+Br seg001:0098r ...
off_257E5	dw offset nullsub_5	; DATA XREF: sub_1AD71+12r
		dw offset sub_1B196
		dw offset sub_1B1B0
		dw offset nullsub_6
		dw offset nullsub_7
		dw offset sub_1B1B0
off_257F1	dw offset nullsub_9	; DATA XREF: sub_1AE41+12r
		dw offset sub_1B1F2
		dw offset sub_1B207
		dw offset nullsub_10
		dw offset nullsub_11
		dw offset nullsub_12
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    7
		db  0Fh
		db    8
		db 0FFh
		db    2
		db    0
off_2580D	dw offset loc_1AD9E	; DATA XREF: sub_1AD8F+Br
		dw offset loc_1AD9E
		dw offset loc_1AD9E
		dw offset loc_1ADA5
		dw offset loc_1ADA5
		dw offset loc_1ADA5
off_25819	dw offset loc_1ADF8	; DATA XREF: sub_1ADC2+32r
		dw offset loc_1ADF8
		dw offset loc_1ADF8
		dw offset loc_1AE23
		dw offset loc_1AE23
		dw offset loc_1ADF8
off_25825	dw offset loc_1AF09	; DATA XREF: sub_1AEE1+23r
		dw offset loc_1AF09
		dw offset loc_1AF09
		dw offset loc_1AF0E
		dw offset loc_1AF0E
		dw offset loc_1AF09
off_25831	dw offset loc_1AF66	; DATA XREF: sub_1AF14+4Er
		dw offset loc_1AF66
		dw offset loc_1AF66
		dw offset loc_1AF6B
		dw offset loc_1AF6B
		dw offset loc_1AC90
		dw offset loc_1AB91
		db    0
		db    0
		db    0
		dd sub_17DF9
		dd sub_17E1F
		db  51h	; Q
		db    9
unk_2584C	db    0			; DATA XREF: dseg:off_2587Co
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
off_2587C	dd unk_2584C		; DATA XREF: seg000:7C39r
dword_25880	dd 0			; DATA XREF: sub_17CDE+98w
					; sub_17DB9+1Ar ...
byte_25884	db 0			; DATA XREF: sub_17CDEr sub_17CDE+A6w	...
byte_25885	db 0			; DATA XREF: seg000:7CB4w seg000:7CBEw
word_25886	dw 0			; DATA XREF: sub_17CDE+Fw
					; sub_17CDE+44r ...
dword_25888	dd 0			; DATA XREF: sub_17CDE+C5w
					; sub_17DB9+Ar	...
word_2588C	dw 0			; DATA XREF: sub_17FEF+4Fw
		db 0EFh	; Ô
		db    0
		db  9Fh	; ü
		db    0
		db  77h	; w
		db    0
		db  50h	; P
		db    0
		db  3Eh	; >
		db    0
		db  3Eh	; >
		db    0
		db  3Eh	; >
		db    0
		db  3Eh	; >
		db    0
		db  3Eh	; >
		db    0
		db  3Ch	; <
		db    0
		db  3Ch	; <
		db    0
		db  3Ch	; <
		db    0
word_258A6	dw 0			; DATA XREF: seg000:loc_17F05r
					; seg000:7F0Fw	...
word_258A8	dw 0			; DATA XREF: seg000:7F20w
					; seg000:loc_17F24r
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  23h	; #
		db    8
		db  90h	; ê
		db    9
		db  1Eh
		db    9
		db  27h	; '
		db    9
		db  1Fh
		db    9
		db  2Fh	; /
		db    9
		db  92h	; í
		db    8
off_258F4	dw offset nullsub_13	; DATA XREF: sub_1B603+1Fr
		dw offset sub_1B380
		dw offset sub_1B380
		dw offset nullsub_14
		dw offset nullsub_15
		dw offset nullsub_16
		dw offset sub_1B660
		dw offset nullsub_17
		dw offset loc_1B6CC
		dw offset sub_1B795
		dw offset sub_1B78D
		dw offset sub_1B79D
		dw offset sub_1B6C3
off_2590E	dw offset nullsub_18	; DATA XREF: sub_1B907+27r
		dw offset sub_1B630
		dw offset sub_1B630
		dw offset nullsub_19
		dw offset nullsub_20
		dw offset nullsub_21
		align 4
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    7
		db  0Fh
		db    8
		db 0FFh
		db    2
		db    0
word_2592A	dw 0			; DATA XREF: sub_188E5+3r sub_188E5+Dw ...
word_2592C	dw 1			; DATA XREF: sub_189E2+19w
					; sub_18A75+4r	...
word_2592E	dw 1			; DATA XREF: sub_18B2A+3w
					; sub_18B2A:loc_18B3Aw	...
dword_25930	dd 0			; DATA XREF: sub_187CD+11w
					; sub_18B81+9r	...
word_25934	dw 0			; DATA XREF: sub_188E5+12w
					; seg000:89C2w	...
word_25936	dw 0			; DATA XREF: sub_188E5+31w
					; sub_1891E+34w ...
		db 0B0h	; ∞
		db  7Bh	; {
		db    0
		db 0B0h	; ∞
		db  79h	; y
		db    0
		db 0B0h	; ∞
		db    7
		db    0
		db    1
		db    0
		db    0
		db    1
		db    2
		db    8
		db    9
		db  0Ah
		db  10h
		db  11h
		db  12h
		db  59h	; Y
		db    1
		db  6Dh	; m
		db    1
		db  83h	; É
		db    1
		db  9Ah	; ö
		db    1
		db 0B2h	; ≤
		db    1
		db 0CCh	; Ã
		db    1
		db 0E8h	; Ë
		db    1
		db    5
		db    2
		db  23h	; #
		db    2
		db  44h	; D
		db    2
		db  66h	; f
		db    2
		db  8Bh	; ã
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    1
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    2
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    3
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    4
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    5
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    6
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    7
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
		db    0
		db    1
		db    2
		db    3
		db    4
		db    5
		db    6
		db    7
		db    8
		db    9
		db  0Ah
		db  0Bh
byte_25A24	db 0			; DATA XREF: sub_1927C+Aw seg000:92C0r ...
		align 2
word_25A26	dw 0			; DATA XREF: sub_1CE50+Aw
					; sub_1CE6F+19r ...
word_25A28	dw 0			; DATA XREF: sub_1CE50+Dw sub_1CE6F+Ar ...
word_25A2A	dw 0			; DATA XREF: sub_1CE50+13w
					; sub_1CE6F+Er	...
		db  37h	; 7
		db  0Fh
		db  3Bh	; ;
		db  0Fh
		db  39h	; 9
		db  0Fh
		db  3Ah	; :
		db  0Fh
		db  3Ah	; :
		db  0Fh
		db  3Ah	; :
		db  0Fh
		db  38h	; 8
		db  0Fh
		db 0E0h	; ‡
		db  0Dh
		db  35h	; 5
		db  0Fh
		db 0C3h	; √
		db  0Eh
		db 0CCh	; Ã
		db  0Eh
		db 0C4h	; ƒ
		db  0Eh
		db 0D4h	; ‘
		db  0Eh
		db  3Ch	; <
		db  0Eh
off_25A48	dw offset nullsub_22	; DATA XREF: sub_1BBB8+26r
		dw offset sub_1B940
		dw offset sub_1B940
		dw offset nullsub_23
		dw offset nullsub_24
		dw offset nullsub_25
		db    0
		db    0
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    0
		db    7
		db  0Fh
		db    8
		db 0FFh
		db    2
		db    0
		db  87h	; á
		db  10h
		db 0D5h	; ’
		db  11h
		db  56h	; V
		db  11h
		db  5Fh	; _
		db  11h
		db  57h	; W
		db  11h
		db  67h	; g
		db  11h
		db 0B8h	; ∏
		db  10h
off_25A72	dw offset nullsub_26	; DATA XREF: sub_1BDFE+2Fr
		dw offset sub_1BBF0
		dw offset sub_1BBF0
		dw offset nullsub_27
		dw offset nullsub_28
		dw offset nullsub_29
		align 4
		db    1
		db    0
		db    2
		db    0
		db    3
		db    0
		db    5
		db    1
		db    7
		db  0Fh
		db    8
		db 0FFh
		db    2
		db    0
word_25A8E	dw 5415h		; DATA XREF: sub_1FC2D+Br
					; sub_1FC92+10w
seg_25A90	dw seg dseg		; DATA XREF: sub_1FC92+16w
word_25A92	dw 0			; DATA XREF: sub_1DE10:loc_1DED0r
					; sub_1FC2D+14w
word_25A94	dw 0			; DATA XREF: sub_1DEFD+8Br
					; sub_1FC2D+18w
word_25A96	dw 0			; DATA XREF: sub_1D2E6+14w
					; sub_1D2E6+44r ...
word_25A98	dw 0			; DATA XREF: sub_1D20C+BDw
					; sub_1D2E6+50r ...
		align 4
word_25A9C	dw 0			; DATA XREF: sub_1D2E6+3Dr
word_25A9E	dw 56F0h		; DATA XREF: sub_1FCAD+Dw
					; sub_1FCAD+20Cw ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_26BA0	dw 0			; DATA XREF: sub_20077+Dw
word_26BA2	dw 0			; DATA XREF: sub_20077+13w
		align 8
		db    1
		db    3
		db    0
		db    0
		db    0
		db    3
		db    0
		db    1
		db    1
		db    3
		db    1
		db    2
		db    2
		db    0
		db    1
		db    2
		db    3
dword_26BB9	dd 0			; DATA XREF: sub_1D12Dw sub_1D141r ...
word_26BBD	dw 0			; DATA XREF: seg006:0245w
					; sub_1D141+66r ...
word_26BBF	dw 28h			; DATA XREF: seg006:0249w
					; sub_1DCAF+1Cw ...
word_26BC1	dw 0			; DATA XREF: seg006:0250w
					; sub_1D141+7Ar ...
word_26BC3	dw 0C8h			; DATA XREF: seg006:025Dw
					; sub_1DCAF+2Fw ...
word_26BC5	dw 28h			; DATA XREF: seg006:023Fw
					; sub_1D141+51r ...
word_26BC7	dw 0C8h			; DATA XREF: seg006:0257w
					; sub_1D141+46r ...
word_26BC9	dw 0			; DATA XREF: sub_1D20C+5w
					; sub_1D20C+16w ...
word_26BCB	dw 0			; DATA XREF: sub_1D20C+61w
					; sub_1D20C+72w ...
word_26BCD	dw 0			; DATA XREF: sub_1D20C:loc_1D283w
					; sub_1D20C+89r ...
word_26BCF	dw 0			; DATA XREF: sub_1D20C:loc_1D227w
					; sub_1D20C+3Br ...
word_26BD1	dw 0			; DATA XREF: sub_1D141+38w
					; sub_1D141+55r ...
word_26BD3	dw 0			; DATA XREF: sub_1D141+43w
					; sub_1D141+4Ar ...
word_26BD5	dw 0			; DATA XREF: sub_1D2E6+48w
					; sub_1DEFD+7Aw
word_26BD7	dw 0			; DATA XREF: sub_1D2E6+37w
					; sub_1DEFD+80w
word_26BD9	dw 0			; DATA XREF: sub_1D2E6+4Cw
word_26BDB	dw 0			; DATA XREF: sub_1D2E6+41w
word_26BDD	dw 0			; DATA XREF: sub_1D2E6+54w
					; sub_1DEFD+87w
word_26BDF	dw 0			; DATA XREF: sub_1D2E6+5Aw
					; sub_1DEFD+8Ew ...
word_26BE1	dw 0			; DATA XREF: sub_1D2E6+24w
					; sub_1DEFD+97w ...
word_26BE3	dw 0			; DATA XREF: sub_1D2E6+2Bw
					; sub_1DEFD+91w ...
word_26BE5	dw 0			; DATA XREF: sub_1D20C+44w
					; sub_1D20C:loc_1D26Aw	...
word_26BE7	dw 0			; DATA XREF: sub_1D20C:loc_1D2ADw
					; sub_1D20C+C9r ...
		align 2
byte_26BEA	db 0			; DATA XREF: sub_1DEFD+36w
					; sub_1DEFD+64w
byte_26BEB	db 0			; DATA XREF: sub_1D141+30w
					; sub_1DEFD+6Fw
byte_26BEC	db 0			; DATA XREF: sub_1D20Cw sub_1D20C+22w	...
		align 2
word_26BEE	dw 0			; DATA XREF: sub_19439r sub_19440r ...
		db  42h	; B
		db  55h	; U
		db  4Dh	; M
		db  50h	; P
		db  59h	; Y
		db  20h
		db  28h	; (
		db  43h	; C
		db  29h	; )
		db  20h
		db  4Ch	; L
		db  4Fh	; O
		db  52h	; R
		db  49h	; I
		db  43h	; C
		db  49h	; I
		db  45h	; E
		db  4Ch	; L
		db  20h
		db  31h	; 1
		db  39h	; 9
		db  39h	; 9
		db  32h	; 2
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  35h	; 5
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  4Eh	; N
		db  4Fh	; O
		db  20h
		db  53h	; S
		db  4Fh	; O
		db  55h	; U
		db  4Eh	; N
		db  44h	; D
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  36h	; 6
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  50h	; P
		db  43h	; C
		db  20h
		db  42h	; B
		db  41h	; A
		db  53h	; S
		db  45h	; E
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  37h	; 7
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  41h	; A
		db  44h	; D
		db  4Ch	; L
		db  49h	; I
		db  42h	; B
		db  20h
		db  20h
		db  20h
		db  24h	; $
		db  3Ch	; <
		db  20h
		db  46h	; F
		db  38h	; 8
		db  20h
		db  3Eh	; >
		db  3Ah	; :
		db  20h
		db  4Dh	; M
		db  54h	; T
		db  33h	; 3
		db  32h	; 2
		db  20h
		db  20h
		db  20h
		db  20h
		db  24h	; $
word_26C4C	dw 0			; DATA XREF: sub_11E5E+13r
					; sub_11E90+13r ...
		db    1
		db    1
		db    1
		db    1
word_26C52	dw 0			; DATA XREF: sub_1BEBB+Ew
word_26C54	dw 0			; DATA XREF: sub_1BEBB+Aw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db  0Fh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_26CE6	dw 0			; DATA XREF: sub_1BFB2+Aw sub_1C0C0+2r
word_26CE8	dw 0			; DATA XREF: sub_1BFB2+Dw
					; sub_1C0C0+15r
word_26CEA	dw 13Fh			; DATA XREF: sub_1BFB2+11w
					; sub_1C0C0+Fr
word_26CEC	dw 0C7h			; DATA XREF: sub_1BFB2+15w
					; sub_1C0C0+22r
byte_26CEE	db 8			; DATA XREF: sub_1BEBB+21w
					; sub_1BFE8+Aw
		align 2
word_26CF0	dw 0			; DATA XREF: sub_1BF99+Fw sub_1C01E+Ar
word_26CF2	dw 0Ah			; DATA XREF: sub_1BEE5+Ar sub_1BFD1+Ew ...
word_26CF4	dw 0Ah			; DATA XREF: sub_1BEF8+Ar sub_1BFD1+Aw ...
off_26CF6	dw offset nullsub_30	; DATA XREF: sub_1BEA1+10r
		dw offset sub_1C07F
		dw offset sub_1C07F
		dw offset nullsub_32
		dw offset nullsub_31
		dw offset sub_1C07F
off_26D02	dw offset nullsub_33	; DATA XREF: sub_1BF4C+26r
		dw offset sub_1C197
		dw offset sub_1C197
		dw offset nullsub_35
		dw offset nullsub_34
		dw offset sub_1C197
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
off_26D26	dw offset sub_20375	; DATA XREF: sub_20360+Br
		dw offset sub_20375
		dw offset sub_20375
		dw offset nullsub_36
		dw offset nullsub_37
		dw offset sub_20375
word_26D32	dw 0			; DATA XREF: _atexit+3r
					; _atexit:loc_19879r ...
off_26D34	dw offset nullsub_1	; DATA XREF: start+109r _setvbuf+BAw
off_26D36	dw offset nullsub_1	; DATA XREF: start+10Dr
off_26D38	dw offset nullsub_1	; DATA XREF: start+111r
word_26D3A	dw 0			; DATA XREF: sub_198DD+1Ar
					; sub_198DD+63w
unk_26D3C	db    0			; DATA XREF: _flushall+Do __xfflush+Ao
		db    0
word_26D3E	dw 209h			; DATA XREF: seg000:9C6Fw seg000:9C79r
byte_26D40	db 0			; DATA XREF: seg000:__setupior
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  8Ch	; å
		db  69h	; i
		db    0
		db    0
word_26D52	dw 20Ah			; DATA XREF: seg000:9CA7w seg000:9CB1r
byte_26D54	db 1			; DATA XREF: seg000:9C9Ar
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0A0h	; †
		db  69h	; i
		db    0
		db    0
		db    2
		db    2
		db    2
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0B4h	; ¥
		db  69h	; i
		db    0
		db    0
		db  43h	; C
		db    2
		db    3
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0C8h	; »
		db  69h	; i
		db    0
		db    0
		db  42h	; B
		db    2
		db    4
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0DCh	; ‹
		db  69h	; i
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0F0h	; 
		db  69h	; i
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    4
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  18h
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  2Ch	; ,
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  40h	; @
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  54h	; T
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  68h	; h
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  7Ch	; |
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db  90h	; ê
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0A4h	; §
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0B8h	; ∏
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0CCh	; Ã
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0E0h	; ‡
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db 0F4h	; Ù
		db  6Ah	; j
		db    0
		db    0
		db    0
		db    0
		db 0FFh
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    8
		db  6Bh	; k
		db    1
		db  20h
		db    2
		db  20h
		db    2
		db  20h
		db    4
		db 0A0h	; †
		db    2
		db 0A0h	; †
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
word_26EF4	dw 4000h		; DATA XREF: _open+11r
word_26EF6	dw 0FFFFh		; DATA XREF: _open:loc_1A242r
word_26EF8	dw 0			; DATA XREF: _setvbuf:loc_19D11r
					; _setvbuf+4Cw
word_26EFA	dw 0			; DATA XREF: _setvbuf:loc_19CFBr
					; _setvbuf+36w
word_26EFC	dw 1000h		; DATA XREF: start+5Ar	start+67w ...
word_26EFE	dw 0			; DATA XREF: __IOERROR:loc_1A18Bw
					; __IOERROR+2Bw
		db    0
		db  13h
		db    2
		db    2
		db    4
		db    5
		db    6
		db    8
		db    8
		db    8
		db  14h
		db  15h
		db    5
		db  13h
		db 0FFh
		db  16h
		db    5
		db  11h
		db    2
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db    5
		db    5
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db  0Fh
		db 0FFh
		db  23h	; #
		db    2
		db 0FFh
		db  0Fh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db  13h
		db 0FFh
		db 0FFh
		db    2
		db    2
		db    5
		db  0Fh
		db    2
		db 0FFh
		db 0FFh
		db 0FFh
		db  13h
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db  23h	; #
		db 0FFh
		db 0FFh
		db 0FFh
		db 0FFh
		db  23h	; #
		db 0FFh
		db  13h
		db 0FFh
		db    0
word_26F5A	dw 0			; DATA XREF: seg000:AB10w seg000:AB5Br
word_26F5C	dw 0			; DATA XREF: seg000:AB23w seg000:AB67r
word_26F5E	dw 0			; DATA XREF: seg000:AB27w seg000:AB61r
word_26F60	dw 0			; DATA XREF: seg000:unknown_libname_1w
					; seg000:AB6Dr
word_26F62	dw 0			; DATA XREF: seg000:AA52w seg000:AB57r
word_26F64	dw 0			; DATA XREF: seg000:AA56w seg000:AB53r
word_26F66	dw 0			; DATA XREF: seg000:AA5Fw seg000:AB4Br
word_26F68	dw 0			; DATA XREF: seg000:AA63w seg000:AB4Fr
byte_26F6A	db 0			; DATA XREF: sub_10282+9Cw
byte_26F6B	db 0			; DATA XREF: sub_10282+11Fw
word_26F6C	dw 0			; DATA XREF: sub_10282+ECw
word_26F6E	dw 0			; DATA XREF: sub_10282+E9w
word_26F70	dw 0			; DATA XREF: sub_10282+B8w
word_26F72	dw 0			; DATA XREF: sub_10282+B5w
byte_26F74	db 0			; DATA XREF: sub_10282+C9w
byte_26F75	db 0			; DATA XREF: sub_10282+C4w
byte_26F76	db 0			; DATA XREF: sub_10282+E1w
byte_26F77	db 0			; DATA XREF: sub_10282+125w
byte_26F78	db 0			; DATA XREF: sub_10282+B0w
byte_26F79	db 0			; DATA XREF: sub_10282+91w
dword_26F7A	dd 0			; DATA XREF: sub_10282+141w
					; sub_10604+15r ...
word_26F7E	dw 0			; DATA XREF: sub_10282+F4w
word_26F80	dw 0			; DATA XREF: sub_10282+FCw
word_26F82	dw 0			; DATA XREF: sub_10282+13Br
					; sub_10416+BBw ...
word_26F84	dw 0			; DATA XREF: sub_10282+137r
					; sub_10416+BFw ...
word_26F86	dw 0			; DATA XREF: sub_10282+F1w
word_26F88	dw 0			; DATA XREF: sub_10282+104w
word_26F8A	dw 0			; DATA XREF: sub_10282+101w
word_26F8C	dw 0			; DATA XREF: sub_10282+F9w
byte_26F8E	db 0			; DATA XREF: sub_10282+122w
byte_26F8F	db 0			; DATA XREF: sub_10282+DEw
word_26F90	dw 0			; DATA XREF: sub_10282+114w
word_26F92	dw 0			; DATA XREF: sub_10282+111w
word_26F94	dw 0			; DATA XREF: _main+26w
word_26F96	dw 0			; DATA XREF: _main+2Aw
word_26F98	dw 0			; DATA XREF: sub_10416+A1w
					; sub_10416+B5r ...
word_26F9A	dw 0			; DATA XREF: sub_10416+A4w
					; sub_10416:loc_104C8r	...
byte_26F9C	db 0			; DATA XREF: sub_10282+86w
		db    0
		db    0
		db    0
		db    0
		db    0
word_26FA2	dw 0			; DATA XREF: sub_10282+155r
					; sub_10416+145w ...
word_26FA4	dw 0			; DATA XREF: sub_10282+151r
					; sub_10416+149w ...
byte_26FA6	db 0			; DATA XREF: sub_10282+109w
		align 2
word_26FA8	dw 0			; DATA XREF: sub_10282+E6w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_26FD6	db 0			; DATA XREF: sub_10282+10Cw
		db    0
		db    0
		db    0
		db    0
		db    0
word_26FDC	dw 0			; DATA XREF: sub_10416+39w
					; sub_10569+64r ...
word_26FDE	dw 0			; DATA XREF: sub_10416+3Cw
					; sub_10569+60r ...
word_26FE0	dw 0			; DATA XREF: sub_10416+DBw
					; sub_10569+2Cr ...
word_26FE2	dw 0			; DATA XREF: sub_10416+DEw
					; sub_10569+28r ...
byte_26FE4	db 0			; DATA XREF: sub_10282+ADw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_26FEE	dw 0			; DATA XREF: sub_10282+BEw
word_26FF0	dw 0			; DATA XREF: sub_10282+BBw
unk_26FF2	db    0			; DATA XREF: sub_108D1:loc_108E1o
					; sub_108D1+1Fo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_27356	dw 0			; DATA XREF: sub_10416+50w
					; sub_10569+56r ...
word_27358	dw 0			; DATA XREF: sub_10416+53w
					; sub_10569+52r ...
byte_2735A	db 0			; DATA XREF: sub_10282+D0w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_276C0	dw 0			; DATA XREF: sub_10282+8Bw
					; sub_10282+12Fr ...
byte_276C2	db 0			; DATA XREF: sub_10282+8Ew
		align 2
byte_276C4	db 0			; DATA XREF: sub_10282+94w
		align 2
word_276C6	dw 0			; DATA XREF: sub_10282+117w
		db    0
		db    0
		db    0
byte_276CB	db 0			; DATA XREF: sub_10282+99w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_2787A	db    0			; DATA XREF: dseg:off_20C88o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_278A4	db    0			; DATA XREF: dseg:off_20C8Co
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_27976	db 0			; DATA XREF: sub_10282+DBw
		align 2
word_27978	dw 0			; DATA XREF: sub_10282+C1w
		db    0
		db    0
		db    0
		db    0
byte_2797E	db 0			; DATA XREF: sub_10282+A8w
byte_2797F	db 0			; DATA XREF: sub_10282+D8w
					; sub_10604:loc_10610r	...
dword_27980	dd 0			; DATA XREF: sub_10282+15Bw
					; sub_12A78+B6r ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_2798A	dw 0			; DATA XREF: sub_10416+22w
					; sub_10569+72r ...
word_2798C	dw 0			; DATA XREF: sub_10416+25w
					; sub_10569+6Er ...
word_2798E	dw 0			; DATA XREF: sub_10416+12Bw
					; sub_10416+13Fr ...
word_27990	dw 0			; DATA XREF: sub_10416+12Ew
					; sub_10416:loc_10552r	...
byte_27992	db 0			; DATA XREF: sub_10282+D3w
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2799A	db 0			; DATA XREF: sub_10282+12Aw
byte_2799B	db 0			; DATA XREF: sub_10282+A5w
					; sub_108D1+81r ...
byte_2799C	db 0			; DATA XREF: sub_10282+A2w
					; sub_108D1+A9r
byte_2799D	db 0			; DATA XREF: sub_10282+9Fw
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_27CCA	db 0			; DATA XREF: sub_10C18+19w
					; sub_122FC+24r ...
		align 2
word_27CCC	dw 0			; DATA XREF: sub_12D14+72w
					; sub_12D14:loc_12D97w	...
word_27CCE	dw 0			; DATA XREF: sub_12D14+6Fw
					; sub_13852+189r ...
byte_27CD0	db 0			; DATA XREF: sub_12A78+C9w
					; sub_14DFA+Fr	...
byte_27CD1	db 0			; DATA XREF: sub_11FBE+61r
					; sub_11FBE+A7r ...
byte_27CD2	db 0			; DATA XREF: sub_12810+2Br
					; sub_12810:loc_12848r	...
byte_27CD3	db 0			; DATA XREF: sub_11E02:loc_11E0Ew
					; sub_127DE+Ew	...
byte_27CD4	db 0			; DATA XREF: sub_1236F+1Aw
					; sub_124D7:loc_124E3r	...
		align 2
word_27CD6	dw 0			; DATA XREF: sub_10416+103w
					; sub_10569+1Er ...
word_27CD8	dw 0			; DATA XREF: sub_10416+106w
					; sub_10569+1Ar ...
byte_27CDA	db 0			; DATA XREF: sub_113DF+86w
					; sub_113DF:loc_1146Aw	...
		align 2
byte_27CDC	db 0			; DATA XREF: sub_113DF+1Cr
					; sub_113DF+23r ...
		align 2
unk_27CDE	db    0			; DATA XREF: sub_133C5:loc_133D1o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_27D0A	db    0			; DATA XREF: sub_133C5+42o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_27D36	db    0			; DATA XREF: sub_133C5+71o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_27D62	db 0			; DATA XREF: sub_10258:loc_10264w
					; sub_10C18+15Fw ...
byte_27D63	db 0			; DATA XREF: sub_10C18+C5w
					; sub_14747+45r ...
byte_27D64	db 0			; DATA XREF: sub_128F9+11r
					; sub_128F9:loc_12918w	...
byte_27D65	db 0			; DATA XREF: sub_10C18+20w
					; sub_135A5:loc_136FFr	...
byte_27D66	db 0			; DATA XREF: sub_13852+16Cr
					; sub_13C4F+15w
byte_27D67	db 0			; DATA XREF: sub_131DE+68w
					; sub_16272+21w ...
byte_27D68	db 0			; DATA XREF: seg000:663Cr
					; sub_16BF4+1Bw ...
byte_27D69	db 0			; DATA XREF: sub_127DE+14w
					; sub_12810+77w ...
word_27D6A	dw 0			; DATA XREF: sub_11CEA+22r
					; sub_148A9+43w ...
word_27D6C	dw 0			; DATA XREF: sub_11CEA+28r
					; sub_148A9+58w ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_285F2	db 0			; DATA XREF: sub_113DF:loc_113EBr
					; sub_131DE:loc_131EAw	...
byte_285F3	db 0			; DATA XREF: sub_131DE+63w
					; sub_14C14:loc_14C20r	...
byte_285F4	db 0			; DATA XREF: seg000:072Aw
					; seg000:loc_10734r ...
		align 2
dword_285F6	dd 0			; DATA XREF: sub_12D14+46w
					; sub_12D14+95r ...
word_285FA	dw 0			; DATA XREF: sub_113DF+38w
					; sub_11CB2:loc_11CBEr	...
byte_285FC	db 0			; DATA XREF: sub_12470:loc_1247Cw
					; sub_1253F+41w ...
byte_285FD	db 0			; DATA XREF: sub_113DF+15r
					; sub_113DF+76r ...
unk_285FE	db    0			; DATA XREF: sub_151D8+14Ao dseg:0762o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_288FE	db 0			; DATA XREF: sub_10C18:loc_10C72r
					; sub_12D14+67w ...
byte_288FF	db 0			; DATA XREF: sub_11349+12r
					; sub_11349:loc_11372r	...
byte_28900	db 0			; DATA XREF: sub_1233A+13r
					; sub_1233A+1Aw ...
byte_28901	db 0			; DATA XREF: sub_11E5E:loc_11E6Ar
					; sub_11E90:loc_11E9Cr	...
byte_28902	db 0			; DATA XREF: sub_11E02+14w
					; sub_12810:loc_1281Fr	...
		align 2
dword_28904	dd 0			; DATA XREF: sub_12D14+60w
					; sub_13C9D+20r ...
word_28908	dw 0			; DATA XREF: sub_113B2+13r
					; sub_113B2+22w ...
word_2890A	dw 0			; DATA XREF: sub_113B2+19r
					; sub_113B2+28w ...
byte_2890C	db 0			; DATA XREF: sub_14906+17w
					; seg000:64F9w	...
byte_2890D	db 0			; DATA XREF: sub_1495C:loc_14968w
					; sub_1495C+10r ...
byte_2890E	db 0			; DATA XREF: sub_11FBE+24r
					; sub_11FBE:loc_1202Ar	...
		align 2
word_28910	dw 0			; DATA XREF: sub_11CEA+1Ar
					; sub_14C14+29w
byte_28912	db 0			; DATA XREF: sub_10C18+69r
					; sub_12A78+D1w ...
byte_28913	db 0			; DATA XREF: sub_131DE+59w
					; sub_14C14+77w ...
byte_28914	db 0			; DATA XREF: sub_148A9+2Dw
					; sub_14C99:loc_14D19r	...
byte_28915	db 0			; DATA XREF: sub_148A9+1Ew
					; sub_15025+14w ...
byte_28916	db 0			; DATA XREF: sub_115A1:loc_115B1w
					; sub_115A1:loc_115BBr	...
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2891C	db 0			; DATA XREF: sub_114E4:loc_114F4w
					; sub_114E4:loc_114FEr	...
byte_2891D	db 0			; DATA XREF: sub_10258+21r
					; sub_10BF9+1Aw ...
byte_2891E	db 0			; DATA XREF: sub_11F03+28r
					; sub_11F7F+2Ar ...
byte_2891F	db 0			; DATA XREF: sub_1233A+28w
					; sub_1253F+51w ...
byte_28920	db 0			; DATA XREF: sub_11F03+2Bw
					; sub_11F7F+2Fw ...
byte_28921	db 0			; DATA XREF: sub_113B2:loc_113BEr
					; sub_119A1:loc_119ADr	...
byte_28922	db 0			; DATA XREF: sub_1233A+25r
					; sub_12A78+9Cw ...
		align 2
dword_28924	dd 0			; DATA XREF: sub_157E1+30w
					; sub_157E1+37r ...
byte_28928	db 0			; DATA XREF: sub_114E4+52w
					; sub_114E4+60r ...
byte_28929	db 0			; DATA XREF: sub_115A1+52w
					; sub_115A1+60r ...
word_2892A	dw 0			; DATA XREF: sub_1138C:loc_11398r
					; sub_1138C+1Bw ...
word_2892C	dw 0			; DATA XREF: sub_1138C+12r
					; sub_1138C+21w ...
word_2892E	dw 0			; DATA XREF: sub_10D9D+3Bw
					; sub_10D9D+5Er ...
word_28930	dw 0			; DATA XREF: sub_10D9D+3Fw
					; sub_10D9D+5Ar ...
unk_28932	db    0			; DATA XREF: sub_151D8+16Co dseg:0766o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_28C32	dw 0			; DATA XREF: sub_1138C+Fw
					; sub_119E4+10r
dword_28C34	dd 0			; DATA XREF: sub_10D9D+E9r
					; sub_10D9D+107r ...
unk_28C38	db    0			; DATA XREF: sub_117C7+111o
					; sub_1535E+171o ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_28F38	db    0			; DATA XREF: sub_151D8+110o dseg:075Eo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_29238	dw 0			; DATA XREF: sub_1138C+15w
					; sub_119E4+17r
byte_2923A	db 0			; DATA XREF: sub_13852+17w
					; sub_13852+22Br
byte_2923B	db 0			; DATA XREF: sub_12A78+56w
					; sub_131DE+26w
byte_2923C	db 0			; DATA XREF: sub_12A78+61w
					; sub_131DE+2Ew
unk_2923D	db    0			; DATA XREF: sub_1535E+2Do
					; sub_1535E+F2o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2963D	db 0			; DATA XREF: sub_10C18:loc_10C2Cw
					; sub_10C18+4Er ...
word_2963E	dw 0			; DATA XREF: sub_113B2+16w
					; sub_119A1+17r
word_29640	dw 0			; DATA XREF: sub_113DF+48r
					; sub_113DF+4Ew ...
word_29642	dw 0			; DATA XREF: sub_113DF+6Dw
					; sub_11473+27r ...
unk_29644	db    0			; DATA XREF: sub_1535E+5Eo
					; sub_1535E+124o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_29A44	db    0			; DATA XREF: sub_149D7+23o
					; sub_149D7+131o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_29F44	dw 0			; DATA XREF: sub_113B2+1Cw
					; sub_119A1+1Er
dword_29F46	dd 0			; DATA XREF: sub_108D1+1Fw
					; sub_108D1+34r ...
word_29F4A	dw 0			; DATA XREF: sub_11A20+1Br
					; sub_11A20+29r ...
word_29F4C	dw 0			; DATA XREF: sub_119E4+25r
					; sub_11BD7:loc_11BFAw	...
dword_29F4E	dd 0			; DATA XREF: sub_11CEA+13r
					; sub_133C5+42w ...
word_29F52	dw 0			; DATA XREF: sub_11A20+22r
					; sub_11A20+30r ...
word_29F54	dw 0			; DATA XREF: sub_119E4+1Er
					; sub_11BD7:loc_11BE3w	...
dword_29F56	dd 0			; DATA XREF: sub_131DE+6Dw
					; sub_131DE+77r ...
dword_29F5A	dd 0			; DATA XREF: sub_11E3D+17r
					; sub_13A88+20w ...
byte_29F5E	db 0			; DATA XREF: sub_113DF+3Br
					; sub_11F03+22w ...
unk_29F5F	db    0			; DATA XREF: sub_151D8+86o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2A0DF	db 0			; DATA XREF: sub_14BC6+38w
					; sub_14C14+2Cr
byte_2A0E0	db 0			; DATA XREF: sub_10258+1Ar
					; sub_10BF9+17w ...
		align 2
word_2A0E2	dw 0			; DATA XREF: sub_119A1+2Cr
					; sub_11C41:loc_11C6Bw	...
word_2A0E4	dw 0			; DATA XREF: sub_119A1+25r
					; sub_11C41+13w ...
word_2A0E6	dw 0			; DATA XREF: sub_1138C+18r
					; sub_11473+24w ...
word_2A0E8	dw 0			; DATA XREF: sub_1138C+1Er
					; sub_11473+32w ...
unk_2A0EA	db    0			; DATA XREF: sub_151D8+3Ao
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_2A26A	db    0			; DATA XREF: sub_117C7+CDo
					; sub_151D8+AEo
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
unk_2A36A	db    0			; DATA XREF: sub_117C7+A5o
					; sub_117C7+E9o ...
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
dword_2A46A	dd 0			; DATA XREF: sub_14BC6+43w
					; sub_14C14+22r ...
dword_2A46E	dd 0			; DATA XREF: sub_114E4+44w
					; sub_114E4+4Br ...
dword_2A472	dd 0			; DATA XREF: sub_115A1+44w
					; sub_115A1+4Br ...
word_2A476	dw 0			; DATA XREF: sub_10416+79w
					; sub_10569+48r ...
word_2A478	dw 0			; DATA XREF: sub_10416+7Cw
					; sub_10569+44r ...
word_2A47A	dw 0			; DATA XREF: sub_113B2+1Fr
					; sub_14B4E+2Bw ...
word_2A47C	dw 0			; DATA XREF: sub_113B2+25r
					; sub_14B4E+39w ...
byte_2A47E	db 0			; DATA XREF: sub_11E02+17r
					; sub_1228D:loc_12299w	...
byte_2A47F	db 0			; DATA XREF: sub_12A78+B3w
					; sub_16C14+32w ...
dword_2A480	dd 0			; DATA XREF: sub_133C5+71w
					; sub_133C5+7Br ...
word_2A484	dw 0			; DATA XREF: sub_10C18+25w
					; sub_13852+15Cr ...
word_2A486	dw 0			; DATA XREF: sub_10C18+28w
					; sub_13852+158r ...
dword_2A488	dd 0			; DATA XREF: sub_1236F+11r
					; sub_123B6+34r ...
byte_2A48C	db 0			; DATA XREF: sub_14263+38w
					; sub_14995+11r ...
		align 2
word_2A48E	dw 0			; DATA XREF: sub_11CEA+17r
					; sub_12A78+E3w
byte_2A490	db 0			; DATA XREF: sub_14C99+38w
					; sub_14C99+5Bw ...
byte_2A491	db 0			; DATA XREF: sub_14C99+35w
					; sub_14C99+7Bw ...
byte_2A492	db 0			; DATA XREF: sub_14C99+32w
					; sub_14C99+9Cw ...
		align 2
unk_2A494	db    0			; DATA XREF: sub_132B0+40o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
byte_2A556	db 0			; DATA XREF: sub_16183+20w
					; sub_16183+43w ...
byte_2A557	db 0			; DATA XREF: sub_11E02+1Er
					; sub_127DE+11w ...
byte_2A558	db 0			; DATA XREF: sub_11A20:loc_11A2Cr
					; sub_11A20+13w ...
byte_2A559	db 0			; DATA XREF: sub_11E3D+11w
					; sub_131DE+AAw
byte_2A55A	db 0			; DATA XREF: sub_11D26:loc_11DBBr
					; sub_1228D+16w ...
		align 2
dword_2A55C	dd 0			; DATA XREF: sub_113DF+31r
					; sub_113DF:loc_11435r	...
byte_2A560	db 0			; DATA XREF: sub_131DE+5Ew
					; sub_14BC6+31w ...
byte_2A561	db 0			; DATA XREF: sub_1233A:loc_12346r
					; sub_131DE+4Fw ...
byte_2A562	db 0			; DATA XREF: sub_14C99+2Fw
					; sub_14C99+D4w ...
		align 2
dword_2A564	dd 0			; DATA XREF: sub_17307+9w seg000:733Dr ...
word_2A568	dw 0			; DATA XREF: sub_172EF+6w
					; sub_1736F+17w ...
byte_2A56A	db 0			; DATA XREF: sub_174D5+3Ar
					; sub_174D5+48r
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
word_2A5AE	dw 0			; DATA XREF: seg000:A0D5r _harderr+6w
word_2A5B0	dw 0			; DATA XREF: seg000:A0C1w
					; _hardresume+8r ...
		align 10h
dseg		ends

; ===========================================================================

; Segment type:	Uninitialized
seg011		segment	byte stack 'STACK' use16
		assume cs:seg011
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 80h dup(0)
seg011		ends


		end start
