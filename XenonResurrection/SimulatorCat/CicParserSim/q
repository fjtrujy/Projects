    memory(_ds, 0x690) = 0x04;                  //mov byte ptr word_data_8+688h, 4
    memory16(_ds, 0x6DF8) = 0x0000;             //mov word ptr byte_data_6D37+0C1h, 0
    memory(_ds, 0x69B) = 0x00;                  //mov byte ptr word_data_8+693h, 0
    memory16(_ds, 0x6E00) = _ax;                //mov word ptr byte_data_6D37+0C9h, ax
    memory(_ds, 0x690) = _al;                   //mov byte ptr word_data_8+688h, al
    memory16(_ds, 0x416) = 0x0000;              //mov word_data_8+40Eh, 0
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory(_ds, 0x41A) = 0x00;                  //mov byte ptr word_data_8+412h, 0
    memory16(_ds, 0x41D) = _ax;                 //mov word_data_8+415h, ax
    memory16(_ds, 0x41F) = _ax;                 //mov word_data_8+417h, ax
    memory(_ds, 0x0) = 0xff;                    //mov byte_data_0, 0FFh
    memory16(_ds, 0x8) = 0x0000;                //mov word_data_8, 0
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory(_ds, 0x41A) = 0x01;                  //mov byte ptr word_data_8+412h, 1
    memory16(_ds, 0x8) = _ax;                   //mov word_data_8, ax
    memory(_ds, 0x1F80) = 0x03;                 //mov byte ptr word_data_8+1F78h, 3
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory16(_ds, 0x1C30) = 0x0000;             //mov word_data_8+1C28h, 0
    memory16(_ds, 0x412) = _dx;                 //mov word_data_8+40Ah, dx
    memory16(_ds, 0x414) = 0x0000;              //mov word_data_8+40Ch, 0
    memory(_ds, 0x418) = 0x00;                  //mov byte ptr word_data_8+410h, 0
    memory(_ds, 0x419) = 0x00;                  //mov byte ptr word_data_8+411h, 0
    memory(_ds, 0x41C) = 0x00;                  //mov byte ptr word_data_8+414h, 0
    memory(_ds, 0x41B) = 0x00;                  //mov byte ptr word_data_8+413h, 0
    memory(_ds, 0x1F81) = 0xff;                 //mov byte ptr word_data_8+1F79h, 0FFh
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory(_ds, 0x550) = 0x02;                  //mov byte ptr word_data_8+548h, 2
    memory(_ds, 0x576) = 0x01;                  //mov byte ptr word_data_8+56Eh, 1
    memory(_ds, 0x578) = 0x20;                  //mov byte ptr word_data_8+570h, 20h
    memory16(_ds, 0x579) = 0x0000;              //mov word_data_8+571h, 0
    memory16(_ds, 0x410) = _dx;                 //mov word_data_8+408h, dx
    memory16(_ds, 0x1) = _ax;                   //mov word_data_1, ax
    memory(_ds, 0x3) = _al;                     //mov byte_data_3, al
    memory(_ds, 0x419) = 0x01;                  //mov byte ptr word_data_8+411h, 1
    memory(_ds, 0x418) = 0x00;                  //mov byte ptr word_data_8+410h, 0
    memory16(_ds, 0x4) = 0x0007;                //mov word_data_4, 7
    memory16(_ds, 0x4) = _ax;                   //mov word_data_4, ax
    memory16(_ds, 0x41F) = _cx;                 //mov word_data_8+417h, cx
    memory16(_ds, 0x41D) = _ax;                 //mov word_data_8+415h, ax
    memory16(_ds, 0x6) = 0x0000;                //mov word_data_6, 0
    memory16(_ds, 0x4) = 0x0007;                //mov word_data_4, 7
    memory16(_ds, 0x4) = 0x0006;                //mov word_data_4, 6
    memory16(_ds, 0x4) = 0x0005;                //mov word_data_4, 5
    memory16(_ds, 0x4) = 0x0004;                //mov word_data_4, 4
    memory16(_ds, 0x4) = 0x0003;                //mov word_data_4, 3
    memory16(_ds, 0x4) = 0x0001;                //mov word_data_4, 1
    memory(_ds, 0x419) = 0x00;                  //mov byte ptr word_data_8+411h, 0
    memory16(_ds, 0x6) = _ax;                   //mov word_data_6, ax
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory16(_ds, 0x4) = 0x0002;                //mov word_data_4, 2
    memory(_ds, 0x1CBF) = 0x00;                 //mov byte ptr word_data_8+1CB7h, 0
    memory(_ds, 0x1CB8) = 0x00;                 //mov byte ptr word_data_8+1CB0h, 0
    memory16(_ds, 0x544) = _dx;                 //mov word_data_8+53Ch, dx
    memory(_ds, 0x531) = _al;                   //mov byte ptr word_data_8+529h, al
    memory16(_ds, 0x52F) = _bx;                 //mov word_data_8+527h, bx
    memory(_ds, 0x525) = _al;                   //mov byte ptr word_data_8+51Dh, al
    memory(_ds, 0x55B) = 0x11;                  //mov byte ptr word_data_8+553h, 11h
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr word_data_8+569h, 1
    memory(_ds, 0x576) = 0x01;                  //mov byte ptr word_data_8+56Eh, 1
    memory(_ds, 0x578) = 0x18;                  //mov byte ptr word_data_8+570h, 18h
    memory(_ds, 0x572) = 0x01;                  //mov byte ptr word_data_8+56Ah, 1
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr word_data_8+554h, 0
    memory16(_ds, 0x579) = _ax;                 //mov word_data_8+571h, ax
    memory16(_ds, 0x523) = _ax;                 //mov word_data_8+51Bh, ax
    memory(_ds, 0x4D6) = 0x00;                  //mov byte ptr ds:4D6h, 0
    memory(_ds, 0x4D6) = 0x01;                  //mov byte ptr ds:4D6h, 1
    memory(_ds, 0x540) = 0x00;                  //mov byte ptr ds:540h, 0
    memory16(_es, _di + 4) = _ax;               //mov es:[di+4], ax
    memory16(_es, _di + 6) = _ax;               //mov es:[di+6], ax
    memory(_ds, 0x540) = _al;                   //mov ds:540h, al
    memory(_ds, 0x540) = 0x03;                  //mov byte ptr ds:540h, 3
    memory16(_ds, 0x57D) = 0x0000;              //mov word ptr ds:57Dh, 0
    memory16(_ds, 0x684) = 0x0000;              //mov word ptr ds:684h, 0
    memory(_ds, 0x56E) = _ah;                   //mov ds:56Eh, ah
    memory(_ds, 0x558) = 0x03;                  //mov byte ptr ds:558h, 3
    memory(_ds, 0x559) = 0x0c;                  //mov byte ptr ds:559h, 0Ch
    memory16(_ds, 0x579) = _cx;                 //mov ds:579h, cx
    memory(_ds, 0x57B) = _dl;                   //mov ds:57Bh, dl
    memory(_ds, 0x57C) = 0xe6;                  //mov byte ptr ds:57Ch, 0E6h
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x561) = 0x0b03;              //mov word ptr ds:561h, 0B03h
    memory(_ds, 0x571) = 0x00;                  //mov byte ptr ds:571h, 0
    memory16(_ds, 0x572) = 0x0002;              //mov word ptr ds:572h, 2
    memory(_ds, 0x576) = 0x01;                  //mov byte ptr ds:576h, 1
    memory(_ds, 0x55B) = 0x00;                  //mov byte ptr ds:55Bh, 0
    memory(_ds, 0x550) = 0x00;                  //mov byte ptr ds:550h, 0
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x55A) = 0x00;                  //mov byte ptr ds:55Ah, 0
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory(_ds, 0x698) = 0x00;                  //mov byte ptr ds:698h, 0
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr ds:699h, 0
    memory(_ds, 0x551) = 0x00;                  //mov byte ptr ds:551h, 0
    memory(_ds, 0x584) = 0x00;                  //mov byte ptr ds:584h, 0
    memory(_ds, 0x552) = 0x00;                  //mov byte ptr ds:552h, 0
    memory16(_ds, 0x554) = 0x0000;              //mov word ptr ds:554h, 0
    memory(_ds, 0x553) = 0x00;                  //mov byte ptr ds:553h, 0
    memory(_ds, 0x127C) = 0x00;                 //mov byte ptr ds:127Ch, 0
    memory16(_ds, 0x579) = _cx;                 //mov ds:579h, cx
    memory(_ds, 0x57B) = _dl;                   //mov ds:57Bh, dl
    memory(_ds, 0x57C) = _al;                   //mov ds:57Ch, al
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x569) = _ax;                 //mov ds:569h, ax
    memory16(_ds, 0x567) = _ax;                 //mov ds:567h, ax
    memory16(_ds, 0x561) = _ax;                 //mov ds:561h, ax
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory(_ds, 0x576) = 0x01;                  //mov byte ptr ds:576h, 1
    memory(_ds, 0x578) = 0x40;                  //mov byte ptr ds:578h, 40h
    memory(_ds, 0x55B) = _al;                   //mov ds:55Bh, al
    memory(_ds, 0x550) = 0x00;                  //mov byte ptr ds:550h, 0
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x55A) = 0x00;                  //mov byte ptr ds:55Ah, 0
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory(_ds, 0x698) = 0x00;                  //mov byte ptr ds:698h, 0
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr ds:699h, 0
    memory(_ds, 0x551) = 0x00;                  //mov byte ptr ds:551h, 0
    memory(_ds, 0x584) = 0x00;                  //mov byte ptr ds:584h, 0
    memory(_ds, 0x552) = 0x00;                  //mov byte ptr ds:552h, 0
    memory16(_ds, 0x554) = 0x0000;              //mov word ptr ds:554h, 0
    memory(_ds, 0x553) = 0x00;                  //mov byte ptr ds:553h, 0
    memory(_ds, 0x127C) = 0x00;                 //mov byte ptr ds:127Ch, 0
    memory(_ds, 0x576) = 0x10;                  //mov byte ptr ds:576h, 10h
    memory16(_ds, 0x574) = 0x0010;              //mov word ptr ds:574h, 10h
    memory16(_ds, 0x5F1) = _dx;                 //mov ds:5F1h, dx
    memory(_ds, 0x5F3) = 0x00;                  //mov byte ptr ds:5F3h, 0
    memory(_ds, 0x5F4) = 0x05;                  //mov byte ptr ds:5F4h, 5
    memory(_ds, 0x5F5) = 0x01;                  //mov byte ptr ds:5F5h, 1
    memory16(_ds, 0x592A) = 0x0400;             //mov word ptr ds:592Ah, 400h
    memory(_ds, 0x576) = 0x08;                  //mov byte ptr ds:576h, 8
    memory(_ds, 0x571) = _dl;                   //mov ds:571h, dl
    memory(_ds, 0x56E) = _dl;                   //mov ds:56Eh, dl
    memory(_ds, 0x578) = _al;                   //mov ds:578h, al
    memory16(_ds, 0x572) = _ax;                 //mov ds:572h, ax
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x39E0) = 0x00;                 //mov byte ptr ds:39E0h, 0
    memory(_ds, 0x577) = 0x01;                  //mov byte ptr ds:577h, 1
    memory(_ds, 0x55B) = 0x10;                  //mov byte ptr ds:55Bh, 10h
    memory(_ds, 0x584) = 0x01;                  //mov byte ptr ds:584h, 1
    memory16(_ds, 0x684) = _ax;                 //mov ds:684h, ax
    memory16(_ds, 0x57D) = _dx;                 //mov ds:57Dh, dx
    memory16(_ds, 0x57F) = _ax;                 //mov ds:57Fh, ax
    memory(_ds, 0x552) = 0x01;                  //mov byte ptr ds:552h, 1
    memory(_ds, 0x5F5) = 0x06;                  //mov byte ptr ds:5F5h, 6
    memory(_ds, 0x5F4) = _al;                   //mov ds:5F4h, al
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x5F3) = 0x01;                  //mov byte ptr ds:5F3h, 1
    memory(_ds, 0x576) = 0x20;                  //mov byte ptr ds:576h, 20h
    memory(_ds, 0x56F) = _al;                   //mov ds:56Fh, al
    memory(_ds, 0x570) = _al;                   //mov ds:570h, al
    memory(_ds, 0x56E) = _al;                   //mov ds:56Eh, al
    memory16(_ds, 0x574) = 0x0020;              //mov word ptr ds:574h, 20h
    memory16(_ds, 0x572) = _ax;                 //mov ds:572h, ax
    memory(_ds, 0x571) = _al;                   //mov ds:571h, al
    memory(_ds, 0x576) = 0x20;                  //mov byte ptr ds:576h, 20h
    memory16(_ds, 0x5F1) = _ax;                 //mov ds:5F1h, ax
    memory(_ds, 0x57B) = _dl;                   //mov ds:57Bh, dl
    memory16(_ds, 0x563) = _ax;                 //mov ds:563h, ax
    memory16(_ds, 0x55D) = _ax;                 //mov ds:55Dh, ax
    memory16(_ds, 0x565) = _ax;                 //mov ds:565h, ax
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x572) = 0x0008;              //mov word ptr ds:572h, 8
    memory16(_ds, 0x55D) = _bx;                 //mov ds:55Dh, bx
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x572) = 0x0006;              //mov word ptr ds:572h, 6
    memory16(_ds, 0x563) = _ax;                 //mov ds:563h, ax
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x565) = 0x0e03;              //mov word ptr ds:565h, 0E03h
    memory16(_ds, 0x55D) = 0x09da;              //mov word ptr ds:55Dh, 9DAh
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory(_ds, 0x576) = 0x02;                  //mov byte ptr ds:576h, 2
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x55B) = 0x00;                  //mov byte ptr ds:55Bh, 0
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x576) = 0x01;                  //mov byte ptr ds:576h, 1
    memory(_ds, 0x551) = 0x01;                  //mov byte ptr ds:551h, 1
    memory(_ds, 0x550) = 0x00;                  //mov byte ptr ds:550h, 0
    memory(_ds, 0x571) = 0x00;                  //mov byte ptr ds:571h, 0
    memory(_ds, 0x584) = 0x00;                  //mov byte ptr ds:584h, 0
    memory16(_ds, 0x572) = 0x0002;              //mov word ptr ds:572h, 2
    memory(_ds, 0x55B) = 0x00;                  //mov byte ptr ds:55Bh, 0
    memory(_ds, 0x55A) = 0x00;                  //mov byte ptr ds:55Ah, 0
    memory(_ds, 0x57C) = _al;                   //mov ds:57Ch, al
    memory(_ds, 0x57B) = _al;                   //mov ds:57Bh, al
    memory16(_ds, 0x563) = _ax;                 //mov ds:563h, ax
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x55D) = _ax;                 //mov ds:55Dh, ax
    memory16(_ds, 0x565) = _bx;                 //mov ds:565h, bx
    memory(_ds, 0x583) = 0x01;                  //mov byte ptr ds:583h, 1
    memory16(_ds, 0x565) = _bx;                 //mov ds:565h, bx
    memory16(_ds, 0x55D) = _ax;                 //mov ds:55Dh, ax
    memory(_ds, 0x551) = 0x01;                  //mov byte ptr ds:551h, 1
    memory16(_ds, 0x565) = _bx;                 //mov ds:565h, bx
    memory(_ds, 0x576) = 0x02;                  //mov byte ptr ds:576h, 2
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x56C) = 0x00;                  //mov byte ptr ds:56Ch, 0
    memory(_ds, 0x699) = 0x01;                  //mov byte ptr ds:699h, 1
    memory(_ds, 0x56C) = 0x01;                  //mov byte ptr ds:56Ch, 1
    memory(_ds, 0x698) = _dl;                   //mov ds:698h, dl
    memory(_ds, 0x56F) = _al;                   //mov ds:56Fh, al
    memory(_ds, 0x56E) = _al;                   //mov ds:56Eh, al
    memory(_ds, 0x571) = _al;                   //mov ds:571h, al
    memory(_ds, 0x571) = 0x00;                  //mov byte ptr ds:571h, 0
    memory(_ds, 0x584) = 0x00;                  //mov byte ptr ds:584h, 0
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr ds:699h, 0
    memory(_ds, 0x55B) = 0x08;                  //mov byte ptr ds:55Bh, 8
    memory(_ds, 0x550) = 0x00;                  //mov byte ptr ds:550h, 0
    memory(_ds, 0x55B) = 0x00;                  //mov byte ptr ds:55Bh, 0
    memory16(_ds, 0x572) = _ax;                 //mov ds:572h, ax
    memory(_ds, 0x578) = _al;                   //mov ds:578h, al
    memory(_ds, 0x576) = _ah;                   //mov ds:576h, ah
    memory(_ds, 0x577) = 0x01;                  //mov byte ptr ds:577h, 1
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory16(_ds, 0x569) = _ax;                 //mov ds:569h, ax
    memory16(_ds, 0x567) = _ax;                 //mov ds:567h, ax
    memory(_ds, 0x39E0) = 0x00;                 //mov byte ptr ds:39E0h, 0
    memory16(_ds, 0x563) = _ax;                 //mov ds:563h, ax
    memory16(_ds, 0x55D) = _bx;                 //mov ds:55Dh, bx
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory16(_ds, 0x565) = 0x0b03;              //mov word ptr ds:565h, 0B03h
    memory16(_ds, 0x565) = _cx;                 //mov ds:565h, cx
    memory16(_ds, 0x579) = 0x0000;              //mov word ptr ds:579h, 0
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x55D) = 0x000e;              //mov word ptr ds:55Dh, 0Eh
    memory16(_ds, 0x5F6) = 0x0008;              //mov word ptr ds:5F6h, 8
    memory16(_ds, 0x5F8) = 0x0123;              //mov word ptr ds:5F8h, 123h
    memory16(_ds, 0x5F6) = 0x0024;              //mov word ptr ds:5F6h, 24h
    memory16(_ds, 0x5F8) = 0x010f;              //mov word ptr ds:5F8h, 10Fh
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x572) = 0x0002;              //mov word ptr ds:572h, 2
    memory(_ds, 0x56B) = _bl;                   //mov ds:56Bh, bl
    memory16(_ds, 0x572) = 0x0002;              //mov word ptr ds:572h, 2
    memory(_ds, 0x577) = 0x08;                  //mov byte ptr ds:577h, 8
    memory16(_ds, 0x561) = 0x0c02;              //mov word ptr ds:561h, 0C02h
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x576) = 0x02;                  //mov byte ptr ds:576h, 2
    memory(_ds, 0x578) = 0x01;                  //mov byte ptr ds:578h, 1
    memory(_ds, 0x577) = 0xff;                  //mov byte ptr ds:577h, 0FFh
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory(_ds, 0x55A) = 0x01;                  //mov byte ptr ds:55Ah, 1
    memory16(_ds, 0x569) = _ax;                 //mov ds:569h, ax
    memory16(_ds, 0x567) = _ax;                 //mov ds:567h, ax
    memory(_ds, 0x550) = 0x02;                  //mov byte ptr ds:550h, 2
    memory16(_ds, 0x55F) = _ax;                 //mov ds:55Fh, ax
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory16(_ds, 0x561) = _cx;                 //mov ds:561h, cx
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory16(_ds, 0x581) = _ax;                 //mov ds:581h, ax
    memory16(_ds, 0x57F) = _dx;                 //mov ds:57Fh, dx
    memory16(_ds, 0x5A3C) = 0x0000;             //mov word ptr ds:5A3Ch, 0
    memory16(_ds, 0x5A3E) = 0x0000;             //mov word ptr ds:5A3Eh, 0
    memory(_ds, 0x583) = 0x00;                  //mov byte ptr ds:583h, 0
    memory16(_ds, 0x69F) = _dx;                 //mov ds:69Fh, dx
    memory(_ds, 0x69A) = _al;                   //mov ds:69Ah, al
    memory(_ds, 0x69E) = 0x03;                  //mov byte ptr ds:69Eh, 3
    memory16(_ds, 0x69C) = _ax;                 //mov ds:69Ch, ax
    memory(_ds, 0x698) = _bl;                   //mov ds:698h, bl
    memory(_ds, 0x699) = _bl;                   //mov ds:699h, bl
    memory(_ds, 0x698) = 0xff;                  //mov byte ptr ds:698h, 0FFh
    memory(_ds, 0x699) = 0xff;                  //mov byte ptr ds:699h, 0FFh
    memory(_ds, 0x699) = _al;                   //mov ds:699h, al
    memory(_ds, 0x699) = 0xff;                  //mov byte ptr ds:699h, 0FFh
    memory(_ds, 0x698) = _al;                   //mov ds:698h, al
    memory(_ds, 0x698) = 0xff;                  //mov byte ptr ds:698h, 0FFh
    memory(_ds, 0x69A) = _al;                   //mov ds:69Ah, al
    memory16(_ds, 0x691) = _ax;                 //mov ds:691h, ax
    memory(_ds, 0x1F80) = 0x09;                 //mov byte ptr ds:1F80h, 9
    memory(_ds, 0x41C) = 0xff;                  //mov byte ptr ds:41Ch, 0FFh
    memory(_ds, 0x41B) = 0xff;                  //mov byte ptr ds:41Bh, 0FFh
    memory(_ds, 0x0) = (~memory(_ds, 0x0));     //not byte ptr ds:0
    memory(_ds, 0x697) = _al;                   //mov ds:697h, al
    memory16(_es, 0x691) = _ax;                 //mov es:word_data_8+689h, ax
    memoryCode(_cs, 0x13E7) = _al;                  //mov cs:byte_code_13E7, al
    memoryCode16(_cs, 0x13DF) = _ax;                //mov cs:word_code_13DF, ax
    memoryCode16(_cs, 0x13E1) = _bx;                //mov cs:word_code_13E1, bx
    memoryCode16(_cs, 0x13E3) = _cx;                //mov cs:word_code_13E3, cx
    memoryCode16(_cs, 0x13E5) = _dx;                //mov cs:word_code_13E5, dx
    memory(_es, _di + 1719) = _ah;              //mov es:[di+6B7h], ah
    memory(_es, _di + 1719) = _ah;              //mov es:[di+6B7h], ah
    memory16(_ds, _bx) = 0x1234;                //mov word ptr [bx], 1234h
    memory(_ds, 0x1028) = _dl;                  //mov ds:1028h, dl
    memory(_ds, 0x57B) = _al;                   //mov ds:57Bh, al
    memory(_ds, 0x57C) = _al;                   //mov ds:57Ch, al
    memory(_ds, 0x550) = 0x01;                  //mov byte ptr ds:550h, 1
    memory16(_ds, 0x556) = _dx;                 //mov ds:556h, dx
    memory(_ds, 0x127C) = 0x00;                 //mov byte ptr ds:127Ch, 0
    memory(_ds, 0x57B) = _ch;                   //mov ds:57Bh, ch
    memory(_ds, 0x57C) = _ch;                   //mov ds:57Ch, ch
    memory(_ds, 0x127C) = 0x01;                 //mov byte ptr ds:127Ch, 1
    memory(_ds, 0x39E0) = 0x00;                 //mov byte ptr ds:39E0h, 0
    memory(_ds, 0x551) = 0x01;                  //mov byte ptr ds:551h, 1
    memory(_ds, 0x55C) = 0x01;                  //mov byte ptr ds:55Ch, 1
    memory(_ds, 0x127B) = _al;                  //mov ds:127Bh, al
    memory16(_ds, 0x1279) = _ax;                //mov ds:1279h, ax
    memory(_ds, 0x57B) = _ch;                   //mov ds:57Bh, ch
    memory(_ds, 0x57C) = _ch;                   //mov ds:57Ch, ch
    memory(_ds, 0x55C) = _al;                   //mov ds:55Ch, al
    memory(_ds, 0x39E0) = _bl;                  //mov ds:39E0h, bl
    memory(_ds, 0x57B) = _dl;                   //mov ds:57Bh, dl
    memory(_ds, 0x57C) = _dl;                   //mov ds:57Ch, dl
    memory(_ds, 0x55C) = 0x01;                  //mov byte ptr ds:55Ch, 1
    memory(_ds, 0x1665) = 0x00;                 //mov byte ptr ds:1665h, 0
    memory(_ds, 0x1673) = 0x00;                 //mov byte ptr ds:1673h, 0
    memory(_ds, 0x1677) = 0x00;                 //mov byte ptr ds:1677h, 0
    memory(_ds, 0x1678) = 0x00;                 //mov byte ptr ds:1678h, 0
    memory16(_ds, 0x166C) = 0x0009;             //mov word ptr ds:166Ch, 9
    memory16(_ds, 0x17EC) = _dx;                //mov ds:17ECh, dx
    memory(_ds, 0x1674) = 0x00;                 //mov byte ptr ds:1674h, 0
    memory16(_ds, 0x1671) = _ax;                //mov ds:1671h, ax
    memory(_ds, 0x1673) = 0x00;                 //mov byte ptr ds:1673h, 0
    memory(_ds, 0x1678) = 0x00;                 //mov byte ptr ds:1678h, 0
    memory(_ds, 0x1673) = _dl;                  //mov ds:1673h, dl
    memory16(_ds, 0x17E1) = _bx;                //mov ds:17E1h, bx
    memory16(_ds, 0x17E7) = _ax;                //mov ds:17E7h, ax
    memory16(_ds, 0x17E5) = _di;                //mov ds:17E5h, di
    memory16(_ds, 0x17E3) = _cx;                //mov ds:17E3h, cx
    memory(_ds, 0x166A) = 0x0d;                 //mov byte ptr ds:166Ah, 0Dh
    memory(_ds, 0x1677) = 0x00;                 //mov byte ptr ds:1677h, 0
    memory(_ds, 0x1669) = _dl;                  //mov ds:1669h, dl
    memory16(_ds, 0x1666) = _cx;                //mov ds:1666h, cx
    memory(_ds, 0x1668) = _dl;                  //mov ds:1668h, dl
    memory(_ds, 0x1665) = 0x1d;                 //mov byte ptr ds:1665h, 1Dh
    memory16(_ds, 0x166C) = _ax;                //mov ds:166Ch, ax
    memory(_ds, 0x1670) = 0x01;                 //mov byte ptr ds:1670h, 1
    memory(_ds, 0x1664) = 0x00;                 //mov byte ptr ds:1664h, 0
    memory16(_ds, 0x166E) = _dx;                //mov ds:166Eh, dx
    memory(_ds, 0x1678) = 0x01;                 //mov byte ptr ds:1678h, 1
    memory(_ds, 0x1673) = _al;                  //mov ds:1673h, al
    memory16(_ds, 0x1671) = _dx;                //mov ds:1671h, dx
    memory(_ds, 0x1674) = _al;                  //mov ds:1674h, al
    memory16(_ds, 0x17DD) = _ax;                //mov ds:17DDh, ax
    memory16(_ds, 0x17DF) = _ax;                //mov ds:17DFh, ax
    memory(_ds, 0x1676) = _al;                  //mov ds:1676h, al
    memory16(_ds, 0x17EA) = 0x0020;             //mov word ptr ds:17EAh, 20h
    memory(_ds, 0x17E9) = 0x01;                 //mov byte ptr ds:17E9h, 1
    memory(_ds, 0x1675) = 0x00;                 //mov byte ptr ds:1675h, 0
    memory(_ds, 0x166B) = _dl;                  //mov ds:166Bh, dl
    memory(_ds, 0x551) = 0x01;                  //mov byte ptr ds:551h, 1
    memory(_ds, 0x1675) = 0x01;                 //mov byte ptr ds:1675h, 1
    memory(_ds, 0x1674) = _dl;                  //mov ds:1674h, dl
    memory16(_ds, 0x17EA) = 0x0060;             //mov word ptr ds:17EAh, 60h
    memory(_ds, 0x17E9) = 0x01;                 //mov byte ptr ds:17E9h, 1
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory16(_ds, 0x579) = 0x0098;              //mov word ptr ds:579h, 98h
    memory(_ds, 0x57B) = 0x5f;                  //mov byte ptr ds:57Bh, 5Fh
    memory16(_ds, 0x1839) = 0x0000;             //mov word ptr ds:1839h, 0
    memory16(_ds, 0x1839) = _ax;                //mov ds:1839h, ax
    memory16(_ds, 0x1835) = 0x0001;             //mov word ptr ds:1835h, 1
    memory(_ds, 0x1837) = 0x08;                 //mov byte ptr ds:1837h, 8
    memory(_ds, 0x1838) = 0x00;                 //mov byte ptr ds:1838h, 0
    memory16(_ds, 0x1832) = _cx;                //mov ds:1832h, cx
    memory(_ds, 0x1834) = _dl;                  //mov ds:1834h, dl
    memory16(_ds, 0x1835) = _ax;                //mov ds:1835h, ax
    memory(_ds, 0x1837) = _al;                  //mov ds:1837h, al
    memory16(_ds, 0x1C2E) = _ax;                //mov ds:1C2Eh, ax
    memory16(_ds, 0x1C1B) = 0x8080;             //mov word ptr ds:1C1Bh, 8080h
    memory(_ds, 0x1C1D) = 0x1c;                 //mov byte ptr ds:1C1Dh, 1Ch
    memory16(_ds, 0x1830) = _dx;                //mov ds:1830h, dx
    memory16(_ds, 0x1C1B) = _ax;                //mov ds:1C1Bh, ax
    memory(_ds, 0x1CBF) = 0x00;                 //mov byte ptr ds:1CBFh, 0
    memory16(_ds, 0x1CE1) = 0x0000;             //mov word ptr ds:1CE1h, 0
    memory(_ds, 0x1CC0) = 0x00;                 //mov byte ptr ds:1CC0h, 0
    memory(_ds, 0x1CC1) = 0x00;                 //mov byte ptr ds:1CC1h, 0
    memory(_ds, 0x1CB8) = 0x00;                 //mov byte ptr ds:1CB8h, 0
    memory(_ds, 0x1CC8) = 0xb1;                 //mov byte ptr ds:1CC8h, 0B1h
    memory16(_ds, 0x1CC9) = _cx;                //mov ds:1CC9h, cx
    memory(_ds, 0x552) = 0xdd;                  //mov byte ptr ds:552h, 0DDh
    memory16(_ds, 0x579) = 0x00a0;              //mov word ptr ds:579h, 0A0h
    memory(_ds, 0x57B) = 0x60;                  //mov byte ptr ds:57Bh, 60h
    memory(_ds, 0x1CD0) = _dl;                  //mov ds:1CD0h, dl
    memory16(_ds, 0x59BA) = 0x0000;             //mov word ptr ds:59BAh, 0
    memory(_ds, 0x1CD0) = _al;                  //mov ds:1CD0h, al
    memory(_ds, 0x1CC0) = 0x04;                 //mov byte ptr ds:1CC0h, 4
    memory(_ds, 0x1CBF) = 0x01;                 //mov byte ptr ds:1CBFh, 1
    memory(_ds, 0x1D58) = 0x00;                 //mov byte ptr ds:1D58h, 0
    memory(_ds, 0x1CD0) = 0x01;                 //mov byte ptr ds:1CD0h, 1
    memory(_ds, 0x1CD0) = 0xff;                 //mov byte ptr ds:1CD0h, 0FFh
    memory(_ds, 0x1CC1) = 0x04;                 //mov byte ptr ds:1CC1h, 4
    memory16(_ds, 0x1CC6) = _ax;                //mov ds:1CC6h, ax
    memory16(_ds, 0x1CC4) = 0x0f04;             //mov word ptr ds:1CC4h, 0F04h
    memory16(_ds, 0x1CCD) = _ax;                //mov ds:1CCDh, ax
    memory16(_ds, 0x1CBD) = _ax;                //mov ds:1CBDh, ax
    memory16(_ds, 0x1CBB) = _ax;                //mov ds:1CBBh, ax
    memory16(_ds, 0x1CC4) = _cx;                //mov ds:1CC4h, cx
    memory16(_ds, 0x1CC6) = 0x0000;             //mov word ptr ds:1CC6h, 0
    memory16(_ds, 0x1CC6) = _ax;                //mov ds:1CC6h, ax
    memory16(_ds, 0x1CBB) = 0x000e;             //mov word ptr ds:1CBBh, 0Eh
    memory16(_ds, 0x1CC2) = _cx;                //mov ds:1CC2h, cx
    memory(_ds, 0x1CC8) = _al;                  //mov ds:1CC8h, al
    memory16(_ds, 0x1CC6) = _ax;                //mov ds:1CC6h, ax
    memory16(_ds, 0x1CC6) = _ax;                //mov ds:1CC6h, ax
    memory(_ds, 0x1CB8) = _bl;                  //mov ds:1CB8h, bl
    memory(_ds, 0x1CBF) = 0x01;                 //mov byte ptr ds:1CBFh, 1
    memory(_ds, 0x1CC1) = 0x00;                 //mov byte ptr ds:1CC1h, 0
    memory16(_ds, 0x1CB9) = _dx;                //mov ds:1CB9h, dx
    memory(_ds, 0x1CB8) = 0x00;                 //mov byte ptr ds:1CB8h, 0
    memory16(_ds, 0x1CC4) = 0x0f04;             //mov word ptr ds:1CC4h, 0F04h
    memory16(_ds, 0x1CBB) = _ax;                //mov ds:1CBBh, ax
    memory16(_ds, 0x1CBD) = _ax;                //mov ds:1CBDh, ax
    memory(_ds, 0x1CB8) = _al;                  //mov ds:1CB8h, al
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory(_ds, 0x1D59) = 0x00;                 //mov byte ptr ds:1D59h, 0
    memory16(_ds, 0x1D5A) = _cx;                //mov ds:1D5Ah, cx
    memory(_ds, 0x1D5E) = _dl;                  //mov ds:1D5Eh, dl
    memory16(_ds, 0x1D5C) = _cx;                //mov ds:1D5Ch, cx
    memory(_ds, 0x1D59) = 0x1b;                 //mov byte ptr ds:1D59h, 1Bh
    memory16(_ds, 0x1D64) = _bx;                //mov ds:1D64h, bx
    memory(_ds, 0x1D5F) = _dl;                  //mov ds:1D5Fh, dl
    memory16(_ds, 0x1D62) = _ax;                //mov ds:1D62h, ax
    memory16(_ds, 0x1D60) = _di;                //mov ds:1D60h, di
    memory16(_ds, 0x1D66) = _cx;                //mov ds:1D66h, cx
    memory(_ds, 0x1D58) = 0x01;                 //mov byte ptr ds:1D58h, 1
    memory16(_ds, 0x1F6C) = 0x0000;             //mov word ptr ds:1F6Ch, 0
    memory16(_ds, 0x1F30) = _ax;                //mov ds:1F30h, ax
    memory16(_ds, 0x1F32) = _ax;                //mov ds:1F32h, ax
    memory16(_ds, 0x1F34) = _ax;                //mov ds:1F34h, ax
    memory(_ds, 0x1F3C) = _dl;                  //mov ds:1F3Ch, dl
    memory(_ds, 0x1F3D) = _dl;                  //mov ds:1F3Dh, dl
    memory(_ds, 0x1F3E) = _dl;                  //mov ds:1F3Eh, dl
    memory(_ds, 0x1F48) = 0x01;                 //mov byte ptr ds:1F48h, 1
    memory(_ds, 0x1F49) = 0x01;                 //mov byte ptr ds:1F49h, 1
    memory(_ds, 0x1F4A) = 0x01;                 //mov byte ptr ds:1F4Ah, 1
    memory(_ds, 0x1F50) = 0x00;                 //mov byte ptr ds:1F50h, 0
    memory(_ds, 0x1F51) = 0x00;                 //mov byte ptr ds:1F51h, 0
    memory(_ds, 0x1F52) = 0x00;                 //mov byte ptr ds:1F52h, 0
    memory16(_ds, 0x1F65) = _dx;                //mov ds:1F65h, dx
    memory16(_ds, 0x1F6C) = _bx;                //mov ds:1F6Ch, bx
    memory16(_ds, _bx + 7984) = _ax;            //mov [bx+1F30h], ax
    memory(_ds, _bx + 8016) = 0x00;             //mov byte ptr [bx+1F50h], 0
    memory(_ds, _bx + 7996) = _dl;              //mov [bx+1F3Ch], dl
    memory(_ds, _bx + 7999) = _dl;              //mov [bx+1F3Fh], dl
    memory16(_ds, 0x1F69) = 0x000c;             //mov word ptr ds:1F69h, 0Ch
    memory16(_ds, 0x1F69) = _ax;                //mov ds:1F69h, ax
    memory16(_ds, 0x1F69) = 0x000c;             //mov word ptr ds:1F69h, 0Ch
    memory(_ds, _bx + 7996) = _al;              //mov [bx+1F3Ch], al
    memory16(_ds, _bx + 7984) = _ax;            //mov [bx+1F30h], ax
    memory(_ds, _bx + 7996) = _dl;              //mov [bx+1F3Ch], dl
    memory16(_ds, 0x1F4B) = _ax;                //mov ds:1F4Bh, ax
    memory(_ds, _bx + 8008) = 0x00;             //mov byte ptr [bx+1F48h], 0
    memory16(_ds, _bx + 8002) = _di;            //mov [bx+1F42h], di
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x55B) = 0x11;                  //mov byte ptr ds:55Bh, 11h
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x56E) = 0x00;                  //mov byte ptr ds:56Eh, 0
    memory16(_ds, 0x1F67) = _di;                //mov ds:1F67h, di
    memory16(_ds, 0x1F65) = _dx;                //mov ds:1F65h, dx
    memory(_ds, _bx + 8016) = 0x01;             //mov byte ptr [bx+1F50h], 1
    memory(_ds, _bx + 7996) = 0x01;             //mov byte ptr [bx+1F3Ch], 1
    memory16(_ds, _bx + 8019) = _dx;            //mov [bx+1F53h], dx
    memory(_ds, 0x1F81) = _al;                  //mov ds:1F81h, al
    memory(_ds, _bx + 8065) = _al;              //mov [bx+1F81h], al
    memory(_ds, _bx + _di) = _al;               //mov [bx+di], al
    memory16(_ds, 0x1F90) = _di;                //mov ds:1F90h, di
    memory16(_ds, 0x1F93) = _bx;                //mov ds:1F93h, bx
    memory(_ds, 0x1F92) = 0x00;                 //mov byte ptr ds:1F92h, 0
    memory16(_ds, 0x2654) = 0x0000;             //mov word ptr ds:2654h, 0
    memory(_ds, 0x2653) = _dl;                  //mov ds:2653h, dl
    memory(_ds, _bx + 9814) = _dl;              //mov [bx+2656h], dl
    memory16(_ds, 0x2650) = 0x0048;             //mov word ptr ds:2650h, 48h
    memory(_ds, 0x2652) = 0x38;                 //mov byte ptr ds:2652h, 38h
    memory16(_ds, 0x2650) = 0x00f8;             //mov word ptr ds:2650h, 0F8h
    memory(_ds, 0x2652) = 0x60;                 //mov byte ptr ds:2652h, 60h
    memory16(_ds, 0x2650) = 0x0108;             //mov word ptr ds:2650h, 108h
    memory(_ds, 0x2652) = 0x60;                 //mov byte ptr ds:2652h, 60h
    memory16(_ds, 0x2650) = 0x0060;             //mov word ptr ds:2650h, 60h
    memory(_ds, 0x2652) = 0x60;                 //mov byte ptr ds:2652h, 60h
    memory16(_ds, 0x2650) = 0x00a0;             //mov word ptr ds:2650h, 0A0h
    memory(_ds, 0x2652) = 0x60;                 //mov byte ptr ds:2652h, 60h
    memory16(_ds, 0x2634) = _ax;                //mov ds:2634h, ax
    memory16(_ds, 0x2634) = _ax;                //mov ds:2634h, ax
    memory16(_ds, 0x2634) = _ax;                //mov ds:2634h, ax
    memory16(_ds, 0x2634) = _ax;                //mov ds:2634h, ax
    memory16(_ds, 0x267E) = _ax;                //mov ds:267Eh, ax
    memory16(_ds, 0x8) = 0x0001;                //mov word ptr ds:8, 1
    memory16(_ds, 0x8) = _ax;                   //mov ds:8, ax
    memory(_ds, _bx + 4117) = 0x00;             //mov byte ptr [bx+1015h], 0
    memory16(_ds, 0x2ACA) = 0x0000;             //mov word ptr ds:2ACAh, 0
    memory16(_ds, 0x2ACA) = 0x0005;             //mov word ptr ds:2ACAh, 5
    memory16(_ds, 0x2ACA) = 0x000a;             //mov word ptr ds:2ACAh, 0Ah
    memory(_ds, 0x525) = 0x10;                  //mov byte ptr ds:525h, 10h
    memory16(_ds, 0x52F) = 0x0000;              //mov word ptr ds:52Fh, 0
    memory(_ds, 0x531) = 0x01;                  //mov byte ptr ds:531h, 1
    memory(_ds, 0x2AC9) = _bh;                  //mov ds:2AC9h, bh
    memory(_ds, 0x2AC4) = 0x00;                 //mov byte ptr ds:2AC4h, 0
    memory16(_ds, 0x2AC7) = _cx;                //mov ds:2AC7h, cx
    memory16(_ds, 0x2ACC) = _ax;                //mov ds:2ACCh, ax
    memory(_ds, 0x2AD0) = _ch;                  //mov ds:2AD0h, ch
    memory16(_ds, 0x2ACE) = _cx;                //mov ds:2ACEh, cx
    memory(_ds, 0x2AC4) = 0x04;                 //mov byte ptr ds:2AC4h, 4
    memory16(_ds, 0x2AC2) = 0x103e;             //mov word ptr ds:2AC2h, 103Eh
    memory(_ds, 0x2AC4) = _dl;                  //mov ds:2AC4h, dl
    memory16(_ds, 0x2AC2) = 0x2944;             //mov word ptr ds:2AC2h, 2944h
    memory(_ds, 0x2AC4) = 0x09;                 //mov byte ptr ds:2AC4h, 9
    memory(_ds, 0x2AC4) = 0x05;                 //mov byte ptr ds:2AC4h, 5
    memory16(_ds, 0x2AC2) = _di;                //mov ds:2AC2h, di
    memory(_ds, 0x2AC4) = _al;                  //mov ds:2AC4h, al
    memory16(_ds, 0x2AC5) = _bx;                //mov ds:2AC5h, bx
    memory(_ds, 0x2AE0) = _cl;                  //mov ds:2AE0h, cl
    memory(_ds, 0x2AE2) = _ch;                  //mov ds:2AE2h, ch
    memory16(_ds, _bp + 0) = _bx;               //mov ds:[bp+0], bx
    memory16(_ds, 0x2AE3) = _ax;                //mov ds:2AE3h, ax
    memory(_ds, 0x2AE0) = _cl;                  //mov ds:2AE0h, cl
    memory(_ds, 0x2AE2) = _ch;                  //mov ds:2AE2h, ch
    memory16(_ds, _bp + 0) = _bx;               //mov ds:[bp+0], bx
    memory16(_ds, 0x2AE9) = _si;                //mov ds:2AE9h, si
    memory(_ds, 0x2AE0) = _cl;                  //mov ds:2AE0h, cl
    memory(_ds, 0x2AE2) = _ch;                  //mov ds:2AE2h, ch
    memory(_ds, 0x2AEB) = _al;                  //mov ds:2AEBh, al
    memory(_ds, 0x2AE0) = _cl;                  //mov ds:2AE0h, cl
    memory(_ds, 0x2AE2) = _ch;                  //mov ds:2AE2h, ch
    memory(_es, 0x2AE0) = _cl;                  //mov es:2AE0h, cl
    memory(_es, 0x2AE2) = _ch;                  //mov es:2AE2h, ch
    memory16(_ds, 0x2AE5) = _ax;                //mov ds:2AE5h, ax
    memory16(_ds, 0x2E92) = 0xffff;             //mov word ptr ds:2E92h, 0FFFFh
    memory(_ds, 0x2E91) = 0xff;                 //mov byte ptr ds:2E91h, 0FFh
    memory(_ds, 0x2E91) = _al;                  //mov ds:2E91h, al
    memory16(_ds, 0x2E92) = _bx;                //mov ds:2E92h, bx
    memory16(_ds, 0x2E92) = 0x0000;             //mov word ptr ds:2E92h, 0
    memory(_ds, _bx + 11114) = _al;             //mov [bx+2B6Ah], al
    memory(_ds, 0x2E98) = _al;                  //mov ds:2E98h, al
    memory16(_ds, _bx + 11098) = _ax;           //mov [bx+2B5Ah], ax
    memory16(_ds, 0x2E96) = _ax;                //mov ds:2E96h, ax
    memory16(_ds, 0x2E94) = _bx;                //mov ds:2E94h, bx
    memory(_ds, _bx + 11122) = 0x01;            //mov byte ptr [bx+2B72h], 1
    memory16(_ds, 0x2E8D) = 0xffff;             //mov word ptr ds:2E8Dh, 0FFFFh
    memory16(_ds, 0x2E8F) = _dx;                //mov ds:2E8Fh, dx
    memory16(_ds, 0x2E94) = 0xffff;             //mov word ptr ds:2E94h, 0FFFFh
    memory(_ds, _bx + 11122) = 0x00;            //mov byte ptr [bx+2B72h], 0
    memory16(_ds, 0x2E8D) = _bx;                //mov ds:2E8Dh, bx
    memory(_ds, 0x2E8A) = 0xbf;                 //mov byte ptr ds:2E8Ah, 0BFh
    memory16(_ds, 0x2E8B) = 0x0000;             //mov word ptr ds:2E8Bh, 0
    memory16(_ds, 0x2E88) = 0x0020;             //mov word ptr ds:2E88h, 20h
    memory(_ds, _si + 11234) = _bl;             //mov [si+2BE2h], bl
    memory16(_ds, 0x2E8D) = _ax;                //mov ds:2E8Dh, ax
    memory16(_ds, 0x2E94) = _ax;                //mov ds:2E94h, ax
    memory16(_ds, 0x2B72) = _ax;                //mov ds:2B72h, ax
    memory16(_ds, 0x2B74) = _ax;                //mov ds:2B74h, ax
    memory16(_ds, 0x2B76) = _ax;                //mov ds:2B76h, ax
    memory16(_ds, 0x2B78) = _ax;                //mov ds:2B78h, ax
    memory16(_ds, 0x414) = _cx;                 //mov ds:414h, cx
    memory(_ds, _bx + 11122) = 0x01;            //mov byte ptr [bx+2B72h], 1
    memory(_ds, _bx + 11114) = _dl;             //mov [bx+2B6Ah], dl
    memory16(_ds, _bx + 11098) = _cx;           //mov [bx+2B5Ah], cx
    memory(_ds, 0x57B) = _ch;                   //mov ds:57Bh, ch
    memory(_ds, 0x57C) = _ch;                   //mov ds:57Ch, ch
    memory16(_ds, 0x328C) = _dx;                //mov ds:328Ch, dx
    memory(_ds, 0x32EB) = memory(_ds, 0x32EB) ^ _al;//xor ds:32EBh, al
    memory(_ds, 0x32ED) = _dl;                  //mov ds:32EDh, dl
    memory(_ds, 0x32EE) = _dl;                  //mov ds:32EEh, dl
    memory(_ds, 0x32EC) = _al;                  //mov ds:32ECh, al
    memory16(_ds, 0x328A) = _bx;                //mov ds:328Ah, bx
    memory(_ds, 0x3281) = 0x01;                 //mov byte ptr ds:3281h, 1
    memory(_ds, 0x3280) = _dl;                  //mov ds:3280h, dl
    memory(_ds, 0x3280) = _dl;                  //mov ds:3280h, dl
    memory(_ds, 0x3281) = _dl;                  //mov ds:3281h, dl
    memory(_ds, 0x3280) = _al;                  //mov ds:3280h, al
    memory(_ds, 0x3281) = _al;                  //mov ds:3281h, al
    memory(_ds, 0x3281) = 0x01;                 //mov byte ptr ds:3281h, 1
    memory(_ds, 0x3280) = _dl;                  //mov ds:3280h, dl
    memory(_ds, 0x3280) = 0x00;                 //mov byte ptr ds:3280h, 0
    memory(_ds, 0x3281) = 0x00;                 //mov byte ptr ds:3281h, 0
    memory(_ds, 0x3286) = 0x01;                 //mov byte ptr ds:3286h, 1
    memory16(_ds, 0x32EF) = _cx;                //mov ds:32EFh, cx
    memory(_ds, 0x32F1) = _dl;                  //mov ds:32F1h, dl
    memory16(_ds, 0x327D) = _cx;                //mov ds:327Dh, cx
    memory(_ds, 0x327F) = _dl;                  //mov ds:327Fh, dl
    memory16(_ds, 0x3284) = _ax;                //mov ds:3284h, ax
    memory(_ds, 0x3280) = 0x00;                 //mov byte ptr ds:3280h, 0
    memory(_ds, 0x3281) = 0x00;                 //mov byte ptr ds:3281h, 0
    memory16(_ds, 0x327D) = _cx;                //mov ds:327Dh, cx
    memory(_ds, 0x327F) = _dl;                  //mov ds:327Fh, dl
    memory16(_ds, 0x327A) = _ax;                //mov ds:327Ah, ax
    memory16(_ds, 0x3282) = _di;                //mov ds:3282h, di
    memory(_ds, 0x3286) = 0x00;                 //mov byte ptr ds:3286h, 0
    memory(_ds, 0x3289) = _ch;                  //mov ds:3289h, ch
    memory16(_ds, 0x3287) = _cx;                //mov ds:3287h, cx
    memory16(_ds, _bp + 0) = _bx;               //mov ds:[bp+0], bx
    memory16(_ds, 0x32B6) = 0x00ff;             //mov word ptr ds:32B6h, 0FFh
    memory16(_ds, 0x327A) = 0x0000;             //mov word ptr ds:327Ah, 0
    memory16(_ds, 0x327D) = 0x0000;             //mov word ptr ds:327Dh, 0
    memory(_ds, 0x327F) = 0xa0;                 //mov byte ptr ds:327Fh, 0A0h
    memory(_ds, 0x3286) = 0x01;                 //mov byte ptr ds:3286h, 1
    memory(_ds, 0x3280) = 0x00;                 //mov byte ptr ds:3280h, 0
    memory(_ds, 0x3281) = 0x00;                 //mov byte ptr ds:3281h, 0
    memory(_ds, 0x32EB) = _dl;                  //mov ds:32EBh, dl
    memory(_ds, 0x32EA) = 0x6c;                 //mov byte ptr ds:32EAh, 6Ch
    memory16(_ds, 0x32B6) = _ax;                //mov ds:32B6h, ax
    memory(_ds, _bx + 12942) = _al;             //mov [bx+328Eh], al
    memory16(_ds, 0x3511) = 0x0000;             //mov word ptr ds:3511h, 0
    memory(_ds, 0x351B) = 0x00;                 //mov byte ptr ds:351Bh, 0
    memory(_ds, 0x552) = 0x01;                  //mov byte ptr ds:552h, 1
    memory16(_ds, 0x3509) = _dx;                //mov ds:3509h, dx
    memory(_ds, _bx + 13479) = 0x01;            //mov byte ptr [bx+34A7h], 1
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory16(_ds, 0x3411) = 0x0000;             //mov word ptr ds:3411h, 0
    memory16(_ds, 0x3415) = 0x0000;             //mov word ptr ds:3415h, 0
    memory(_ds, 0x3410) = 0x0c;                 //mov byte ptr ds:3410h, 0Ch
    memory(_ds, _bx + 13455) = 0x01;            //mov byte ptr [bx+348Fh], 1
    memory(_ds, _bx + 13479) = 0x00;            //mov byte ptr [bx+34A7h], 0
    memory(_ds, _bx + 13431) = _al;             //mov [bx+3477h], al
    memory(_ds, _bx + 13359) = 0x01;            //mov byte ptr [bx+342Fh], 1
    memory(_ds, _bx + 13335) = _dl;             //mov [bx+3417h], dl
    memory16(_ds, _bx + 13383) = _dx;           //mov [bx+3447h], dx
    memory(_ds, _bx + 13479) = 0x01;            //mov byte ptr [bx+34A7h], 1
    memory(_ds, _bx + 13479) = _al;             //mov [bx+34A7h], al
    memory(_ds, _bx + 13335) = _dl;             //mov [bx+3417h], dl
    memory16(_ds, _bx + 13383) = _ax;           //mov [bx+3447h], ax
    memory16(_ds, 0x350B) = _dx;                //mov ds:350Bh, dx
    memory16(_ds, 0x3415) = _bx;                //mov ds:3415h, bx
    memory16(_ds, 0x3411) = memory16(_ds, 0x3411) ^ 0x000c;
    memory16(_ds, 0x3509) = _ax;                //mov ds:3509h, ax
    memory(_ds, _bx + 13335) = _dl;             //mov [bx+3417h], dl
    memory(_ds, _bx + 13359) = _dl;             //mov [bx+342Fh], dl
    memory(_ds, _bx + 13335) = 0x01;            //mov byte ptr [bx+3417h], 1
    memory(_ds, _bx + 13335) = 0xff;            //mov byte ptr [bx+3417h], 0FFh
    memory16(_ds, _si + 13383) = _ax;           //mov [si+3447h], ax
    memory(_ds, _bx + 13359) = 0x01;            //mov byte ptr [bx+342Fh], 1
    memory(_ds, _bx + 13359) = 0xff;            //mov byte ptr [bx+342Fh], 0FFh
    memory(_ds, _bx + 13431) = _al;             //mov [bx+3477h], al
    memory16(_ds, 0x34EF) = _ax;                //mov ds:34EFh, ax
    memory16(_ds, _si + 13503) = _di;           //mov [si+34BFh], di
    memory(_ds, _bx + 13455) = 0x00;            //mov byte ptr [bx+348Fh], 0
    memory16(_ds, 0x350D) = _bx;                //mov ds:350Dh, bx
    memory16(_ds, 0x350F) = _dx;                //mov ds:350Fh, dx
    memory(_ds, _bx + 9814) = _al;              //mov [bx+2656h], al
    memory16(_ds, 0x35DA) = _dx;                //mov ds:35DAh, dx
    memory(_ds, 0x554) = 0x01;                  //mov byte ptr ds:554h, 1
    memory(_ds, 0x418) = 0x01;                  //mov byte ptr ds:418h, 1
    memory(_ds, 0x369F) = 0x00;                 //mov byte ptr ds:369Fh, 0
    memory16(_ds, 0x3697) = _ax;                //mov ds:3697h, ax
    memory16(_ds, 0x370C) = _ax;                //mov ds:370Ch, ax
    memory(_ds, 0x369E) = 0x38;                 //mov byte ptr ds:369Eh, 38h
    memory(_ds, 0x3699) = 0x01;                 //mov byte ptr ds:3699h, 1
    memory16(_ds, 0x3722) = 0x0044;             //mov word ptr ds:3722h, 44h
    memory(_ds, 0x3699) = 0x02;                 //mov byte ptr ds:3699h, 2
    memory16(_ds, 0x3722) = 0x001e;             //mov word ptr ds:3722h, 1Eh
    memory(_ds, 0x369E) = _al;                  //mov ds:369Eh, al
    memory(_ds, 0x369F) = 0x01;                 //mov byte ptr ds:369Fh, 1
    memory16(_ds, 0x3695) = _dx;                //mov ds:3695h, dx
    memory16(_ds, 0x36A0) = 0x0003;             //mov word ptr ds:36A0h, 3
    memory16(_ds, 0x3720) = _ax;                //mov ds:3720h, ax
    memory16(_ds, 0x369A) = _ax;                //mov ds:369Ah, ax
    memory16(_ds, 0x369C) = _ax;                //mov ds:369Ch, ax
    memory16(_ds, 0x3695) = _dx;                //mov ds:3695h, dx
    memory16(_ds, 0x368B) = _ax;                //mov ds:368Bh, ax
    memory16(_ds, 0x368D) = _ax;                //mov ds:368Dh, ax
    memory16(_ds, 0x368F) = _ax;                //mov ds:368Fh, ax
    memory16(_ds, 0x3691) = _ax;                //mov ds:3691h, ax
    memory16(_ds, 0x3693) = _ax;                //mov ds:3693h, ax
    memory(_ds, 0x37AF) = 0x03;                 //mov byte ptr ds:37AFh, 3
    memory16(_ds, 0x37B0) = _ax;                //mov ds:37B0h, ax
    memory16(_ds, 0x37B2) = _ax;                //mov ds:37B2h, ax
    memory16(_ds, 0x37B4) = _ax;                //mov ds:37B4h, ax
    memory16(_ds, 0x37B8) = _dx;                //mov ds:37B8h, dx
    memory16(_ds, 0x37B6) = 0x0004;             //mov word ptr ds:37B6h, 4
    memory16(_ds, _bx + 14256) = 0x0000;        //mov word ptr [bx+37B0h], 0
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory16(_ds, 0x37A0) = 0x066a;             //mov word ptr ds:37A0h, 66Ah
    memory(_ds, 0x37A2) = _al;                  //mov ds:37A2h, al
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory(_ds, 0x57B) = _dl;                   //mov ds:57Bh, dl
    memory(_ds, 0x57C) = _dl;                   //mov ds:57Ch, dl
    memory(_ds, 0x3966) = 0x08;                 //mov byte ptr ds:3966h, 8
    memory(_ds, 0x396A) = 0x01;                 //mov byte ptr ds:396Ah, 1
    memory(_ds, 0x3967) = 0x00;                 //mov byte ptr ds:3967h, 0
    memory(_ds, 0x396D) = 0x02;                 //mov byte ptr ds:396Dh, 2
    memory16(_ds, 0x3964) = 0x0118;             //mov word ptr ds:3964h, 118h
    memory16(_ds, 0x396B) = 0x0000;             //mov word ptr ds:396Bh, 0
    memory16(_ds, 0x39C8) = _dx;                //mov ds:39C8h, dx
    memory16(_ds, 0x39C6) = _ax;                //mov ds:39C6h, ax
    memory16(_ds, 0x39C3) = _ax;                //mov ds:39C3h, ax
    memory(_ds, 0x39C5) = _dl;                  //mov ds:39C5h, dl
    memory(_ds, 0x3967) = 0x01;                 //mov byte ptr ds:3967h, 1
    memory(_ds, 0x396E) = 0x01;                 //mov byte ptr ds:396Eh, 1
    memory16(_ds, 0x3964) = _ax;                //mov ds:3964h, ax
    memory(_ds, 0x3967) = 0x00;                 //mov byte ptr ds:3967h, 0
    memory(_ds, 0x3967) = 0xff;                 //mov byte ptr ds:3967h, 0FFh
    memory(_ds, 0x3966) = _al;                  //mov ds:3966h, al
    memory16(_ds, 0x3964) = _ax;                //mov ds:3964h, ax
    memory(_ds, 0x3966) = _al;                  //mov ds:3966h, al
    memory16(_ds, 0x39C8) = _dx;                //mov ds:39C8h, dx
    memory(_ds, 0x552) = 0x01;                  //mov byte ptr ds:552h, 1
    memory16(_ds, 0x39CA) = _ax;                //mov ds:39CAh, ax
    memory(_ds, 0x396D) = 0x02;                 //mov byte ptr ds:396Dh, 2
    memory16(_ds, 0x396B) = memory16(_ds, 0x396B) ^ 0x0054;
    memory16(_ds, 0x3968) = _di;                //mov ds:3968h, di
    memory(_ds, 0x396A) = 0x00;                 //mov byte ptr ds:396Ah, 0
    memory16(_ds, 0x3D18) = _dx;                //mov ds:3D18h, dx
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory16(_ds, 0x39E2) = _ax;                //mov ds:39E2h, ax
    memory16(_ds, 0x39E4) = _ax;                //mov ds:39E4h, ax
    memory16(_ds, 0x39E6) = _ax;                //mov ds:39E6h, ax
    memory16(_ds, 0x39E8) = _ax;                //mov ds:39E8h, ax
    memory(_ds, 0x3D05) = _al;                  //mov ds:3D05h, al
    memory16(_ds, 0x3D03) = _ax;                //mov ds:3D03h, ax
    memory(_ds, 0x39E1) = 0x0e;                 //mov byte ptr ds:39E1h, 0Eh
    memory(_ds, 0x69A) = 0x10;                  //mov byte ptr ds:69Ah, 10h
    memory(_ds, 0x57B) = _al;                   //mov ds:57Bh, al
    memory(_ds, 0x57C) = _al;                   //mov ds:57Ch, al
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x3D16) = _dx;                //mov ds:3D16h, dx
    memory(_ds, 0x39E0) = 0x00;                 //mov byte ptr ds:39E0h, 0
    memory(_ds, 0x39E1) = 0x00;                 //mov byte ptr ds:39E1h, 0
    memory16(_ds, 0x3CBF) = 0x0506;             //mov word ptr ds:3CBFh, 506h
    memory16(_ds, 0x3CC1) = 0x0000;             //mov word ptr ds:3CC1h, 0
    memory(_ds, _si + 15587) = _al;             //mov [si+3CE3h], al
    memory(_ds, _si + 15603) = 0x00;            //mov byte ptr [si+3CF3h], 0
    memory(_ds, _si + 15588) = _ah;             //mov [si+3CE4h], ah
    memory(_ds, _si + 15604) = 0x00;            //mov byte ptr [si+3CF4h], 0
    memory(_ds, _bx + 16046) = 0x01;            //mov byte ptr [bx+3EAEh], 1
    memory(_ds, _bx + 16050) = 0x00;            //mov byte ptr [bx+3EB2h], 0
    memory(_ds, _bx + 16054) = _dl;             //mov [bx+3EB6h], dl
    memory16(_ds, 0x3EDA) = 0x0000;             //mov word ptr ds:3EDAh, 0
    memory(_ds, 0x3ED8) = 0x04;                 //mov byte ptr ds:3ED8h, 4
    memory16(_ds, 0x3EDA) = _bx;                //mov ds:3EDAh, bx
    memory16(_ds, 0x3EDC) = _dx;                //mov ds:3EDCh, dx
    memory(_ds, _bx + 16054) = _dl;             //mov [bx+3EB6h], dl
    memory(_ds, _bx + 16050) = 0x01;            //mov byte ptr [bx+3EB2h], 1
    memory(_ds, 0x55C) = 0x00;                  //mov byte ptr ds:55Ch, 0
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory(_ds, _bx + 16054) = _al;             //mov [bx+3EB6h], al
    memory16(_ds, 0x3ECA) = _ax;                //mov ds:3ECAh, ax
    memory16(_ds, 0x3DE4) = _ax;                //mov ds:3DE4h, ax
    memory(_ds, _bx + 16046) = 0x01;            //mov byte ptr [bx+3EAEh], 1
    memory(_ds, _bx + 16046) = 0x00;            //mov byte ptr [bx+3EAEh], 0
    memory16(_ds, _si + 16038) = _di;           //mov [si+3EA6h], di
    memory(_ds, 0x3ED9) = 0x20;                 //mov byte ptr ds:3ED9h, 20h
    memory16(_ds, _si + 16058) = _dx;           //mov [si+3EBAh], dx
    memory(_ds, _bx + 16084) = _al;             //mov [bx+3ED4h], al
    memory16(_ds, _si + 16076) = _ax;           //mov [si+3ECCh], ax
    memory16(_ds, 0x40B5) = _dx;                //mov ds:40B5h, dx
    memory16(_ds, 0x40C8) = 0x00ff;             //mov word ptr ds:40C8h, 0FFh
    memory(_ds, 0x40B7) = _al;                  //mov ds:40B7h, al
    memory(_ds, 0x40B8) = _al;                  //mov ds:40B8h, al
    memory16(_ds, 0x40C8) = 0x00ff;             //mov word ptr ds:40C8h, 0FFh
    memory(_ds, 0x40B7) = _dl;                  //mov ds:40B7h, dl
    memory(_ds, 0x40B8) = _dl;                  //mov ds:40B8h, dl
    memory16(_ds, 0x40C8) = 0x00ff;             //mov word ptr ds:40C8h, 0FFh
    memory(_ds, 0x40B7) = _dl;                  //mov ds:40B7h, dl
    memory(_ds, 0x40B8) = _dl;                  //mov ds:40B8h, dl
    memory16(_ds, 0x40C8) = _dx;                //mov ds:40C8h, dx
    memory(_ds, 0x40B8) = 0xff;                 //mov byte ptr ds:40B8h, 0FFh
    memory(_ds, 0x40B8) = 0x01;                 //mov byte ptr ds:40B8h, 1
    memory(_ds, 0x40B4) = _al;                  //mov ds:40B4h, al
    memory(_ds, 0x40B7) = 0xff;                 //mov byte ptr ds:40B7h, 0FFh
    memory(_ds, 0x40B7) = 0x01;                 //mov byte ptr ds:40B7h, 1
    memory16(_ds, 0x40B2) = _ax;                //mov ds:40B2h, ax
    memory16(_ds, 0x40BC) = _ax;                //mov ds:40BCh, ax
    memory(_ds, 0x40B9) = 0x00;                 //mov byte ptr ds:40B9h, 0
    memory16(_ds, 0x40BA) = _di;                //mov ds:40BAh, di
    memory(_ds, 0x40CA) = _dl;                  //mov ds:40CAh, dl
    memory16(_ds, 0x40CC) = _ax;                //mov ds:40CCh, ax
    memory(_ds, 0x40CB) = _dl;                  //mov ds:40CBh, dl
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory(_ds, 0x40B8) = 0xff;                 //mov byte ptr ds:40B8h, 0FFh
    memory16(_ds, 0x40A8) = _cx;                //mov ds:40A8h, cx
    memory(_ds, 0x40AA) = _dl;                  //mov ds:40AAh, dl
    memory16(_ds, 0x40AB) = _ax;                //mov ds:40ABh, ax
    memory(_ds, 0x40AF) = 0x00;                 //mov byte ptr ds:40AFh, 0
    memory(_ds, 0x40B1) = 0x00;                 //mov byte ptr ds:40B1h, 0
    memory(_ds, 0x40B9) = 0x01;                 //mov byte ptr ds:40B9h, 1
    memory(_ds, 0x40B8) = 0x00;                 //mov byte ptr ds:40B8h, 0
    memory16(_ds, 0x40C8) = 0x00ff;             //mov word ptr ds:40C8h, 0FFh
    memory16(_ds, 0x40AD) = _dx;                //mov ds:40ADh, dx
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x55B) = 0x10;                  //mov byte ptr ds:55Bh, 10h
    memory(_ds, 0x40B0) = _al;                  //mov ds:40B0h, al
    memory(_ds, 0x40AF) = 0x01;                 //mov byte ptr ds:40AFh, 1
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory(_ds, 0x56E) = _dl;                   //mov ds:56Eh, dl
    memory(_ds, 0x57B) = _al;                   //mov ds:57Bh, al
    memory(_ds, 0x57C) = _al;                   //mov ds:57Ch, al
    memory16(_ds, 0x40A8) = _ax;                //mov ds:40A8h, ax
    memory(_ds, 0x40AF) = 0x00;                 //mov byte ptr ds:40AFh, 0
    memory16(_ds, 0x40AB) = _ax;                //mov ds:40ABh, ax
    memory(_ds, 0x40B1) = 0x01;                 //mov byte ptr ds:40B1h, 1
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x55B) = 0x10;                  //mov byte ptr ds:55Bh, 10h
    memory16(_ds, 0x40AD) = _dx;                //mov ds:40ADh, dx
    memory(_ds, 0x40AA) = _dl;                  //mov ds:40AAh, dl
    memory16(_ds, 0x40AB) = _ax;                //mov ds:40ABh, ax
    memory16(_ds, 0x40B2) = _ax;                //mov ds:40B2h, ax
    memory(_ds, 0x40B4) = _al;                  //mov ds:40B4h, al
    memory(_ds, 0x40B7) = _al;                  //mov ds:40B7h, al
    memory16(_ds, 0x40A6) = _di;                //mov ds:40A6h, di
    memory16(_ds, 0x44D7) = _dx;                //mov ds:44D7h, dx
    memory(_ds, 0x44FC) = 0x00;                 //mov byte ptr ds:44FCh, 0
    memory16(_ds, 0x44DA) = _ax;                //mov ds:44DAh, ax
    memory(_ds, 0x44BD) = 0x00;                 //mov byte ptr ds:44BDh, 0
    memory(_ds, 0x44D9) = 0x00;                 //mov byte ptr ds:44D9h, 0
    memory(_ds, 0x44D9) = 0x01;                 //mov byte ptr ds:44D9h, 1
    memory(_ds, 0x698) = _al;                   //mov ds:698h, al
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr ds:699h, 0
    memory16(_ds, 0x44D3) = _dx;                //mov ds:44D3h, dx
    memory(_ds, 0x44BD) = 0x00;                 //mov byte ptr ds:44BDh, 0
    memory(_ds, 0x43E0) = 0x01;                 //mov byte ptr ds:43E0h, 1
    memory(_ds, 0x44BE) = 0x00;                 //mov byte ptr ds:44BEh, 0
    memory16(_ds, 0x44C1) = _ax;                //mov ds:44C1h, ax
    memory16(_ds, 0x44BF) = _ax;                //mov ds:44BFh, ax
    memory16(_ds, 0x44BF) = _ax;                //mov ds:44BFh, ax
    memory16(_ds, 0x44D1) = _ax;                //mov ds:44D1h, ax
    memory16(_ds, 0x44C1) = _bx;                //mov ds:44C1h, bx
    memory(_ds, 0x44C3) = _dh;                  //mov ds:44C3h, dh
    memory(_ds, 0x69A) = 0x10;                  //mov byte ptr ds:69Ah, 10h
    memory(_ds, 0x44BD) = 0x00;                 //mov byte ptr ds:44BDh, 0
    memory(_ds, 0x43E0) = 0x01;                 //mov byte ptr ds:43E0h, 1
    memory(_ds, 0x44D0) = 0x00;                 //mov byte ptr ds:44D0h, 0
    memory(_ds, 0x44BE) = 0x00;                 //mov byte ptr ds:44BEh, 0
    memory(_ds, 0x572) = 0x04;                  //mov byte ptr ds:572h, 4
    memory(_ds, 0x698) = _al;                   //mov ds:698h, al
    memory(_ds, 0x56E) = _al;                   //mov ds:56Eh, al
    memory(_ds, 0x44BE) = _al;                  //mov ds:44BEh, al
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr ds:699h, 0
    memory(_ds, 0x571) = 0x00;                  //mov byte ptr ds:571h, 0
    memory(_ds, 0x44BE) = 0x00;                 //mov byte ptr ds:44BEh, 0
    memory(_ds, 0x44BD) = 0x01;                 //mov byte ptr ds:44BDh, 1
    memory(_ds, 0x44D5) = _al;                  //mov ds:44D5h, al
    memory16(_ds, 0x43DC) = _ax;                //mov ds:43DCh, ax
    memory(_ds, 0x698) = 0x00;                  //mov byte ptr ds:698h, 0
    memory(_ds, 0x44BE) = 0x00;                 //mov byte ptr ds:44BEh, 0
    memory(_ds, 0x69A) = 0x10;                  //mov byte ptr ds:69Ah, 10h
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory(_ds, 0x43E0) = 0x00;                 //mov byte ptr ds:43E0h, 0
    memory16(_ds, 0x43DE) = _di;                //mov ds:43DEh, di
    memory16(_ds, _bx + 17497) = 0x0000;        //mov word ptr [bx+4459h], 0
    memory16(_ds, _bx + 17473) = 0x0001;        //mov word ptr [bx+4441h], 1
    memory(_ds, _bx + 17604) = _dl;             //mov [bx+44C4h], dl
    memory(_ds, 0x44D0) = 0x00;                 //mov byte ptr ds:44D0h, 0
    memory(_ds, 0x44BD) = 0x00;                 //mov byte ptr ds:44BDh, 0
    memory(_ds, 0x43E0) = 0x01;                 //mov byte ptr ds:43E0h, 1
    memory(_ds, 0x44D6) = 0x0c;                 //mov byte ptr ds:44D6h, 0Ch
    memory(_ds, 0x44BE) = 0x00;                 //mov byte ptr ds:44BEh, 0
    memory16(_ds, 0x45B6) = _bx;                //mov ds:45B6h, bx
    memory16(_ds, 0x45B8) = _dx;                //mov ds:45B8h, dx
    memory16(_ds, 0x454F) = 0x0000;             //mov word ptr ds:454Fh, 0
    memory(_ds, 0x454E) = 0x01;                 //mov byte ptr ds:454Eh, 1
    memory16(_ds, 0x4548) = _ax;                //mov ds:4548h, ax
    memory(_ds, 0x454A) = 0x00;                 //mov byte ptr ds:454Ah, 0
    memory(_ds, 0x454A) = _dl;                  //mov ds:454Ah, dl
    memory(_ds, 0x454A) = _dl;                  //mov ds:454Ah, dl
    memory(_ds, 0x454A) = _al;                  //mov ds:454Ah, al
    memory16(_ds, 0x45BC) = 0x0008;             //mov word ptr ds:45BCh, 8
    memory16(_ds, 0x45BC) = 0x0004;             //mov word ptr ds:45BCh, 4
    memory(_ds, 0x454A) = _dl;                  //mov ds:454Ah, dl
    memory(_ds, 0x454A) = 0xff;                 //mov byte ptr ds:454Ah, 0FFh
    memory(_ds, 0x4553) = 0x00;                 //mov byte ptr ds:4553h, 0
    memory(_ds, 0x454A) = 0x01;                 //mov byte ptr ds:454Ah, 1
    memory(_ds, 0x4553) = 0x00;                 //mov byte ptr ds:4553h, 0
    memory16(_ds, 0x4548) = _ax;                //mov ds:4548h, ax
    memory16(_ds, 0x4551) = 0x0000;             //mov word ptr ds:4551h, 0
    memory(_ds, 0x454A) = 0x00;                 //mov byte ptr ds:454Ah, 0
    memory16(_ds, 0x45BA) = _ax;                //mov ds:45BAh, ax
    memory(_ds, 0x45BE) = 0x00;                 //mov byte ptr ds:45BEh, 0
    memory(_ds, 0x553) = 0x01;                  //mov byte ptr ds:553h, 1
    memory(_ds, 0x55B) = 0x04;                  //mov byte ptr ds:55Bh, 4
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x576) = 0x04;                  //mov byte ptr ds:576h, 4
    memory(_ds, 0x578) = 0x08;                  //mov byte ptr ds:578h, 8
    memory(_ds, 0x4553) = 0x04;                 //mov byte ptr ds:4553h, 4
    memory(_ds, 0x454A) = _dl;                  //mov ds:454Ah, dl
    memory(_ds, 0x45BE) = 0x01;                 //mov byte ptr ds:45BEh, 1
    memory16(_ds, 0x45B6) = 0x0000;             //mov word ptr ds:45B6h, 0
    memory16(_ds, 0x45B6) = _ax;                //mov ds:45B6h, ax
    memory(_ds, _bx + 11122) = 0x00;            //mov byte ptr [bx+2B72h], 0
    memory16(_ds, 0x454F) = _dx;                //mov ds:454Fh, dx
    memory(_ds, 0x454E) = 0x00;                 //mov byte ptr ds:454Eh, 0
    memory16(_ds, 0x454C) = _di;                //mov ds:454Ch, di
    memory16(_ds, 0x45B6) = 0x0000;             //mov word ptr ds:45B6h, 0
    memory16(_ds, 0x4548) = _dx;                //mov ds:4548h, dx
    memory(_ds, 0x454A) = 0x00;                 //mov byte ptr ds:454Ah, 0
    memory(_ds, 0x454E) = 0x01;                 //mov byte ptr ds:454Eh, 1
    memory16(_ds, 0x4551) = 0x0000;             //mov word ptr ds:4551h, 0
    memory(_ds, 0x4553) = 0x00;                 //mov byte ptr ds:4553h, 0
    memory16(_ds, 0x454F) = _dx;                //mov ds:454Fh, dx
    memory(_ds, 0x454B) = _al;                  //mov ds:454Bh, al
    memory16(_ds, 0x45B6) = 0x0000;             //mov word ptr ds:45B6h, 0
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory(_ds, 0x57B) = 0x14;                  //mov byte ptr ds:57Bh, 14h
    memory16(_ds, 0x4D6A) = _ax;                //mov ds:4D6Ah, ax
    memory16(_ds, 0x4DD6) = 0x000a;             //mov word ptr ds:4DD6h, 0Ah
    memory16(_ds, 0x4A80) = _dx;                //mov ds:4A80h, dx
    memory16(_ds, 0x579) = _ax;                 //mov ds:579h, ax
    memory16(_ds, 0x4DD8) = _di;                //mov ds:4DD8h, di
    memory16(_ds, 0x4DD6) = 0x0002;             //mov word ptr ds:4DD6h, 2
    memory16(_ds, 0x4D6A) = _ax;                //mov ds:4D6Ah, ax
    memory16(_ds, 0x4D6C) = _ax;                //mov ds:4D6Ch, ax
    memory16(_ds, 0x4DCC) = _ax;                //mov ds:4DCCh, ax
    memory16(_ds, 0x4DCE) = _ax;                //mov ds:4DCEh, ax
    memory16(_ds, 0x4DD0) = _ax;                //mov ds:4DD0h, ax
    memory16(_ds, 0x4DD2) = _ax;                //mov ds:4DD2h, ax
    memory16(_ds, 0x4DD4) = _ax;                //mov ds:4DD4h, ax
    memory16(_ds, 0x4DCA) = _ax;                //mov ds:4DCAh, ax
    memory16(_ds, 0x4DC8) = _ax;                //mov ds:4DC8h, ax
    memory(_ds, 0x4D91) = 0x01;                 //mov byte ptr ds:4D91h, 1
    memory16(_ds, _bx + 19786) = _ax;           //mov [bx+4D4Ah], ax
    memory16(_ds, _bx + 19802) = _ax;           //mov [bx+4D5Ah], ax
    memory(_ds, 0x4D6E) = 0x00;                 //mov byte ptr ds:4D6Eh, 0
    memory16(_ds, 0x4A80) = _dx;                //mov ds:4A80h, dx
    memory(_ds, 0x4D91) = 0x00;                 //mov byte ptr ds:4D91h, 0
    memory16(_ds, _bx + 19786) = _ax;           //mov [bx+4D4Ah], ax
    memory16(_ds, _bx + 19802) = _ax;           //mov [bx+4D5Ah], ax
    memory16(_ds, 0x414) = 0x0000;              //mov word ptr ds:414h, 0
    memory16(_ds, 0x412) = _dx;                 //mov ds:412h, dx
    memory16(_ds, 0x52C4) = _dx;                //mov ds:52C4h, dx
    memory16(_ds, 0x52C8) = _ax;                //mov ds:52C8h, ax
    memory16(_ds, 0x5016) = 0x0000;             //mov word ptr ds:5016h, 0
    memory16(_ds, 0x52C0) = _dx;                //mov ds:52C0h, dx
    memory16(_ds, 0x52C2) = _dx;                //mov ds:52C2h, dx
    memory16(_ds, 0x52C4) = _dx;                //mov ds:52C4h, dx
    memory16(_ds, 0x52C6) = 0x0000;             //mov word ptr ds:52C6h, 0
    memory16(_ds, 0x52C8) = 0x0000;             //mov word ptr ds:52C8h, 0
    memory16(_ds, 0x5016) = memory16(_ds, 0x5016) ^ 0x0002;
    memory16(_ds, 0x52C0) = _dx;                //mov ds:52C0h, dx
    memory16(_ds, 0x5010) = _ax;                //mov ds:5010h, ax
    memory16(_ds, 0x5322) = _dx;                //mov ds:5322h, dx
    memory16(_ds, 0x5918) = _ax;                //mov ds:5918h, ax
    memory(_ds, 0x5B0F) = 0x0c;                 //mov byte ptr ds:5B0Fh, 0Ch
    memory16(_ds, 0x5B0C) = 0x0001;             //mov word ptr ds:5B0Ch, 1
    memory16(_ds, 0x5B12) = 0x01ff;             //mov word ptr ds:5B12h, 1FFh
    memory16(_ds, 0x5B0A) = 0x000f;             //mov word ptr ds:5B0Ah, 0Fh
    memory(_ds, 0x5B0E) = 0x01;                 //mov byte ptr ds:5B0Eh, 1
    memory16(_ds, 0x5B10) = _dx;                //mov ds:5B10h, dx
    memory16(_ds, 0x5B10) = _dx;                //mov ds:5B10h, dx
    memory(_ds, 0x5B0E) = _al;                  //mov ds:5B0Eh, al
    memory16(_ds, 0x5921) = _dx;                //mov ds:5921h, dx
    memory16(_ds, 0x5925) = _dx;                //mov ds:5925h, dx
    memory16(_ds, 0x592E) = 0x1200;             //mov word ptr ds:592Eh, 1200h
    memory16(_ds, 0x59BA) = _bx;                //mov ds:59BAh, bx
    memory16(_ds, 0x592A) = _ax;                //mov ds:592Ah, ax
    memory16(_ds, 0x592A) = _ax;                //mov ds:592Ah, ax
    memory16(_ds, 0x592E) = 0x1800;             //mov word ptr ds:592Eh, 1800h
    memory16(_ds, 0x592E) = _ax;                //mov ds:592Eh, ax
    memory16(_ds, 0x592E) = 0x1000;             //mov word ptr ds:592Eh, 1000h
    memory(_ds, 0x5927) = 0x80;                 //mov byte ptr ds:5927h, 80h
    memory(_ds, 0x592D) = _dl;                  //mov ds:592Dh, dl
    memory16(_ds, 0x592A) = _dx;                //mov ds:592Ah, dx
    memory(_ds, 0x592C) = _cl;                  //mov ds:592Ch, cl
    memory(_ds, 0x5928) = _al;                  //mov ds:5928h, al
    memory16(_ds, 0x592A) = _ax;                //mov ds:592Ah, ax
    memory16(_ds, 0x592A) = 0x0500;             //mov word ptr ds:592Ah, 500h
    memory16(_ds, 0x592E) = 0x2000;             //mov word ptr ds:592Eh, 2000h
    memory(_ds, 0x592C) = 0xff;                 //mov byte ptr ds:592Ch, 0FFh
    memory16(_ds, 0x592E) = _ax;                //mov ds:592Eh, ax
    memory16(_ds, 0x5AE2) = _dx;                //mov ds:5AE2h, dx
    memory16(_ds, 0x5AE4) = 0x0000;             //mov word ptr ds:5AE4h, 0
    memory(_ds, 0x5B06) = _al;                  //mov ds:5B06h, al
    memory(_ds, 0x5B07) = 0x0c;                 //mov byte ptr ds:5B07h, 0Ch
    memory16(_ds, 0x5AD0) = _ax;                //mov ds:5AD0h, ax
    memory16(_ds, 0x5ACB) = 0x01f4;             //mov word ptr ds:5ACBh, 1F4h
    memory16(_ds, 0x5ACB) = 0x01f4;             //mov word ptr ds:5ACBh, 1F4h
    memory(_ds, 0x5ACF) = 0x00;                 //mov byte ptr ds:5ACFh, 0
    memory16(_ds, 0x5ACD) = 0x0008;             //mov word ptr ds:5ACDh, 8
    memory16(_ds, 0x5A85) = 0x0000;             //mov word ptr ds:5A85h, 0
    memory16(_ds, 0x5A83) = _dx;                //mov ds:5A83h, dx
    memory16(_ds, 0x5A83) = _dx;                //mov ds:5A83h, dx
    memory16(_ds, 0x5A62) = 0x0000;             //mov word ptr ds:5A62h, 0
    memory(_ds, 0x5A82) = 0x00;                 //mov byte ptr ds:5A82h, 0
    memory16(_ds, 0x5A80) = _dx;                //mov ds:5A80h, dx
    memory(_ds, 0x5927) = 0x80;                 //mov byte ptr ds:5927h, 80h
    memory(_ds, 0x5928) = 0x00;                 //mov byte ptr ds:5928h, 0
    memory(_ds, 0x5929) = 0x00;                 //mov byte ptr ds:5929h, 0
    memory16(_ds, 0x592A) = 0x0500;             //mov word ptr ds:592Ah, 500h
    memory(_ds, 0x592C) = 0xff;                 //mov byte ptr ds:592Ch, 0FFh
    memory(_ds, 0x592D) = 0x00;                 //mov byte ptr ds:592Dh, 0
    memory(_ds, 0x5920) = 0x00;                 //mov byte ptr ds:5920h, 0
    memory(_ds, 0x5B07) = 0x00;                 //mov byte ptr ds:5B07h, 0
    memory16(_ds, 0x5B08) = 0x0000;             //mov word ptr ds:5B08h, 0
    memory16(_ds, 0x5B0C) = 0x0001;             //mov word ptr ds:5B0Ch, 1
    memory(_ds, 0x5B0E) = 0x01;                 //mov byte ptr ds:5B0Eh, 1
    memory(_ds, 0x127C) = 0x00;                 //mov byte ptr ds:127Ch, 0
    memory16(_ds, 0x5923) = _bx;                //mov ds:5923h, bx
    memory(_ds, 0x5920) = 0x02;                 //mov byte ptr ds:5920h, 2
    memory16(_ds, 0x5921) = _dx;                //mov ds:5921h, dx
    memory(_ds, 0x5B07) = 0x18;                 //mov byte ptr ds:5B07h, 18h
    memory16(_ds, 0x5A40) = _dx;                //mov ds:5A40h, dx
    memory16(_ds, 0x5A42) = 0x0000;             //mov word ptr ds:5A42h, 0
    memory16(_ds, 0x5A16) = _ax;                //mov ds:5A16h, ax
    memory16(_ds, 0x5A14) = _dx;                //mov ds:5A14h, dx
    memory16(_ds, 0x5A12) = 0x0338;             //mov word ptr ds:5A12h, 338h
    memory16(_ds, 0x5A10) = _dx;                //mov ds:5A10h, dx
    memory16(_ds, 0x5A0E) = _ax;                //mov ds:5A0Eh, ax
    memory16(_ds, 0x5A0E) = _dx;                //mov ds:5A0Eh, dx
    memory16(_ds, 0x59BE) = 0x0000;             //mov word ptr ds:59BEh, 0
    memory16(_ds, 0x59C0) = _dx;                //mov ds:59C0h, dx
    memory16(_ds, 0x59C0) = _dx;                //mov ds:59C0h, dx
    memory16(_ds, 0x59BE) = _bx;                //mov ds:59BEh, bx
    memory16(_ds, 0x59BC) = _ax;                //mov ds:59BCh, ax
    memory16(_ds, 0x5F66) = _dx;                //mov ds:5F66h, dx
    memory16(_ds, 0x5F60) = 0x0000;             //mov word ptr ds:5F60h, 0
    memory16(_ds, 0x5F66) = _dx;                //mov ds:5F66h, dx
    memory16(_ds, 0x0) = _ax;                   //mov ds:0, ax
    memory16(_ds, 0x10) = _ax;                  //mov ds:10h, ax
    memory16(_ds, 0x4) = 0x0000;                //mov word_data_4, 0
    memory16(_ds, 0x6A8D) = 0x0000;             //mov word_data_6A8D, 0
    memory16(_ds, 0x579) = 0x0000;              //mov word_data_8+571h, 0
    memory(_ds, 0x57B) = 0x60;                  //mov byte ptr word_data_8+573h, 60h
    memory(_ds, 0x57C) = 0x92;                  //mov byte ptr word_data_8+574h, 92h
    memory(_ds, 0x1F80) = 0x09;                 //mov byte ptr word_data_8+1F78h, 9
    memory(_ds, 0x1F81) = 0xff;                 //mov byte ptr word_data_8+1F79h, 0FFh
    memory(_ds, 0x698) = 0x00;                  //mov byte ptr word_data_8+690h, 0
    memory(_ds, 0x699) = 0x00;                  //mov byte ptr word_data_8+691h, 0
    memory(_ds, 0x6A8A) = 0x00;                 //mov byte_data_6A8A, 0
    memory16(_ds, 0x6150) = _ax;                //mov word_data_8+6148h, ax
    memory16(_ds, 0x6A8B) = _dx;                //mov word_data_6A8B, dx
    memory16(_ds, 0x5322) = _dx;                //mov word_data_8+531Ah, dx
    memory16(_ds, 0x6A93) = _dx;                //mov word_data_6A93, dx
    memory16(_ds, 0x6A88) = _dx;                //mov word_data_6A88, dx
    memory16(_ds, 0x5320) = 0x0000;             //mov word_data_8+5318h, 0
    memory16(_ds, 0x6A93) = _dx;                //mov word_data_6A93, dx
    memory(_ds, 0x6A8A) = 0x01;                 //mov byte_data_6A8A, 1
    memory(_ds, 0x698) = 0x01;                  //mov byte ptr word_data_8+690h, 1
    memory(_ds, 0x698) = 0xff;                  //mov byte ptr word_data_8+690h, 0FFh
    memory16(_ds, 0x6A88) = _dx;                //mov word_data_6A88, dx
    memory(_ds, 0x698) = 0x00;                  //mov byte ptr word_data_8+690h, 0
    memory(_ds, 0x698) = _dl;                   //mov byte ptr word_data_8+690h, dl
    memory16(_ds, 0x572) = 0x0004;              //mov word_data_8+56Ah, 4
    memory16(_ds, 0x6DFC) = _dx;                //mov word ptr byte_data_6D37+0C5h, dx
    memory16(_ds, 0x6DFE) = _cx;                //mov word ptr byte_data_6D37+0C7h, cx
    memory16(_ds, 0x6E00) = _ax;                //mov ds:6E00h, ax
    memory16(_ds, 0x6D8F) = 0x0000;             //mov word ptr ds:6D8Fh, 0
    memory(_ds, 0x69B) = 0x00;                  //mov byte ptr ds:69Bh, 0
    memory(_ds, 0x69B) = 0x01;                  //mov byte ptr ds:69Bh, 1
    memory16(_ds, 0x6DF8) = _ax;                //mov ds:6DF8h, ax
    memory16(_ds, 0x6D8F) = 0x0020;             //mov word ptr ds:6D8Fh, 20h
    memory16(_ds, 0x6D8F) = 0x0018;             //mov word ptr ds:6D8Fh, 18h
    memory16(_ds, 0x6D8F) = 0x001c;             //mov word ptr ds:6D8Fh, 1Ch
    memory16(_ds, 0x6D8F) = 0x0016;             //mov word ptr ds:6D8Fh, 16h
    memory16(_ds, 0x6D8F) = 0x0024;             //mov word ptr ds:6D8Fh, 24h
    memory16(_ds, 0x6DFA) = _dx;                //mov ds:6DFAh, dx
    memory16(_ds, 0x6F24) = 0x0025;             //mov word ptr ds:6F24h, 25h
    memory16(_ds, 0x6F26) = _dx;                //mov ds:6F26h, dx
    memory16(_ds, 0x6F28) = _dx;                //mov ds:6F28h, dx
    memory(_ds, 0x70F2) = 0x00;                 //mov byte ptr ds:70F2h, 0
    memory16(_ds, 0x70EE) = _dx;                //mov ds:70EEh, dx
    memory(_ds, 0x70F2) = 0x00;                 //mov byte ptr ds:70F2h, 0
    memory(_ds, 0x70F6) = _dl;                  //mov ds:70F6h, dl
    memory(_ds, 0x70F5) = 0x06;                 //mov byte ptr ds:70F5h, 6
    memory16(_ds, 0x70F3) = _ax;                //mov ds:70F3h, ax
    memory16(_ds, 0x70F3) = _ax;                //mov ds:70F3h, ax
    memory(_ds, 0x70F6) = _dl;                  //mov ds:70F6h, dl
    memory(_ds, 0x70F5) = _al;                  //mov ds:70F5h, al
    memory(_ds, 0x70F2) = 0x01;                 //mov byte ptr ds:70F2h, 1
    memory(_ds, 0x70F7) = 0x01;                 //mov byte ptr ds:70F7h, 1
    memory16(_ds, 0x70F0) = 0x0000;             //mov word ptr ds:70F0h, 0
    memory16(_ds, 0x70EC) = 0xffff;             //mov word ptr ds:70ECh, 0FFFFh
    memory(_ds, 0x70F2) = 0x00;                 //mov byte ptr ds:70F2h, 0
    memory16(_ds, 0x70FA) = _ax;                //mov ds:70FAh, ax
    memory(_ds, 0x70F7) = 0x00;                 //mov byte ptr ds:70F7h, 0
    memory16(_ds, 0x70F8) = _di;                //mov ds:70F8h, di
    memory16(_ds, 0x70EC) = _ax;                //mov ds:70ECh, ax
    memory(_ds, _si + 11234) = memory(_ds, _si + 11234) ^ 0x02;
    memory(_ds, 0x571) = 0x01;                  //mov byte ptr ds:571h, 1
    memory(_ds, 0x576) = 0x02;                  //mov byte ptr ds:576h, 2
    memory(_ds, 0x578) = 0x20;                  //mov byte ptr ds:578h, 20h
    memory(_ds, 0x55B) = 0x08;                  //mov byte ptr ds:55Bh, 8
