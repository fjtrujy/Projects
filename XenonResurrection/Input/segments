Create offsets and segments using fixup info


seg000 - entry, 10000, ofs 800-fa90
seg001 - kod, 1f290
seg002 - kod, 24b90, ofs 15390-15e46
seg003 - tiez data, zacina 25650, ofs 0..2ee0, 15e50-18d2f
dseg - data, 28530
seg005 - prazdny, pouziva
             18530
dd skip=$((0x18d30)) count=$((0x1e267-0x18d30)) if=xenon2.exe of=xenon.dseg bs=1



		mov	ax, seg	dseg ;1853
		mov	word ptr es:202h, seg seg002    ;14b9

1                                                             
		mov	word_2B578, 0        ;3048 +dseg

(0x2B578-0x28530).toString(16) = 3048

; Segment type:	Pure code
;seg000		segment	byte public 'CODE' use16
;		assume cs:seg000
;		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_10000	proc near		; CODE XREF: sub_105A3+5p


; Segment type:	Pure code
seg001		segment	byte public 'CODE' use16
		assume cs:seg001
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
byte_1F290	db 0E8h, 42h, 0, 0B8h, 0Dh, 0, 0CDh, 10h, 0B8h,	2, 10h



; Segment type:	Pure code
seg002		segment	byte public 'CODE' use16
		assume cs:seg002
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

loc_24B90:				; DATA XREF: start+2Ao


seg003		segment	byte public 'UNK' use16
		assume cs:seg003
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
word_25650	dw 0			; DATA XREF: sub_1011C+33w



; Segment type:	Pure data
dseg		segment	para public 'DATA' use16
		assume cs:dseg
word_28530	dw 0			; DATA XREF: sub_1019A+3r


; Segment type:	Regular
seg005		segment	byte public 'UNK' use16
		assume cs:seg005
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing


; ===========================================================================

; Segment type:	Uninitialized
seg006		segment	byte stack 'STACK' use16
		assume cs:seg006
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
byte_447B0	db 200h	dup(?)		; DATA XREF: sub_1EC6F+FAw
					; sub_1EC6F+114r ...
seg006		ends

; ===========================================================================

; Segment type:	Zero-length
seg007		segment	byte public '' use16
seg007		ends

; ===========================================================================

; Segment type:	Zero-length
seg008		segment	byte public '' use16
unk_54890	label byte		; DATA XREF: sub_1F585:loc_1F5CAw
					; sub_1F585+6Aw ...
seg008		ends

; ===========================================================================

; Segment type:	Zero-length
seg009		segment	byte public '' use16
seg009		ends

; ===========================================================================

; Segment type:	Zero-length
seg010		segment	byte public '' use16
seg010		ends


		end start
