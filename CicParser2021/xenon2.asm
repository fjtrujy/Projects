

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3057-7374-2C			    |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	91306322915AD68068F70C25E96D1ABF
; Input	CRC32 :	AC70F2B0

; File Name   :	G:\xenon2.exe
; Format      :	MS-DOS executable (EXE)
; Base Address:	1000h Range: 10000h-72181h Loaded length: 1DA68h
; Entry	Point :	1000:4F2

		.686p
		.mmx
		.model large

; ===========================================================================

; Segment type:	Pure code
;seg000		segment	byte public 'CODE' use16
;		assume cs:seg000
;		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_10000	proc near		; CODE XREF: sub_105A3+5p
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	cx, 8
		mov	di, 8E58h
		mov	al, 0FFh
		rep stosb
		mov	ax, 1A00h
		int	10h		; - VIDEO - DISPLAY COMBINATION	(PS,VGA/MCGA): read display combination	code
		cmp	al, 1Ah
		jnz	short loc_10032
		cmp	bl, bh
		jnb	short loc_1001D
		mov	bl, bh

loc_1001D:				; CODE XREF: sub_10000+19j
		cmp	bl, 0Bh
		jb	short loc_1002C
		cmp	bl, 0Ch
		ja	short loc_1002C
		mov	byte_3138A, 0

loc_1002C:				; CODE XREF: sub_10000+20j
					; sub_10000+25j
		mov	byte_31388, 0
		retn
; ---------------------------------------------------------------------------

loc_10032:				; CODE XREF: sub_10000+15j
		mov	byte_31389, 0
		call	sub_10067
		call	sub_10089
		call	sub_10097
		mov	dx, 3B4h
		call	sub_10101
		jb	short loc_1005C
		mov	dl, 0BAh ; '
		in	al, dx
		and	al, 80h
		mov	ah, al
		mov	cx, 8000h

loc_10052:				; CODE XREF: sub_10000+57j
		in	al, dx
		and	al, 80h
		cmp	al, ah
		loope	loc_10052
		jz	short loc_10061
		retn
; ---------------------------------------------------------------------------

loc_1005C:				; CODE XREF: sub_10000+46j
		mov	byte_3138C, 0

loc_10061:				; CODE XREF: sub_10000+59j
		mov	byte_3138D, 0
		retn
sub_10000	endp


; =============== S U B	R O U T	I N E =======================================


sub_10067	proc near		; CODE XREF: sub_10000+37p
		mov	bl, 10h
		mov	ah, 12h
		int	10h		; - VIDEO - ALTERNATE FUNCTION SELECT (PS, EGA,	VGA, MCGA) - GET EGA INFO
					; Return: BH = 00h color mode in effect	CH = feature bits, CL =	switch settings
		cmp	bl, 10h
		jz	short loc_10083
		mov	ah, 12h
		mov	bl, 10h
		int	10h		; - VIDEO - ALTERNATE FUNCTION SELECT (PS, EGA,	VGA, MCGA) - GET EGA INFO
					; Return: BH = 00h color mode in effect	CH = feature bits, CL =	switch settings
		cmp	bl, 3
		jnb	short locret_10082
		mov	byte_3138E, 0

locret_10082:				; CODE XREF: sub_10067+14j
		retn
; ---------------------------------------------------------------------------

loc_10083:				; CODE XREF: sub_10067+9j
		mov	byte_3138A, 0
		retn
sub_10067	endp


; =============== S U B	R O U T	I N E =======================================


sub_10089	proc near		; CODE XREF: sub_10000+3Ap
		mov	dx, 3D4h
		call	sub_10101
		jnb	short locret_10096
		mov	byte_3138B, 0

locret_10096:				; CODE XREF: sub_10089+6j
		retn
sub_10089	endp


; =============== S U B	R O U T	I N E =======================================


sub_10097	proc near		; CODE XREF: sub_10000+3Dp
		mov	bx, 0B800h
		mov	es, bx
		assume es:nothing
		xor	di, di
		push	word ptr es:0
		mov	word ptr es:0, 414Ah
		int	12h		; MEMORY SIZE -
					; Return: AX = number of contiguous 1K blocks of memory
		add	ax, 3Fh	; '?'
		and	ax, 0FFC0h
		sub	ax, 40h	; '@'
		mov	cl, 6
		shl	ax, cl
		mov	es, ax
		assume es:nothing
		mov	dx, ax
		mov	ax, 414Ah
		mov	cx, 8000h

loc_100C3:				; CODE XREF: sub_10097+68j
		repne scasw
		jz	short loc_100D6
		mov	es, bx
		xor	di, di
		pop	word ptr es:0
		mov	byte_31388, 0
		retn
; ---------------------------------------------------------------------------

loc_100D6:				; CODE XREF: sub_10097+2Ej
		sub	di, 2
		mov	es, bx
		mov	word ptr es:0, 4849h
		mov	es, dx
		cmp	word ptr es:[di], 4849h
		jnz	short loc_100F1
		pop	word ptr es:0
		retn
; ---------------------------------------------------------------------------

loc_100F1:				; CODE XREF: sub_10097+52j
		mov	es, bx
		mov	word ptr es:0, 414Ah
		mov	es, dx
		add	di, 2
		jmp	short loc_100C3
sub_10097	endp


; =============== S U B	R O U T	I N E =======================================


sub_10101	proc near		; CODE XREF: sub_10000+43p
					; sub_10089+3p
		mov	al, 0Fh
		out	dx, al
		out	dx, al
		inc	dx
		in	al, dx
		mov	ah, al
		mov	al, 66h	; 'f'
		out	dx, al
		mov	cx, 100h

loc_1010F:				; CODE XREF: sub_10101:loc_1010Fj
		loop	loc_1010F
		in	al, dx
		xchg	al, ah
		out	dx, al
		cmp	ah, 66h	; 'f'
		jz	short locret_1011B
		stc

locret_1011B:				; CODE XREF: sub_10101+17j
		retn
sub_10101	endp


; =============== S U B	R O U T	I N E =======================================


sub_1011C	proc near		; CODE XREF: sub_15C8B+Ap
					; sub_15C8B+18p ...

; FUNCTION CHUNK AT 5E04 SIZE 00000020 BYTES

		mov	ax, 3D00h
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 0 - read
		jnb	short loc_10126
		jmp	loc_15E04
; ---------------------------------------------------------------------------

loc_10126:				; CODE XREF: sub_1011C+5j
		push	ds
		mov	bx, seg	seg003
		mov	ds, bx
		assume ds:seg003
		mov	word_279BC, di
		mov	word_279BE, es
		mov	es, bx
		assume es:seg003
		mov	word_279C0, ax
		mov	ah, 3Fh	; '?'
		mov	bx, word_279C0
		mov	cx, 200h
		mov	dx, 216Ch
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		jnb	short loc_1014C
		jmp	loc_15E04
; ---------------------------------------------------------------------------

loc_1014C:				; CODE XREF: sub_1011C+2Bj
		mov	ax, word_277C7
		mov	word_25650, ax
		mov	ax, word_277C9
		mov	word_25652, ax
		mov	al, byte_277BC
		xor	ah, ah
		add	ax, 216Eh
		mov	word_277BA, ax
		call	sub_1019A
		mov	ah, 3Eh	; '>'
		mov	bx, word_279C0
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_1011C	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_10174	proc near		; CODE XREF: sub_102D4+49p
					; sub_102D4+64p ...
		push	di
		push	bx
		push	cx
		push	dx
		xor	ax, ax
		mov	di, 216Ch
		mov	cx, 100h
		rep stosw
		mov	bx, word_2A8A0
		mov	cx, 200h
		mov	dx, 216Ch
		mov	ah, 3Fh
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		jnb	short loc_10195
		jmp	loc_15E04
; ---------------------------------------------------------------------------

loc_10195:				; CODE XREF: sub_10174+1Cj
		pop	dx
		pop	cx
		pop	bx
		pop	di
		retn
sub_10174	endp


; =============== S U B	R O U T	I N E =======================================


sub_1019A	proc near		; CODE XREF: sub_1011C+47p
		push	si
		push	di
		push	bp
		mov	ax, word_28530
		or	ax, word_28532
		jnz	short loc_101A9
		jmp	loc_1022C
; ---------------------------------------------------------------------------

loc_101A9:				; CODE XREF: sub_1019A+Aj
		call	sub_10230
		call	sub_102A8
		mov	di, 0FC4h

loc_101B2:				; CODE XREF: sub_1019A+90j
		push	di
		call	sub_102D4
		mov	di, ax
		cmp	ax, 100h
		jge	short loc_101E0
		pop	di
		push	es
		push	di
		les	di, dword_2A89C
		stosb
		mov	word ptr dword_2A89C, di
		pop	di
		pop	es
		mov	[di+112Fh], al
		inc	di
		and	di, 0FFFh
		sub	word_28530, 1
		sbb	word_28532, 0
		jmp	short loc_1021D
; ---------------------------------------------------------------------------

loc_101E0:				; CODE XREF: sub_1019A+21j
		call	sub_1034C
		mov	cx, di
		pop	di
		mov	si, di
		sub	si, ax
		dec	si
		and	si, 0FFFh
		sub	cx, 0FDh ; '
		sub	word_28530, cx
		sbb	word_28532, 0

loc_101FC:				; CODE XREF: sub_1019A+81j
		mov	al, [si+112Fh]
		mov	[di+112Fh], al
		inc	si
		inc	di
		and	si, 0FFFh
		and	di, 0FFFh
		push	es
		push	di
		les	di, dword_2A89C
		stosb
		mov	word ptr dword_2A89C, di
		pop	di
		pop	es
		loop	loc_101FC

loc_1021D:				; CODE XREF: sub_1019A+44j
		mov	ax, word_28532
		or	ax, ax
		js	short loc_1022C
		or	ax, word_28530
		jz	short loc_1022C
		jmp	short loc_101B2
; ---------------------------------------------------------------------------

loc_1022C:				; CODE XREF: sub_1019A+Cj
					; sub_1019A+88j ...
		pop	bp
		pop	di
		pop	si
		retn
sub_1019A	endp


; =============== S U B	R O U T	I N E =======================================


sub_10230	proc near		; CODE XREF: sub_1019A:loc_101A9p
		push	si
		push	di
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		cld
		mov	ax, 1
		mov	cx, 13Ah
		mov	di, 4
		rep stosw
		mov	ax, 4E6h
		mov	dx, 0
		mov	cx, 13Ah
		mov	di, 0C46h
		mov	bx, 9D2h

loc_10251:				; CODE XREF: sub_10230+2Dj
		stosw
		add	ax, 2
		mov	[bx], dx
		add	bx, 2
		add	dx, 2
		loop	loc_10251
		mov	si, 0
		mov	di, 2
		mov	bx, 274h
		mov	cx, 139h

loc_1026B:				; CODE XREF: sub_10230+5Cj
		mov	ax, [si+4]
		add	ax, [di+4]
		mov	[bx+4],	ax
		mov	[bx+0C46h], si
		mov	[si+4ECh], bx
		mov	[di+4ECh], bx
		add	si, 4
		add	di, 4
		add	bx, 2
		loop	loc_1026B
		xor	ax, ax
		mov	word_2965C, ax
		mov	word_2965C, ax
		mov	byte_2965E, al
		mov	byte_2965E, al
		mov	word_28A1A, 0FFFFh
		mov	word_28F00, ax
		pop	di
		pop	si
		retn
sub_10230	endp


; =============== S U B	R O U T	I N E =======================================


sub_102A8	proc near		; CODE XREF: sub_1019A+12p
		cld
		mov	di, ds
		mov	es, di
		mov	di, 112Fh
		mov	al, 0
		mov	bx, 0Dh

loc_102B5:				; CODE XREF: sub_102A8+13j
		mov	cx, bx
		rep stosb
		inc	al
		jnz	short loc_102B5

loc_102BD:				; CODE XREF: sub_102A8+18j
		stosb
		inc	al
		jnz	short loc_102BD

loc_102C2:				; CODE XREF: sub_102A8+1Dj
		dec	al
		stosb
		jnz	short loc_102C2
		mov	cx, 80h	; '
		rep stosb
		mov	cx, 80h	; '
		mov	al, 20h	; ' '
		rep stosb
		retn
sub_102A8	endp


; =============== S U B	R O U T	I N E =======================================


sub_102D4	proc near		; CODE XREF: sub_1019A+19p
		mov	si, word_2965A
		mov	dx, word_2965C
		mov	cl, byte_2965E
		and	cx, 0FFh
		jmp	short loc_102F4
; ---------------------------------------------------------------------------

loc_102E6:				; CODE XREF: sub_102D4+26j
		shr	si, 1
		shl	dx, 1
		adc	si, 0
		shl	si, 1
		mov	si, [si+0C46h]
		dec	cx

loc_102F4:				; CODE XREF: sub_102D4+10j
		jz	short loc_10312

loc_102F6:				; CODE XREF: sub_102D4+76j
		cmp	si, 4E6h
		jb	short loc_102E6
		mov	word_2965C, dx
		mov	byte_2965E, cl
		sub	si, 4E6h
		mov	dx, si
		call	sub_10373
		mov	ax, dx
		shr	ax, 1
		retn
; ---------------------------------------------------------------------------

loc_10312:				; CODE XREF: sub_102D4:loc_102F4j
		push	si
		mov	si, word_2A69A
		cmp	si, 236Ch
		jl	short loc_10323
		call	sub_10174
		mov	si, 216Ch

loc_10323:				; CODE XREF: sub_102D4+47j
		lodsb
		xor	ah, ah
		mov	word_2A69A, si
		pop	si
		mov	dh, al
		push	si
		mov	si, word_2A69A
		cmp	si, 236Ch
		jl	short loc_1033E
		call	sub_10174
		mov	si, 216Ch

loc_1033E:				; CODE XREF: sub_102D4+62j
		lodsb
		xor	ah, ah
		mov	word_2A69A, si
		pop	si
		mov	dl, al
		mov	cl, 10h
		jmp	short loc_102F6
sub_102D4	endp


; =============== S U B	R O U T	I N E =======================================


sub_1034C	proc near		; CODE XREF: sub_1019A:loc_101E0p
		call	sub_103DD
		mov	si, ax
		mov	dl, [si+2372h]
		mov	dh, 0
		mov	cl, 6
		shl	dx, cl
		push	dx
		mov	cl, [si+2472h]
		mov	ch, 0
		sub	cx, 2
		call	sub_103FD
		or	ax, si
		rol	ax, cl
		and	ax, 3Fh
		pop	dx
		add	ax, dx
		retn
sub_1034C	endp


; =============== S U B	R O U T	I N E =======================================


sub_10373	proc near		; CODE XREF: sub_102D4+36p
		cmp	word_28A18, 8000h
		jb	short loc_1037E
		call	sub_10423

loc_1037E:				; CODE XREF: sub_10373+6j
		mov	si, [si+9D2h]

loc_10382:				; CODE XREF: sub_10373+67j
		mov	ax, [si+4]
		inc	ax
		mov	[si+4],	ax
		lea	di, [si+2]
		cmp	ax, [di+4]
		ja	short loc_10396
		jmp	short loc_103D2
; ---------------------------------------------------------------------------

loc_10396:				; CODE XREF: sub_10373+1Fj
					; sub_10373+29j
		inc	di
		inc	di
		cmp	ax, [di+4]
		ja	short loc_10396
		dec	di
		dec	di
		xchg	ax, [di+4]
		mov	[si+4],	ax
		mov	bx, [si+0C46h]
		mov	[bx+4ECh], di
		cmp	bx, 4E6h
		jnb	short loc_103BA
		mov	[bx+4EEh], di

loc_103BA:				; CODE XREF: sub_10373+41j
		xchg	bx, [di+0C46h]
		mov	[bx+4ECh], si
		cmp	bx, 4E6h
		jnb	short loc_103CC
		mov	[bx+4EEh], si

loc_103CC:				; CODE XREF: sub_10373+53j
		mov	[si+0C46h], bx
		mov	si, di

loc_103D2:				; CODE XREF: sub_10373+21j
		mov	si, [si+4ECh]
		or	si, si
		jz	short locret_103DC
		jmp	short loc_10382
; ---------------------------------------------------------------------------

locret_103DC:				; CODE XREF: sub_10373+65j
		retn
sub_10373	endp


; =============== S U B	R O U T	I N E =======================================


sub_103DD	proc near		; CODE XREF: sub_1034Cp
		mov	dx, word_2965C
		cmp	byte_2965E, 8
		jg	short loc_103EB
		call	sub_104C9

loc_103EB:				; CODE XREF: sub_103DD+9j
		xchg	dl, dh
		mov	ax, dx
		xor	dl, dl
		mov	word_2965C, dx
		sub	byte_2965E, 8
		xor	ah, ah
		retn
sub_103DD	endp


; =============== S U B	R O U T	I N E =======================================


sub_103FD	proc near		; CODE XREF: sub_1034C+19p
		push	cx
		mov	dx, word_2965C
		cmp	byte_2965E, 8
		jg	short loc_1040C
		call	sub_104C9

loc_1040C:				; CODE XREF: sub_103FD+Aj
		pop	cx
		mov	ax, dx
		shl	dx, cl
		mov	word_2965C, dx
		sub	byte_2965E, cl
		mov	dx, 0FFFFh
		shr	dx, cl
		not	dx
		and	ax, dx
		retn
sub_103FD	endp


; =============== S U B	R O U T	I N E =======================================


sub_10423	proc near		; CODE XREF: sub_10373+8p
		push	si
		mov	ax, ds
		mov	es, ax
		xor	si, si
		mov	di, si

loc_1042C:				; CODE XREF: sub_10423+2Cj
		cmp	word ptr [si+0C46h], 4E6h
		jb	short loc_10449
		mov	ax, [si+4]
		inc	ax
		shr	ax, 1
		mov	[di+4],	ax
		mov	ax, [si+0C46h]
		mov	[di+0C46h], ax
		inc	di
		inc	di

loc_10449:				; CODE XREF: sub_10423+Fj
		inc	si
		inc	si
		cmp	si, 4E6h
		jb	short loc_1042C
		xor	si, si
		mov	di, 274h

loc_10456:				; CODE XREF: sub_10423+86j
		mov	bx, si
		inc	bx
		inc	bx
		mov	ax, [si+4]
		add	ax, [bx+4]
		mov	[di+4],	ax
		mov	bx, di

loc_10468:				; CODE XREF: sub_10423+4Bj
		dec	bx
		dec	bx
		cmp	ax, [bx+4]
		jb	short loc_10468
		inc	bx
		inc	bx
		mov	cx, di
		sub	cx, bx
		shr	cx, 1
		std
		push	cx
		push	si
		push	di
		lea	si, [di+4]
		mov	di, si
		dec	si
		dec	si
		rep movsw
		mov	[bx+4],	ax
		pop	di
		pop	si
		pop	cx
		push	si
		push	di
		lea	si, [di+0C46h]
		mov	di, si
		dec	si
		dec	si
		rep movsw
		pop	di
		pop	si
		mov	[bx+0C46h], si
		add	si, 4
		add	di, 2
		cmp	di, 4E6h
		jb	short loc_10456
		xor	si, si

loc_104AD:				; CODE XREF: sub_10423+A2j
		mov	di, [si+0C46h]
		mov	[di+4ECh], si
		cmp	di, 4E6h
		jnb	short loc_104BF
		mov	[di+4EEh], si

loc_104BF:				; CODE XREF: sub_10423+96j
		inc	si
		inc	si
		cmp	si, 4E6h
		jb	short loc_104AD
		pop	si
		retn
sub_10423	endp


; =============== S U B	R O U T	I N E =======================================


sub_104C9	proc near		; CODE XREF: sub_103DD+Bp sub_103FD+Cp
		push	si
		mov	si, word_2A69A
		cmp	si, 236Ch
		jl	short loc_104DA
		call	sub_10174
		mov	si, 216Ch

loc_104DA:				; CODE XREF: sub_104C9+9j
		lodsb
		xor	ah, ah
		mov	word_2A69A, si
		pop	si
		mov	cl, 8
		sub	cl, byte_2965E
		shl	ax, cl
		or	dx, ax
		add	byte_2965E, 8
		retn
sub_104C9	endp

		assume ss:seg006, ds:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

		public start
start		proc near
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		cld
		mov	word_3139A, sp
		call	sub_105A3
		mov	word_3139C, 0
		call	sub_107ED
		mov	word_313B8, 0
		mov	word_313BA, 0
		push	es
		xor	ax, ax
		mov	es, ax
		assume es:nothing
		cli
		mov	word ptr es:200h, offset loc_24B90
		mov	word ptr es:202h, seg seg002
		sti
		pop	es
		assume es:nothing
		mov	ah, 22h	; '"'
		mov	al, 16h
		int	80h		; LINUX	-
		call	sub_15E8A
		mov	word_2B578, 0

loc_1053B:				; CODE XREF: start+4Ej
		cmp	word_2B578, 28h	; '('
		jl	short loc_1053B
		call	sub_15E5E
		call	sub_15C8B
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		call	sub_13C75

loc_1054F:				; CODE XREF: sub_1011C+5D05j
					; seg000:5FEBj
		cmp	word_2B574, 4
		jnz	short loc_10585
		mov	dx, 3B8h
		mov	al, 0
		out	dx, al
		mov	dx, 3B4h
		mov	si, 2EE0h
		mov	cx, 9

loc_10565:				; CODE XREF: start+75j
		lodsw
		out	dx, ax		; Video: CRT cntrlr addr
					; horizontal total
		loop	loc_10565
		push	es
		mov	ax, 0B000h
		mov	es, ax
		assume es:nothing
		xor	di, di
		mov	cx, 4000h
		xor	ax, ax
		rep stosw
		pop	es
		assume es:nothing
		mov	dx, 3B8h
		mov	al, 8
		out	dx, al
		mov	dx, 3BFh
		mov	al, 0
		out	dx, al		; Printer Status Bits:
					; 3: 0=printer signals an error
					; 4: 1=printer is selected
					; 5: 1=out of paper
					; 6: 0=ready for next character
					; 7: 0=busy or offline or error

loc_10585:				; CODE XREF: start+62j
		mov	ah, 1
		int	80h		; LINUX	- sys_epoll_wait
		call	sub_15EC3
		call	sub_15E7A
		mov	ax, 3
		cmp	word_2B574, 4
		jnz	short loc_1059C
		mov	ax, 7

loc_1059C:				; CODE XREF: start+A5j
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	ax, 4C00h
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
start		endp			; AL = exit code


; =============== S U B	R O U T	I N E =======================================


sub_105A3	proc near		; CODE XREF: start+Cp
		mov	byte_31487, 0
		call	sub_10000
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ax, 4
		cmp	byte_31389, 0
		jnz	short loc_105DA
		mov	ax, 3
		cmp	byte_3138A, 0
		jnz	short loc_105DA
		mov	ax, 2
		cmp	byte_31388, 0
		jnz	short loc_105DA
		mov	ax, 0
		cmp	byte_3138D, 0
		jnz	short loc_105DA
		mov	ax, 1

loc_105DA:				; CODE XREF: sub_105A3+14j
					; sub_105A3+1Ej ...
		mov	word_2B574, ax
		mov	ah, 0Fh
		int	10h		; - VIDEO - GET	CURRENT	VIDEO MODE
					; Return: AH = number of columns on screen
					; AL = current video mode
					; BH = current active display page
		mov	byte_2B423, bh
		mov	byte_2B424, al
		mov	byte_2B425, ah
		mov	ah, 1
		mov	ch, 20h	; ' '
		mov	cl, 20h	; ' '
		int	10h		; - VIDEO - SET	CURSOR CHARACTERISTICS
					; CH bits 0-4 =	start line for cursor in character cell
					; bits 5-6 = blink attribute
					; CL bits 0-4 =	end line for cursor in character cell

loc_105F4:				; CODE XREF: sub_105A3+BEj
		mov	ax, 600h
		xor	bh, bh
		xor	cx, cx
		mov	dl, byte_2B425
		dec	dl
		mov	dh, 18h
		int	10h		; - VIDEO - SCROLL PAGE	UP
					; AL = number of lines to scroll window	(0 = blank whole window)
					; BH = attributes to be	used on	blanked	lines
					; CH,CL	= row,column of	upper left corner of window to scroll
					; DH,DL	= row,column of	lower right corner of window

loc_10605:				; CODE XREF: sub_105A3+97j
					; sub_105A3+9Fj ...
		call	sub_106FE

loc_10608:				; CODE XREF: sub_105A3+8Cj
		xor	ah, ah
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		cmp	ah, 1Ch
		jz	short loc_10657
		cmp	ah, 41h	; 'A'
		jz	short loc_10652
		cmp	ah, 39h	; '9'
		jz	short loc_10631
		cmp	ah, 50h	; 'P'
		jz	short loc_10631
		cmp	ah, 4Dh	; 'M'
		jz	short loc_10631
		cmp	ah, 48h	; 'H'
		jz	short loc_10644
		cmp	ah, 4Bh	; 'K'
		jz	short loc_10644
		jmp	short loc_10608
; ---------------------------------------------------------------------------

loc_10631:				; CODE XREF: sub_105A3+76j
					; sub_105A3+7Bj ...
		inc	word_2B574
		cmp	word_2B574, 6
		jl	short loc_10605
		mov	word_2B574, 0
		jmp	short loc_10605
; ---------------------------------------------------------------------------

loc_10644:				; CODE XREF: sub_105A3+85j
					; sub_105A3+8Aj
		dec	word_2B574
		jns	short loc_10605
		mov	word_2B574, 5
		jmp	short loc_10605
; ---------------------------------------------------------------------------

loc_10652:				; CODE XREF: sub_105A3+71j
		mov	byte_31487, 0FFh

loc_10657:				; CODE XREF: sub_105A3+6Cj
		cmp	word_2B574, 5
		jnz	short loc_10663
		call	sub_1066E
		jmp	short loc_105F4
; ---------------------------------------------------------------------------

loc_10663:				; CODE XREF: sub_105A3+B9j
		mov	ax, word_2B574
		mov	bx, 2EF8h
		xlat
		mov	word_2B574, ax
		retn
sub_105A3	endp


; =============== S U B	R O U T	I N E =======================================


sub_1066E	proc near		; CODE XREF: sub_105A3+BBp
		mov	ax, 600h
		xor	bh, bh
		xor	cx, cx
		mov	dl, byte_2B425
		dec	dl
		mov	dh, 18h
		int	10h		; - VIDEO - SCROLL PAGE	UP
					; AL = number of lines to scroll window	(0 = blank whole window)
					; BH = attributes to be	used on	blanked	lines
					; CH,CL	= row,column of	upper left corner of window to scroll
					; DH,DL	= row,column of	lower right corner of window
		mov	si, 2F9Ah
		mov	cx, 6

loc_10685:				; CODE XREF: sub_1066E+8Dj
		push	cx
		xor	dl, dl
		lodsb
		mov	dh, al
		mov	bh, byte_2B423
		mov	ah, 2
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number

loc_10693:				; CODE XREF: sub_1066E+42j
		mov	ax, 920h
		mov	bh, byte_2B423
		mov	bl, 7
		mov	cx, 1
		int	10h		; - VIDEO - WRITE ATTRIBUTES/CHARACTERS	AT CURSOR POSITION
					; AL = character, BH = display page
					; BL = attributes of character (alpha modes) or	color (graphics	modes)
					; CX = number of times to write	character
		lodsb
		test	al, al
		jz	short loc_106B2
		mov	ah, 0Eh
		mov	bh, byte_2B423
		mov	bl, 7
		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
					; AL = character, BH = display page (alpha modes)
					; BL = foreground color	(graphics modes)
		jmp	short loc_10693
; ---------------------------------------------------------------------------

loc_106B2:				; CODE XREF: sub_1066E+36j
		xor	ah, ah
		int	16h		; KEYBOARD - READ CHAR FROM BUFFER, WAIT IF EMPTY
					; Return: AH = scan code, AL = character
		mov	[si], ah
		inc	si
		xor	ah, 80h
		mov	[si], ah
		inc	si
		cmp	al, 20h	; ' '
		jge	short loc_106E0
		push	ax
		mov	ax, 920h
		mov	bh, byte_2B423
		mov	bl, 7
		mov	cx, 1
		int	10h		; - VIDEO - WRITE ATTRIBUTES/CHARACTERS	AT CURSOR POSITION
					; AL = character, BH = display page
					; BL = attributes of character (alpha modes) or	color (graphics	modes)
					; CX = number of times to write	character
		mov	ax, 0E5Eh
		mov	bh, byte_2B423
		mov	bl, 0Fh
		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
					; AL = character, BH = display page (alpha modes)
					; BL = foreground color	(graphics modes)
		pop	ax
		add	al, 41h	; 'A'

loc_106E0:				; CODE XREF: sub_1066E+53j
		push	ax
		mov	ax, 920h
		mov	bh, byte_2B423
		mov	bl, 7
		mov	cx, 1
		int	10h		; - VIDEO - WRITE ATTRIBUTES/CHARACTERS	AT CURSOR POSITION
					; AL = character, BH = display page
					; BL = attributes of character (alpha modes) or	color (graphics	modes)
					; CX = number of times to write	character
		pop	ax
		mov	ah, 0Eh
		mov	bh, byte_2B423
		mov	bl, 0Fh
		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
					; AL = character, BH = display page (alpha modes)
					; BL = foreground color	(graphics modes)
		pop	cx
		loop	loc_10685
		retn
sub_1066E	endp


; =============== S U B	R O U T	I N E =======================================


sub_106FE	proc near		; CODE XREF: sub_105A3:loc_10605p
		mov	si, 2EFDh
		xor	cx, cx

loc_10703:				; CODE XREF: sub_106FE+60j
		mov	bl, 7
		cmp	cx, word_2B574
		jnz	short loc_10716
		mov	bl, 1Fh
		cmp	byte_2B424, 7
		jnz	short loc_10716
		mov	bl, 0F0h ; '

loc_10716:				; CODE XREF: sub_106FE+Bj
					; sub_106FE+14j
		mov	byte_2B427, bl
		lodsb
		test	al, al
		jz	short locret_10760
		sub	al, byte_2B425
		neg	al
		shr	al, 1
		mov	byte_2B422, al
		lodsb
		mov	byte_2B426, al
		push	cx

loc_1072F:				; CODE XREF: sub_106FE+5Cj
		lodsb
		test	al, al
		jz	short loc_1075C
		mov	ah, 2
		mov	bh, byte_2B423
		mov	dh, byte_2B426
		mov	dl, byte_2B422
		int	10h		; - VIDEO - SET	CURSOR POSITION
					; DH,DL	= row, column (0,0 = upper left)
					; BH = page number
		inc	byte_2B422
		mov	al, [si-1]
		mov	ah, 9
		mov	bl, byte_2B427
		mov	bh, byte_2B423
		mov	cx, 1
		int	10h		; - VIDEO - WRITE ATTRIBUTES/CHARACTERS	AT CURSOR POSITION
					; AL = character, BH = display page
					; BL = attributes of character (alpha modes) or	color (graphics	modes)
					; CX = number of times to write	character
		jmp	short loc_1072F
; ---------------------------------------------------------------------------

loc_1075C:				; CODE XREF: sub_106FE+34j
		pop	cx
		inc	cx
		jmp	short loc_10703
; ---------------------------------------------------------------------------

locret_10760:				; CODE XREF: sub_106FE+1Fj
		retn
sub_106FE	endp

; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_10762	proc near		; CODE XREF: sub_116BA+3p sub_116BA+9p ...
		mov	word ptr [si], 0
		mov	[si+0Ah], si
		mov	[si+8],	si
		mov	word ptr [si+2], 761h
		mov	word ptr [si+4], 761h
		mov	word ptr [si+6], 761h
		retn
sub_10762	endp


; =============== S U B	R O U T	I N E =======================================


sub_1077C	proc near		; CODE XREF: sub_116BA+24p
					; seg000:1E69p	...
		push	bx
		mov	bx, [di+0Ah]
		mov	[di+0Ah], si
		mov	[si+0Ah], bx
		mov	[si+8],	di
		mov	[bx+8],	si
		pop	bx
		retn
sub_1077C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1078E	proc near		; CODE XREF: sub_116BA+55p
					; sub_13246+96p
		push	bx
		mov	bx, [di+8]
		mov	[di+8],	si
		mov	[si+8],	bx
		mov	[si+0Ah], di
		mov	[bx+0Ah], si
		pop	bx
		retn
sub_1078E	endp


; =============== S U B	R O U T	I N E =======================================


sub_107A0	proc near		; CODE XREF: seg000:0F2Bp sub_1371A+Ep ...
		push	di
		push	bx
		mov	di, [si+8]
		mov	bx, [si+0Ah]
		mov	[di+0Ah], bx
		mov	[bx+8],	di
		mov	bx, word_313AC
		mov	[si+8],	bx
		mov	word_313AC, si
		mov	word ptr [si], 0
		pop	bx
		pop	di
		retn
sub_107A0	endp


; =============== S U B	R O U T	I N E =======================================


sub_107C0	proc near		; CODE XREF: seg000:1ECEp seg000:2B11p ...
		mov	word ptr [si], 4
		mov	word ptr [si+2], 0F2Bh
		mov	word ptr [si+4], 761h
		mov	word ptr [si+6], 761h
		mov	byte ptr [si+26h], 0
		mov	byte ptr [si+4Ah], 0
		retn
sub_107C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_107DC	proc near		; CODE XREF: sub_11022:loc_1106Dp
		push	di
		push	bx
		mov	di, [si+8]
		mov	bx, [si+0Ah]
		mov	[di+0Ah], bx
		mov	[bx+8],	di
		pop	bx
		pop	di
		retn
sub_107DC	endp


; =============== S U B	R O U T	I N E =======================================


sub_107ED	proc near		; CODE XREF: start+15p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	dword ptr cs:[bp+7FBh]
		retn
sub_107ED	endp

; ---------------------------------------------------------------------------
		dd byte_1F290
		dd aC32			; "
		dd byte_212F0
		dd byte_1F2BA
		dd loc_2130B

; =============== S U B	R O U T	I N E =======================================


sub_1080F	proc near		; CODE XREF: sub_13C75+9Bp
					; sub_13C75+EAp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_1081D[bp]
		retn
sub_1080F	endp

; ---------------------------------------------------------------------------
off_1081D	dd sub_1F3EF		; DATA XREF: sub_1080F+8r
		dd sub_23046
		dd sub_21844
		dd sub_1F3EF
		dd sub_21844

; =============== S U B	R O U T	I N E =======================================


sub_10831	proc near		; CODE XREF: sub_15863:loc_158D9p
					; sub_1595D+1Bp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_1083F[bp]
		retn
sub_10831	endp

; ---------------------------------------------------------------------------
off_1083F	dd sub_1F492		; DATA XREF: sub_10831+8r
		dd sub_23077
		dd sub_21870
		dd sub_1F492
		dd sub_21870
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10861[bp]
		retn
; ---------------------------------------------------------------------------
off_10861	dd sub_1F57C		; DATA XREF: seg000:085Br
		dd sub_2330D
		dd sub_21914
		dd sub_1F57C
		dd sub_21914

; =============== S U B	R O U T	I N E =======================================


sub_10875	proc near		; CODE XREF: sub_1465C+16j
					; sub_154DB+18p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10883[bp]
		retn
sub_10875	endp

; ---------------------------------------------------------------------------
off_10883	dd sub_1F585		; DATA XREF: sub_10875+8r
		dd sub_23316
		dd sub_2191D
		dd sub_1F585
		dd sub_2191D
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_108A5[bp]
		retn
; ---------------------------------------------------------------------------
off_108A5	dd sub_1FEA1		; DATA XREF: seg000:089Fr
		dd sub_23C75
		dd sub_21CA2
		dd sub_1FEA1
		dd sub_21CA2
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_108C7[bp]
		retn
; ---------------------------------------------------------------------------
off_108C7	dd sub_1FF41		; DATA XREF: seg000:08C1r
		dd sub_23D15
		dd sub_21D42
		dd sub_1FF41
		dd sub_21D42
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_108E9[bp]
		retn
; ---------------------------------------------------------------------------
off_108E9	dd loc_1FF46		; DATA XREF: seg000:08E3r
		dd loc_23D1A
		dd loc_21D47
		dd loc_1FF46
		dd loc_21D47
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_1090B[bp]
		retn
; ---------------------------------------------------------------------------
off_1090B	dd loc_1FF4F		; DATA XREF: seg000:0905r
		dd loc_23D23
		dd loc_21D50
		dd loc_1FF4F
		dd loc_21D50
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_1092D[bp]
		retn
; ---------------------------------------------------------------------------
off_1092D	dd sub_203DA		; DATA XREF: seg000:0927r
		dd sub_23E4F
		dd sub_21F4B
		dd sub_203DA
		dd sub_21F4B
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_1094F[bp]
		retn
; ---------------------------------------------------------------------------
off_1094F	dd sub_1EBD0		; DATA XREF: seg000:0949r
		dd sub_1EFF0
		dd sub_1EDE0
		dd sub_1EBD0
		dd sub_1EDE0

; =============== S U B	R O U T	I N E =======================================


sub_10963	proc near		; CODE XREF: seg000:3BFCp
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10971[bp]
		retn
sub_10963	endp

; ---------------------------------------------------------------------------
off_10971	dd loc_1EBD7		; DATA XREF: sub_10963+8r
		dd loc_1EFF7
		dd loc_1EDE7
		dd loc_1EBD7
		dd loc_1EDE7

; =============== S U B	R O U T	I N E =======================================


sub_10985	proc near		; CODE XREF: sub_13C75:loc_13D0Dp
					; sub_13C75:loc_13D47p	...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10993[bp]
		retn
sub_10985	endp

; ---------------------------------------------------------------------------
off_10993	dd sub_20482		; DATA XREF: sub_10985+8r
		dd sub_23ED2
		dd sub_21FF4
		dd sub_20482
		dd sub_21FF4

; =============== S U B	R O U T	I N E =======================================


sub_109A7	proc near		; CODE XREF: sub_11827+37p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_109B5[bp]
		retn
sub_109A7	endp

; ---------------------------------------------------------------------------
off_109B5	dd sub_20568		; DATA XREF: sub_109A7+8r
		dd sub_2410B
		dd sub_220D4
		dd sub_20568
		dd sub_220D4
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_109D7[bp]
		retn
; ---------------------------------------------------------------------------
off_109D7	dd sub_2058D		; DATA XREF: seg000:09D1r
		dd sub_2411A
		dd sub_22152
		dd sub_2058D
		dd sub_22152

; =============== S U B	R O U T	I N E =======================================


sub_109EB	proc near		; CODE XREF: sub_15B21:loc_15B3Ep
					; sub_15C0F:loc_15C27p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_109F9[bp]
		retn
sub_109EB	endp

; ---------------------------------------------------------------------------
off_109F9	dd sub_2058D		; DATA XREF: sub_109EB+8r
		dd sub_2411A
		dd sub_22152
		dd sub_2058D
		dd sub_22152

; =============== S U B	R O U T	I N E =======================================


sub_10A0D	proc near		; CODE XREF: sub_15863:loc_158A1p
					; sub_1595D:loc_1596Ep	...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10A1B[bp]
		retn
sub_10A0D	endp

; ---------------------------------------------------------------------------
off_10A1B	dd sub_205A9		; DATA XREF: sub_10A0D+8r
		dd sub_2412B
		dd sub_22163
		dd sub_205A9
		dd sub_22163

; =============== S U B	R O U T	I N E =======================================


sub_10A2F	proc near		; CODE XREF: sub_13C75+9Ep
					; sub_13C75:loc_13F03p	...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10A3D[bp]
		retn
sub_10A2F	endp

; ---------------------------------------------------------------------------
off_10A3D	dd sub_205AE		; DATA XREF: sub_10A2F+8r
		dd sub_24162
		dd sub_22168
		dd sub_205AE
		dd sub_22168

; =============== S U B	R O U T	I N E =======================================


sub_10A51	proc near		; CODE XREF: sub_14A69+6Ap
					; sub_14A69+116p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10A5F[bp]
		retn
sub_10A51	endp

; ---------------------------------------------------------------------------
off_10A5F	dd sub_205AE		; DATA XREF: sub_10A51+8r
		dd sub_24162
		dd sub_22168
		dd sub_205AE
		dd sub_22168

; =============== S U B	R O U T	I N E =======================================


sub_10A73	proc near		; CODE XREF: sub_11827+3Ap
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10A81[bp]
		retn
sub_10A73	endp

; ---------------------------------------------------------------------------
off_10A81	dd sub_205ED		; DATA XREF: sub_10A73+8r
		dd sub_24178
		dd sub_2217E
		dd sub_205ED
		dd sub_2217E

; =============== S U B	R O U T	I N E =======================================


sub_10A95	proc near		; CODE XREF: sub_13C75+F0p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10AA3[bp]
		retn
sub_10A95	endp

; ---------------------------------------------------------------------------
off_10AA3	dd sub_20653		; DATA XREF: sub_10A95+8r
		dd sub_241B3
		dd sub_2219A
		dd sub_20653
		dd sub_2219A
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10AC5[bp]
		retn
; ---------------------------------------------------------------------------
off_10AC5	dd sub_20708		; DATA XREF: seg000:0ABFr
		dd sub_24237
		dd sub_22232
		dd sub_20708
		dd sub_22232
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10AE7[bp]
		retn
; ---------------------------------------------------------------------------
off_10AE7	dd sub_20973		; DATA XREF: seg000:0AE1r
		dd sub_24475
		dd sub_22490
		dd sub_20973
		dd sub_22490

; =============== S U B	R O U T	I N E =======================================


sub_10AFB	proc near		; CODE XREF: sub_15863+55p
					; sub_15863+73p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10B09[bp]
		retn
sub_10AFB	endp

; ---------------------------------------------------------------------------
off_10B09	dd sub_2098C		; DATA XREF: sub_10AFB+8r
		dd sub_24488
		dd sub_22495
		dd sub_2098C
		dd sub_22495
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1577D

loc_10B1D:				; CODE XREF: sub_1577D+7j
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10B2B[bp]
		retn
; END OF FUNCTION CHUNK	FOR sub_1577D
; ---------------------------------------------------------------------------
off_10B2B	dd sub_209A6		; DATA XREF: sub_1577D-4C58r
		dd sub_244A3
		dd sub_224B0
		dd sub_209A6
		dd sub_224B0

; =============== S U B	R O U T	I N E =======================================


sub_10B3F	proc near		; CODE XREF: sub_159AA+10p
					; sub_159C8+CAp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10B4D[bp]
		retn
sub_10B3F	endp

; ---------------------------------------------------------------------------
off_10B4D	dd sub_209E9		; DATA XREF: sub_10B3F+8r
		dd sub_244EC
		dd sub_224F5
		dd sub_209E9
		dd sub_224F5
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10B6F[bp]
		retn
; ---------------------------------------------------------------------------
off_10B6F	dd sub_20A2E		; DATA XREF: seg000:0B69r
		dd sub_24535
		dd sub_2253A
		dd sub_20A2E
		dd sub_2253A

; =============== S U B	R O U T	I N E =======================================


sub_10B83	proc near		; CODE XREF: sub_15C7C+Bp
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10B91[bp]
		retn
sub_10B83	endp

; ---------------------------------------------------------------------------
off_10B91	dd sub_20A39		; DATA XREF: sub_10B83+8r
		dd sub_24540
		dd sub_22545
		dd sub_20A39
		dd sub_22545

; =============== S U B	R O U T	I N E =======================================


sub_10BA5	proc near		; CODE XREF: sub_116BA+169p
					; sub_13C75+DEp
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10BB3[bp]
		retn
sub_10BA5	endp

; ---------------------------------------------------------------------------
off_10BB3	dd sub_20AD0		; DATA XREF: sub_10BA5+8r
		dd sub_245B4
		dd sub_225AC
		dd sub_20AD0
		dd sub_225AC

; =============== S U B	R O U T	I N E =======================================


sub_10BC7	proc near		; CODE XREF: sub_14A69+7p sub_15935p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10BD5[bp]
		retn
sub_10BC7	endp

; ---------------------------------------------------------------------------
off_10BD5	dd sub_20B5B		; DATA XREF: sub_10BC7+8r
		dd sub_24649
		dd sub_22616
		dd sub_20B5B
		dd sub_22616

; =============== S U B	R O U T	I N E =======================================


sub_10BE9	proc near		; CODE XREF: sub_14A69+128p
					; sub_15950+6p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10BF7[bp]
		retn
sub_10BE9	endp

; ---------------------------------------------------------------------------
off_10BF7	dd sub_20B8A		; DATA XREF: sub_10BE9+8r
		dd sub_24679
		dd sub_22634
		dd sub_20B8A
		dd sub_22634

; =============== S U B	R O U T	I N E =======================================


sub_10C0B	proc near		; CODE XREF: sub_14A69+Dp
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10C19[bp]
		retn
sub_10C0B	endp

; ---------------------------------------------------------------------------
off_10C19	dd sub_20BE5		; DATA XREF: sub_10C0B+8r
		dd sub_246E5
		dd sub_22651
		dd sub_20BE5
		dd sub_22651

; =============== S U B	R O U T	I N E =======================================


sub_10C2D	proc near		; CODE XREF: sub_14D0D+16p
					; sub_14D0D+20p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10C3B[bp]
		retn
sub_10C2D	endp

; ---------------------------------------------------------------------------
off_10C3B	dd sub_20C5E		; DATA XREF: sub_10C2D+8r
		dd sub_24766
		dd sub_226DE
		dd sub_20C5E
		dd sub_226DE

; =============== S U B	R O U T	I N E =======================================


sub_10C4F	proc near		; CODE XREF: sub_14A69+1C0p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10C5D[bp]
		retn
sub_10C4F	endp

; ---------------------------------------------------------------------------
off_10C5D	dd sub_20C7B		; DATA XREF: sub_10C4F+8r
		dd sub_2477B
		dd sub_2271E
		dd sub_20C7B
		dd sub_2271E

; =============== S U B	R O U T	I N E =======================================


sub_10C71	proc near		; CODE XREF: sub_14C59+50p sub_14CADp	...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10C7F[bp]
		retn
sub_10C71	endp

; ---------------------------------------------------------------------------
off_10C7F	dd sub_20D18		; DATA XREF: sub_10C71+8r
		dd sub_247E4
		dd sub_2275C
		dd sub_20D18
		dd sub_2275C

; =============== S U B	R O U T	I N E =======================================


sub_10C93	proc near		; CODE XREF: sub_14C48+1p
					; sub_15240+19p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10CA1[bp]
		retn
sub_10C93	endp

; ---------------------------------------------------------------------------
off_10CA1	dd sub_20D8A		; DATA XREF: sub_10C93+8r
		dd sub_24835
		dd sub_2278D
		dd sub_20D8A
		dd sub_2278D

; =============== S U B	R O U T	I N E =======================================


sub_10CB5	proc near		; CODE XREF: sub_15612+6p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10CC3[bp]
		retn
sub_10CB5	endp

; ---------------------------------------------------------------------------
off_10CC3	dd sub_20F54		; DATA XREF: sub_10CB5+8r
		dd sub_24997
		dd sub_228BD
		dd sub_20F54
		dd sub_228BD

; =============== S U B	R O U T	I N E =======================================


sub_10CD7	proc near		; CODE XREF: sub_156B8+11p
					; sub_156B8:loc_15700p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10CE5[bp]
		retn
sub_10CD7	endp

; ---------------------------------------------------------------------------
off_10CE5	dd sub_21090		; DATA XREF: sub_10CD7+8r
		dd sub_249F4
		dd sub_22911
		dd sub_21090
		dd sub_22911

; =============== S U B	R O U T	I N E =======================================


sub_10CF9	proc near		; CODE XREF: sub_15787+57p
					; sub_1580D+13p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10D07[bp]
		retn
sub_10CF9	endp

; ---------------------------------------------------------------------------
off_10D07	dd sub_21132		; DATA XREF: sub_10CF9+8r
		dd sub_24A2F
		dd sub_22979
		dd sub_21132
		dd sub_22979

; =============== S U B	R O U T	I N E =======================================


sub_10D1B	proc near		; CODE XREF: sub_15863+41p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10D29[bp]
		retn
sub_10D1B	endp

; ---------------------------------------------------------------------------
off_10D29	dd sub_211CC		; DATA XREF: sub_10D1B+8r
		dd sub_24AAA
		dd sub_229C0
		dd sub_211CC
		dd sub_229C0
; ---------------------------------------------------------------------------
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10D4B[bp]
		retn
; ---------------------------------------------------------------------------
off_10D4B	dd sub_2120E		; DATA XREF: seg000:0D45r
		dd sub_24AFC
		dd sub_22A02
		dd sub_2120E
		dd sub_22A02

; =============== S U B	R O U T	I N E =======================================


sub_10D5F	proc near		; CODE XREF: sub_1195B+AFp
					; sub_13C75+2Cp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10D6D[bp]
		retn
sub_10D5F	endp

; ---------------------------------------------------------------------------
off_10D6D	dd sub_1F3C7		; DATA XREF: sub_10D5F+8r
		dd sub_23023
		dd sub_21836
		dd sub_1F3C7
		dd sub_21836

; =============== S U B	R O U T	I N E =======================================


sub_10D81	proc near		; CODE XREF: sub_13C75+A4p
					; sub_13C75+291p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10D8F[bp]
		retn
sub_10D81	endp

; ---------------------------------------------------------------------------
off_10D8F	dd sub_1F3D7		; DATA XREF: sub_10D81+8r
		dd loc_23030
		dd sub_2183D
		dd sub_1F3D7
		dd sub_2183D

; =============== S U B	R O U T	I N E =======================================


sub_10DA3	proc near		; CODE XREF: sub_15C8B+36p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10DB1[bp]
		retn
sub_10DA3	endp

; ---------------------------------------------------------------------------
off_10DB1	dd nullsub_1		; DATA XREF: sub_10DA3+8r
		dd sub_22CD9
		dd sub_2138B
		dd nullsub_1
		dd sub_2138B

; =============== S U B	R O U T	I N E =======================================


sub_10DC5	proc near		; CODE XREF: sub_15CC5+135p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10DD3[bp]
		retn
sub_10DC5	endp

; ---------------------------------------------------------------------------
off_10DD3	dd sub_1F325		; DATA XREF: sub_10DC5+8r
		dd sub_22EE8
		dd sub_214C2
		dd sub_1F325
		dd sub_214C2

; =============== S U B	R O U T	I N E =======================================


sub_10DE7	proc near		; CODE XREF: sub_15863+31p
					; sub_15863+BCp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10DF5[bp]
		retn
sub_10DE7	endp

; ---------------------------------------------------------------------------
off_10DF5	dd sub_1F371		; DATA XREF: sub_10DE7+8r
		dd sub_2300D
		dd nullsub_2
		dd sub_1F3A7
		dd nullsub_2

; =============== S U B	R O U T	I N E =======================================


sub_10E09	proc near		; CODE XREF: sub_14A69+70p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10E17[bp]
		retn
sub_10E09	endp

; ---------------------------------------------------------------------------
off_10E17	dd sub_1F37A		; DATA XREF: sub_10E09+8r
		dd sub_23014
		dd nullsub_3
		dd sub_1F3AE
		dd nullsub_3

; =============== S U B	R O U T	I N E =======================================


sub_10E2B	proc near		; CODE XREF: sub_13C75+A1p
					; sub_13C75+503p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10E39[bp]
		retn
sub_10E2B	endp

; ---------------------------------------------------------------------------
off_10E39	dd sub_1F383		; DATA XREF: sub_10E2B+8r
		dd sub_2301B
		dd nullsub_4
		dd sub_1F3B5
		dd nullsub_4

; =============== S U B	R O U T	I N E =======================================


sub_10E4D	proc near		; CODE XREF: sub_13C75+DBp
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10E5B[bp]
		retn
sub_10E4D	endp

; ---------------------------------------------------------------------------
off_10E5B	dd sub_20854		; DATA XREF: sub_10E4D+8r
		dd sub_24348
		dd sub_22386
		dd sub_20854
		dd sub_22386

; =============== S U B	R O U T	I N E =======================================


sub_10E6F	proc near		; CODE XREF: sub_116A9p sub_116A9+8p ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10E7D[bp]
		retn
sub_10E6F	endp

; ---------------------------------------------------------------------------
off_10E7D	dd sub_208DC		; DATA XREF: sub_10E6F+8r
		dd sub_243D6
		dd sub_22410
		dd sub_208DC
		dd sub_22410

; =============== S U B	R O U T	I N E =======================================


sub_10E91	proc near		; CODE XREF: sub_116BA+161p
					; sub_11827+8Fp ...
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10E9F[bp]
		retn
sub_10E91	endp

; ---------------------------------------------------------------------------
off_10E9F	dd sub_208F9		; DATA XREF: sub_10E91+8r
		dd sub_243F9
		dd sub_2242F
		dd sub_208F9
		dd sub_2242F

; =============== S U B	R O U T	I N E =======================================


sub_10EB3	proc near		; CODE XREF: seg000:2AD6p
		mov	bp, word_2B574
		shl	bp, 1
		shl	bp, 1
		call	cs:off_10EC1[bp]
		retn
sub_10EB3	endp

; ---------------------------------------------------------------------------
off_10EC1	dd sub_1F2E4		; DATA XREF: sub_10EB3+8r
		dd sub_22CBE
		dd sub_2134D
		dd sub_1F2FF
		dd sub_2136C

; =============== S U B	R O U T	I N E =======================================


sub_10ED5	proc far		; CODE XREF: sub_1F3EF+3P sub_21844+3P ...
		call	sub_1421C
		retf
sub_10ED5	endp


; =============== S U B	R O U T	I N E =======================================


sub_10ED9	proc far		; CODE XREF: sub_1F492:loc_1F4B6P
					; sub_1F492+2BP ...
		call	sub_14191
		retf
sub_10ED9	endp


; =============== S U B	R O U T	I N E =======================================


sub_10EDD	proc far		; CODE XREF: sub_20653+42P
					; sub_2219A+34P ...
		call	sub_11CCC
		retf
sub_10EDD	endp


; =============== S U B	R O U T	I N E =======================================


sub_10EE1	proc far		; CODE XREF: sub_20653+53P
					; sub_2219A+45P ...
		call	sub_13A36
		retf
sub_10EE1	endp


; =============== S U B	R O U T	I N E =======================================


sub_10EE5	proc far		; CODE XREF: sub_20D8A+4EP
					; sub_2278D+3FP ...
		call	sub_15835
		retf
sub_10EE5	endp


; =============== S U B	R O U T	I N E =======================================


sub_10EE9	proc far		; CODE XREF: sub_20D8A+53P
					; sub_2278D+44P ...
		call	sub_1561C
		retf
sub_10EE9	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_21132

loc_10EED:				; CODE XREF: sub_21132+4J sub_22979+4J ...
		call	sub_15829
		retf
; END OF FUNCTION CHUNK	FOR sub_21132

; =============== S U B	R O U T	I N E =======================================


sub_10EF1	proc far		; CODE XREF: sub_205AEP sub_22168P ...
		call	sub_160A5
		retf
sub_10EF1	endp


; =============== S U B	R O U T	I N E =======================================


sub_10EF5	proc near		; CODE XREF: seg000:3A66p sub_13AB2+3p ...
		push	es
		push	cx
		push	si
		mov	ax, [si+12h]
		mov	bx, [si+16h]
		mov	si, [si+0Ch]
		mov	cx, seg	seg007
		test	si, 1
		jz	short loc_10F0E
		mov	cx, seg	seg008
		dec	si

loc_10F0E:				; CODE XREF: sub_10EF5+13j
		mov	es, cx
		assume es:seg008
		sub	ax, es:[si]
		sub	bx, es:[si+2]
		shl	ax, 1
		shl	bx, 1
		add	ax, es:[si+4]
		add	bx, es:[si+6]
		sar	ax, 1
		sar	bx, 1
		pop	si
		pop	cx
		pop	es
		assume es:nothing
		retn
sub_10EF5	endp

; ---------------------------------------------------------------------------
		call	sub_107A0
		retn

; =============== S U B	R O U T	I N E =======================================


sub_10F2F	proc near		; CODE XREF: sub_11C18+1Dp
					; seg000:42E5j
		mov	ax, word_3822A
		cmp	ax, word_38212
		jl	short loc_10F57
		mov	ax, word_38222
		cmp	ax, word_3821A
		jg	short loc_10F57
		mov	ax, word_3822E
		cmp	ax, word_38216
		jl	short loc_10F57
		mov	ax, word_38226
		cmp	ax, word_3821E
		jg	short loc_10F57
		xor	ax, ax
		dec	ax
		retn
; ---------------------------------------------------------------------------

loc_10F57:				; CODE XREF: sub_10F2F+7j
					; sub_10F2F+10j ...
		xor	ax, ax
		retn
sub_10F2F	endp


; =============== S U B	R O U T	I N E =======================================


sub_10F5A	proc near		; CODE XREF: sub_11A19+45p
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+0F6Ch]
		mov	bx, word_313A4
		retn
sub_10F5A	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 84h,	62h, 0A8h, 7Ah,	0FAh, 99h, 54h,	0B5h, 0DAh, 0D0h

; =============== S U B	R O U T	I N E =======================================


sub_10F78	proc near		; CODE XREF: sub_11AAF+54p
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+0F8Ah]
		mov	bx, word_313A4
		retn
sub_10F78	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 8Fh,	75h, 1,	8Eh, 4Eh, 0ACh,	9Fh, 0C7h, 0AFh, 0E4h

; =============== S U B	R O U T	I N E =======================================


sub_10F96	proc near		; CODE XREF: sub_11BEA+29p
					; seg000:loc_11CC1p ...
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+0FA8h]
		mov	bx, word_313A4
		retn
sub_10F96	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 4Ah,	71h, 0A7h, 8Ch,	4Bh, 0ACh, 9Ch,	0C7h, 0ACh, 0E4h

; =============== S U B	R O U T	I N E =======================================


sub_10FB4	proc near		; CODE XREF: sub_13615+1Dp
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+0FC6h]
		mov	bx, word_313A4
		retn
sub_10FB4	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 0F1h, 70h, 0CAh, 80h, 0CCh, 0ABh, 71h, 0C7h,	75h, 0E4h

; =============== S U B	R O U T	I N E =======================================


sub_10FD2	proc near		; CODE XREF: sub_13615+53p
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+0FE4h]
		mov	bx, word_313A4
		retn
sub_10FD2	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 0EFh, 6Eh, 79h, 7Fh,	0AAh, 9Dh, 0EFh, 0B8h, 0E8h, 0D0h

; =============== S U B	R O U T	I N E =======================================


sub_10FF0	proc near		; CODE XREF: sub_13C75+E4p
		mov	word_313A4, bx
		mov	bx, word_31E4C
		shl	bx, 1
		push	word ptr cs:[bx+1002h]
		mov	bx, word_313A4
		retn
sub_10FF0	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		db 5Bh,	65h, 32h, 7Fh, 99h, 9Ah, 55h, 0B5h, 0E7h, 0D0h

; =============== S U B	R O U T	I N E =======================================


sub_1100E	proc near		; CODE XREF: sub_13117p
					; sub_14FE3:loc_150A8p
		mov	bp, 9138h
		mov	cx, 4

loc_11014:				; CODE XREF: sub_1100E+10j
		cmp	word ptr ds:[bp+0], 0
		jz	short locret_11021
		add	bp, 4
		loop	loc_11014
		dec	cx

locret_11021:				; CODE XREF: sub_1100E+Bj
		retn
sub_1100E	endp


; =============== S U B	R O U T	I N E =======================================


sub_11022	proc near		; CODE XREF: sub_116BA:loc_11709p
					; seg000:1E62p	...
		cmp	word_313AC, 0
		jz	short loc_11041
		mov	si, word_313AC
		push	word ptr [si+8]
		pop	word_313AC

loc_11034:				; CODE XREF: sub_11022+4Ej
		mov	byte ptr [si+26h], 0
		mov	byte ptr [si+4Ah], 0
		mov	byte ptr [si+4Bh], 0
		retn
; ---------------------------------------------------------------------------

loc_11041:				; CODE XREF: sub_11022+5j
		mov	si, 9096h

loc_11044:				; CODE XREF: sub_11022+37j
		mov	si, [si+0Ah]
		cmp	word ptr [si], 4
		jz	short loc_1106D
		cmp	word ptr [si], 0Ch
		jz	short loc_1106D
		cmp	word ptr [si], 10h
		jz	short loc_1106D
		cmp	word ptr [si], 0
		jnz	short loc_11044
		mov	si, word_315D0
		cmp	word ptr [si], 0
		jnz	short loc_1106D
		mov	si, word_3161C
		cmp	word ptr [si], 0
		jz	short loc_11072

loc_1106D:				; CODE XREF: sub_11022+28j
					; sub_11022+2Dj ...
		call	sub_107DC
		jmp	short loc_11034
; ---------------------------------------------------------------------------

loc_11072:				; CODE XREF: sub_11022+49j
		mov	si, word_31584

loc_11076:				; CODE XREF: sub_11022+65j
		cmp	word ptr [si], 0C8h ; '
		jge	short loc_1106D
		cmp	word ptr [si], 4
		jz	short loc_1106D
		mov	si, [si+0Ah]
		cmp	word ptr [si], 0
		jnz	short loc_11076
		mov	si, word_31584
		jmp	short loc_1106D
sub_11022	endp

; ---------------------------------------------------------------------------
		push	si
		push	ax
		push	cx
		mov	ax, word_31462
		test	ax, ax
		jnz	short loc_1109A
		inc	ax

loc_1109A:				; CODE XREF: seg000:1097j
		call	sub_141A1
		mov	cx, 5

loc_110A0:				; CODE XREF: seg000:loc_110D7j
		mov	di, word_31584

loc_110A4:				; CODE XREF: seg000:10D5j
		cmp	word ptr [di], 0
		jz	short loc_110D7
		cmp	word ptr [di], 0B8h ; '
		jz	short loc_110D0
		cmp	word ptr [di+2Ch], 0
		js	short loc_110D0
		cmp	word ptr [di+28h], 140h
		jge	short loc_110D0
		cmp	word ptr [di+2Eh], 0
		js	short loc_110D0
		cmp	word ptr [di+2Ah], 0C0h	; '
		jge	short loc_110D0
		dec	ax
		jns	short loc_110D0
		pop	cx
		pop	ax
		pop	si
		retn
; ---------------------------------------------------------------------------

loc_110D0:				; CODE XREF: seg000:10ADj seg000:10B3j ...
		mov	si, di
		call	sub_11689
		jmp	short loc_110A4
; ---------------------------------------------------------------------------

loc_110D7:				; CODE XREF: seg000:10A7j
		loop	loc_110A0
		pop	cx
		pop	ax
		pop	si
		mov	di, 904Ah
		retn
; ---------------------------------------------------------------------------
		db 18h,	48h, 1,	0, 0B4h, 48h, 1, 0, 5Ah, 49h, 1, 0, 0B4h
		db 48h,	1, 3 dup(0), 0E2h, 41h,	0E0h, 10h, 0, 4Ah, 1, 0
		db 6Ah,	4Ah, 1,	0, 0D4h, 4Ah, 1, 0, 6Ah, 4Ah, 1, 3 dup(0)
		db 0E2h, 41h, 0F6h, 10h, 0E0h, 0A0h, 1,	0, 90h,	0A1h, 1
		db 0, 40h, 0A2h, 1, 0, 0F0h, 0A2h, 1, 3	dup(0),	0E2h, 41h
		db 0Ch,	11h, 8Eh, 5Ah, 1, 0, 3Eh, 5Bh, 1, 0, 0EEh, 5Bh
		db 1, 0, 9Eh, 5Ch, 1, 0, 4Eh, 5Dh, 1, 0, 0FEh, 5Dh, 1
		db 0, 0AEh, 5Eh, 1, 0, 5Eh, 5Fh, 1, 3 dup(0), 0E2h, 41h
		db 22h,	11h, 0BEh, 9Ah,	2, 0, 4Eh, 9Dh,	2, 3 dup(0), 0E2h
		db 41h,	48h, 11h, 58h, 0A6h, 2 dup(0), 0Eh, 6Ch, 1, 0
		db 0B4h, 6Ch, 1, 0, 5Ah, 6Dh, 1, 2 dup(0), 6Eh,	1, 3 dup(0)
		db 0E2h, 41h, 5Ah, 11h,	0E4h, 8Ch, 1, 0, 44h, 8Dh, 1, 0
		db 0F4h, 8Dh, 1, 0, 0A4h, 8Eh, 1, 0, 54h, 8Fh, 1, 0, 4
		db 90h,	1, 3 dup(0), 0E2h, 41h,	70h, 11h, 0A6h,	6Eh, 1
		db 0, 56h, 6Fh,	1, 0, 6, 70h, 1, 0, 0B6h, 70h, 1, 0, 66h
		db 71h,	1, 0, 16h, 72h,	1, 0, 0C6h, 72h, 1, 0, 76h, 73h
		db 1, 3	dup(0),	0E2h, 41h, 8Eh,	11h, 78h, 0Dh, 1, 0, 1Eh
		db 0Eh,	1, 0, 0C4h, 0Eh, 1, 0, 6Ah, 0Fh, 1, 0, 2 dup(10h)
		db 1, 0, 0B6h, 10h, 1, 0, 5Ch, 11h, 1, 0, 2, 12h, 1, 0
		db 0A8h, 12h, 1, 0, 4Eh, 13h, 1, 0, 0F4h, 13h, 1, 0, 9Ah
		db 14h,	1, 0, 40h, 15h,	1, 0, 0E6h, 15h, 1, 3 dup(0), 0E2h
		db 41h,	0B4h, 11h, 34h,	41h, 1,	0, 0B2h, 41h, 1, 0, 30h
		db 42h,	1, 0, 0AEh, 42h, 1, 0, 2Ch, 43h, 1, 0, 0AAh, 43h
		db 1, 0, 28h, 44h, 1, 0, 0A6h, 44h, 1, 0, 24h, 45h, 1
		db 0, 0A2h, 45h, 1, 0, 20h, 46h, 1, 0, 9Eh, 46h, 1, 0
		db 1Ch,	47h, 1,	0, 9Ah,	47h, 1,	3 dup(0), 0E2h,	41h, 0F2h
		db 11h,	28h, 0,	1, 0, 60h, 0, 1, 0, 0E8h, 0, 1,	0, 98h
		db 2 dup(1), 0,	48h, 2,	1, 0, 0F8h, 2, 1, 3 dup(0), 0FBh
		db 41h,	8Ch, 16h, 1, 0,	7Ch, 19h, 1, 0,	4Ch, 1Eh, 1, 0
		db 6Ch,	23h, 1,	0, 0ECh, 27h, 1, 3 dup(0), 0FBh, 41h, 8Ch
		db 16h,	1, 0, 4, 18h, 1, 0, 7Ch, 19h, 1, 0, 0BCh, 1Bh
		db 1, 0, 4Ch, 1Eh, 1, 0, 0DCh, 20h, 1, 0, 6Ch, 23h, 1
		db 0, 0FCh, 25h, 1, 0, 0ECh, 27h, 2 dup(0), 0A0h, 0A3h
		db 2, 0, 0CEh, 0A3h, 1,	0, 6, 0A4h, 1, 0, 84h, 0A4h, 1
		db 0, 0Ch, 0A5h, 1, 0, 0A8h, 0A5h, 1, 3	dup(0),	0FBh, 41h
		db 0CCh, 0A6h, 1, 0, 48h, 0A9h,	1, 3 dup(0), 0E2h, 41h
		db 0A4h, 12h, 0D8h, 44h, 0B0h, 46h, 8, 49h, 46h, 45h, 3Eh
		db 47h,	0B6h, 49h, 0C4h, 45h, 0DCh, 47h, 74h, 4Ah, 32h
		db 46h,	6Ah, 48h, 22h, 4Bh, 0D6h, 86h, 1, 0, 86h, 87h
		db 1, 0, 4, 88h, 1, 0, 96h, 88h, 1, 0, 26h, 86h, 2 dup(0)
		db 26h,	86h, 1,	0, 0D6h, 86h, 1, 0, 86h, 87h, 1, 0, 4
		db 88h,	1, 0, 96h, 88h,	1, 3 dup(0), 0E2h, 41h,	0DEh, 12h
		db 4Ch,	93h, 2 dup(0), 0FCh, 93h, 1, 0,	0ACh, 94h, 1, 0
		db 3Eh
		db 95h,	1, 0, 0DAh, 95h, 1, 3 dup(0), 0E2h, 41h, 0F8h
		db 12h,	4Ch, 93h, 1, 0,	0FCh, 93h, 1, 0, 0ACh, 94h, 1
		db 0, 3Eh, 95h,	1, 0, 0DAh, 95h, 1, 3 dup(0), 0E2h, 41h
		db 12h,	13h, 0A6h, 84h,	2, 0, 6, 85h, 2, 0, 66h, 85h, 2
		db 0, 0C6h, 85h, 2, 3 dup(0), 0E2h, 41h, 2Ch, 13h, 4Ch
		db 8Bh,	2, 0, 0D4h, 8Bh, 2, 0, 5Ch, 8Ch, 2, 3 dup(0), 0E2h
		db 41h,	42h, 13h, 3Ch, 89h, 2, 0, 0ECh,	89h, 2,	0, 9Ch
		db 8Ah,	2, 3 dup(0), 0E2h, 41h,	54h, 13h, 0B4h,	90h, 1
		db 0, 64h, 91h,	1, 0, 0Ah, 92h,	1, 0, 0A6h, 92h, 1, 3 dup(0)
		db 0E2h, 41h, 66h, 13h,	0E2h, 7Ah, 0Ah,	0, 26h,	7Ah, 1
		db 0, 86h, 7Ah,	1, 3 dup(0), 0E2h, 41h,	80h, 13h, 3Ah
		db 7Ch,	0Ah, 0,	2Ah, 7Bh, 1, 0,	0BCh, 7Bh, 1, 3	dup(0)
		db 0E2h, 41h, 92h, 13h,	78h, 7Dh, 0Ah, 0, 0B8h,	7Ch, 1
		db 0, 18h, 7Dh,	1, 3 dup(0), 0E2h, 41h,	0A4h, 13h, 0E8h
		db 7Eh,	0Ah, 0,	0D8h, 7Dh, 1, 0, 6Ah, 7Eh, 1, 3	dup(0)
		db 0E2h, 41h, 0B6h, 13h, 22h, 80h, 0Ah,	0, 66h,	7Fh, 1
		db 0, 0C6h, 7Fh, 1, 3 dup(0), 0E2h, 41h, 0C8h, 13h, 7Ah
		db 81h,	0Ah, 0,	6Ah, 80h, 1, 0,	0FCh, 80h, 1, 3	dup(0)
		db 0E2h, 41h, 0DAh, 13h, 0B8h, 82h, 0Ah, 0, 0F8h, 81h
		db 1, 0, 58h, 82h, 1, 3	dup(0),	0E2h, 41h, 0ECh, 13h, 28h
		db 84h,	0Ah, 0,	18h, 83h, 1, 0,	0AAh, 83h, 1, 3	dup(0)
		db 0E2h, 41h, 0FEh, 13h, 26h, 74h, 1, 0, 0D6h, 74h, 1
		db 0, 7Ch, 75h,	1, 0, 2Ch, 76h,	1, 0, 0C8h, 76h, 1, 0
		db 64h,	77h, 1,	0, 0ECh, 77h, 1, 0, 74h, 78h, 1, 0, 6
		db 79h,	1, 3 dup(0), 0E2h, 41h,	0Ch, 14h, 96h, 33h, 1
		db 0, 3Ch, 34h,	1, 0, 0E2h, 34h, 1, 0, 88h, 35h, 1, 0
		db 2Eh,	36h, 1,	0, 0D4h, 36h, 1, 0, 7Ah, 37h, 1, 0, 0F0h
		db 32h,	3, 3 dup(0), 0E2h, 41h,	36h, 14h, 20h, 38h, 1
		db 0, 0C6h, 38h, 1, 0, 6Ch, 39h, 1, 0, 12h, 3Ah, 1, 0
		db 0B8h, 3Ah, 1, 0, 5Eh, 3Bh, 1, 0, 4, 3Ch, 1, 0, 0F0h
		db 32h,	3, 3 dup(0), 0E2h, 41h,	5Ch, 14h, 66h, 2Eh, 1
		db 0, 0Ch, 2Fh,	1, 0, 0B2h, 2Fh, 1, 0, 58h, 30h, 1, 0
		db 0FEh, 30h, 1, 0, 0A4h, 31h, 1, 0, 4Ah, 32h, 1, 0, 0F0h
		db 32h,	3, 3 dup(0), 0E2h, 41h,	82h, 14h, 0DCh,	29h, 1
		db 0, 82h, 2Ah,	1, 0, 28h, 2Bh,	1, 0, 0CEh, 2Bh, 1, 0
		db 74h,	2Ch, 1,	0, 1Ah,	2Dh, 1,	0, 0C0h, 2Dh, 1, 0, 0F0h
		db 32h,	3, 3 dup(0), 0E2h, 41h,	0A8h, 14h, 0AAh, 3Ch, 1
		db 0, 50h, 3Dh,	1, 0, 0F6h, 3Dh, 1, 0, 9Ch, 3Eh, 1, 0
		db 42h,	3Fh, 1,	0, 0E8h, 3Fh, 1, 0, 8Eh, 40h, 1, 0, 0F0h
		db 32h,	3, 3 dup(0), 0E2h, 41h,	0CEh, 14h, 3Eh,	50h, 1
		db 0, 0EEh, 50h, 1, 0, 9Eh, 51h, 1, 0, 4Eh, 52h, 1, 0
		db 0FEh, 52h, 1, 0, 4Eh, 52h, 1, 0, 9Eh, 51h, 1, 0, 0EEh
		db 50h,	1, 3 dup(0), 0E2h, 41h,	0F4h, 14h, 0AEh, 53h, 1
		db 0, 5Eh, 54h,	1, 0, 0Eh, 55h,	1, 0, 0BEh, 55h, 1, 0
		db 6Eh,	56h, 1,	0, 0BEh
		db 55h,	1, 0, 0Eh, 55h,	1, 0, 5Eh, 54h,	1, 3 dup(0), 0E2h
		db 41h,	1Ah, 15h, 1Eh, 57h, 1, 0, 0CEh,	57h, 1,	0, 7Eh
		db 58h,	1, 0, 2Eh, 59h,	1, 0, 0DEh, 59h, 1, 0, 2Eh, 59h
		db 1, 0, 7Eh, 58h, 1, 0, 0CEh, 57h, 1, 3 dup(0), 0E2h
		db 41h,	40h, 15h, 0C0h,	96h, 2 dup(0), 70h, 97h, 1, 0
		db 0E4h, 97h, 1, 0, 62h, 98h, 1, 0, 0EAh, 98h, 1, 0, 7Ch
		db 99h,	1, 0, 18h, 9Ah,	1, 3 dup(0), 0E2h, 41h,	66h, 15h
		db 56h,	51h, 8Bh, 0C8h,	0E8h, 93h, 0FAh, 57h, 0BFh, 96h
		db 90h,	0E8h, 0E6h, 0F1h, 5Fh, 0C7h, 4,	0Ch, 0,	0C7h, 44h
		db 2, 98h, 39h,	0C7h, 44h, 4, 53h, 8, 8Bh, 0C2h, 0E8h
		db 0F7h, 2Bh, 3, 0C1h, 89h, 44h, 12h, 8Bh, 0C7h, 0E8h
		db 0EDh, 2Bh, 3, 0C3h, 89h, 44h, 16h, 2Eh, 8Bh,	46h, 0
		db 89h,	44h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h, 44h, 0Eh, 83h
		db 0C5h, 4, 89h, 6Ch, 10h, 83h,	0EDh, 4, 8Bh, 0C1h, 59h
		db 49h,	79h, 0B3h, 5Eh,	0C7h, 6, 88h, 8Eh, 6, 0, 0C7h
		db 6, 8Ah, 8Eh,	6, 0, 0C3h, 56h, 0E8h, 3Ah, 0FAh, 0BFh
		db 96h,	90h, 0E8h, 0A0h, 0F1h, 0BFh, 0F2h, 11h,	0C7h, 4
		db 60h,	0, 0C7h, 44h, 2, 0DFh, 28h, 0C7h, 44h, 4, 53h
		db 8, 2Eh, 8Bh,	5, 89h,	44h, 0Ch, 2Eh, 8Bh, 45h, 2, 89h
		db 44h,	0Eh, 83h, 0C7h,	4, 89h,	7Ch, 10h, 0B8h,	2Ch, 1
		db 0E8h, 89h, 2Bh, 5, 0Ah, 0, 89h, 44h,	12h, 0B8h, 0B4h
		db 0, 0E8h, 7Dh, 2Bh, 5, 6, 0, 89h, 44h, 16h, 0C7h, 44h
		db 1Ah,	7, 0, 0FFh, 6, 64h, 91h, 0E8h, 0ECh, 0F9h, 0BFh
		db 96h,	90h, 0E8h, 52h,	0F1h, 0BFh, 0B4h, 11h, 0C7h, 4
		db 18h,	0, 0C7h, 44h, 2, 0DFh, 28h, 0C7h, 44h, 4, 53h
		db 8, 2Eh, 8Bh,	5, 89h,	44h, 0Ch, 2Eh, 8Bh, 45h, 2, 89h
		db 44h,	0Eh, 83h, 0C7h,	4, 89h,	7Ch, 10h, 0B8h,	2Ch, 1
		db 0E8h, 3Bh, 2Bh, 5, 0Ah, 0, 89h, 44h,	12h, 0B8h, 0B4h
		db 0, 0E8h, 2Fh, 2Bh, 5, 6, 0, 89h, 44h, 16h, 0C7h, 44h
		db 1Ah,	7, 0, 0FFh, 6, 64h, 91h, 49h, 78h, 3, 0E9h, 5Eh
		db 0FFh, 5Eh, 0C3h

; =============== S U B	R O U T	I N E =======================================


sub_11689	proc near		; CODE XREF: seg000:10D2p seg000:1C81p ...
		mov	di, [si+0Ah]
		cmp	byte ptr [si+26h], 0
		jz	short locret_116A8
		mov	di, [si+44h]

loc_11695:				; CODE XREF: sub_11689+1Dj
		mov	di, [di+0Ah]
		cmp	word ptr [di], 0
		jz	short locret_116A8
		cmp	byte ptr [di+26h], 0
		jz	short locret_116A8
		cmp	si, [di+44h]
		jz	short loc_11695

locret_116A8:				; CODE XREF: sub_11689+7j
					; sub_11689+12j ...
		retn
sub_11689	endp


; =============== S U B	R O U T	I N E =======================================


sub_116A9	proc near		; CODE XREF: sub_11827+6Ep
		call	sub_10E6F
		xor	word_313AA, 1
		call	sub_10E6F
		xor	word_313AA, 1
		retn
sub_116A9	endp


; =============== S U B	R O U T	I N E =======================================


sub_116BA	proc near		; CODE XREF: sub_11827+71p
					; sub_11827+7Ep
		mov	si, 8FB2h
		call	sub_10762
		mov	si, 8FFEh
		call	sub_10762
		mov	si, 904Ah
		call	sub_10762
		mov	si, 9096h
		call	sub_10762
		mov	si, 90E2h
		call	sub_10762
		mov	si, 9F00h
		mov	di, 8FB2h
		call	sub_1077C
		mov	word ptr [si], 8
		mov	word ptr [si+2], 4311h
		mov	word ptr [si+4], 853h
		mov	word ptr [si+0Ch], 77Ah
		mov	word ptr [si+0Eh], 0
		mov	word ptr [si+12h], 0A0h	; '
		mov	word ptr [si+16h], 0B0h	; '
		mov	bx, 3292h
		mov	cx, 4

loc_11709:				; CODE XREF: sub_116BA+8Ej
		call	sub_11022
		mov	di, 8FB2h
		call	sub_1078E
		mov	word ptr [si], 0C4h ; '
		mov	word ptr [si+2], 4759h
		mov	word ptr [si+4], 761h
		mov	di, [bx]
		add	bx, 2
		mov	ax, cs:[di]
		mov	[si+0Ch], ax
		mov	ax, cs:[di+2]
		mov	[si+0Eh], ax
		add	di, 4
		mov	[si+10h], di
		mov	word ptr [si+12h], 0A0h	; '
		mov	word ptr [si+16h], 0B0h	; '
		mov	ax, cx
		dec	ax
		mov	[si+22h], ax
		loop	loc_11709
		mov	word_31664, 0
		mov	word_3167C, 0
		mov	word_31668, 0
		mov	word_3166C, 0
		mov	word_31670, 0
		mov	word_31674, 0
		mov	word_31678, 0
		call	sub_12BCC
		mov	cx, 0Eh
		mov	di, 916Ah
		xor	ax, ax
		rep stosw
		call	sub_135EB
		mov	word_3165E, 8
		mov	word_31660, 8
		mov	word_31662, 1
		mov	word_313AE, 0
		mov	word_31680, 0
		mov	word_313B0, 0
		mov	word_313B2, 0
		mov	word_31682, 0
		mov	word_31684, 0
		mov	word_31686, 0
		mov	word_31688, 0
		mov	word_3168E, 0
		mov	word_31690, 0
		mov	word_313B4, 0
		mov	word_31692, 0
		mov	di, 921Ch
		mov	cx, 7
		xor	al, al
		rep stosb
		mov	word_31694, 0
		mov	word_316B6, 27h	; '''
		mov	word_316B8, 0
		mov	byte_31753, 0
		mov	byte_31754, 0
		mov	word_316BA, 0FFh
		mov	word_316BC, 1
		mov	byte_31755, 0
		mov	word_316E0, 3
		call	sub_10E91
		mov	byte_314DF, 0FFh
		call	sub_10BA5
		retn
sub_116BA	endp


; =============== S U B	R O U T	I N E =======================================


sub_11827	proc near		; CODE XREF: sub_13C75+61p
		mov	byte_3148C, 0
		mov	byte_3148D, 0FFh
		mov	word_31E4E, 8
		mov	word_31E4A, 1
		mov	word_313AA, 0
		mov	byte_3148E, 0
		cmp	word_313A0, 2
		jnz	short loc_11854
		mov	byte_3148E, 0FFh

loc_11854:				; CODE XREF: sub_11827+26j
		mov	byte_3148F, 0
		mov	byte_31490, 0
		call	sub_109A7
		call	sub_10A73
		mov	byte_31491, 0
		mov	si, 9F4Ch
		mov	cx, 9Eh	; '
		mov	word_313AC, si

loc_11873:				; CODE XREF: sub_11827+58j
		mov	word ptr [si], 0
		lea	di, [si+4Ch]
		mov	[si+8],	di
		mov	si, di
		loop	loc_11873
		mov	word ptr [si], 0
		mov	word ptr [si+8], 0
		mov	di, 9C80h
		mov	ax, 0FFFFh
		mov	cx, 140h
		rep stosw
		call	sub_116A9
		call	sub_116BA
		cmp	byte_3148E, 0
		jz	short loc_118AD
		call	sub_11A19
		call	sub_116BA
		call	sub_11A19
		jmp	short locret_118BC
; ---------------------------------------------------------------------------

loc_118AD:				; CODE XREF: sub_11827+79j
		call	sub_11A19
		mov	word_316BA, 0
		call	sub_10E91
		call	sub_11A19

locret_118BC:				; CODE XREF: sub_11827+84j
		retn
sub_11827	endp

; ---------------------------------------------------------------------------
		db 0EEh, 66h, 1, 0, 1Ch, 67h, 1, 3 dup(0), 0E2h, 41h, 0BDh
		db 18h,	40h, 67h, 1, 0,	6Eh, 67h, 1, 3 dup(0), 0E2h, 41h
		db 0CBh, 18h, 0E4h, 67h, 1, 0, 12h, 68h, 1, 3 dup(0), 0E2h
		db 41h,	0D9h, 18h, 92h,	67h, 1,	0, 0C0h, 67h, 1, 3 dup(0)
		db 0E2h, 41h, 0E7h, 18h

; =============== S U B	R O U T	I N E =======================================


sub_118F5	proc near		; CODE XREF: sub_11A62p sub_13C75+473p ...
		mov	ah, 1
		int	80h		; LINUX	-
		cmp	word_31692, 0
		jz	short loc_11903
		call	sub_1472D

loc_11903:				; CODE XREF: sub_118F5+9j
		mov	ax, word_316D6
		sub	ax, word_316C0
		mov	word_3822E, ax
		mov	si, word_3161C
		call	sub_1371A
		mov	si, word_315D0
		call	sub_1371A
		mov	si, word_31584
		call	sub_1371A

loc_11922:				; CODE XREF: sub_118F5+39j
		mov	si, word_31538
		cmp	word ptr [si], 0
		jz	short loc_11930
		call	sub_137A9
		jmp	short loc_11922
; ---------------------------------------------------------------------------

loc_11930:				; CODE XREF: sub_118F5+34j
		mov	di, 9C80h
		mov	ax, 0FFFFh
		mov	cx, 140h
		rep stosw
		retn
sub_118F5	endp


; =============== S U B	R O U T	I N E =======================================


sub_1193C	proc near		; CODE XREF: sub_1195B+42p
					; sub_13C75+4DDp
		mov	si, 916Ah
		mov	cx, 7

loc_11942:				; CODE XREF: sub_1193C:loc_11958j
		lodsw
		mov	bx, ax
		lodsw
		test	bx, bx
		jz	short loc_11958
		push	si
		push	cx
		push	ax
		mov	ax, bx
		call	sub_129D7
		pop	ax
		mov	[di+34h], ax
		pop	cx
		pop	si

loc_11958:				; CODE XREF: sub_1193C+Cj
		loop	loc_11942
		retn
sub_1193C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1195B	proc near		; CODE XREF: sub_11A65:loc_11A84p
		mov	si, 9F00h
		mov	byte_31754, 0
		mov	ax, word_316D2
		mov	[si+12h], ax
		mov	word ptr [si+16h], 0B0h	; '
		mov	ax, word_316D6
		mov	word_316C0, ax
		mov	word_316DA, ax
		inc	ax
		mov	word_316C2, ax
		add	ax, 0BFh ; '
		mov	word_316C4, ax
		mov	ax, word_316D6
		and	ax, 0Fh
		mov	word_316C6, ax
		mov	ax, word_316D6
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	dx, 28h	; '('
		mul	dx
		mov	word_316BE, ax
		call	sub_1193C
		mov	ax, word_31696
		mov	word_3168A, ax
		mov	ax, word_31698
		mov	word_3168C, ax
		mov	di, 8E8Ch
		mov	cx, 10h
		xor	ax, ax
		rep stosw
		mov	word_313B0, 0
		mov	word_313AE, 0
		mov	byte_314DF, 0FFh
		mov	word_316CE, 0
		mov	di, 8EBCh
		mov	cx, 4

loc_119D3:				; CODE XREF: sub_1195B+80j
		mov	ax, [si+12h]
		stosw
		mov	ax, [si+16h]
		stosw
		loop	loc_119D3
		mov	di, 8ECCh
		mov	cx, 11h

loc_119E3:				; CODE XREF: sub_1195B+94j
		mov	ax, word_316C0
		stosw
		mov	ax, [si+12h]
		stosw
		mov	ax, [si+16h]
		stosw
		loop	loc_119E3
		push	si
		mov	ax, word_313AA
		add	al, 31h	; '1'
		mov	byte_2BC57, al
		mov	si, 3715h
		mov	byte_2BC7E, 0FFh
		call	sub_15926
		mov	byte_2BC7E, 0
		call	sub_10D5F
		pop	si
		cmp	word_31692, 0
		jz	short locret_11A18
		call	sub_12B22

locret_11A18:				; CODE XREF: sub_1195B+B8j
		retn
sub_1195B	endp


; =============== S U B	R O U T	I N E =======================================


sub_11A19	proc near		; CODE XREF: sub_11827+7Bp
					; sub_11827+81p ...
		mov	si, 0CE80h
		mov	di, 8FB2h
		mov	cx, 146h

loc_11A22:				; CODE XREF: sub_11A19+10j
		lodsw
		mov	bx, [di]
		mov	[si-2],	bx
		stosw
		loop	loc_11A22
		mov	si, 9F00h
		mov	di, 8F62h
		mov	cx, 4Ch	; 'L'

loc_11A34:				; CODE XREF: sub_11A19+22j
		lodsb
		mov	ah, [di]
		mov	[si-1],	ah
		stosb
		loop	loc_11A34
		mov	si, 0
		mov	di, 0
		mov	cx, 1770h
		mov	ax, seg	seg003
		mov	es, ax
		assume es:seg003

loc_11A4B:				; CODE XREF: sub_11A19+3Aj
		lodsw
		mov	bx, es:[di]
		mov	[si-2],	bx
		stosw
		loop	loc_11A4B
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		xor	word_313AA, 1
		call	sub_10F5A
		retn
sub_11A19	endp


; =============== S U B	R O U T	I N E =======================================


sub_11A62	proc near		; CODE XREF: sub_13C75:loc_13F9Ap
					; sub_13C75+4F7p
		call	sub_118F5
sub_11A62	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_11A65	proc near		; CODE XREF: sub_13C75+48Bp
		mov	bx, word_313AA
		cmp	byte ptr [bx-70A3h], 0
		jz	short loc_11A8E
		xor	bx, 1
		cmp	byte ptr [bx-70A3h], 0
		jz	short loc_11A84
		cmp	byte ptr [bx-70A1h], 0
		jnz	short loc_11A84
		call	sub_11A19

loc_11A84:				; CODE XREF: sub_11A65+13j
					; sub_11A65+1Aj ...
		call	sub_1195B
		mov	word_31E4E, 8
		retn
; ---------------------------------------------------------------------------

loc_11A8E:				; CODE XREF: sub_11A65+9j
		call	sub_11A19
		mov	bx, word_313AA
		cmp	byte ptr [bx-70A1h], 0
		jz	short loc_11A84
		mov	byte_31491, 0FFh
		cmp	word_31E4C, 5
		jnz	short loc_11A84
		mov	byte_314E0, 0FFh
		jmp	short loc_11A84
sub_11A65	endp


; =============== S U B	R O U T	I N E =======================================


sub_11AAF	proc near		; CODE XREF: sub_11B43+39p
					; sub_11B43+46p
		mov	word_316BE, 2D00h
		mov	word_316C6, 0
		mov	word_316C0, 1200h
		mov	word_316C2, 7FEEh
		mov	word_316C4, 7FEEh
		mov	word_316DE, 10h
		mov	ax, word_32442
		mov	word_316D2, ax
		mov	ax, word_32446
		mov	word_316D4, ax
		mov	ax, word_316C0
		mov	word_316D6, ax
		mov	ax, word_3168A
		mov	word_31696, ax
		mov	ax, word_3168C
		mov	word_31698, ax
		mov	word_316C8, 1
		mov	word_316CA, 0
		mov	word_316CE, 0
		call	sub_10F78
		mov	word_316D0, 0
		mov	word_313AE, 0
		mov	word_316CC, 0
		mov	word_3168A, 0
		mov	word_3168C, 0
		mov	word_31696, 0
		mov	word_31698, 0
		mov	word_31694, 0
		mov	word_316DC, 1
		mov	word_316E2, 0
		retn
sub_11AAF	endp


; =============== S U B	R O U T	I N E =======================================


sub_11B43	proc near		; CODE XREF: sub_13C75+64p
					; sub_13C75:loc_1415Fp
		mov	si, 0
		mov	di, 0
		mov	cx, 1770h
		mov	ax, seg	seg003
		mov	es, ax
		assume es:seg003
		rep movsw
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	word_31462, 0
		mov	word_313B6, 0
		mov	di, 8E8Ch
		mov	cx, 10h
		xor	ax, ax
		rep stosw
		mov	byte_314E0, 0
		mov	byte_31489, 0
		mov	byte_3148B, 0
		call	sub_11AAF
		cmp	word_313A0, 2
		jnz	short locret_11B8F
		call	sub_11A19
		call	sub_11AAF
		call	sub_11A19

locret_11B8F:				; CODE XREF: sub_11B43+41j
		retn
sub_11B43	endp

; ---------------------------------------------------------------------------
		test	bx, bx
		jns	short sub_11BA2
		neg	bx
		call	sub_11BA2
		sub	ax, 4
		neg	ax
		and	ax, 7
		retn

; =============== S U B	R O U T	I N E =======================================


sub_11BA2	proc near		; CODE XREF: seg000:1B92j seg000:1B96p
		test	ax, ax
		jns	short sub_11BB4
		neg	ax
		call	sub_11BB4
		sub	ax, 8
		neg	ax
		and	ax, 7
		retn
sub_11BA2	endp


; =============== S U B	R O U T	I N E =======================================


sub_11BB4	proc near		; CODE XREF: sub_11BA2+2j sub_11BA2+6p
		test	ax, ax
		jz	short loc_11BCF
		test	bx, bx
		jz	short loc_11BE2
		cmp	ax, bx
		jz	short loc_11BE6
		jg	short loc_11BD3
		shr	ax, 1
		mov	dx, ax
		xor	ax, ax
		div	bx
		cmp	ax, 3504h
		jge	short loc_11BE6

loc_11BCF:				; CODE XREF: sub_11BB4+2j
		mov	ax, 4
		retn
; ---------------------------------------------------------------------------

loc_11BD3:				; CODE XREF: sub_11BB4+Cj
		shr	bx, 1
		mov	dx, bx
		mov	bx, ax
		xor	ax, ax
		div	bx
		cmp	ax, 3504h
		jge	short loc_11BE6

loc_11BE2:				; CODE XREF: sub_11BB4+6j
		mov	ax, 2
		retn
; ---------------------------------------------------------------------------

loc_11BE6:				; CODE XREF: sub_11BB4+Aj
					; sub_11BB4+19j ...
		mov	ax, 3
		retn
sub_11BB4	endp


; =============== S U B	R O U T	I N E =======================================


sub_11BEA	proc near		; CODE XREF: seg000:39DCp seg000:434Fp ...
		push	si
		add	si, 28h	; '('
		lodsw
		mov	word_38212, ax
		mov	word_313E4, ax
		lodsw
		mov	word_38216, ax
		mov	word_313E6, ax
		lodsw
		mov	word_3821A, ax
		mov	word_313E8, ax
		lodsw
		mov	word_3821E, ax
		mov	word_313EA, ax
		mov	di, word_31584
		call	sub_11C18
		jnz	short loc_11C16
		call	sub_10F96

loc_11C16:				; CODE XREF: sub_11BEA+27j
		pop	si
		retn
sub_11BEA	endp


; =============== S U B	R O U T	I N E =======================================


sub_11C18	proc near		; CODE XREF: sub_11BEA+24p
					; sub_11C18+2Ej ...
		cmp	word ptr [di], 0
		jz	short locret_11C4E
		mov	ax, [di+28h]
		mov	word_38222, ax
		mov	ax, [di+2Ah]
		mov	word_38226, ax
		mov	ax, [di+2Ch]
		mov	word_3822A, ax
		mov	ax, [di+2Eh]
		mov	word_3822E, ax
		call	sub_10F2F
		jnz	short loc_11C48
		cmp	word ptr [di], 0B8h ; '
		jnz	short loc_11C43
		mov	di, [di+46h]

loc_11C43:				; CODE XREF: sub_11C18+26j
					; sub_11C18+34j
		mov	di, [di+0Ah]
		jmp	short sub_11C18
; ---------------------------------------------------------------------------

loc_11C48:				; CODE XREF: sub_11C18+20j
		cmp	word ptr [di], 0B8h ; '
		jz	short loc_11C43

locret_11C4E:				; CODE XREF: sub_11C18+3j
		retn
sub_11C18	endp

; ---------------------------------------------------------------------------
		mov	word_38212, ax
		mov	word_313E4, ax
		mov	word_38216, bx
		mov	word_313E6, bx
		mov	word_3821A, cx
		mov	word_313E8, cx
		mov	word_3821E, dx
		mov	word_313EA, dx
		mov	cs:word_11CCA, bp
		mov	di, word_31584

loc_11C76:				; CODE XREF: seg000:1CBFj
		call	sub_11C18
		jz	short loc_11CC1
		mov	word_381F6, si
		mov	si, di
		call	sub_11689
		push	di
		mov	ax, cs:word_11CCA
		mov	di, si
		mov	si, word_381F6
		push	word_38212
		push	word_38216
		push	word_3821A
		push	word_3821E
		call	sub_13A36
		pop	word_3821E
		pop	word_3821A
		pop	word_38216
		pop	word_38212
		pop	di
		cmp	word ptr [di], 4
		jz	short locret_11CC9
		cmp	word_31694, 0
		jnz	short locret_11CC9
		jmp	short loc_11C76
; ---------------------------------------------------------------------------

loc_11CC1:				; CODE XREF: seg000:1C79j
		call	sub_10F96
		jz	short locret_11CC9
		jmp	sub_13A36
; ---------------------------------------------------------------------------

locret_11CC9:				; CODE XREF: seg000:1CB6j seg000:1CBDj ...
		retn
; ---------------------------------------------------------------------------
word_11CCA	dw 0			; DATA XREF: seg000:1C6Dw seg000:1C85r

; =============== S U B	R O U T	I N E =======================================


sub_11CCC	proc near		; CODE XREF: sub_10EDDp seg000:3A1Cp
		mov	di, word_31584
		mov	word_313E4, ax
		mov	word_313E8, ax
		mov	word_313E6, bx
		mov	word_313EA, bx

loc_11CDE:				; CODE XREF: sub_11CCC+3Ej
		cmp	word ptr [di], 0
		jz	short loc_11D0C
		cmp	ax, [di+28h]
		jl	short loc_11CFE
		cmp	ax, [di+2Ch]
		jg	short loc_11CFE
		cmp	bx, [di+2Ah]
		jl	short loc_11CFE
		cmp	bx, [di+2Eh]
		jg	short loc_11CFE
		cmp	word ptr [di], 0B8h ; '
		jz	short loc_11D07
		retn
; ---------------------------------------------------------------------------

loc_11CFE:				; CODE XREF: sub_11CCC+1Aj
					; sub_11CCC+1Fj ...
		cmp	word ptr [di], 0B8h ; '
		jnz	short loc_11D07
		mov	di, [di+46h]

loc_11D07:				; CODE XREF: sub_11CCC+2Fj
					; sub_11CCC+36j
		mov	di, [di+0Ah]
		jmp	short loc_11CDE
; ---------------------------------------------------------------------------

loc_11D0C:				; CODE XREF: sub_11CCC+15j
		mov	word_38212, ax
		mov	word_38216, bx
		mov	word_3821A, ax
		mov	word_3821E, bx
		call	sub_10F96
		retn
sub_11CCC	endp


; =============== S U B	R O U T	I N E =======================================


sub_11D1E	proc near		; CODE XREF: sub_11E29+1Ap
		push	si
		mov	si, 0
		add	si, word_316BE
		add	dx, word_316C6
		mov	bx, dx
		and	bx, 0Fh
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FEh
		add	si, ax
		mov	ax, 28h	; '('
		mul	dx
		add	si, ax
		mov	dx, 4
		mov	di, 9920h
		push	bx
		call	sub_11E02
		pop	bx
		mov	di, 9922h
		push	bx
		call	sub_11E02
		pop	bx
		mov	di, 9924h
		push	bx
		call	sub_11E02
		pop	bx
		sub	di, 4
		add	si, 22h	; '"'
		add	cx, bx
		sub	cx, 10h
		jle	short loc_11D97

loc_11D71:				; CODE XREF: sub_11D1E+77j
		xor	bx, bx
		push	di
		call	sub_11E02
		pop	di
		xor	bx, bx
		add	di, 2
		push	di
		call	sub_11E02
		pop	di
		xor	bx, bx
		add	di, 2
		push	di
		call	sub_11E02
		pop	di
		add	di, 5Ch	; '\'
		add	si, 22h	; '"'
		sub	cx, 10h
		jg	short loc_11D71

loc_11D97:				; CODE XREF: sub_11D1E+51j
		pop	si
		retn
sub_11D1E	endp

; ---------------------------------------------------------------------------
		push	si
		mov	si, 0
		add	si, word_316BE
		add	dx, word_316C6
		mov	bx, dx
		and	bx, 0Fh
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FEh
		add	si, ax
		mov	ax, 28h	; '('
		mul	dx
		add	si, ax
		mov	dx, 2
		mov	di, 9920h
		push	bx
		call	sub_11E02
		pop	bx
		mov	di, 9922h
		push	bx
		call	sub_11E02
		pop	bx
		add	di, 3Eh	; '>'
		add	si, 24h	; '$'
		add	cx, bx
		sub	cx, 10h
		jle	short loc_11E00

loc_11DE4:				; CODE XREF: seg000:1DFEj
		xor	bx, bx
		push	di
		call	sub_11E02
		pop	di
		xor	bx, bx
		add	di, 2
		push	di
		call	sub_11E02
		pop	di
		sub	di, 2
		add	si, 24h	; '$'
		sub	cx, 10h
		jg	short loc_11DE4

loc_11E00:				; CODE XREF: seg000:1DE2j
		pop	si
		retn

; =============== S U B	R O U T	I N E =======================================


sub_11E02	proc near		; CODE XREF: sub_11D1E+32p
					; sub_11D1E+3Ap ...
		push	cx
		push	bx
		sub	bx, 10h
		neg	bx
		cmp	cx, bx
		jle	short loc_11E0F
		mov	cx, bx

loc_11E0F:				; CODE XREF: sub_11E02+9j
		pop	bx
		test	cx, cx
		jz	short loc_11E27
		lodsw
		push	si
		mov	si, 5538h
		shr	ax, 1
		add	si, ax
		add	si, bx
		add	si, bx

loc_11E21:				; CODE XREF: sub_11E02+22j
		movsw
		add	di, dx
		loop	loc_11E21
		pop	si

loc_11E27:				; CODE XREF: sub_11E02+10j
		pop	cx
		retn
sub_11E02	endp


; =============== S U B	R O U T	I N E =======================================


sub_11E29	proc near		; CODE XREF: seg000:43BFp seg000:4462p
		mov	ax, [si+12h]
		sub	ax, 0Eh
		mov	dx, [si+16h]
		sub	dx, 0Eh
		mov	bx, ax
		and	bx, 0Fh
		shl	bx, 1
		push	word ptr [bx+329Ah]
		mov	cx, 19h
		call	sub_11D1E
		pop	di
		push	si
		mov	si, 9920h
		mov	cx, 4Bh	; 'K'

loc_11E4E:				; CODE XREF: sub_11E29+2Dj
		lodsw
		and	ax, [di]
		jnz	short loc_11E5C
		add	di, 2
		loop	loc_11E4E
		pop	si
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_11E5C:				; CODE XREF: sub_11E29+28j
		pop	si
		xor	ax, ax
		dec	ax
		retn
sub_11E29	endp

; ---------------------------------------------------------------------------
		push	si
		call	sub_11022
		push	di
		mov	di, 9096h
		call	sub_1077C
		pop	di
		mov	ax, [di+22h]
		mov	[si+22h], ax
		shl	ax, 1
		shl	ax, 1
		mov	bx, 31FEh
		add	bx, ax
		mov	ax, [bx]
		add	bx, 2
		mov	[si], ax
		shl	ax, 1
		mov	dx, 0Eh
		mov	bp, 31D8h
		add	bp, ax
		test	word ptr ds:[bp+0], 1
		jz	short loc_11E98
		mov	dx, 0Eh

loc_11E98:				; CODE XREF: seg000:1E93j
		mov	word_313B8, dx
		mov	word ptr [si+2], 28DFh
		mov	word ptr [si+4], 853h
		mov	ax, [di+12h]
		mov	[si+12h], ax
		mov	ax, [di+16h]
		mov	[si+16h], ax
		mov	bx, [bx]
		mov	ax, cs:[bx]
		mov	[si+0Ch], ax
		mov	ax, cs:[bx+2]
		mov	[si+0Eh], ax
		add	bx, 4
		mov	[si+10h], bx
		mov	word ptr [si+1Ah], 7
		mov	si, di
		call	sub_107C0
		pop	si
		retn
; ---------------------------------------------------------------------------
		push	si
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word ptr [di], 14h
		mov	word ptr [di+2], 1F4Dh
		mov	word ptr [di+4], 853h
		mov	[di+0Ch], bp
		mov	word ptr [di+0Eh], 0
		mov	[di+12h], ax
		mov	[di+16h], bx
		mov	[di+1Ch], cx
		mov	[di+42h], dx
		mov	word ptr [di+28h], 3E8h
		mov	word ptr [di+2Ch], 3E8h
		retn
; ---------------------------------------------------------------------------
		db 2 dup(0), 41h, 2Dh, 0, 40h, 41h, 2Dh, 2 dup(0), 0BFh
		db 0D2h, 0, 0C0h, 0BFh,	0D2h, 7Dh, 18h,	20h, 3Bh, 20h
		db 3Bh,	7Dh, 18h, 83h, 0E7h, 0E0h, 0C4h, 0E0h, 0C4h, 83h
		db 0E7h, 0, 0C0h, 0BFh,	0D2h, 2	dup(0),	41h, 2Dh, 0, 40h
		db 41h,	2Dh, 2 dup(0), 0BFh, 0D2h, 0E0h, 0C4h, 83h, 0E7h
		db 7Dh,	18h, 20h, 3Bh, 20h, 3Bh, 7Dh, 18h, 83h,	0E7h, 0E0h
		db 0C4h, 0E8h, 61h, 22h, 8Bh, 5Ch, 1Ch,	0D1h, 0E3h, 2Eh
		db 8Bh,	87h, 0Dh, 1Fh, 0F7h, 6Ch, 42h, 0D1h, 0E0h, 0D1h
		db 0D2h, 0D1h, 0E0h, 0D1h, 0D2h, 1, 44h, 14h, 11h, 54h
		db 12h,	2Eh, 8Bh, 87h, 2Dh, 1Fh, 0F7h, 6Ch, 42h, 0D1h
		db 0E0h, 0D1h, 0D2h, 0D1h, 0E0h, 0D1h, 0D2h, 1,	44h, 18h
		db 11h,	54h, 16h, 0A1h,	98h, 91h, 1, 44h, 16h, 81h, 7Ch
		db 12h,	40h, 1,	73h, 22h, 81h, 7Ch, 16h, 0C0h, 0, 73h
		db 1Bh,	0E8h, 0F1h, 15h, 0E8h, 13h, 23h, 74h, 16h, 83h
		db 3Eh,	88h, 91h, 0, 75h, 0Ch, 0B8h, 4,	0, 0E8h, 0A5h
		db 1Ch,	0C7h, 6, 4, 9Fh, 0B9h, 8, 0E8h,	0Dh, 0E8h, 0C3h
		db 0E8h, 0FAh, 21h, 0A1h, 12h, 9Fh, 89h, 44h, 12h, 0A1h
		db 16h,	9Fh, 89h, 44h, 16h, 83h, 3Eh, 1Eh, 99h,	0, 74h
		db 3, 0E9h, 0DCh, 27h, 0C7h, 44h, 4, 53h, 8, 0FFh, 0Eh
		db 88h,	91h, 0BAh, 0AAh, 0, 8Bh, 0Eh, 88h, 91h,	0B8h, 4
		db 0, 0BBh, 0A0h, 0, 56h, 0E8h,	75h, 26h, 5Eh, 83h, 3Eh
		db 88h,	91h, 0,	75h, 3,	0E8h, 0CEh, 0E7h, 0C3h,	80h, 3Eh
		db 24h,	92h, 0,	74h, 3,	0E9h, 32h, 1Ah,	0E8h, 0B1h, 21h
		db 83h,	7Ch, 1Ah, 0, 7Eh, 15h, 0FFh, 4Ch, 1Ah, 83h, 7Ch
		db 1Ah,	8, 7Ch,	3, 0E9h, 9Eh, 0, 8Bh, 44h, 12h,	8Bh, 5Ch
		db 16h,	0E9h, 0B9h, 0, 83h, 7Ch, 22h, 0, 75h, 10h, 0E8h
		db 6Bh,	0F0h, 83h, 3Dh,	0, 75h,	3, 0E9h, 0B8h, 0, 89h
		db 7Ch,	22h, 0EBh, 23h,	8Bh, 7Ch, 22h, 81h, 3Dh, 0C8h
		db 0, 7Ch, 0E7h, 83h, 7Dh, 2Ch,	0, 78h,	0E1h, 81h, 7Dh
		db 28h,	40h, 1,	7Dh, 0DAh, 83h,	7Dh, 2Eh, 0, 78h, 0D4h
		db 81h,	7Dh, 2Ah, 0C0h,	0, 7Dh,	0CDh, 83h, 7Ch,	1Ah, 0
		db 74h,	5, 0FFh, 44h, 1Ah, 75h,	51h, 8Bh, 45h, 28h, 5
		db 2, 0, 2Bh, 44h, 12h,	8Bh, 5Dh, 2Ah, 83h, 0C3h, 2, 2Bh
		db 5Ch,	16h, 0E8h, 1Ch,	0FBh, 2Bh, 44h,	1Ch, 74h, 37h
		db 79h,	3, 5, 8, 0, 3Dh, 4, 0, 7Ch, 5, 0FFh, 4Ch, 1Ch
		db 0EBh, 3, 0FFh, 44h, 1Ch, 83h, 64h, 1Ch, 7, 0C7h, 44h
		db 1Ah,	0FDh, 0FFh, 8Bh, 5Ch, 1Ch, 0D1h, 0E3h, 8Bh, 0BFh
		db 0BCh, 30h, 2Eh, 8Bh,	5, 89h,	44h, 0Ch, 2Eh, 8Bh, 45h
		db 2, 89h, 44h,	0Eh, 83h, 0C7h,	4, 89h,	7Ch, 10h, 8Bh
		db 5Ch,	1Ch, 0D1h, 0E3h, 8Bh, 87h, 0DCh, 30h, 3, 44h, 12h
		db 3Dh,	40h, 1,	73h, 32h, 89h, 44h, 12h, 8Bh, 9Fh, 0CCh
		db 30h,	3, 5Ch,	16h, 81h, 0FBh,	0C0h, 0, 73h, 22h, 89h
		db 5Ch,	16h, 0E8h, 0F5h, 0FBh, 75h, 1, 0C3h, 0E8h, 0E3h
		db 0E6h, 2Eh, 0A1h, 0A0h, 3Dh, 0E9h, 52h, 19h, 8Bh, 44h
		db 12h,	8Bh, 5Ch, 16h, 0BDh, 30h, 12h, 0BAh, 53h, 8, 0E8h
		db 33h,	12h, 0E8h, 0CAh, 0E6h, 0C3h, 0A1h, 12h,	9Fh, 89h
		db 44h,	12h, 0A1h, 16h,	9Fh, 89h, 44h, 16h, 83h, 3Eh, 1Eh
		db 99h,	0, 74h,	3, 0E9h, 9Ch, 26h, 0C7h, 44h, 4, 53h
		db 8, 80h, 3Eh,	0AEh, 8Fh, 0, 74h, 22h,	33h, 0C0h, 0BBh
		db 0F7h, 0FFh, 0B9h, 0FBh, 0FFh, 0BAh, 0F4h, 0FFh, 0BDh
		db 0B8h, 12h, 0E8h, 0CAh, 24h, 33h, 0C0h, 0BBh,	0F7h, 0FFh
		db 0B9h, 6, 0, 0BAh, 0F4h, 0FFh, 0BDh, 0B8h, 12h, 0E8h
		db 0B9h, 24h, 0C3h, 0E8h, 72h, 20h, 0A1h, 12h, 9Fh, 89h
		db 44h,	12h, 0A1h, 16h,	9Fh, 89h, 44h, 16h, 83h, 3Eh, 1Eh
		db 99h,	0, 74h,	3, 0E9h, 54h, 26h, 0C7h, 44h, 4, 53h, 8
		db 0F6h, 6, 59h, 8Fh, 80h, 75h,	3, 0E9h, 84h, 0, 83h, 7Ch
		db 1Ah,	0, 74h,	8, 0B4h, 11h, 0CDh, 80h, 84h, 0C0h, 75h
		db 0Ch,	0C7h, 6, 88h, 8Eh, 5, 0, 0B8h, 1, 0, 89h, 44h
		db 1Ah,	0B9h, 1, 0, 56h, 0E8h, 9Dh, 0EEh, 0BFh,	96h, 90h
		db 0E8h, 0F1h, 0E5h, 8Bh, 0FEh,	5Eh, 0C7h, 5, 0B4h, 0
		db 0C7h, 45h, 2, 9Ch, 39h, 0C7h, 45h, 4, 53h, 8, 8Bh, 44h
		db 12h,	89h, 45h, 12h, 0C7h, 45h, 14h, 0, 80h, 0E8h, 0E7h
		db 1Fh,	25h, 3,	0, 3, 44h, 16h,	2Dh, 10h, 0, 85h, 0C9h
		db 75h,	3, 2Dh,	6, 0, 89h, 45h,	16h, 0BDh, 88h,	12h, 2Eh
		db 8Bh,	46h, 0,	89h, 45h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h, 45h
		db 0Eh,	83h, 0C5h, 4, 89h, 6Dh,	10h, 8Bh, 44h, 34h, 89h
		db 45h,	34h, 89h, 4Dh, 22h, 0E8h, 0B1h,	1Fh, 98h, 89h
		db 45h,	1Ch, 49h, 79h, 9Ah, 2 dup(0C3h), 0E8h, 0C5h, 1Fh
		db 8Bh,	7Ch, 1Ch, 83h, 3Dh, 34h, 75h, 22h, 0A1h, 12h, 9Fh
		db 3, 45h, 30h,	89h, 44h, 12h, 0A1h, 16h, 9Fh, 3, 45h
		db 32h,	89h, 44h, 16h, 83h, 3Eh, 1Eh, 99h, 0, 74h, 3, 0E9h
		db 99h,	25h, 0C7h, 44h,	4, 53h,	8, 0C3h, 0E8h, 0A7h, 0E5h
		db 0C3h, 0E8h, 94h, 1Fh, 0A1h, 0BCh, 8Eh, 89h, 44h, 12h
		db 0A1h, 0BEh, 8Eh, 5, 19h, 0, 89h, 44h, 16h, 83h, 3Eh
		db 1Eh,	99h, 0,	74h, 3,	0E9h, 73h, 25h,	0C7h, 44h, 4, 53h
		db 8, 83h, 7Ch,	1Ah, 0,	74h, 3,	0FFh, 4Ch, 1Ah,	0F6h, 6
		db 59h,	8Fh, 80h, 74h, 4Fh, 83h, 7Ch, 1Ah, 0, 75h, 49h
		db 0C7h, 44h, 1Ah, 6, 0, 8Bh, 5Ch, 34h,	0D1h, 0E3h, 8Bh
		db 0BFh, 0ECh, 30h, 8Bh, 0Dh, 83h, 0C7h, 2, 0BBh, 80h
		db 9Ch,	0BAh, 4Fh, 0, 83h, 3Fh,	0, 78h,	7, 83h,	0C3h, 8
		db 4Ah,	79h, 0F5h, 0C3h, 8Bh, 44h, 12h,	3, 5, 89h, 7, 8Bh
		db 44h,	16h, 3,	45h, 2,	89h, 47h, 2, 8Bh, 45h, 4, 89h
		db 47h,	4, 8Bh,	45h, 6,	89h, 47h, 6, 83h, 0C3h,	8, 83h
		db 0C7h, 8, 0E2h, 0D8h,	0C3h, 0E8h, 13h, 1Fh, 83h, 3Eh
		db 1Eh,	99h, 0,	74h, 3,	0E9h, 1, 25h, 0C7h, 44h, 4, 53h
		db 8, 83h, 7Ch,	1Ah, 0,	75h, 32h, 0F6h,	6, 59h,	8Fh, 80h
		db 75h,	10h, 0A1h, 0BCh, 8Eh, 89h, 44h,	12h, 0A1h, 0BEh
		db 8Eh,	5, 19h,	0, 89h,	44h, 16h, 0C3h,	0C7h, 44h, 1Ah
		db 1, 0, 0E8h, 0B7h, 12h, 0E8h,	15h, 0F9h, 74h,	0Dh, 0C7h
		db 6, 88h, 8Eh,	2 dup(0), 2Eh, 0A1h, 0A2h, 3Dh,	0E9h, 52h
		db 17h,	0C3h, 78h, 49h,	0F6h, 6, 59h, 8Fh, 80h,	74h, 3Ch
		db 0A1h, 12h, 9Fh, 2Bh,	6, 34h,	8Fh, 0D1h, 0E0h, 0D1h
		db 0E0h, 3, 44h, 12h, 79h, 2, 33h, 0C0h, 3Dh, 3Fh, 1, 7Eh
		db 3, 0B8h, 3Fh, 1, 89h, 44h, 12h, 0A1h, 16h, 9Fh, 2Bh
		db 6, 36h, 8Fh,	0D1h
		db 0E0h, 0D1h, 0E0h, 3,	44h, 16h, 79h, 2, 33h, 0C0h, 3Dh
		db 0BFh, 0, 7Eh, 3, 0B8h, 0BFh,	0, 89h,	44h, 16h, 0EBh
		db 0A5h, 0C7h, 44h, 1Ah, 2 dup(0FFh), 0C3h, 0A1h, 0BCh
		db 8Eh,	2Bh, 44h, 12h, 3Dh, 8, 0, 7Eh, 3, 0B8h,	8, 0, 3Dh
		db 0F8h, 0FFh, 7Dh, 3, 0B8h, 0F8h, 0FFh, 1, 44h, 12h, 0A1h
		db 0BEh, 8Eh, 5, 19h, 0, 2Bh, 44h, 16h,	3Dh, 8,	0, 7Eh
		db 3, 0B8h, 8, 0, 3Dh, 0F8h, 0FFh, 7Dh,	3, 0B8h, 0F8h
		db 0FFh, 1, 44h, 16h, 0A1h, 0BCh, 8Eh, 3Bh, 44h, 12h, 75h
		db 10h,	0A1h, 0BEh, 8Eh, 5, 19h, 0, 3Bh, 44h, 16h, 75h
		db 5, 0C7h, 44h, 1Ah, 2	dup(0),	0C3h, 0E8h, 30h, 1Eh, 0A1h
		db 12h,	9Fh, 3,	44h, 30h, 89h, 44h, 12h, 0A1h, 16h, 9Fh
		db 3, 44h, 32h,	89h, 44h, 16h, 83h, 3Eh, 1Eh, 99h, 0, 74h
		db 3, 0E9h, 0Ch, 24h, 0C7h, 44h, 4, 53h, 8, 83h, 7Ch, 48h
		db 0, 78h, 3, 0FFh, 4Ch, 48h, 80h, 3Eh,	0AEh, 8Fh, 0, 74h
		db 3Ah,	83h, 7Ch, 48h, 0, 79h, 34h, 0C7h, 6, 88h, 8Eh
		db 10h,	0, 56h,	0E8h, 60h, 0ECh, 0BFh, 96h, 90h, 0E8h
		db 0B4h, 0E3h, 8Bh, 0FEh, 5Eh, 0C7h, 5,	24h, 0,	0C7h, 45h
		db 4, 0B7h, 0Ah, 0C7h, 45h, 2, 0EDh, 23h, 0C7h,	45h, 1Ah
		db 0E0h, 0FFh, 89h, 75h, 44h, 8Bh, 44h,	34h, 89h, 45h
		db 34h,	0C7h, 44h, 48h,	6, 0, 0C3h, 80h, 3Eh, 24h, 92h
		db 0, 74h, 3, 0E9h, 38h, 16h, 83h, 7Ch,	1Ah, 41h, 74h
		db 17h,	8Bh, 7Ch, 44h, 8Bh, 45h, 12h, 2Dh, 7, 0, 89h, 44h
		db 12h,	8Bh, 5Dh, 16h, 83h, 0EBh, 18h, 89h, 5Ch, 16h, 0EBh
		db 6, 8Bh, 44h,	12h, 8Bh, 5Ch, 16h, 83h, 7Ch, 1Ah, 41h
		db 74h,	0Fh, 83h, 44h, 1Ah, 20h, 83h, 7Ch, 1Ah,	60h, 75h
		db 0Fh,	0C7h, 44h, 1Ah,	41h, 0,	83h, 6Ch, 16h, 20h, 79h
		db 4, 0E8h, 88h, 0E3h, 0C3h, 8Bh, 44h, 12h, 8Bh, 5Ch, 16h
		db 2Bh,	5Ch, 1Ah, 8Bh, 4Ch, 34h, 8Bh, 0E9h, 45h, 8Bh, 0D5h
		db 0D1h, 0E5h, 3, 0EAh,	5, 4, 0, 0D1h, 0E1h, 2Bh, 0C1h
		db 0D1h, 0E1h, 83h, 0C1h, 7, 3,	0C8h, 8Bh, 0D3h, 83h, 0C2h
		db 20h,	78h, 9,	85h, 0DBh, 79h,	2, 33h,	0DBh, 0E9h, 0E3h
		db 0F7h, 0C3h, 0E8h, 41h, 1Dh, 0A1h, 12h, 9Fh, 3, 44h
		db 30h,	89h, 44h, 12h, 0A1h, 16h, 9Fh, 3, 44h, 32h, 89h
		db 44h,	16h, 83h, 3Eh, 1Eh, 99h, 0, 74h, 3, 0E9h, 1Dh
		db 23h,	0C7h, 44h, 4, 53h, 8, 81h, 7Ch,	0Ch, 86h, 87h
		db 74h,	2Ch, 80h, 3Eh, 0AEh, 8Fh, 0, 74h, 6Bh, 81h, 7Ch
		db 0Ch,	26h, 86h, 75h, 64h, 0C7h, 6, 88h, 8Eh, 15h, 0
		db 0BFh, 0CAh, 12h, 2Eh, 8Bh, 5, 89h, 44h, 0Ch,	2Eh, 8Bh
		db 45h,	2, 89h,	44h, 0Eh, 83h, 0C7h, 4,	89h, 7Ch, 10h
		db 0EBh, 46h, 56h, 0E8h, 5Ah, 0EBh, 0BFh, 96h, 90h, 0E8h
		db 0AEh, 0E2h, 8Bh, 0FEh, 5Eh, 0BDh, 2Ch, 13h, 0C7h, 5
		db 30h,	0, 0C7h, 45h, 4, 53h, 8, 0C7h, 45h, 2, 0B8h, 28h
		db 2Eh,	8Bh, 46h, 0, 89h, 45h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h
		db 45h,	0Eh, 83h, 0C5h,	4, 89h,	6Dh, 10h, 8Bh, 44h, 12h
		db 89h,	45h, 12h, 8Bh, 44h, 16h, 2Dh, 0Bh, 0, 89h, 45h
		db 16h,	0C7h, 45h, 1Ah,	2 dup(0), 0C3h,	0E8h, 0A3h, 1Ch
		db 0A1h, 12h, 9Fh, 3, 44h, 30h,	89h, 44h
		db 12h,	0A1h, 16h, 9Fh,	3, 44h,	32h, 89h, 44h, 16h, 83h
		db 3Eh,	1Eh, 99h, 0, 74h, 3, 0E9h, 7Fh,	22h, 0C7h, 44h
		db 4, 53h, 8, 81h, 7Ch,	0Ch, 70h, 97h, 74h, 15h, 80h, 3Eh
		db 0AEh, 8Fh, 0, 74h, 6Ah, 81h,	7Ch, 0Ch, 0C0h,	96h, 75h
		db 63h,	0C7h, 44h, 0Eh,	1, 0, 0EBh, 5Ch, 0B9h, 2, 0, 0BAh
		db 0FDh, 0FFh, 56h, 0E8h, 0CDh,	0EAh, 0BFh, 96h, 90h, 0E8h
		db 21h,	0E2h, 8Bh, 0FEh, 5Eh, 0C7h, 45h, 1Ch, 2	dup(0)
		db 0C7h, 45h, 20h, 0F7h, 0FFh, 3, 54h, 12h, 89h, 55h, 12h
		db 8Bh,	44h, 16h, 2Dh, 10h, 0, 89h, 45h, 16h, 0C7h, 5
		db 10h,	0, 0C7h, 45h, 2, 0EEh, 39h, 0C7h, 45h, 4, 53h
		db 8, 0BDh, 80h, 13h, 2Eh, 8Bh,	46h, 0,	89h, 45h, 0Ch
		db 2Eh,	8Bh, 46h, 2, 89h, 45h, 0Eh, 83h, 0C5h, 4, 89h
		db 6Dh,	10h, 8Bh, 44h, 34h, 89h, 45h, 34h, 0BAh, 5, 0
		db 0E2h, 0AAh, 0C3h, 8Bh, 7Ch, 44h, 8Bh, 6Dh, 0Ah, 3Bh
		db 0EEh, 74h, 72h, 3Eh,	81h, 7Eh, 4, 61h, 7, 75h, 13h
		db 3Eh,	8Bh, 6Eh, 0Ah, 3Bh, 0EEh, 75h, 0F0h, 0C7h, 45h
		db 28h,	0E8h, 3, 0C7h, 45h, 2Ch, 0E8h, 3, 0C3h,	3Eh, 8Bh
		db 46h,	28h, 3Eh, 8Bh, 5Eh, 2Ah, 3Eh, 8Bh, 4Eh,	2Ch, 3Eh
		db 8Bh,	56h, 2Eh, 3Eh, 8Bh, 6Eh, 0Ah, 3Bh, 0F5h, 74h, 32h
		db 3Eh,	81h, 7Eh, 4, 61h, 7, 74h, 0F0h,	3Eh, 3Bh, 46h
		db 28h,	7Eh, 4,	3Eh, 8Bh, 46h, 28h, 3Eh, 3Bh, 5Eh, 2Ah
		db 7Eh,	4, 3Eh,	8Bh, 5Eh, 2Ah, 3Eh, 3Bh, 4Eh, 2Ch, 7Dh
		db 4, 3Eh, 8Bh,	4Eh, 2Ch, 3Eh, 3Bh, 56h, 2Eh, 7Dh, 0CCh
		db 3Eh,	8Bh, 56h, 2Eh, 0EBh, 0C6h, 89h,	45h, 28h, 89h
		db 5Dh,	2Ah, 89h, 4Dh, 2Ch, 89h, 55h, 2Eh, 0C3h, 57h, 0E8h
		db 98h,	0E1h, 5Eh, 0E8h, 94h, 0E1h, 0C3h, 80h, 3Eh, 24h
		db 92h,	0, 74h,	3, 0E9h, 0F8h, 13h, 0E8h, 77h, 1Bh, 83h
		db 7Ch,	1Ah, 0,	79h, 8,	0FFh, 44h, 1Ah,	83h, 6Ch, 16h
		db 6, 0C3h, 75h, 6, 0C7h, 44h, 1Ah, 3, 0, 0C3h,	0FFh, 4Ch
		db 1Ah,	75h, 0FAh, 0C7h, 6, 88h, 8Eh, 2	dup(0),	0B9h, 3
		db 0, 8Bh, 44h,	12h, 8Bh, 5Ch, 16h, 2Dh, 14h, 0, 83h, 0EBh
		db 14h,	0BAh, 28h, 0, 0BFh, 28h, 0, 0BDh, 4Ch, 12h, 0E8h
		db 12h,	0EFh, 0E8h, 47h, 0E1h, 8Bh, 44h, 12h, 8Bh, 5Ch
		db 16h,	2Dh, 20h, 0, 83h, 0EBh,	20h, 8Bh, 0C8h,	8Bh, 0D3h
		db 83h,	0C1h, 3Fh, 83h,	0C2h, 3Fh, 2Eh,	8Bh, 2Eh, 0B0h
		db 3Dh,	0E9h, 0B8h, 0F5h, 0E8h,	17h, 1Bh, 83h, 7Ch, 1Ah
		db 0, 78h, 34h,	83h, 3Eh, 1Eh, 99h, 0, 74h, 3, 0E9h, 0FFh
		db 20h,	0C7h, 44h, 4, 53h, 8, 83h, 7Ch,	1Ah, 0,	74h, 3
		db 0E9h, 0A5h, 0, 0A1h,	12h, 9Fh, 89h, 44h, 12h, 0A1h
		db 16h,	9Fh, 5,	19h, 0,	89h, 44h, 16h, 0F6h, 6,	59h, 8Fh
		db 80h,	74h, 5,	0C7h, 44h, 1Ah,	1, 0, 0C3h, 80h, 3Eh, 24h
		db 92h,	0, 74h,	3, 0E9h, 51h, 13h, 0F6h, 6, 59h, 8Fh, 80h
		db 75h,	0EEh, 0FFh, 44h, 1Ah, 75h, 0E9h, 0B9h, 3, 0, 8Bh
		db 44h,	12h, 8Bh, 5Ch, 16h, 2Dh, 8, 0, 83h, 0EBh, 8, 0BAh
		db 10h,	0, 0BFh, 10h, 0, 0BDh, 30h, 12h, 83h, 7Ch, 34h
		db 0, 74h, 0Fh,	2Dh, 0Ah, 0, 83h, 0EBh,	0Ah, 0BAh, 14h
		db 0, 0BFh, 14h, 0, 0BDh, 4Ch, 12h, 0E8h
		db 6Eh,	0EEh, 8Bh, 44h,	12h, 8Bh, 5Ch, 16h, 83h, 7Ch, 34h
		db 0, 75h, 12h,	2Dh, 10h, 0, 83h, 0EBh,	10h, 8Bh, 0C8h
		db 83h,	0C1h, 20h, 8Bh,	0D3h, 83h, 0C2h, 20h, 0EBh, 10h
		db 2Dh,	18h, 0,	83h, 0EBh, 18h,	8Bh, 0C8h, 8Bh,	0D3h, 83h
		db 0C1h, 2Fh, 83h, 0C2h, 2Fh, 8Bh, 6Ch,	34h, 0D1h, 0E5h
		db 2Eh,	3, 2Eh,	0B2h, 3Dh, 0E8h, 0FAh, 0F4h, 0E8h, 68h
		db 0E0h, 0FFh, 0Eh, 86h, 8Eh, 0C3h, 83h, 7Ch, 1Ah, 1, 75h
		db 1Eh,	0F6h, 6, 59h, 8Fh, 80h,	74h, 11h, 83h, 7Ch, 16h
		db 10h,	7Eh, 5,	83h, 6Ch, 16h, 0Ch, 0C3h, 0C7h,	44h, 1Ah
		db 2, 0, 0C3h, 0C7h, 44h, 1Ah, 3, 0, 0C3h, 83h,	7Ch, 1Ah
		db 2, 74h, 3, 0E9h, 0E0h, 0, 0F6h, 6, 59h, 8Fh,	80h, 74h
		db 0EAh, 8Bh, 44h, 12h,	0F6h, 6, 59h, 8Fh, 4, 74h, 7, 2Dh
		db 8, 0, 79h, 2, 33h, 0C0h, 0F6h, 6, 59h, 8Fh, 8, 74h
		db 0Bh,	5, 8, 0, 3Dh, 3Fh, 1, 7Eh, 3, 0B8h, 3Fh, 1, 89h
		db 44h,	12h, 8Bh, 44h, 16h, 0F6h, 6, 59h, 8Fh, 1, 74h
		db 7, 2Dh, 8, 0, 79h, 2, 33h, 0C0h, 0F6h, 6, 59h, 8Fh
		db 2, 74h, 0Bh,	5, 8, 0, 3Dh, 0BFh, 0, 7Eh, 3, 0B8h, 0BFh
		db 0, 89h, 44h,	16h, 83h, 3Eh, 86h, 8Eh, 0Ah, 75h, 3, 0E9h
		db 82h,	0, 0A1h, 38h, 8Fh, 2Bh,	44h, 12h, 79h, 2, 0F7h
		db 0D8h, 3Dh, 20h, 0, 7Dh, 0Fh,	0A1h, 3Ah, 8Fh,	2Bh, 44h
		db 16h,	79h, 2,	0F7h, 0D8h, 3Dh, 20h, 0, 7Ch, 64h, 8Bh
		db 44h,	12h, 0A3h, 38h,	8Fh, 8Bh, 44h, 16h, 0A3h, 3Ah
		db 8Fh,	56h, 0E8h, 0Dh,	0E8h, 0BFh, 96h, 90h, 0E8h, 61h
		db 0DFh, 8Bh, 0FEh, 5Eh, 8Bh, 6Ch, 10h,	83h, 0EDh, 4, 8Bh
		db 4, 89h, 5, 8Bh, 44h,	2, 89h,	45h, 2,	0C7h, 45h, 4, 53h
		db 8, 2Eh, 8Bh,	46h, 0,	89h, 45h, 0Ch, 2Eh, 8Bh, 46h, 2
		db 89h,	45h, 0Eh, 83h, 0C5h, 4,	89h, 6Dh, 10h, 8Bh, 44h
		db 12h,	89h, 45h, 12h, 8Bh, 44h, 16h, 89h, 45h,	16h, 8Bh
		db 44h,	34h, 89h, 45h, 34h, 0A1h, 86h, 8Eh, 40h, 0A3h
		db 86h,	8Eh, 0F7h, 0D8h, 0D1h, 0E0h, 0D1h, 0E0h, 89h, 45h
		db 1Ah,	0C3h, 0A1h, 12h, 9Fh, 2Bh, 44h,	12h, 3Dh, 8, 0
		db 7Eh,	3, 0B8h, 8, 0, 3Dh, 0F8h, 0FFh,	7Dh, 3,	0B8h, 0F8h
		db 0FFh, 1, 44h, 12h, 0A1h, 16h, 9Fh, 5, 19h, 0, 2Bh, 44h
		db 16h,	3Dh, 8,	0, 7Eh,	3, 0B8h, 8, 0, 3Dh, 0F8h, 0FFh
		db 7Dh,	3, 0B8h, 0F8h, 0FFh, 1,	44h, 16h, 0A1h,	12h, 9Fh
		db 3Bh,	44h, 12h, 75h, 10h, 0A1h, 16h, 9Fh, 5, 19h, 0
		db 3Bh,	44h, 16h, 75h, 5, 0C7h,	44h, 1Ah, 2 dup(0), 0C3h
		db 80h,	3Eh, 24h, 92h, 0, 74h, 3, 0E9h,	6Dh, 11h, 0E8h
		db 0ECh, 18h, 83h, 6Ch,	16h, 0Ah, 79h, 4, 0E8h,	0F2h, 0DEh
		db 0C3h, 0E8h, 0B7h, 0Ch, 0E8h,	15h, 0F3h, 74h,	7, 2Eh
		db 0A1h, 0A4h, 3Dh, 0E9h, 58h, 11h, 0C3h, 0E8h,	0CFh, 18h
		db 83h,	7Ch, 1Ah, 0, 74h, 16h, 79h, 35h, 0FFh, 44h, 1Ah
		db 8Bh,	44h, 1Ah, 25h, 3, 0, 75h, 69h, 0FFh, 44h, 1Ch
		db 83h,	64h, 1Ch, 7, 0EBh, 60h,	83h, 44h, 16h, 8, 81h
		db 7Ch,	16h, 0C8h, 0, 7Ch, 6Dh,	83h, 3Eh, 64h, 91h, 0
		db 74h,	0Bh, 0FFh, 0Eh,	64h, 91h, 75h, 5, 0C6h,	6, 0B0h
		db 8Fh,	0FFh, 0E8h, 0A2h, 0DEh,	0C3h, 83h, 64h,	1Ah, 7
		db 75h,	12h, 0B8h, 0A0h, 0, 2Bh, 44h, 12h, 0BBh, 64h, 0
		db 2Bh,	5Ch, 16h, 0E8h,	5Ch, 0F2h, 89h,	44h, 1Ch, 0FFh
		db 44h,	1Ah, 0B8h, 0A0h, 0, 2Bh, 44h, 12h, 0F7h, 0E8h
		db 8Bh,	0D8h, 8Bh, 0CAh, 0B8h, 64h, 0, 2Bh, 44h, 16h, 0F7h
		db 0E8h, 3, 0C3h, 13h, 0D1h, 75h, 0Ah, 3Dh, 90h, 1, 73h
		db 5, 0C7h, 44h, 1Ah, 0DEh, 0FFh, 8Bh, 5Ch, 1Ch, 0D1h
		db 0E3h, 0D1h, 0E3h, 83h, 0E3h,	1Ch, 8Bh, 87h, 0B8h, 31h
		db 1, 44h, 12h,	8Bh, 87h, 0BAh,	31h, 1,	44h, 16h, 0E8h
		db 10h,	0Ch, 0E8h, 32h,	19h, 74h, 36h, 8Bh, 4, 0BAh, 64h
		db 0, 3Dh, 18h,	0, 74h,	8, 0BAh, 32h, 0, 3Dh, 60h, 0, 75h
		db 25h,	1, 16h,	5Ah, 91h, 83h, 16h, 5Ch, 91h, 0, 0C7h
		db 6, 88h, 8Eh,	4, 0, 83h, 3Eh,	64h, 91h, 0, 74h, 0Bh
		db 0FFh, 0Eh, 64h, 91h,	75h, 5,	0C6h, 6, 0B0h, 8Fh, 0FFh
		db 0E8h, 0Ch, 0DEh, 0C3h, 0FFh,	74h, 22h, 0E8h,	5, 0DEh
		db 5Bh,	0D1h, 0E3h, 8Bh, 0BFh, 0D8h, 31h, 0B8h,	0Fh, 0
		db 0F7h, 0C7h, 1, 0, 74h, 4, 4Fh, 0B8h,	0Fh, 0,	0A3h, 88h
		db 8Eh,	56h, 0FFh, 0D7h, 5Eh, 0C3h

; =============== S U B	R O U T	I N E =======================================


sub_129D7	proc near		; CODE XREF: sub_1193C+13p

; FUNCTION CHUNK AT 2C21 SIZE 00000010 BYTES
; FUNCTION CHUNK AT 2D2A SIZE 000000C5 BYTES
; FUNCTION CHUNK AT 2DF0 SIZE 00000083 BYTES
; FUNCTION CHUNK AT 2F08 SIZE 000000FB BYTES
; FUNCTION CHUNK AT 3004 SIZE 00000087 BYTES
; FUNCTION CHUNK AT 308C SIZE 0000008B BYTES
; FUNCTION CHUNK AT 3126 SIZE 00000090 BYTES

		cmp	ax, 44h	; 'D'
		jnz	short loc_129DF
		jmp	loc_1308C
; ---------------------------------------------------------------------------

loc_129DF:				; CODE XREF: sub_129D7+3j
		cmp	ax, 98h	; '
		jnz	short loc_129E7
		jmp	sub_12CA6
; ---------------------------------------------------------------------------

loc_129E7:				; CODE XREF: sub_129D7+Bj
		cmp	ax, 34h	; '4'
		jnz	short loc_129EF
		jmp	sub_13246
; ---------------------------------------------------------------------------

loc_129EF:				; CODE XREF: sub_129D7+13j
		cmp	ax, 2Ch	; ','
		jnz	short loc_129F7
		jmp	sub_12E84
; ---------------------------------------------------------------------------

loc_129F7:				; CODE XREF: sub_129D7+1Bj
		cmp	ax, 20h	; ' '
		jnz	short loc_129FF
		jmp	sub_131B6
; ---------------------------------------------------------------------------

loc_129FF:				; CODE XREF: sub_129D7+23j
		cmp	ax, 4Ch	; 'L'
		jnz	short loc_12A07
		jmp	loc_12F08
; ---------------------------------------------------------------------------

loc_12A07:				; CODE XREF: sub_129D7+2Bj
		cmp	ax, 3Ch	; '<'
		jnz	short loc_12A0F
		jmp	loc_13004
; ---------------------------------------------------------------------------

loc_12A0F:				; CODE XREF: sub_129D7+33j
		cmp	ax, 38h	; '8'
		jnz	short loc_12A17
		jmp	loc_12F7C
; ---------------------------------------------------------------------------

loc_12A17:				; CODE XREF: sub_129D7+3Bj
		cmp	ax, 0C0h ; '
		jnz	short loc_12A1F
		jmp	sub_12C32
; ---------------------------------------------------------------------------

loc_12A1F:				; CODE XREF: sub_129D7+43j
		cmp	ax, 90h	; '
		jnz	short loc_12A27
		jmp	loc_13126
; ---------------------------------------------------------------------------

loc_12A27:				; CODE XREF: sub_129D7+4Bj
		cmp	ax, 48h	; 'H'
		jnz	short loc_12A2F
		jmp	loc_12D86
; ---------------------------------------------------------------------------

loc_12A2F:				; CODE XREF: sub_129D7+53j
		cmp	ax, 0B0h ; '
		jnz	short loc_12A37
		jmp	loc_12DF0
; ---------------------------------------------------------------------------

loc_12A37:				; CODE XREF: sub_129D7+5Bj
		cmp	ax, 28h	; '('
		jnz	short loc_12A3F
		jmp	loc_12D2A
; ---------------------------------------------------------------------------

loc_12A3F:				; CODE XREF: sub_129D7+63j
		cmp	ax, 94h	; '
		jnz	short locret_12A47
		jmp	sub_12BCC
; ---------------------------------------------------------------------------

locret_12A47:				; CODE XREF: sub_129D7+6Bj
		retn
sub_129D7	endp

; ---------------------------------------------------------------------------
		add	word_316B6, 14h

loc_12A4D:				; CODE XREF: seg000:2A6Bj
		mov	word_313B8, 12h
		cmp	word_316B6, 27h	; '''
		jle	short loc_12A60
		mov	word_316B6, 27h	; '''

loc_12A60:				; CODE XREF: seg000:2A58j
		mov	byte_314DF, 0FFh
		retn
; ---------------------------------------------------------------------------
		add	word_316B6, 28h	; '('
		jmp	short loc_12A4D
; ---------------------------------------------------------------------------
		align 2
		mov	di, 9134h
		mov	bp, di
		mov	ax, 7Fh	; ''
		mov	cx, 7

loc_12A79:				; CODE XREF: seg000:2A94j
		cmp	word ptr [di], 0
		jz	short loc_12A91
		mov	bx, [di+2]
		mov	dx, [bx+34h]
		cmp	dx, [bx+24h]
		jz	short loc_12A91
		cmp	dx, ax
		jge	short loc_12A91
		mov	ax, dx
		mov	bp, di

loc_12A91:				; CODE XREF: seg000:2A7Cj seg000:2A87j ...
		add	di, 4
		loop	loc_12A79
		cmp	ax, 7Fh	; ''
		jz	short locret_12AA2
		mov	di, ds:[bp+2]
		inc	word ptr [di+34h]

locret_12AA2:				; CODE XREF: seg000:2A99j
		retn
; ---------------------------------------------------------------------------
		align 2
		cmp	word_31662, 4
		jge	short locret_12AAF
		inc	word_31662

locret_12AAF:				; CODE XREF: seg000:2AA9j
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		align 2
		cmp	word_3168E, 2
		jz	short locret_12ABD
		inc	word_3168E

locret_12ABD:				; CODE XREF: seg000:2AB7j
		retn
; ---------------------------------------------------------------------------
		mov	byte_31753, 0FFh
		retn
; ---------------------------------------------------------------------------
		add	word_31690, 3
		retn
; ---------------------------------------------------------------------------
		jmp	sub_12CA6
; ---------------------------------------------------------------------------
		align 2
		retn
; ---------------------------------------------------------------------------
		align 2
		mov	word_313B8, 0Bh
		call	sub_10EB3
		mov	di, word_31584

loc_12ADD:				; CODE XREF: seg000:2AFCj
		mov	ax, [di]
		test	ax, ax
		jz	short loc_12AFE
		mov	si, di
		call	sub_11689
		push	di
		cmp	ax, 50h	; 'P'
		jz	short loc_12AFB
		cmp	ax, 54h	; 'T'
		jz	short loc_12AFB
		mov	di, si
		mov	si, 8FFEh
		call	sub_13A33

loc_12AFB:				; CODE XREF: seg000:2AECj seg000:2AF1j
		pop	di
		jmp	short loc_12ADD
; ---------------------------------------------------------------------------

loc_12AFE:				; CODE XREF: seg000:2AE1j
		mov	di, word_315D0

loc_12B02:				; CODE XREF: seg000:2B15j
		cmp	word ptr [di], 0
		jz	short loc_12B17
		push	word ptr [di+0Ah]
		cmp	word ptr [di], 14h
		jnz	short loc_12B14
		mov	si, di
		call	sub_107C0

loc_12B14:				; CODE XREF: seg000:2B0Dj
		pop	di
		jmp	short loc_12B02
; ---------------------------------------------------------------------------

loc_12B17:				; CODE XREF: seg000:2B05j
		mov	di, 8E8Ch
		xor	ax, ax
		mov	cx, 10h
		rep stosw
		retn

; =============== S U B	R O U T	I N E =======================================


sub_12B22	proc near		; CODE XREF: sub_1195B+BAp
					; sub_13C75+415p ...
		mov	ax, word_31538
		mov	word_316E4, ax
		mov	ax, word_31536
		mov	word_316E6, ax
		mov	di, 9134h
		mov	bx, 91B8h
		mov	cx, 0Eh

loc_12B37:				; CODE XREF: sub_12B22+23j
		mov	ax, [di]
		mov	[bx], ax
		add	bx, 2
		mov	word ptr [di], 0
		add	di, 2
		loop	loc_12B37
		mov	si, 8FFEh
		call	sub_10762
		call	sub_12BCC
		call	sub_13246
		call	sub_13246
		call	sub_131B6
		mov	word ptr [di+34h], 2
		call	sub_131B6
		mov	word ptr [di+34h], 2
		call	sub_12E84
		mov	word ptr [di+34h], 2
		call	sub_12CA6
		mov	word ptr [di+34h], 2
		call	sub_12C32
		mov	word ptr [di+34h], 2
		retn
sub_12B22	endp

; ---------------------------------------------------------------------------
		align 2
		cmp	word_316B8, 0
		jnz	short loc_12BC5
		push	si
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word ptr [di], 5Ch ; '\'
		mov	word ptr [di+2], 1FB4h
		mov	word ptr [di+4], 853h
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		mov	[di+16h], ax
		mov	bp, 1148h
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp

loc_12BC5:				; CODE XREF: seg000:2B85j
		add	word_316B8, 0AAh ; '
		retn

; =============== S U B	R O U T	I N E =======================================


sub_12BCC	proc near		; CODE XREF: sub_116BA+BAp
					; sub_129D7+6Dj ...
		cmp	word_31664, 0
		jz	short loc_12BDC
		push	si
		mov	si, word_31666
		call	sub_107C0
		pop	si

loc_12BDC:				; CODE XREF: sub_12BCC+5j
		mov	word_31664, 94h	; '
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	word_31666, si
		mov	word ptr [si], 94h ; '
		mov	word ptr [si+2], 37DFh
		mov	word ptr [si+6], 9134h
		mov	word ptr [si+4], 761h
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 2
		mov	word ptr [si+36h], 1
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 8
		retn
sub_12BCC	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_12C21:				; CODE XREF: sub_12C32+6j
					; sub_129D7+421j
		mov	di, word_31666
		mov	ax, [di+24h]
		cmp	ax, [di+34h]
		jle	short locret_12C30
		inc	word ptr [di+34h]

locret_12C30:				; CODE XREF: sub_129D7+254j
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7
; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_12C32	proc near		; CODE XREF: sub_129D7+45j
					; sub_12B22+54p
		cmp	word_31664, 0C0h ; '
		jz	short loc_12C21
		cmp	word_31664, 0
		jz	short loc_12C4A
		push	si
		mov	si, word_31666
		call	sub_107C0
		pop	si

loc_12C4A:				; CODE XREF: sub_12C32+Dj
		mov	word_31664, 0C0h ; '
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	word_31666, si
		mov	word ptr [si], 0C0h ; '
		mov	word ptr [si+2], 20F7h
		mov	word ptr [si+4], 853h
		mov	word ptr [si+6], 9134h
		mov	word ptr [si+0Ch], 0A658h
		mov	word ptr [si+0Eh], 0
		mov	ax, word_32442
		mov	[si+12h], ax
		mov	ax, word_32446
		mov	[si+16h], ax
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 2
		mov	word ptr [si+36h], 0Eh
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 8
		retn
sub_12C32	endp

; ---------------------------------------------------------------------------
		align 2

; =============== S U B	R O U T	I N E =======================================


sub_12CA6	proc near		; CODE XREF: sub_129D7+Dj seg000:2ACAj ...
		cmp	word_3167C, 98h	; '
		jz	short loc_12D19
		cmp	word_3167C, 0
		jz	short loc_12CBE
		push	si
		mov	si, word_3167E
		call	sub_107C0
		pop	si

loc_12CBE:				; CODE XREF: sub_12CA6+Dj
		cmp	word_31678, 44h	; 'D'
		jnz	short loc_12CD4
		push	si
		mov	si, word_3167A
		call	sub_107C0
		pop	si
		mov	word_31678, 0

loc_12CD4:				; CODE XREF: sub_12CA6+1Dj
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	word_3167C, 98h	; '
		mov	word_3167E, si
		mov	word ptr [si], 98h ; '
		mov	word ptr [si+2], 3801h
		mov	word ptr [si+4], 761h
		mov	word ptr [si+6], 914Ch
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 2
		mov	word ptr [si+36h], 0Ah
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 8
		retn
; ---------------------------------------------------------------------------

loc_12D19:				; CODE XREF: sub_12CA6+6j
					; sub_129D7+358j ...
		mov	di, word_3167E
		mov	ax, [di+24h]
		cmp	ax, [di+34h]
		jle	short locret_12D28
		inc	word ptr [di+34h]

locret_12D28:				; CODE XREF: sub_12CA6+7Dj
		retn
sub_12CA6	endp

; ---------------------------------------------------------------------------
		align 2
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_12D2A:				; CODE XREF: sub_129D7+65j
		cmp	word_3167C, 28h	; '('
		jz	short loc_12D19
		cmp	word_3167C, 0
		jz	short loc_12D41
		push	si
		mov	si, word_3167E
		call	sub_107C0
		pop	si

loc_12D41:				; CODE XREF: sub_129D7+35Fj
		mov	word_3167C, 28h	; '('
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	word_3167E, si
		mov	word ptr [si], 9Ch ; '
		mov	word ptr [si+2], 3872h
		mov	word ptr [si+4], 761h
		mov	word ptr [si+6], 914Ch
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 0
		mov	word ptr [si+36h], 15h
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_12D86:				; CODE XREF: sub_129D7+55j
		cmp	word_31678, 48h	; 'H'
		jnz	short loc_12D90
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_12D90:				; CODE XREF: sub_129D7+3B4j
		cmp	word_3167C, 48h	; 'H'
		jz	short loc_12D19
		mov	bx, 9148h
		cmp	word ptr [bx], 0
		jz	short loc_12DAF
		mov	bx, 914Ch
		cmp	word ptr [bx], 0
		jz	short loc_12DAF
		push	si
		mov	si, [bx+2]
		call	sub_107C0
		pop	si

loc_12DAF:				; CODE XREF: sub_129D7+3C6j
					; sub_129D7+3CEj
		mov	word ptr [bx], 48h ; 'H'
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	[bx+2],	si
		mov	word ptr [si], 0A0h ; '
		mov	word ptr [si+2], 3900h
		mov	word ptr [si+4], 761h
		mov	[si+6],	bx
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 0
		mov	word ptr [si+36h], 17h
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 1Eh
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7
; ---------------------------------------------------------------------------
		align 2
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_12DF0:				; CODE XREF: sub_129D7+5Dj
		cmp	word_31664, 0B0h ; '
		jnz	short loc_12DFB
		jmp	loc_12C21
; ---------------------------------------------------------------------------

loc_12DFB:				; CODE XREF: sub_129D7+41Fj
		cmp	word_31664, 0
		jz	short loc_12E0B
		push	si
		mov	si, word_31666
		call	sub_107C0
		pop	si

loc_12E0B:				; CODE XREF: sub_129D7+429j
		mov	word_31664, 0B0h ; '
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	word_31666, si
		mov	word ptr [si], 0B0h ; '
		mov	word ptr [si+2], 213Ch
		mov	word ptr [si+4], 853h
		mov	word ptr [si+6], 9134h
		mov	bp, 110Ch
		mov	ax, cs:[bp+0]
		mov	[si+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[si+0Eh], ax
		add	bp, 4
		mov	[si+10h], bp
		mov	ax, word_32442
		mov	[si+12h], ax
		mov	ax, word_32446
		mov	[si+16h], ax
		mov	word ptr [si+34h], 0
		mov	word ptr [si+24h], 2
		mov	word ptr [si+36h], 14h
		mov	word ptr [si+48h], 0FFFFh
		mov	di, si
		pop	si
		mov	word_31660, 8
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7

; =============== S U B	R O U T	I N E =======================================


sub_12E73	proc near		; CODE XREF: sub_12E84+7p
					; sub_129D7+538p ...
		cmp	word_31678, 0
		jz	short locret_12E83
		push	si
		mov	si, word_3167A
		call	sub_107C0
		pop	si

locret_12E83:				; CODE XREF: sub_12E73+5j
		retn
sub_12E73	endp


; =============== S U B	R O U T	I N E =======================================


sub_12E84	proc near		; CODE XREF: sub_129D7+1Dj
					; sub_12B22+44p
		cmp	word_31678, 2Ch	; ','
		jz	short loc_12EF8
		call	sub_12E73
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word_31678, 2Ch	; ','
		mov	word_3167A, di
		mov	word ptr [di], 2Ch ; ','
		mov	word ptr [di+2], 221Ah
		mov	word ptr [di+4], 853h
		mov	word ptr [di+6], 9148h
		mov	bp, 115Ah
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, 19h
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 2
		mov	word ptr [di+36h], 13h
		mov	word ptr [di+48h], 0FFFFh
		retn
; ---------------------------------------------------------------------------

loc_12EF8:				; CODE XREF: sub_129D7+3B6j
					; sub_12E84+5j	...
		mov	di, word_3167A
		mov	ax, [di+24h]
		cmp	ax, [di+34h]
		jle	short locret_12F07
		inc	word ptr [di+34h]

locret_12F07:				; CODE XREF: sub_12E84+7Ej
		retn
sub_12E84	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_12F08:				; CODE XREF: sub_129D7+2Dj
		cmp	word_31678, 4Ch	; 'L'
		jz	short loc_12EF8
		call	sub_12E73
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word_31678, 4Ch	; 'L'
		mov	word_3167A, di
		mov	word ptr [di], 4Ch ; 'L'
		mov	word ptr [di+2], 229Bh
		mov	word ptr [di+4], 853h
		mov	word ptr [di+6], 9148h
		mov	bp, 140Ch
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, 19h
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 0
		mov	word ptr [di+36h], 0Bh
		mov	word ptr [di+48h], 0FFFFh
		retn
; ---------------------------------------------------------------------------

loc_12F7C:				; CODE XREF: sub_129D7+3Dj
		cmp	word_31678, 38h	; '8'
		jnz	short loc_12F86
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_12F86:				; CODE XREF: sub_129D7+5AAj
		cmp	word_31678, 3Ch	; '<'
		jnz	short loc_12F90
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_12F90:				; CODE XREF: sub_129D7+5B4j
		call	sub_12E73
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word_31678, 38h	; '8'
		mov	word_3167A, di
		mov	word ptr [di], 38h ; '8'
		mov	word ptr [di+2], 2697h
		mov	word ptr [di+4], 853h
		mov	word ptr [di+6], 9148h
		mov	bp, 1342h
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, 19h
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 1
		mov	word ptr [di+36h], 9
		mov	word ptr [di+48h], 0FFFFh
		mov	word_31468, 0FF9Ch
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7
; ---------------------------------------------------------------------------
		align 2
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_13004:				; CODE XREF: sub_129D7+35j
		cmp	word_31678, 38h	; '8'
		jnz	short loc_1300E
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_1300E:				; CODE XREF: sub_129D7+632j
		cmp	word_31678, 3Ch	; '<'
		jnz	short loc_13018
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_13018:				; CODE XREF: sub_129D7+63Cj
		call	sub_12E73
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word_31678, 3Ch	; '<'
		mov	word_3167A, di
		mov	word ptr [di], 3Ch ; '<'
		mov	word ptr [di+2], 2697h
		mov	word ptr [di+4], 853h
		mov	word ptr [di+6], 9148h
		mov	bp, 1354h
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, 19h
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 1
		mov	word ptr [di+24h], 1
		mov	word ptr [di+36h], 0Dh
		mov	word ptr [di+48h], 0FFFFh
		mov	word_31468, 0FF9Ch
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7
; ---------------------------------------------------------------------------
		align 2
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_1308C:				; CODE XREF: sub_129D7+5j
		cmp	word_31678, 44h	; 'D'
		jnz	short loc_13096
		jmp	loc_12EF8
; ---------------------------------------------------------------------------

loc_13096:				; CODE XREF: sub_129D7+6BAj
		cmp	word_3167C, 98h	; '
		jnz	short loc_130AD
		push	si
		mov	si, word_3167E
		call	sub_107C0
		pop	si
		mov	word_3167C, 0

loc_130AD:				; CODE XREF: sub_129D7+6C5j
		call	sub_12E73
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word_31678, 44h	; 'D'
		mov	word_3167A, di
		mov	word ptr [di], 44h ; 'D'
		mov	word ptr [di+2], 3835h
		mov	word ptr [di+4], 853h
		mov	word ptr [di+6], 9148h
		mov	bp, 12F8h
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		mov	[di+12h], ax
		mov	ax, word_32446
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 2
		mov	word ptr [di+36h], 8
		mov	word ptr [di+48h], 0FFFFh
		retn
; END OF FUNCTION CHUNK	FOR sub_129D7

; =============== S U B	R O U T	I N E =======================================


sub_13117	proc near		; CODE XREF: sub_129D7+752p
					; sub_131B6+3p	...
		call	sub_1100E
		jnz	short loc_13122
		mov	ax, 0FFFFh
		test	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_13122:				; CODE XREF: sub_13117+3j
		xor	ax, ax
		retn
sub_13117	endp

; ---------------------------------------------------------------------------
		align 2
; START	OF FUNCTION CHUNK FOR sub_129D7

loc_13126:				; CODE XREF: sub_129D7+4Dj
		mov	ax, 90h	; '
		call	sub_13117
		jnz	short loc_13131
		jmp	loc_131B3
; ---------------------------------------------------------------------------

loc_13131:				; CODE XREF: sub_129D7+755j
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word ptr ds:[bp+0], 90h	; '
		mov	ds:[bp+2], di
		mov	word ptr [di], 90h ; '
		mov	word ptr [di+2], 250Bh
		mov	word ptr [di+4], 853h
		mov	[di+6],	bp
		dec	cx
		shl	cx, 1
		shl	cx, 1
		mov	bp, 30A8h
		add	bp, cx
		mov	ax, ds:[bp+0]
		mov	[di+30h], ax
		mov	ax, ds:[bp+2]
		mov	[di+32h], ax
		mov	bp, 1566h
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		add	ax, [di+30h]
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, [di+32h]
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 0
		mov	word ptr [di+36h], 11h
		mov	word ptr [di+48h], 0FFFFh

loc_131B3:				; CODE XREF: sub_129D7+757j
		jmp	sub_13319
; END OF FUNCTION CHUNK	FOR sub_129D7

; =============== S U B	R O U T	I N E =======================================


sub_131B6	proc near		; CODE XREF: sub_129D7+25j
					; sub_12B22+34p ...
		mov	ax, 20h	; ' '
		call	sub_13117
		jnz	short loc_131C1
		jmp	loc_13243
; ---------------------------------------------------------------------------

loc_131C1:				; CODE XREF: sub_131B6+6j
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word ptr ds:[bp+0], 20h	; ' '
		mov	ds:[bp+2], di
		mov	word ptr [di], 20h ; ' '
		mov	word ptr [di+2], 237Eh
		mov	word ptr [di+4], 853h
		mov	[di+6],	bp
		dec	cx
		shl	cx, 1
		shl	cx, 1
		mov	bp, 30A8h
		add	bp, cx
		mov	ax, ds:[bp+0]
		mov	[di+30h], ax
		mov	ax, ds:[bp+2]
		mov	[di+32h], ax
		mov	bp, 118Eh
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		add	ax, [di+30h]
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, [di+32h]
		mov	[di+16h], ax
		mov	word ptr [di+1Ah], 0
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 2
		mov	word ptr [di+36h], 12h
		mov	word ptr [di+48h], 0FFFFh

loc_13243:				; CODE XREF: sub_131B6+8j
		jmp	sub_13319
sub_131B6	endp


; =============== S U B	R O U T	I N E =======================================


sub_13246	proc near		; CODE XREF: sub_129D7+15j
					; sub_12B22+2Ep ...
		mov	ax, 34h	; '4'
		call	sub_13117
		jnz	short loc_13251
		jmp	sub_13319
; ---------------------------------------------------------------------------

loc_13251:				; CODE XREF: sub_13246+6j
		push	si
		call	sub_11022
		mov	di, 8FFEh
		call	sub_1077C
		mov	di, si
		pop	si
		mov	word ptr ds:[bp+0], 34h	; '4'
		mov	ds:[bp+2], di
		mov	word ptr [di], 34h ; '4'
		mov	word ptr [di+2], 246Dh
		mov	word ptr [di+4], 853h
		mov	[di+6],	bp
		dec	cx
		shl	cx, 1
		shl	cx, 1
		mov	bp, 30A8h
		add	bp, cx
		mov	ax, ds:[bp+0]
		mov	[di+30h], ax
		mov	ax, ds:[bp+2]
		mov	[di+32h], ax
		mov	bp, 12DAh
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[di+0Eh], ax
		add	bp, 4
		mov	[di+10h], bp
		mov	ax, word_32442
		add	ax, [di+30h]
		mov	[di+12h], ax
		mov	ax, word_32446
		add	ax, [di+32h]
		mov	[di+16h], ax
		mov	word ptr [di+34h], 0
		mov	word ptr [di+24h], 0
		mov	word ptr [di+36h], 0Fh
		mov	word ptr [di+48h], 0FFFFh
		cmp	word ptr [di+30h], 0
		jz	short sub_13319
		push	si
		call	sub_11022
		push	di
		mov	di, 9096h
		call	sub_1078E
		pop	di
		mov	word ptr [si], 40h ; '@'
		mov	word ptr [si+2], 21E9h
		mov	word ptr [si+4], 853h
		mov	byte ptr [si+4Ah], 0FFh
		mov	bp, 1366h
		mov	ax, cs:[bp+0]
		mov	[si+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[si+0Eh], ax
		add	bp, 4
		mov	[si+10h], bp
		mov	[si+1Ch], di
		mov	ax, [di+12h]
		mov	[si+12h], ax
		mov	ax, [di+16h]
		mov	[si+16h], ax
		pop	si
sub_13246	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_13319	proc near		; CODE XREF: sub_129D7:loc_131B3j
					; sub_131B6:loc_13243j	...
		cmp	word_31664, 0
		jnz	short locret_13325
		push	di
		call	sub_12BCC
		pop	di

locret_13325:				; CODE XREF: sub_13319+5j
		retn
sub_13319	endp


; =============== S U B	R O U T	I N E =======================================


sub_13326	proc near		; CODE XREF: seg000:3A79p
					; sub_13AB2+16p ...
		push	si
		push	di
		mov	word_313BA, 6
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		mov	word ptr [si], 0Ch
		mov	word ptr [si+2], 3998h
		mov	[si+4],	dx
		mov	[si+12h], ax
		mov	[si+16h], bx
		mov	ax, cs:[bp+0]
		mov	[si+0Ch], ax
		mov	ax, cs:[bp+2]
		mov	[si+0Eh], ax
		add	bp, 4
		mov	[si+10h], bp
		pop	di
		pop	si
		retn
sub_13326	endp

; ---------------------------------------------------------------------------
		mov	bx, 3377h
		call	sub_13389
		mov	ax, [si+42h]
		mov	[si+22h], ax
		mov	word ptr [si+42h], 3
		mov	word ptr [si+36h], 0
		retn
; ---------------------------------------------------------------------------
		db 64h,	3 dup(0), 0Bh, 48h, 53h, 8, 61h, 1Eh, 22h, 11h
		db 6 dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_13389	proc near		; CODE XREF: seg000:3363p
		mov	di, si
		mov	cx, [di+4]
		mov	word_3822A, 0
		jcxz	short loc_13398
		jmp	short loc_1339B
; ---------------------------------------------------------------------------

loc_13398:				; CODE XREF: sub_13389+Bj
		jmp	locret_13528
; ---------------------------------------------------------------------------

loc_1339B:				; CODE XREF: sub_13389+Dj
					; sub_13389:loc_134E2j
		call	sub_11022
		push	di
		mov	di, 904Ah
		call	sub_1077C
		pop	di
		mov	bp, bx
		mov	word_3820A, si

loc_133AC:				; CODE XREF: sub_13389+13Cj
		mov	ax, cs:[bp+0]
		mov	[si], ax
		mov	ax, cs:[bp+4]
		mov	[si+2],	ax
		mov	ax, cs:[bp+6]
		mov	[si+4],	ax
		mov	ax, cs:[bp+8]
		mov	[si+6],	ax
		push	bx
		mov	bx, cs:[bp+0Ah]
		mov	ax, cs:[bx]
		mov	[si+0Ch], ax
		add	bx, 2
		mov	ax, cs:[bx]
		mov	[si+0Eh], ax
		add	bx, 2
		mov	[si+10h], bx
		pop	bx
		mov	ax, word_3822A
		mov	[si+12h], ax
		mov	word ptr [si+14h], 0
		mov	word ptr [si+16h], 0
		mov	word ptr [si+18h], 0
		mov	word ptr [si+1Ch], 0
		mov	word ptr [si+1Eh], 0
		mov	ax, cs:[bp+2]
		mov	[si+34h], ax
		mov	word ptr [si+1Ah], 0
		cmp	word ptr [di+8], 64h ; 'd'
		jge	short loc_13426
		neg	word_3822A
		mov	ax, word_3822A
		mov	[si+1Ah], ax
		neg	word_3822A
		mov	word ptr [si+12h], 0

loc_13426:				; CODE XREF: sub_13389+88j
		cmp	si, word_3820A
		jz	short loc_13433
		mov	ax, cs:[bp+2]
		sub	[si+1Ah], ax

loc_13433:				; CODE XREF: sub_13389+A1j
		push	bx
		mov	bx, [di+6]
		dec	bx
		shl	bx, 1
		mov	bx, [bx-21D0h]
		mov	[si+38h], bx
		cmp	word ptr [bx], 0Ah
		jnz	short loc_13461
		mov	ax, [bx+2]
		mov	[si+12h], ax
		mov	ax, [bx+4]
		mov	[si+16h], ax
		cmp	word ptr [di+8], 64h ; 'd'
		jl	short loc_1345E
		mov	ax, word_3822A
		add	[si+12h], ax

loc_1345E:				; CODE XREF: sub_13389+CDj
		add	bx, 6

loc_13461:				; CODE XREF: sub_13389+BBj
		mov	[si+3Ah], bx
		pop	bx
		mov	ax, [di+0Ch]
		mov	[si+42h], ax
		mov	ax, [di+0Ah]
		xchg	al, ah
		mov	[si+48h], ax
		call	sub_14191
		mov	[si+48h], al
		mov	ax, word_313A8
		mov	[si+24h], ax
		mov	ax, word_313E2
		mov	[si+36h], ax
		mov	al, cs:[bp+0Eh]
		mov	[si+27h], al
		cmp	byte ptr [si+27h], 0
		jnz	short loc_1349E
		mov	ax, word_313A6
		mov	[si+24h], ax
		mov	ax, word_313E0
		mov	[si+36h], ax

loc_1349E:				; CODE XREF: sub_13389+107j
		mov	al, cs:[bp+0Fh]
		mov	[si+26h], al
		call	sub_13589
		mov	ax, word_3820A
		mov	[si+44h], ax
		add	bp, 10h
		cmp	word ptr cs:[bp+0], 0
		jz	short loc_134C8
		push	di
		mov	di, si
		call	sub_11022
		mov	[di+46h], si
		call	sub_1077C
		pop	di
		jmp	loc_133AC
; ---------------------------------------------------------------------------

loc_134C8:				; CODE XREF: sub_13389+12Dj
		mov	ax, [di+8]

loc_134CB:				; CODE XREF: sub_13389+14Aj
		cmp	ax, 64h	; 'd'
		jl	short loc_134D5
		sub	ax, 64h	; 'd'
		jmp	short loc_134CB
; ---------------------------------------------------------------------------

loc_134D5:				; CODE XREF: sub_13389+145j
		add	word_3822A, ax
		mov	word ptr [si+46h], 0
		loop	loc_134E2
		jmp	short loc_134E5
; ---------------------------------------------------------------------------

loc_134E2:				; CODE XREF: sub_13389+155j
		jmp	loc_1339B
; ---------------------------------------------------------------------------

loc_134E5:				; CODE XREF: sub_13389+157j
		mov	ax, word_313E2
		cmp	byte ptr [si+27h], 0
		jnz	short loc_134F1
		mov	ax, word_313E0

loc_134F1:				; CODE XREF: sub_13389+163j
		mov	bx, 8E8Ch
		mov	cx, 8

loc_134F7:				; CODE XREF: sub_13389+175j
		cmp	ax, [bx]
		jz	short loc_13502
		add	bx, 4
		loop	loc_134F7
		jmp	short loc_1350A
; ---------------------------------------------------------------------------

loc_13502:				; CODE XREF: sub_13389+170j
		mov	ax, [di+4]
		add	[bx+2],	ax
		jmp	short locret_13528
; ---------------------------------------------------------------------------

loc_1350A:				; CODE XREF: sub_13389+177j
		mov	bx, 8E8Ch
		mov	cx, 8

loc_13510:				; CODE XREF: sub_13389+18Fj
		cmp	word ptr [bx], 0
		jz	short loc_1351C
		add	bx, 4
		loop	loc_13510
		jmp	short locret_13528
; ---------------------------------------------------------------------------

loc_1351C:				; CODE XREF: sub_13389+18Aj
		mov	[bx], ax
		mov	ax, [di+4]
		mov	[bx+2],	ax
		inc	word_316DC

locret_13528:				; CODE XREF: sub_13389:loc_13398j
					; sub_13389+17Fj ...
		retn
sub_13389	endp

; ---------------------------------------------------------------------------
		call	sub_11022
		push	di
		mov	di, 904Ah
		call	sub_1077C
		pop	di
		jmp	short loc_13541
; ---------------------------------------------------------------------------
		call	sub_11022
		push	di
		mov	di, 90E2h
		call	sub_1077C
		pop	di

loc_13541:				; CODE XREF: seg000:3534j
		mov	[si], ax
		mov	[si+2],	bx
		mov	word ptr [si+4], 761h
		mov	word ptr [si+48h], 0
		mov	bx, [di+8]
		sub	bx, 8
		mov	[si+12h], bx
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		and	bx, 0FEh
		mov	ax, [di+0Ah]
		sub	ax, 8
		mov	[si+16h], ax
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		mov	dx, 28h	; '('
		mul	dx
		add	ax, bx
		mov	[si+38h], ax
		mov	word ptr [si+1Ah], 0
		mov	word ptr [si+22h], 0
		retn

; =============== S U B	R O U T	I N E =======================================


sub_13589	proc near		; CODE XREF: sub_13389+11Cp
					; seg000:37DCj	...
		push	es
		push	di
		mov	di, [si+0Ch]
		sub	di, 8
		mov	ax, seg	seg007
		test	di, 1
		jz	short loc_1359E
		dec	di
		mov	ax, seg	seg008

loc_1359E:				; CODE XREF: sub_13589+Fj
		mov	es, ax
		assume es:seg008
		mov	ax, [si+12h]
		add	ax, es:[di]
		sub	ax, es:[di+8]
		mov	[si+28h], ax
		add	ax, es:[di+4]
		dec	ax
		mov	[si+2Ch], ax
		mov	ax, [si+16h]
		add	ax, es:[di+2]
		sub	ax, es:[di+0Ah]
		mov	[si+2Ah], ax
		add	ax, es:[di+6]
		dec	ax
		mov	[si+2Eh], ax
		pop	di
		pop	es
		assume es:nothing
		retn
sub_13589	endp

; ---------------------------------------------------------------------------
		mov	ax, [si+8]
		mov	word_316D2, ax
		mov	ax, [si+0Ah]
		mov	word_316D4, ax
		mov	ax, [si]
		mov	word_316D6, ax
		mov	ax, word_3168A
		mov	word_31696, ax
		mov	ax, word_3168C
		mov	word_31698, ax

; =============== S U B	R O U T	I N E =======================================


sub_135EB	proc near		; CODE XREF: sub_116BA+C7p
					; sub_13C75+44Fp
		cmp	word_31692, 0
		jnz	short locret_13614
sub_135EB	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_135F2	proc near		; CODE XREF: sub_14A69+135p
		mov	di, 9134h
		mov	si, 916Ah
		mov	cx, 7

loc_135FB:				; CODE XREF: sub_135F2+20j
		mov	ax, [di]
		mov	[si], ax
		test	ax, ax
		jz	short loc_13609
		mov	bx, [di+2]
		mov	ax, [bx+34h]

loc_13609:				; CODE XREF: sub_135F2+Fj
		mov	[si+2],	ax
		add	si, 4
		add	di, 4
		loop	loc_135FB

locret_13614:				; CODE XREF: sub_135EB+5j
		retn
sub_135F2	endp


; =============== S U B	R O U T	I N E =======================================


sub_13615	proc near		; CODE XREF: sub_13C75+F3p
		mov	si, 0D274h
		mov	bx, word_316C2
		mov	cx, word_316C0

loc_13620:				; CODE XREF: sub_13615+2Cj
		mov	ax, [si]
		test	ax, ax
		js	short loc_13643
		cmp	bx, ax
		jle	short loc_1363E
		cmp	cx, ax
		jg	short loc_1363E
		mov	bx, [si+2]
		push	si
		call	sub_10FB4
		pop	si
		mov	bx, word_316C2
		mov	cx, word_316C0

loc_1363E:				; CODE XREF: sub_13615+13j
					; sub_13615+17j
		add	si, 0Eh
		jmp	short loc_13620
; ---------------------------------------------------------------------------

loc_13643:				; CODE XREF: sub_13615+Fj
		cmp	cx, bx
		jge	short locret_13681
		mov	word_316C2, cx
		mov	si, 0DA9Eh
		mov	bx, word_316C4
		mov	cx, word_316C0

loc_13656:				; CODE XREF: sub_13615+62j
		mov	ax, [si]
		test	ax, ax
		js	short loc_13679
		cmp	bx, ax
		jle	short loc_13674
		cmp	cx, ax
		jg	short loc_13674
		mov	bx, [si+2]
		push	si
		call	sub_10FD2
		pop	si
		mov	bx, word_316C4
		mov	cx, word_316C0

loc_13674:				; CODE XREF: sub_13615+49j
					; sub_13615+4Dj
		add	si, 0Eh
		jmp	short loc_13656
; ---------------------------------------------------------------------------

loc_13679:				; CODE XREF: sub_13615+45j
		cmp	cx, bx
		jge	short locret_13681
		mov	word_316C4, cx

locret_13681:				; CODE XREF: sub_13615+30j
					; sub_13615+66j
		retn
sub_13615	endp


; =============== S U B	R O U T	I N E =======================================


sub_13682	proc near		; CODE XREF: sub_13C75+E7p
		mov	si, word_314EC
		call	sub_136FC
		mov	si, word_31584
		call	sub_136FC
		mov	si, word_31538
		mov	al, byte_3148B
		mov	byte_314DE, al
		mov	byte_3148B, 0
		call	sub_136FC
		mov	si, word_315D0
		call	sub_136FC
		mov	si, word_3161C
		call	sub_136FC
		mov	si, word_314EC
		call	sub_1370B
		mov	si, word_31538
		call	sub_1370B
		mov	si, word_31584
		call	sub_1370B
		mov	si, word_315D0
		call	sub_1370B
		mov	si, word_3161C
		call	sub_1370B
		mov	si, 8E8Ch
		mov	cx, 8

loc_136D9:				; CODE XREF: sub_13682+77j
		mov	ax, [si]
		test	ax, ax
		jz	short loc_136F6
		mov	di, word_31584

loc_136E3:				; CODE XREF: sub_13682+6Ej
		cmp	word ptr [di], 0
		jz	short loc_136F2
		cmp	ax, [di+36h]
		jz	short loc_136F6
		mov	di, [di+0Ah]
		jmp	short loc_136E3
; ---------------------------------------------------------------------------

loc_136F2:				; CODE XREF: sub_13682+64j
		mov	word ptr [si], 0

loc_136F6:				; CODE XREF: sub_13682+5Bj
					; sub_13682+69j
		add	si, 4
		loop	loc_136D9
		retn
sub_13682	endp


; =============== S U B	R O U T	I N E =======================================


sub_136FC	proc near		; CODE XREF: sub_13682+4p sub_13682+Bp ...
		cmp	word ptr [si], 0
		jz	short locret_1370A
		push	word ptr [si+0Ah]
		call	word ptr [si+2]
		pop	si
		jmp	short sub_136FC
; ---------------------------------------------------------------------------

locret_1370A:				; CODE XREF: sub_136FC+3j
		retn
sub_136FC	endp


; =============== S U B	R O U T	I N E =======================================


sub_1370B	proc near		; CODE XREF: sub_13682+32p
					; sub_13682+39p ...
		cmp	word ptr [si], 0
		jz	short locret_13719
		push	word ptr [si+0Ah]
		call	word ptr [si+4]
		pop	si
		jmp	short sub_1370B
; ---------------------------------------------------------------------------

locret_13719:				; CODE XREF: sub_1370B+3j
		retn
sub_1370B	endp


; =============== S U B	R O U T	I N E =======================================


sub_1371A	proc near		; CODE XREF: sub_118F5+1Cp
					; sub_118F5+23p ...
		cmp	word ptr [si], 0
		jz	short locret_1373C
		push	word ptr [si+0Ah]
		cmp	byte ptr [si+4Ah], 0
		jnz	short loc_1372D
		call	sub_107A0
		jmp	short loc_13739
; ---------------------------------------------------------------------------

loc_1372D:				; CODE XREF: sub_1371A+Cj
		cmp	byte ptr [si+4Bh], 0
		jnz	short loc_13739
		mov	ax, word_3822E
		sub	[si+16h], ax

loc_13739:				; CODE XREF: sub_1371A+11j
					; sub_1371A+17j
		pop	si
		jmp	short sub_1371A
; ---------------------------------------------------------------------------

locret_1373C:				; CODE XREF: sub_1371A+3j
		retn
sub_1371A	endp


; =============== S U B	R O U T	I N E =======================================


sub_1373D	proc near		; CODE XREF: sub_13C75+E1p
		mov	si, word_31584
		xor	cx, cx

loc_13743:				; CODE XREF: sub_1373D+1Cj
		mov	ax, [si]
		test	ax, ax
		jz	short loc_1375B
		cmp	ax, 50h	; 'P'
		jz	short loc_13754
		cmp	ax, 54h	; 'T'
		jz	short loc_13754
		inc	cx

loc_13754:				; CODE XREF: sub_1373D+Fj
					; sub_1373D+14j
		call	sub_11689
		mov	si, di
		jmp	short loc_13743
; ---------------------------------------------------------------------------

loc_1375B:				; CODE XREF: sub_1373D+Aj
		mov	word_31462, cx
		retn
sub_1373D	endp


; =============== S U B	R O U T	I N E =======================================


sub_13760	proc near		; CODE XREF: sub_13760+Cj
					; sub_13C75+47Ap ...
		cmp	word ptr [si], 0
		jz	short locret_1376E
		push	word ptr [si+0Ah]
		call	sub_107A0
		pop	si
		jmp	short sub_13760
; ---------------------------------------------------------------------------

locret_1376E:				; CODE XREF: sub_13760+3j
		retn
sub_13760	endp


; =============== S U B	R O U T	I N E =======================================


sub_1376F	proc near		; CODE XREF: sub_13788+6p sub_137A9+6p
		mov	di, word_315D0

loc_13773:				; CODE XREF: sub_1376F+16j
		cmp	word ptr [di], 0
		jz	short locret_13787
		cmp	word ptr [di], 40h ; '@'
		jnz	short loc_13782
		cmp	si, [di+1Ch]
		jz	short locret_13787

loc_13782:				; CODE XREF: sub_1376F+Cj
		mov	di, [di+0Ah]
		jmp	short loc_13773
; ---------------------------------------------------------------------------

locret_13787:				; CODE XREF: sub_1376F+7j
					; sub_1376F+11j
		retn
sub_1376F	endp


; =============== S U B	R O U T	I N E =======================================


sub_13788	proc near		; CODE XREF: sub_15154+B3p
		push	di
		cmp	word ptr [si], 34h ; '4'
		jnz	short loc_1379D
		call	sub_1376F
		cmp	word ptr [di], 0
		jz	short loc_1379D
		push	si
		mov	si, di
		call	sub_107C0
		pop	si

loc_1379D:				; CODE XREF: sub_13788+4j sub_13788+Cj
		mov	di, [si+6]
		mov	word ptr [di], 0
		call	sub_107C0
		pop	si
		retn
sub_13788	endp


; =============== S U B	R O U T	I N E =======================================


sub_137A9	proc near		; CODE XREF: sub_118F5+36p
					; sub_13C75+447p ...
		push	di
		cmp	word ptr [si], 34h ; '4'
		jnz	short loc_137BE
		call	sub_1376F
		cmp	word ptr [di], 0
		jz	short loc_137BE
		push	si
		mov	si, di
		call	sub_107A0
		pop	si

loc_137BE:				; CODE XREF: sub_137A9+4j sub_137A9+Cj
		mov	di, [si+6]
		mov	word ptr [di], 0
		call	sub_107A0
		pop	di
		retn
sub_137A9	endp

; ---------------------------------------------------------------------------
		call	sub_141B1
		mov	di, [si+44h]
		mov	ax, [di+12h]
		mov	[si+12h], ax
		mov	ax, [di+16h]
		mov	[si+16h], ax
		jmp	sub_13589
; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jz	short loc_137E7
		retn
; ---------------------------------------------------------------------------

loc_137E7:				; CODE XREF: seg000:37E4j
		cmp	byte_314DE, 0
		jz	short locret_13800
		mov	ax, 0
		mov	bx, 0FFF7h
		mov	cx, 0
		mov	dx, 0FFFAh
		mov	bp, 12B8h
		call	sub_145F4

locret_13800:				; CODE XREF: seg000:37ECj
		retn
; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jz	short loc_13809
		retn
; ---------------------------------------------------------------------------

loc_13809:				; CODE XREF: seg000:3806j
		cmp	byte_314DE, 0
		jz	short locret_13834
		mov	ax, 0FFF7h
		mov	bx, 0
		mov	cx, 0FFFEh
		mov	dx, 0FFFDh
		mov	bp, 12B2h
		call	sub_145F4
		mov	ax, 9
		mov	bx, 0
		mov	cx, 2
		mov	dx, 0FFFDh
		mov	bp, 12BEh
		call	sub_145F4

locret_13834:				; CODE XREF: seg000:380Ej
		retn
; ---------------------------------------------------------------------------
		call	sub_141B1
		mov	ax, word_32442
		mov	[si+12h], ax
		mov	ax, word_32446
		mov	[si+16h], ax
		cmp	word_31E4E, 0
		jz	short loc_1384E
		jmp	loc_147A9
; ---------------------------------------------------------------------------

loc_1384E:				; CODE XREF: seg000:3849j
		mov	word ptr [si+4], 853h
		cmp	byte_314DE, 0
		jz	short locret_13871
		mov	word ptr [si+0Eh], 1
		mov	ax, 0
		mov	bx, 9
		mov	cx, 0
		mov	dx, 12h
		mov	bp, 12C4h
		call	sub_145F4

locret_13871:				; CODE XREF: seg000:3858j
		retn
; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jz	short loc_1387A
		retn
; ---------------------------------------------------------------------------

loc_1387A:				; CODE XREF: seg000:3877j
		cmp	word ptr [si+48h], 0
		js	short loc_13883
		dec	word ptr [si+48h]

loc_13883:				; CODE XREF: seg000:387Ej
		cmp	byte_314DE, 0
		jz	short locret_138FF
		cmp	word ptr [si+48h], 0
		jns	short locret_138FF
		mov	di, word_315D0

loc_13894:				; CODE XREF: seg000:38A1j
		cmp	word ptr [di], 0
		jz	short loc_138A3
		cmp	word ptr [di], 28h ; '('
		jz	short locret_138FF
		mov	di, [di+0Ah]
		jmp	short loc_13894
; ---------------------------------------------------------------------------

loc_138A3:				; CODE XREF: seg000:3897j
		mov	word ptr [si+48h], 0Fh
		push	si
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		mov	di, 1170h
		mov	word ptr [si], 28h ; '('
		mov	word ptr [si+2], 262Dh
		mov	word ptr [si+4], 853h
		mov	byte ptr [si+4Ah], 0FFh
		mov	ax, cs:[di]
		mov	[si+0Ch], ax
		mov	ax, cs:[di+2]
		mov	[si+0Eh], ax
		add	di, 4
		mov	[si+10h], di
		mov	ax, word_32442
		mov	[si+12h], ax
		mov	ax, word_32446
		sub	ax, 0Ch
		mov	[si+16h], ax
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	ax, 4
		neg	ax
		mov	[si+1Ah], ax
		mov	word ptr [si+48h], 6
		pop	si

locret_138FF:				; CODE XREF: seg000:3888j seg000:388Ej ...
		retn
; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jz	short loc_13908
		retn
; ---------------------------------------------------------------------------

loc_13908:				; CODE XREF: seg000:3905j
		cmp	word ptr [si+48h], 0
		js	short loc_13911
		dec	word ptr [si+48h]

loc_13911:				; CODE XREF: seg000:390Cj
		cmp	byte_314DE, 0
		jz	short locret_13997
		cmp	word ptr [si+48h], 0
		jns	short locret_13997
		mov	di, word_315D0

loc_13922:				; CODE XREF: seg000:392Fj
		cmp	word ptr [di], 0
		jz	short loc_13931
		cmp	word ptr [di], 48h ; 'H'
		jz	short locret_13997
		mov	di, [di+0Ah]
		jmp	short loc_13922
; ---------------------------------------------------------------------------

loc_13931:				; CODE XREF: seg000:3925j
		mov	word ptr [si+48h], 12h
		mov	word_313B8, 0
		push	si
		mov	ax, 7

loc_13940:				; CODE XREF: seg000:3994j
		push	ax
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		pop	bx
		push	bx
		shl	bx, 1
		mov	di, [bx+324Ah]
		mov	word ptr [si], 48h ; 'H'
		mov	word ptr [si+2], 1FF3h
		mov	word ptr [si+4], 853h
		mov	byte ptr [si+4Ah], 0FFh
		mov	ax, cs:[di]
		mov	[si+0Ch], ax
		mov	ax, cs:[di+2]
		mov	[si+0Eh], ax
		add	di, 4
		mov	[si+10h], di
		mov	ax, word_32442
		mov	[si+12h], ax
		mov	ax, word_32446
		mov	[si+16h], ax
		mov	word ptr [si+22h], 0
		mov	word ptr [si+1Ah], 0Dh
		pop	ax
		mov	[si+1Ch], ax
		sub	ax, 2
		jns	short loc_13940
		pop	si

locret_13997:				; CODE XREF: seg000:3916j seg000:391Cj ...
		retn
; ---------------------------------------------------------------------------
		call	sub_141B1
		retn
; ---------------------------------------------------------------------------
		cmp	byte_31754, 0
		jz	short loc_139A6
		jmp	loc_13A2F
; ---------------------------------------------------------------------------

loc_139A6:				; CODE XREF: seg000:39A1j
		call	sub_141B1
		cmp	word ptr [si], 4
		jz	short locret_139D2
		mov	dx, [si+1Ch]
		xor	ax, ax
		mov	cx, 6

loc_139B6:				; CODE XREF: seg000:39BAj
		sar	dx, 1
		rcr	ax, 1
		loop	loc_139B6
		add	[si+14h], ax
		adc	[si+12h], dx
		cmp	word ptr [si+12h], 140h
		jnb	short loc_139CF
		sub	word ptr [si+16h], 0Ch
		jns	short loc_139D3

loc_139CF:				; CODE XREF: seg000:39C7j
		call	sub_107C0

locret_139D2:				; CODE XREF: seg000:39ACj seg000:39D7j ...
		retn
; ---------------------------------------------------------------------------

loc_139D3:				; CODE XREF: seg000:39CDj
		cmp	word ptr [si+22h], 0
		jz	short locret_139D2
		call	sub_13589
		call	sub_11BEA
		jz	short locret_139D2
		mov	ax, [si+34h]
		add	ax, cs:word_13DAC
		call	sub_107C0
		jmp	short sub_13A36
; ---------------------------------------------------------------------------
		cmp	byte_31754, 0
		jnz	short loc_13A2F
		call	sub_141B1
		mov	ax, [si+1Ch]
		add	[si+12h], ax
		cmp	word ptr [si+12h], 138h
		jnb	short loc_13A12
		mov	ax, [si+20h]
		add	[si+16h], ax
		cmp	word ptr [si+16h], 0C0h	; '
		jb	short loc_13A16

loc_13A12:				; CODE XREF: seg000:3A03j
		call	sub_107C0
		retn
; ---------------------------------------------------------------------------

loc_13A16:				; CODE XREF: seg000:3A10j
		mov	ax, [si+12h]
		mov	bx, [si+16h]
		call	sub_11CCC
		jz	short locret_13A2E
		mov	ax, [si+34h]
		add	ax, cs:word_13DAA
		call	sub_107C0
		jmp	short sub_13A36
; ---------------------------------------------------------------------------

locret_13A2E:				; CODE XREF: seg000:3A1Fj
		retn
; ---------------------------------------------------------------------------

loc_13A2F:				; CODE XREF: seg000:39A3j seg000:39F3j
		call	sub_107C0
		retn

; =============== S U B	R O U T	I N E =======================================


sub_13A33	proc near		; CODE XREF: seg000:2AF8p seg000:4379p ...
		mov	ax, 7Fh	; ''
sub_13A33	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_13A36	proc near		; CODE XREF: sub_10EE1p seg000:1C9Fp ...
		jmp	word ptr [di+6]
sub_13A36	endp

; ---------------------------------------------------------------------------
		push	di
		mov	di, [di+44h]
		mov	bx, di

loc_13A3F:				; CODE XREF: seg000:3A4Dj
		mov	word ptr [bx+4], 8B9h
		cmp	word ptr [bx+46h], 0
		jz	short loc_13A4F
		mov	bx, [bx+46h]
		jmp	short loc_13A3F
; ---------------------------------------------------------------------------

loc_13A4F:				; CODE XREF: seg000:3A48j
		sub	[di+24h], ax
		ja	short loc_13A8C
		push	word ptr [di+46h]

loc_13A57:				; CODE XREF: seg000:3A87j
		pop	bx
		test	bx, bx
		jz	short loc_13A89
		cmp	byte ptr [bx+26h], 0
		js	short loc_13A7D
		push	bx
		push	si
		mov	si, bx
		call	sub_10EF5
		pop	si
		mov	bp, 1230h
		cmp	byte ptr [di+27h], 0
		jz	short loc_13A76
		mov	bp, 124Ch

loc_13A76:				; CODE XREF: seg000:3A71j
		mov	dx, 853h
		call	sub_13326
		pop	bx

loc_13A7D:				; CODE XREF: seg000:3A60j
		push	word ptr [bx+46h]
		push	si
		mov	si, bx
		call	sub_107C0
		pop	si
		jmp	short loc_13A57
; ---------------------------------------------------------------------------

loc_13A89:				; CODE XREF: seg000:3A5Aj
		call	sub_13AB2

loc_13A8C:				; CODE XREF: seg000:3A52j
		pop	di
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [di+4], 8B9h
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [di+4], 8B9h
		cmp	word ptr [si], 0
		jz	short locret_13AA6
		cmp	word ptr [si], 8
		jz	short locret_13AA6
		call	sub_107C0

locret_13AA6:				; CODE XREF: seg000:3A9Cj seg000:3AA1j
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [di+4], 8B9h
		sub	[di+24h], ax
		jbe	short sub_13AB2
		retn

; =============== S U B	R O U T	I N E =======================================


sub_13AB2	proc near		; CODE XREF: seg000:loc_13A89p
					; seg000:3AAFj
		push	si
		mov	si, di
		call	sub_10EF5
		pop	si
		mov	bp, 1230h
		cmp	byte ptr [di+27h], 0
		jz	short loc_13AC5
		mov	bp, 124Ch

loc_13AC5:				; CODE XREF: sub_13AB2+Ej
		mov	dx, 853h
		call	sub_13326
		mov	ax, [di+36h]
		test	ax, ax
		jz	short loc_13B41
		mov	bx, 8E8Ch
		mov	cx, 8

loc_13AD8:				; CODE XREF: sub_13AB2+2Dj
		cmp	ax, [bx]
		jz	short loc_13AE3
		add	bx, 4
		loop	loc_13AD8
		jmp	short loc_13B41
; ---------------------------------------------------------------------------

loc_13AE3:				; CODE XREF: sub_13AB2+28j
		dec	word ptr [bx+2]
		jnz	short loc_13B41
		mov	word ptr [bx], 0
		push	si
		call	sub_11022
		push	di
		mov	di, 9096h
		call	sub_1077C
		pop	di
		mov	bx, 11F2h
		mov	word ptr [si], 60h ; '`'
		cmp	byte ptr [di+27h], 0
		jz	short loc_13B0C
		mov	bx, 11B4h
		mov	word ptr [si], 18h

loc_13B0C:				; CODE XREF: sub_13AB2+51j
		mov	word ptr [si+1Ah], 7
		mov	word ptr [si+2], 28DFh
		mov	word ptr [si+4], 853h
		mov	ax, cs:[bx]
		mov	[si+0Ch], ax
		mov	ax, cs:[bx+2]
		mov	[si+0Eh], ax
		add	bx, 4
		mov	[si+10h], bx
		mov	ax, [di+12h]
		mov	[si+12h], ax
		mov	ax, [di+16h]
		mov	[si+16h], ax
		call	sub_14191
		mov	[si+1Ch], ax
		pop	si

loc_13B41:				; CODE XREF: sub_13AB2+1Ej
					; sub_13AB2+2Fj ...
		mov	ax, [di+34h]
		add	word_31682, ax
		adc	word_31684, 0
		push	si
		mov	si, di
		call	sub_107C0
		pop	si
		retn
sub_13AB2	endp

; ---------------------------------------------------------------------------
		push	si
		mov	si, di
		call	sub_10EF5
		pop	si
		mov	dx, 853h
		mov	bp, 1230h
		cmp	byte ptr [di+27h], 0
		jz	short loc_13B6B
		mov	bp, 124Ch

loc_13B6B:				; CODE XREF: seg000:3B66j
		call	sub_13326
		push	si
		mov	si, di
		call	sub_107C0
		pop	si
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [di+4], 3BDFh
		sub	[di+24h], ax
		jbe	short loc_13B81
		retn
; ---------------------------------------------------------------------------

loc_13B81:				; CODE XREF: seg000:3B7Ej
		mov	ax, [di+34h]
		add	word_31682, ax
		adc	word_31684, 0
		mov	ax, [di+30h]
		inc	ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, [di+12h]
		mov	bx, [di+32h]
		inc	bx
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		add	bx, [di+16h]
		sub	bx, word_316C0
		mov	bp, 124Ch
		mov	dx, 853h
		call	sub_13326
		push	si
		mov	bx, [di+38h]
		mov	bp, [di+10h]
		mov	si, [di+32h]

loc_13BBE:				; CODE XREF: seg000:3BD6j
		mov	cx, [di+30h]
		inc	cx
		lea	dx, [bx+28h]

loc_13BC5:				; CODE XREF: seg000:3BD1j
		mov	ax, cs:[bp+0]
		mov	[bx], ax
		add	bx, 2
		add	bp, 2
		loop	loc_13BC5
		mov	bx, dx
		dec	si
		jns	short loc_13BBE
		mov	si, di
		call	sub_107C0
		pop	si
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [si+4], 761h
		mov	ax, [si+30h]
		inc	ax
		mov	bx, [si+32h]
		inc	bx
		mov	dx, [si+16h]
		sub	dx, word_316C0
		mov	cx, [si+12h]
		shr	cx, 1
		push	si
		mov	si, [si+0Ch]
		call	sub_10963
		pop	si
		retn

; =============== S U B	R O U T	I N E =======================================


sub_13C01	proc near		; CODE XREF: sub_13C4F+22p
					; seg000:43D3p
		cmp	word_31694, 0
		jnz	short locret_13C4E
		mov	byte_31754, 0FFh
		mov	word_316B6, 0
		mov	byte_314DF, 0FFh
		mov	word_313B8, 6
		mov	word_313BA, 6
		mov	word_313B0, 1
		mov	word_313B4, 0
		mov	bp, 1264h
		mov	ax, cs:[bp+0]
		mov	word_3243C, ax
		mov	ax, cs:[bp+2]
		mov	word_3243E, ax
		add	bp, 4
		mov	word_32440, bp
		mov	word_32434, 853h

locret_13C4E:				; CODE XREF: sub_13C01+5j
		retn
sub_13C01	endp


; =============== S U B	R O U T	I N E =======================================


sub_13C4F	proc near		; CODE XREF: seg000:loc_1439Ep
		cmp	byte_31486, 0
		jnz	short locret_13C74
		cmp	word_31694, 0
		jnz	short locret_13C74
		cmp	byte_31753, 0
		jz	short loc_13C66
		shr	ax, 1

loc_13C66:				; CODE XREF: sub_13C4F+13j
		mov	byte_314DF, 0FFh
		sub	word_316B6, ax
		ja	short locret_13C74
		call	sub_13C01

locret_13C74:				; CODE XREF: sub_13C4F+5j sub_13C4F+Cj ...
		retn
sub_13C4F	endp


; =============== S U B	R O U T	I N E =======================================


sub_13C75	proc near		; CODE XREF: start+5Ap
		call	sub_16058
		mov	byte_31484, 0
		mov	word_3139E, 1
		mov	byte_31485, 0
		mov	byte_31486, 0
		mov	word ptr ss:byte_447B0+10h, 0BFh ; '
		call	sub_1426A
		mov	word_313A0, 1

loc_13C9D:				; CODE XREF: sub_13C75+322j
		mov	sp, word_3139A
		call	sub_10D5F
		mov	byte_31488, 0
		mov	byte_31489, 0
		mov	byte_3148B, 0
		mov	word_313B8, 0
		mov	word_313BA, 0
		call	sub_15863
		call	sub_15B21
		call	sub_10D5F
		mov	word_31E4C, 1
		mov	byte_2BA80, 31h	; '1'
		call	sub_15CC5
		call	sub_11827
		call	sub_11B43
		mov	byte_2BC57, 31h	; '1'
		cmp	byte_3148D, 0
		jnz	short loc_13CED
		mov	byte_2BC57, 32h	; '2'

loc_13CED:				; CODE XREF: sub_13C75+71j
		mov	si, 3715h
		mov	byte_2BC7E, 0FFh
		call	sub_15926
		mov	byte_2BC7E, 0
		call	sub_10D5F
		cmp	byte_31484, 0
		jz	short loc_13D0D
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-

loc_13D0D:				; CODE XREF: sub_13C75+90j
		call	sub_10985
		call	sub_1080F
		call	sub_10A2F
		call	sub_10E2B
		call	sub_10D81
		mov	byte_31489, 0
		mov	byte_3148B, 0

loc_13D26:				; CODE XREF: sub_13C75+33Cj
					; sub_13C75:loc_13FC5j	...
		inc	word_316CC
		mov	ax, word_316CC
		and	ax, 3
		jnz	short loc_13D47
		mov	ax, word_316DC
		mov	word_313E0, ax
		mov	ax, word_316DC
		mov	word_313E2, ax
		inc	word_313E2
		add	word_316DC, 2

loc_13D47:				; CODE XREF: sub_13C75+BBj
		call	sub_10985
		mov	word_316CA, 1
		call	sub_10E4D
		call	sub_10BA5
		call	sub_1373D
		call	sub_10FF0
		call	sub_13682
		call	sub_1080F
		call	sub_14675
		call	sub_10A95
		call	sub_13615
		mov	al, byte_31488
		test	al, al
		jnz	short loc_13D75
		jmp	loc_13E1A
; ---------------------------------------------------------------------------

loc_13D75:				; CODE XREF: sub_13C75+FBj
		mov	byte_31488, 0
		mov	si, 3D8Fh
		mov	cs:byte_13D9B, al

loc_13D81:				; CODE XREF: sub_13C75+114j
		cmp	al, cs:[si]
		jz	short loc_13D8B
		add	si, 3
		jmp	short loc_13D81
; ---------------------------------------------------------------------------

loc_13D8B:				; CODE XREF: sub_13C75+10Fj
		jmp	word ptr cs:[si+1]
; ---------------------------------------------------------------------------
		db 19h,	0F8h, 3Dh, 1, 9Dh, 3Ch,	1Ch, 0BDh, 3Dh,	17h, 0B4h
		db 3Dh
byte_13D9B	db 0			; DATA XREF: sub_13C75+108w
		db 1Ah,	3Eh, 9,	0, 1, 0, 4, 0, 2, 0, 1,	0, 1, 0
word_13DAA	dw 1			; DATA XREF: seg000:3A24r
word_13DAC	dw 1			; DATA XREF: seg000:39E4r
; ---------------------------------------------------------------------------
		add	ax, [bx+si]
		or	[bx+si], al
		add	al, 0
		mov	al, byte_31487
		xor	byte_31486, al
		jmp	short loc_13E1A
; ---------------------------------------------------------------------------
		cmp	byte_31754, 0
		jnz	short loc_13E1A
		cmp	word_313B0, 0
		jnz	short loc_13DF0
		cmp	word_31690, 0
		jz	short loc_13E1A
		mov	word_313B2, 1
		mov	word_313B8, 18h
		mov	word_313B0, 1
		dec	word_31690
		mov	word_313B4, 88h	; '
		jmp	short loc_13E1A
; ---------------------------------------------------------------------------

loc_13DF0:				; CODE XREF: sub_13C75+154j
		mov	word_313B4, 1
		jmp	short loc_13E1A
; ---------------------------------------------------------------------------
		mov	byte_3148B, 0

loc_13DFD:				; CODE XREF: sub_13C75+199j
		cmp	byte_3148B, 0
		jnz	short loc_13E10
		cmp	byte_31488, 0
		jnz	short loc_13E10
		call	sub_160A5
		jmp	short loc_13DFD
; ---------------------------------------------------------------------------

loc_13E10:				; CODE XREF: sub_13C75+18Dj
					; sub_13C75+194j
		mov	byte_31488, 0
		mov	byte_3148B, 0

loc_13E1A:				; CODE XREF: sub_13C75+FDj
					; sub_13C75+146j ...
		mov	ax, word_316C0
		mov	word_3822E, ax
		mov	ax, word_316CA
		mov	word_38212, ax
		mov	ax, word_38212
		cmp	ax, word_316BC
		jz	short loc_13E46
		inc	word_316D0
		cmp	word_316D0, 23h	; '#'
		jl	short loc_13E4C
		shl	word_38212, 1
		mov	ax, word_38212
		mov	word_316CA, ax
		jmp	short loc_13E4C
; ---------------------------------------------------------------------------

loc_13E46:				; CODE XREF: sub_13C75+1B8j
		mov	word_316D0, 0

loc_13E4C:				; CODE XREF: sub_13C75+1C3j
					; sub_13C75+1CFj
		mov	ax, word_316C6
		mov	word_38216, ax
		mov	ax, word_316BE
		mov	word_3821A, ax
		mov	ax, word_316C0
		mov	word_3821E, ax
		mov	ax, word_38212
		sub	word_3821E, ax
		mov	ax, word_316D8
		cmp	word_3821E, ax
		jge	short loc_13E82
		mov	ax, word_316D8
		sub	word_3821E, ax
		mov	ax, word_3821E
		add	word_38212, ax
		mov	ax, word_316D8
		mov	word_3821E, ax

loc_13E82:				; CODE XREF: sub_13C75+1F7j
		mov	ax, word_316DA
		cmp	word_3821E, ax
		jle	short loc_13E9F
		mov	ax, word_3821E
		add	word_38212, ax
		mov	ax, word_316DA
		sub	word_38212, ax
		mov	ax, word_316DA
		mov	word_3821E, ax

loc_13E9F:				; CODE XREF: sub_13C75+214j
		mov	ax, word_38212
		sub	word_38216, ax
		js	short loc_13EBB
		cmp	word_38216, 10h
		jl	short loc_13EC5
		sub	word_38216, 10h
		add	word_3821A, 28h	; '('
		jmp	short loc_13EC5
; ---------------------------------------------------------------------------

loc_13EBB:				; CODE XREF: sub_13C75+231j
		add	word_38216, 10h
		sub	word_3821A, 28h	; '('

loc_13EC5:				; CODE XREF: sub_13C75+238j
					; sub_13C75+244j
		mov	ax, word_38212
		mov	word_316C8, ax
		mov	ax, word_38216
		mov	word_316C6, ax
		mov	ax, word_3821A
		mov	word_316BE, ax
		mov	ax, word_3821E
		mov	word_316C0, ax
		mov	ax, word_316DA
		cmp	word_3822E, ax
		jnz	short loc_13EED
		test	byte_31489, 2
		jnz	short loc_13EF4

loc_13EED:				; CODE XREF: sub_13C75+26Fj
		mov	ax, word_316DE
		add	word_3821E, ax

loc_13EF4:				; CODE XREF: sub_13C75+276j
		mov	ax, word_316DA
		cmp	word_3821E, ax
		jg	short loc_13F03
		mov	ax, word_3821E
		mov	word_316DA, ax

loc_13F03:				; CODE XREF: sub_13C75+286j
		call	sub_10A2F
		call	sub_10D81
		cmp	byte_3148C, 0
		jnz	short loc_13F13
		jmp	loc_13FAA
; ---------------------------------------------------------------------------

loc_13F13:				; CODE XREF: sub_13C75+299j
		mov	byte_3148C, 0
		mov	word_31662, 1
		mov	word_316B6, 27h	; '''
		mov	byte_314DF, 0FFh
		dec	word_316BA
		call	sub_10E91
		cmp	word_316BA, 0
		jnz	short loc_13F9A
		call	sub_10D5F
		call	sub_159C8
		call	sub_10D5F
		dec	word_316E0
		jz	short loc_13F7B
		call	sub_15C0F
		jz	short loc_13F7B
		mov	word_316BA, 3
		call	sub_10E91
		mov	word_31682, 0
		mov	word_31684, 0
		mov	di, 921Ch
		mov	cx, 7
		xor	al, al
		rep stosb
		mov	word_31686, 0
		mov	word_31688, 0
		call	sub_10E6F
		jmp	short loc_13F9A
; ---------------------------------------------------------------------------

loc_13F7B:				; CODE XREF: sub_13C75+2CFj
					; sub_13C75+2D4j
		mov	si, 3729h
		mov	cx, 1Eh
		call	sub_15926
		mov	bx, word_313AA
		mov	byte ptr [bx-70A3h], 0
		xor	bx, 1
		cmp	byte ptr [bx-70A3h], 0
		jnz	short loc_13F9A
		jmp	loc_13C9D
; ---------------------------------------------------------------------------

loc_13F9A:				; CODE XREF: sub_13C75+2C0j
					; sub_13C75+304j ...
		call	sub_11A62
		cmp	byte_31484, 0
		jz	short loc_13FAA
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-

loc_13FAA:				; CODE XREF: sub_13C75+29Bj
					; sub_13C75+32Dj
		cmp	word_31694, 0
		jz	short loc_13FB4
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_13FB4:				; CODE XREF: sub_13C75+33Aj
		cmp	byte_314E0, 0
		jnz	short loc_13FC8
		cmp	byte_31491, 0
		jz	short loc_13FC5
		jmp	loc_140A7
; ---------------------------------------------------------------------------

loc_13FC5:				; CODE XREF: sub_13C75+34Bj
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_13FC8:				; CODE XREF: sub_13C75+344j
		mov	ah, 1
		int	80h		; LINUX	-
		cmp	word_316C0, 1E0h
		jg	short loc_1400D
		mov	ax, word_313DC
		mov	word_38216, ax
		mov	ax, word_38216
		mov	word_3147A, ax
		add	word_38216, 190h
		cmp	word_3168C, 0
		jnz	short loc_1403E
		mov	ax, word_3168A
		cmp	word_38216, ax
		jle	short loc_1403E
		call	sub_14191
		and	ax, 3
		mov	dx, 32h	; '2'
		mul	dx
		add	word_38216, ax
		mov	ax, word_38216
		mov	word_3168A, ax
		jmp	short loc_1403E
; ---------------------------------------------------------------------------

loc_1400D:				; CODE XREF: sub_13C75+35Dj
		mov	ax, word_313DE
		mov	word_38216, ax
		mov	ax, word_38216
		mov	word_3147A, ax
		cmp	word_3168C, 0
		jnz	short loc_1403E
		mov	ax, word_3168A
		cmp	word_38216, ax
		jle	short loc_1403E
		call	sub_14191
		and	ax, 3
		mov	dx, 32h	; '2'
		mul	dx
		add	word_38216, ax
		mov	ax, word_38216
		mov	word_3168A, ax

loc_1403E:				; CODE XREF: sub_13C75+376j
					; sub_13C75+37Fj ...
		mov	byte_31753, 0
		mov	byte_314E1, 0
		cmp	word_316C0, 3C0h
		jg	short loc_14078
		cmp	word_31E4C, 5
		jnz	short loc_14078
		mov	byte_314E1, 0FFh
		cmp	word_313A0, 2
		jnz	short loc_14078
		mov	bx, word_313AA
		xor	bx, 1
		cmp	byte ptr [bx-70A3h], 0
		jz	short loc_14078
		cmp	byte ptr [bx-70A1h], 0
		jz	short loc_1407E

loc_14078:				; CODE XREF: sub_13C75+3D9j
					; sub_13C75+3E0j ...
		call	sub_14A69
		call	sub_10E91

loc_1407E:				; CODE XREF: sub_13C75+401j
		mov	byte_314E0, 0
		cmp	word_31692, 0
		jz	short loc_1408D
		call	sub_12B22

loc_1408D:				; CODE XREF: sub_13C75+413j
		cmp	byte_31491, 0
		jnz	short loc_140A7
		cmp	byte_31484, 0
		jnz	short loc_1409E
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_1409E:				; CODE XREF: sub_13C75+424j
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_140A7:				; CODE XREF: sub_13C75+34Dj
					; sub_13C75+41Dj
		mov	byte_31491, 0
		cmp	word_31E4C, 5
		jnz	short loc_140CB

loc_140B3:				; CODE XREF: sub_13C75+44Aj
		mov	si, word_31538
		cmp	word ptr [si], 0
		jz	short loc_140C1
		call	sub_137A9
		jmp	short loc_140B3
; ---------------------------------------------------------------------------

loc_140C1:				; CODE XREF: sub_13C75+445j
		call	sub_13319
		call	sub_135EB
		inc	word_316E0

loc_140CB:				; CODE XREF: sub_13C75+43Cj
		mov	bx, word_313AA
		xor	bx, 1
		cmp	byte ptr [bx-70A3h], 0
		jz	short loc_14116
		cmp	byte ptr [bx-70A1h], 0
		jnz	short loc_14116
		xor	bx, 1
		mov	byte ptr [bx-70A1h], 0FFh
		call	sub_118F5
		mov	si, word_31584
		call	sub_13760
		mov	si, word_3161C
		call	sub_13760
		mov	si, word_315D0
		call	sub_13760
		call	sub_11A65
		cmp	byte_31484, 0
		jnz	short loc_1410D
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_1410D:				; CODE XREF: sub_13C75+493j
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_14116:				; CODE XREF: sub_13C75+462j
					; sub_13C75+469j
		call	sub_10D5F
		call	sub_118F5
		mov	si, word_31584
		call	sub_13760
		mov	si, word_3161C
		call	sub_13760
		mov	si, word_315D0
		call	sub_13760
		inc	word_31E4C
		cmp	word_31E4C, 6
		jl	short loc_14146
		mov	word_31E4C, 1
		inc	word_31E4A

loc_14146:				; CODE XREF: sub_13C75+4C5j
		mov	ax, word_31E4C
		add	ax, 30h	; '0'
		mov	byte_2BA80, al
		call	sub_15CC5
		call	sub_1193C
		cmp	word_31692, 0
		jz	short loc_1415F
		call	sub_12B22

loc_1415F:				; CODE XREF: sub_13C75+4E5j
		call	sub_11B43
		mov	byte_3148F, 0
		mov	byte_31490, 0
		call	sub_11A62
		call	sub_10985
		call	sub_1080F
		call	sub_10A2F
		call	sub_10E2B
		call	sub_10D81
		cmp	byte_31484, 0
		jnz	short loc_14188
		jmp	loc_13D26
; ---------------------------------------------------------------------------

loc_14188:				; CODE XREF: sub_13C75+50Ej
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-
		jmp	loc_13D26
sub_13C75	endp


; =============== S U B	R O U T	I N E =======================================


sub_14191	proc near		; CODE XREF: sub_10ED9p sub_13389+EAp	...
		push	dx
		mov	ax, 6255h
		mul	word_2B57A
		add	ax, 3619h
		mov	word_2B57A, ax
		pop	dx
		retn
sub_14191	endp


; =============== S U B	R O U T	I N E =======================================


sub_141A1	proc near		; CODE XREF: seg000:loc_1109Ap
					; sub_1426A+9p	...
		push	dx
		push	cx
		push	ax
		call	sub_14191
		xor	dx, dx
		pop	cx
		div	cx
		mov	ax, dx
		pop	cx
		pop	dx
		retn
sub_141A1	endp


; =============== S U B	R O U T	I N E =======================================


sub_141B1	proc near		; CODE XREF: seg000:37CAp seg000:3835p ...
		dec	word ptr [si+0Eh]
		js	short loc_141DC
		jnz	short locret_141DB
		mov	di, [si+10h]
		mov	ax, cs:[di]
		add	di, 2
		test	ax, ax
		jnz	short loc_141CC
		add	di, 2
		jmp	word ptr cs:[di-2]
; ---------------------------------------------------------------------------

loc_141CC:				; CODE XREF: sub_141B1+12j
		mov	[si+0Ch], ax
		mov	ax, cs:[di]
		add	di, 2
		mov	[si+0Eh], ax
		mov	[si+10h], di

locret_141DB:				; CODE XREF: sub_141B1+5j
		retn
; ---------------------------------------------------------------------------

loc_141DC:				; CODE XREF: sub_141B1+3j
		mov	word ptr [si+0Eh], 0
		retn
sub_141B1	endp

; ---------------------------------------------------------------------------
		mov	di, cs:[di]
		mov	ax, cs:[di]
		add	di, 2
		mov	[si+0Ch], ax
		mov	ax, cs:[di]
		add	di, 2
		mov	[si+0Eh], ax
		mov	[si+10h], di
		retn
; ---------------------------------------------------------------------------
		cmp	byte ptr [si+26h], 0
		jnz	short loc_14205
		call	sub_107C0
		retn
; ---------------------------------------------------------------------------

loc_14205:				; CODE XREF: seg000:41FFj
		push	si
		mov	si, [si+44h]
		push	word ptr [si+46h]

loc_1420C:				; CODE XREF: seg000:4217j
		pop	si
		test	si, si
		jz	short loc_14219
		push	word ptr [si+46h]
		call	sub_107C0
		jmp	short loc_1420C
; ---------------------------------------------------------------------------

loc_14219:				; CODE XREF: seg000:420Fj
		pop	si
		retn
; ---------------------------------------------------------------------------
		retn

; =============== S U B	R O U T	I N E =======================================


sub_1421C	proc near		; CODE XREF: sub_10ED5p
		mov	si, 9A40h
		mov	dx, ax
		mov	cl, 3
		shl	dx, cl
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+3086h]
		mov	cx, 30h	; '0'
		mov	bp, dx

loc_14232:				; CODE XREF: sub_1421C+4Bj
		mov	bx, [si+4]
		add	bx, dx
		jns	short loc_14247

loc_14239:				; CODE XREF: sub_1421C+29j
		dec	word ptr [si]
		jns	short loc_14241
		mov	word ptr [si], 0BFh ; '

loc_14241:				; CODE XREF: sub_1421C+1Fj
		add	bx, 180h
		js	short loc_14239

loc_14247:				; CODE XREF: sub_1421C+1Bj
					; sub_1421C+41j
		cmp	bx, 180h
		jl	short loc_1425F
		inc	word ptr [si]
		cmp	word ptr [si], 0C0h ; '
		jl	short loc_14259
		mov	word ptr [si], 0

loc_14259:				; CODE XREF: sub_1421C+37j
		sub	bx, 180h
		jmp	short loc_14247
; ---------------------------------------------------------------------------

loc_1425F:				; CODE XREF: sub_1421C+2Fj
		mov	[si+4],	bx
		add	si, 6
		add	dx, bp
		loop	loc_14232
		retn
sub_1421C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1426A	proc near		; CODE XREF: sub_13C75+1Fp
					; sub_15950+9p
		mov	si, 9A40h
		mov	cx, 30h	; '0'

loc_14270:				; CODE XREF: sub_1426A+41j
		mov	ax, 0C0h ; '
		call	sub_141A1
		mov	[si], ax
		mov	ax, 28h	; '('
		cmp	word_2B574, 0
		jz	short loc_1429D
		cmp	word_2B574, 3
		jz	short loc_1429D
		mov	ax, 50h	; 'P'
		cmp	word_2B574, 2
		jz	short loc_1429D
		cmp	word_2B574, 4
		jz	short loc_1429D
		mov	ax, 0A0h ; '

loc_1429D:				; CODE XREF: sub_1426A+16j
					; sub_1426A+1Dj ...
		call	sub_141A1
		mov	[si+2],	ax
		mov	word ptr [si+4], 0
		add	si, 6
		loop	loc_14270
		retn
sub_1426A	endp

; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jnz	short loc_142E8
		mov	ax, [si+28h]
		mov	word_38212, ax
		mov	ax, [si+2Ah]
		mov	word_38216, ax
		mov	ax, [si+2Ch]
		mov	word_3821A, ax
		mov	ax, [si+2Eh]
		mov	word_3821E, ax
		mov	ax, word_32458
		mov	word_38222, ax
		mov	ax, word_3245A
		mov	word_38226, ax
		mov	ax, word_3245C
		mov	word_3822A, ax
		mov	ax, word_3245E
		mov	word_3822E, ax
		jmp	sub_10F2F
; ---------------------------------------------------------------------------

loc_142E8:				; CODE XREF: seg000:42B3j
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------
		cmp	word_313B0, 0
		jnz	short loc_1430E
		cmp	ax, word_32458
		jl	short loc_1430E
		cmp	ax, word_3245C
		jg	short loc_1430E
		cmp	bx, word_3245A
		jl	short loc_1430E
		cmp	bx, word_3245E
		jg	short loc_1430E
		xor	ax, ax
		dec	ax
		retn
; ---------------------------------------------------------------------------

loc_1430E:				; CODE XREF: seg000:42F0j seg000:42F6j ...
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------
		mov	word ptr [si+4], 853h
		cmp	byte_31754, 0
		jz	short loc_1433E
		mov	word_316CA, 0
		call	sub_141B1
		cmp	word ptr [si+0Eh], 0
		jnz	short locret_1433D
		mov	word ptr [si+4], 761h
		cmp	word_31E4E, 10h
		jl	short locret_1433D
		mov	byte_3148C, 0FFh

locret_1433D:				; CODE XREF: seg000:432Aj seg000:4336j
		retn
; ---------------------------------------------------------------------------

loc_1433E:				; CODE XREF: seg000:431Bj
		cmp	word_313B0, 0
		jnz	short loc_143B6
		cmp	word_31680, 0
		jnz	short loc_14356
		call	sub_13589
		call	sub_11BEA
		jnz	short loc_14381
		jmp	short loc_143B6
; ---------------------------------------------------------------------------

loc_14356:				; CODE XREF: seg000:434Aj
		mov	ax, [si+12h]
		sub	ax, 40h	; '@'
		mov	[si+28h], ax
		add	ax, 80h	; '
		mov	[si+2Ch], ax
		mov	ax, [si+16h]
		sub	ax, 40h	; '@'
		mov	[si+2Ah], ax
		add	ax, 80h	; '
		mov	[si+2Eh], ax
		call	sub_11BEA
		jz	short loc_1437C
		call	sub_13A33

loc_1437C:				; CODE XREF: seg000:4377j
		call	sub_13589
		jmp	short loc_143B6
; ---------------------------------------------------------------------------

loc_14381:				; CODE XREF: seg000:4352j
		cmp	word_316B8, 0
		jnz	short loc_143A9
		cmp	word ptr [di], 0
		jz	short loc_143B6
		mov	word ptr [si+4], 8B9h
		mov	ax, 8
		cmp	byte ptr [di+27h], 0
		jz	short loc_1439E
		mov	ax, 10h

loc_1439E:				; CODE XREF: seg000:4399j
		call	sub_13C4F
		cmp	byte_31754, 0
		jz	short loc_143A9
		retn
; ---------------------------------------------------------------------------

loc_143A9:				; CODE XREF: seg000:4386j seg000:43A6j
		cmp	word ptr [di], 50h ; 'P'
		jz	short loc_143B6
		cmp	word ptr [di], 54h ; 'T'
		jz	short loc_143B6
		call	sub_13A33

loc_143B6:				; CODE XREF: seg000:4343j seg000:4354j ...
		cmp	word_313AE, 0
		jz	short loc_14430
		jns	short loc_143D7
		call	sub_11E29
		jnz	short loc_143CC
		mov	word_313AE, 0
		jmp	short loc_14430
; ---------------------------------------------------------------------------

loc_143CC:				; CODE XREF: seg000:43C2j
		cmp	word_313AE, 0FFEFh
		jnz	short loc_143D7
		call	sub_13C01
		retn
; ---------------------------------------------------------------------------

loc_143D7:				; CODE XREF: seg000:43BDj seg000:43D1j
		dec	word_313AE
		mov	ax, word_316BC
		mov	word_316CA, ax
		mov	ax, word_31402
		sub	ax, word_316C0
		mov	bx, word_31404
		mov	[si+12h], bx
		add	ax, word_31406
		cmp	ax, 0B0h ; '
		jle	short loc_14402
		sub	ax, 0B0h ; '
		sub	word_316CA, ax
		mov	ax, 0B0h ; '

loc_14402:				; CODE XREF: seg000:43F6j
		cmp	ax, 10h
		jge	short loc_14411
		sub	ax, 10h
		sub	word_316CA, ax
		mov	ax, 10h

loc_14411:				; CODE XREF: seg000:4405j
		mov	[si+16h], ax
		push	si
		mov	si, 8ED2h
		mov	di, 8ECCh
		mov	cx, 30h	; '0'
		rep movsw
		pop	si
		cmp	word_313AE, 0
		jnz	short loc_14483
		mov	word_313AE, 0FFFFh
		jmp	short loc_14483
; ---------------------------------------------------------------------------

loc_14430:				; CODE XREF: seg000:43BBj seg000:43CAj
		call	sub_144F3
		push	si
		mov	si, 8F2Ah
		mov	di, 8F30h
		mov	cx, 30h	; '0'
		std
		rep movsw
		cld
		pop	si
		mov	ax, word_316C0
		mov	word_313FC, ax
		mov	ax, [si+12h]
		mov	word_313FE, ax
		mov	ax, [si+16h]
		mov	word_31400, ax
		cmp	word_313B0, 0
		jnz	short loc_14483
		cmp	word_313AE, 0
		js	short loc_14483
		call	sub_11E29
		jz	short loc_14483
		mov	ax, word_3139E
		mov	word_313AE, ax
		mov	word_316CE, 0
		mov	ax, word_316C0
		add	ax, word_316DE
		cmp	ax, word_316DA
		jle	short loc_14483
		mov	word_316DA, ax

loc_14483:				; CODE XREF: seg000:4426j seg000:442Ej ...
		push	si
		mov	si, 8EC0h
		mov	di, 8EBCh
		mov	cx, 4
		rep movsw
		pop	si
		mov	ax, word_31464
		mov	[di], ax
		mov	ax, word_31466
		mov	[di+2],	ax
		mov	bx, word_313B0
		test	bx, bx
		jnz	short loc_144B4
		mov	bx, word_316CE
		add	bx, 6
		shl	bx, 1
		mov	ax, [bx+304Ch]
		mov	[si+0Ch], ax
		retn
; ---------------------------------------------------------------------------

loc_144B4:				; CODE XREF: seg000:44A1j
		shl	bx, 1
		mov	ax, [bx+3258h]
		mov	[si+0Ch], ax
		mov	word ptr [si+4], 853h
		mov	ax, word_313B2
		add	ax, word_313B0
		mov	word_313B0, ax
		jz	short loc_144E6
		cmp	ax, 4
		jnz	short locret_144E5
		cmp	word_313B2, 0
		jnz	short loc_144DF
		mov	word ptr [si+4], 897h

loc_144DF:				; CODE XREF: seg000:44D8j
		mov	word_313B2, 0

locret_144E5:				; CODE XREF: seg000:44D1j
		retn
; ---------------------------------------------------------------------------

loc_144E6:				; CODE XREF: seg000:44CCj
		mov	word_313B2, 0
		mov	word_313AE, 0FFF1h
		retn

; =============== S U B	R O U T	I N E =======================================


sub_144F3	proc near		; CODE XREF: seg000:loc_14430p
		mov	ax, [si+12h]
		mov	word_31464, ax
		mov	ax, [si+16h]
		mov	word_31466, ax
		test	byte_31489, 4
		jnz	short loc_14518
		test	byte_31489, 8
		jnz	short loc_14532
		mov	ax, word_316CE
		test	ax, ax
		jz	short loc_1454A
		js	short loc_14546
		jmp	short loc_1452C
; ---------------------------------------------------------------------------

loc_14518:				; CODE XREF: sub_144F3+11j
		cmp	word_316CE, 0
		jle	short loc_14525
		mov	word_316CE, 0

loc_14525:				; CODE XREF: sub_144F3+2Aj
		cmp	word_316CE, 0FFFAh
		jle	short loc_1454A

loc_1452C:				; CODE XREF: sub_144F3+23j
		dec	word_316CE
		jmp	short loc_1454A
; ---------------------------------------------------------------------------

loc_14532:				; CODE XREF: sub_144F3+18j
		cmp	word_316CE, 0
		jge	short loc_1453F
		mov	word_316CE, 0

loc_1453F:				; CODE XREF: sub_144F3+44j
		cmp	word_316CE, 6
		jge	short loc_1454A

loc_14546:				; CODE XREF: sub_144F3+21j
		inc	word_316CE

loc_1454A:				; CODE XREF: sub_144F3+1Fj
					; sub_144F3+37j ...
		mov	ax, word_316BC
		mov	word_316CA, ax
		test	byte_31489, 1
		jz	short loc_14576
		cmp	word ptr [si+16h], 10h
		jle	short loc_14569
		sub	word ptr [si+16h], 3
		mov	ax, word_3168E
		sub	[si+16h], ax
		jmp	short loc_14576
; ---------------------------------------------------------------------------

loc_14569:				; CODE XREF: sub_144F3+68j
		mov	word ptr [si+16h], 10h
		mov	word_316CA, 1
		jmp	short loc_145A4
; ---------------------------------------------------------------------------

loc_14576:				; CODE XREF: sub_144F3+62j
					; sub_144F3+74j
		test	byte_31489, 2
		jz	short loc_145A4
		cmp	word ptr [si+16h], 0B0h	; '
		jge	short loc_14590
		add	word ptr [si+16h], 3
		mov	ax, word_3168E
		add	[si+16h], ax
		jmp	short loc_145A4
; ---------------------------------------------------------------------------

loc_14590:				; CODE XREF: sub_144F3+8Fj
		mov	ax, word_316C0
		cmp	ax, word_316DA
		jz	short loc_145A4
		mov	word_316CA, 0FFFFh
		mov	word ptr [si+16h], 0B0h	; '

loc_145A4:				; CODE XREF: sub_144F3+81j
					; sub_144F3+88j ...
		mov	ax, word_316CE
		test	ax, ax
		jz	short loc_145C3
		js	short loc_145B9
		test	byte_31489, 8
		jz	short loc_145C3
		mov	ax, 6
		jmp	short loc_145C3
; ---------------------------------------------------------------------------

loc_145B9:				; CODE XREF: sub_144F3+B8j
		test	byte_31489, 4
		jz	short loc_145C3
		mov	ax, 0FFFAh

loc_145C3:				; CODE XREF: sub_144F3+B6j
					; sub_144F3+BFj ...
		cmp	word_3168E, 0
		jnz	short loc_145CC
		sar	ax, 1

loc_145CC:				; CODE XREF: sub_144F3+D5j
		cmp	word_3168E, 2
		jl	short loc_145D9
		mov	bx, ax
		sar	bx, 1
		add	ax, bx

loc_145D9:				; CODE XREF: sub_144F3+DEj
		add	[si+12h], ax
		cmp	word ptr [si+12h], 10h
		jge	short loc_145E7
		mov	word ptr [si+12h], 10h

loc_145E7:				; CODE XREF: sub_144F3+EDj
		cmp	word ptr [si+12h], 12Eh
		jle	short locret_145F3
		mov	word ptr [si+12h], 12Eh

locret_145F3:				; CODE XREF: sub_144F3+F9j
		retn
sub_144F3	endp


; =============== S U B	R O U T	I N E =======================================


sub_145F4	proc near		; CODE XREF: seg000:37FDp seg000:381Fp ...
		cmp	word_313B8, 0
		jnz	short loc_14601
		mov	word_313B8, 2

loc_14601:				; CODE XREF: sub_145F4+5j
		cmp	word ptr [si+34h], 0
		jz	short loc_14613
		cmp	word ptr [si+34h], 1
		jz	short loc_14610
		add	bp, 2

loc_14610:				; CODE XREF: sub_145F4+17j
		add	bp, 2

loc_14613:				; CODE XREF: sub_145F4+11j
		push	di
		push	si
		call	sub_11022
		mov	di, 9096h
		call	sub_1077C
		mov	di, si
		pop	si
		mov	[di+1Ch], ax
		mov	[di+20h], bx
		add	cx, word_32442
		mov	[di+12h], cx
		add	dx, word_32446
		mov	[di+16h], dx
		mov	word ptr [di], 10h
		mov	word ptr [di+2], 39EEh
		mov	word ptr [di+4], 91Fh
		mov	ax, cs:[bp+0]
		mov	[di+0Ch], ax
		mov	word ptr [di+0Eh], 0
		mov	word ptr [di+1Ah], 0
		mov	ax, [si+34h]
		mov	[di+34h], ax
		pop	di
		retn
sub_145F4	endp


; =============== S U B	R O U T	I N E =======================================


sub_1465C	proc near		; CODE XREF: sub_14675+3Ep
					; sub_14675+59p ...
		inc	dx
		push	ax
		push	dx
		mov	ax, 0Ah
		mul	cx
		pop	cx
		div	cx
		mov	si, ax
		shl	si, 1
		mov	si, [si+3262h]
		pop	cx
		mov	dx, bx
		jmp	sub_10875
sub_1465C	endp


; =============== S U B	R O U T	I N E =======================================


sub_14675	proc near		; CODE XREF: sub_13C75+EDp
		cmp	word_313B0, 0
		jnz	short loc_14690
		cmp	byte_31754, 0
		jnz	short loc_14690
		cmp	word_31E4E, 0
		jz	short loc_1469B
		dec	word_31E4E
		jmp	short loc_1469B
; ---------------------------------------------------------------------------

loc_14690:				; CODE XREF: sub_14675+5j sub_14675+Cj
		cmp	word_31E4E, 10h
		jz	short loc_1469B
		inc	word_31E4E

loc_1469B:				; CODE XREF: sub_14675+13j
					; sub_14675+19j ...
		cmp	word_31680, 0
		jz	short loc_146B6
		dec	word_31680
		mov	dx, 0DDh ; '
		mov	cx, word_31680
		mov	ax, 126h
		mov	bx, 8
		call	sub_1465C

loc_146B6:				; CODE XREF: sub_14675+2Bj
		cmp	word_313B4, 0
		jz	short loc_146E4
		dec	word_313B4
		mov	dx, 88h	; '
		mov	cx, word_313B4
		mov	ax, 98h	; '
		mov	bx, 8
		call	sub_1465C
		cmp	word_313B4, 0
		jnz	short loc_146E4
		mov	word_313B2, 0FFFFh
		mov	word_313B8, 18h

loc_146E4:				; CODE XREF: sub_14675+46j
					; sub_14675+61j
		cmp	word_31692, 0
		jz	short loc_14709
		dec	word_31692
		mov	dx, 0AAh ; '
		mov	cx, word_31692
		mov	ax, 98h	; '
		mov	bx, 0A0h ; '
		call	sub_1465C
		cmp	word_31692, 0
		jnz	short loc_14709
		call	sub_1472D

loc_14709:				; CODE XREF: sub_14675+74j
					; sub_14675+8Fj
		test	byte_31489, 80h
		jnz	short loc_14717
		mov	ax, word_31660
		mov	word_3165E, ax
		retn
; ---------------------------------------------------------------------------

loc_14717:				; CODE XREF: sub_14675+99j
		mov	ax, word_31662
		sub	word_3165E, ax
		jg	short locret_1472C
		mov	ax, word_31660
		add	word_3165E, ax
		mov	byte_3148B, 0FFh

locret_1472C:				; CODE XREF: sub_14675+A9j
		retn
sub_14675	endp


; =============== S U B	R O U T	I N E =======================================


sub_1472D	proc near		; CODE XREF: sub_118F5+Bp
					; sub_14675+91p
		push	si
		mov	si, word_31538

loc_14732:				; CODE XREF: sub_1472D+11j
		cmp	word ptr [si], 0
		jz	short loc_14740
		push	word ptr [si+0Ah]
		call	sub_137A9
		pop	si
		jmp	short loc_14732
; ---------------------------------------------------------------------------

loc_14740:				; CODE XREF: sub_1472D+8j
		mov	ax, word_316E4
		mov	word_31538, ax
		mov	ax, word_316E6
		mov	word_31536, ax
		mov	si, 91B8h
		mov	di, 9134h
		mov	cx, 0Eh
		rep movsw
		pop	si
		retn
sub_1472D	endp

; ---------------------------------------------------------------------------
		call	sub_141B1
		mov	ax, word_32442
		mov	bx, word_316CE
		test	bx, bx
		jns	short loc_14769
		neg	bx

loc_14769:				; CODE XREF: seg000:4765j
		shl	bx, 1
		test	word ptr [si+22h], 1
		jz	short loc_14775
		add	bx, 0Eh

loc_14775:				; CODE XREF: seg000:4770j
		add	ax, [bx+3276h]
		mov	[si+12h], ax
		mov	ax, word_32446
		mov	[si+16h], ax
		mov	word ptr [si+4], 761h
		cmp	word_313B0, 0
		jz	short loc_1478F
		retn
; ---------------------------------------------------------------------------

loc_1478F:				; CODE XREF: seg000:478Cj
		cmp	word ptr [si+22h], 2
		jl	short loc_147A2
		test	byte_31489, 2

loc_1479A:				; CODE XREF: seg000:47A7j
		jz	short locret_147A1
		mov	word ptr [si+4], 853h

locret_147A1:				; CODE XREF: seg000:loc_1479Aj
		retn
; ---------------------------------------------------------------------------

loc_147A2:				; CODE XREF: seg000:4793j
		test	byte_31489, 1
		jmp	short loc_1479A
; ---------------------------------------------------------------------------

loc_147A9:				; CODE XREF: seg000:384Bj
		cmp	word_31E4E, 10h
		jnz	short loc_147B6
		mov	word ptr [si+4], 761h
		retn
; ---------------------------------------------------------------------------

loc_147B6:				; CODE XREF: seg000:47AEj
		mov	word ptr [si+4], 853h
		call	sub_10EF5
		mov	cx, ax
		mov	di, bx
		push	si
		mov	si, 9F00h
		call	sub_10EF5
		pop	si
		sub	cx, ax
		sub	di, bx
		mov	bp, ax
		mov	ax, word_31E4E
		imul	cx
		add	ax, bp
		mov	[si+12h], ax
		mov	ax, word_31E4E
		imul	di
		add	ax, bx
		mov	[si+16h], ax
		retn
; ---------------------------------------------------------------------------
		db 4 dup(0), 0A1h, 4Ah,	30h, 2Eh, 0A3h,	0E5h, 47h, 0EBh
		db 19h,	0A1h, 4Ah, 30h,	2Eh, 0A3h, 0E7h, 47h, 2Eh, 0A1h
		db 0E5h, 47h, 0A3h, 4Ah, 30h, 0E8h, 8, 0, 2Eh, 0A1h, 0E7h
		db 47h,	0A3h, 4Ah, 30h,	0C3h, 0E8h, 0A3h, 0F9h,	0E8h, 54h
		db 0, 83h, 3Ch,	4, 74h,	4Eh, 80h, 7Ch, 49h, 0, 74h, 48h
		db 8Ah,	44h, 49h, 3Ch, 64h, 72h, 4, 2Ch, 64h, 0EBh, 0F8h
		db 0, 44h, 48h,	73h, 38h, 0E8h,	62h, 0F9h, 24h,	3Fh, 88h
		db 44h,	48h, 80h, 7Ch, 49h, 64h, 73h, 8, 0E8h, 54h, 0F9h
		db 25h,	7, 0, 0EBh, 10h, 0A1h, 12h, 9Fh, 2Bh, 44h, 12h
		db 8Bh,	2 dup(16h), 9Fh, 2Bh, 54h, 16h,	0E8h, 3Eh, 0D3h
		db 8Bh,	0C8h, 8Bh, 44h,	12h, 8Bh, 5Ch, 16h, 0BAh, 6, 0
		db 8Bh,	2Eh, 72h, 8Eh, 0E8h, 6Fh, 0D6h,	0C3h, 0E8h, 9
		db 0, 83h, 3Ch,	4, 74h,	3, 0E9h, 19h, 0EDh, 0C3h, 8Bh
		db 44h,	42h, 0A3h, 0FEh, 0FCh, 85h, 0C0h, 74h, 22h, 83h
		db 7Ch,	1Ah, 0,	75h, 3,	0E9h, 1Bh, 1, 79h, 18h,	8Bh, 44h
		db 1Ah,	1, 6, 0FEh, 0FCh, 83h, 3Eh, 0FEh, 0FCh,	0, 7Eh
		db 3, 0E9h, 8, 1, 0A1h,	0FEh, 0FCh, 89h, 44h, 1Ah, 0C3h
		db 0BFh, 16h, 61h, 8Bh,	44h, 12h, 0A3h,	0E2h, 0FCh, 8Bh
		db 44h,	14h, 0A3h, 0E4h, 0FCh, 8Bh, 44h, 16h, 0A3h, 0E6h
		db 0FCh, 8Bh, 44h, 18h,	0A3h, 0E8h, 0FCh, 8Bh, 44h, 1Ch
		db 0A3h, 0EEh, 0FCh, 8Bh, 44h, 1Eh, 0A3h, 0F0h,	0FCh, 8Bh
		db 44h,	3Ch, 0A3h, 0F2h, 0FCh, 8Bh, 44h, 3Eh, 0A3h, 0F4h
		db 0FCh, 8Bh, 44h, 40h,	99h, 0A3h, 0F6h, 0FCh, 89h, 16h
		db 0F8h, 0FCh, 0EBh, 4Fh, 8Bh, 1Eh, 0EEh, 0FCh,	2Eh, 8Ah
		db 21h,	99h, 0D0h, 0E4h, 0D1h, 0D2h, 0D0h, 0E4h, 0D1h
		db 0D2h, 0, 26h, 0E9h, 0FCh, 11h, 16h, 0E6h, 0FCh, 2Eh
		db 8Ah,	61h, 40h, 99h, 0D0h, 0E4h, 0D1h, 0D2h, 0D0h, 0E4h
		db 0D1h, 0D2h, 0, 26h, 0E5h, 0FCh, 11h,	16h, 0E2h, 0FCh
		db 0A1h, 0F2h, 0FCh, 1,	6, 0F0h, 0FCh, 0A1h, 0F4h, 0FCh
		db 11h,	6, 0EEh, 0FCh, 81h, 26h, 0EEh, 0FCh, 0FFh, 0, 0A1h
		db 0F6h, 0FCh, 1, 6, 0F2h, 0FCh, 0A1h, 0F8h, 0FCh, 11h
		db 6, 0F4h, 0FCh, 0FFh,	0Eh, 0FEh, 0FCh, 78h, 3Bh, 0FFh
		db 4Ch,	1Ah, 79h, 0A6h,	0FFh, 6, 0FEh, 0FCh, 0A1h, 0E2h
		db 0FCh, 89h, 44h, 12h,	0A1h, 0E4h, 0FCh, 89h, 44h, 14h
		db 0A1h, 0E6h, 0FCh, 89h, 44h, 16h, 0A1h, 0E8h,	0FCh, 89h
		db 44h,	18h, 0A1h, 0EEh, 0FCh, 89h, 44h, 1Ch, 0A1h, 0F0h
		db 0FCh, 89h, 44h, 1Eh,	0A1h, 0F2h, 0FCh, 89h, 44h, 3Ch
		db 0A1h, 0F4h, 0FCh, 89h, 44h, 3Eh, 0EBh, 31h, 0A1h, 0E2h
		db 0FCh, 89h, 44h, 12h,	0A1h, 0E4h, 0FCh, 89h, 44h, 14h
		db 0A1h, 0E6h, 0FCh, 89h, 44h, 16h, 0A1h, 0E8h,	0FCh, 89h
		db 44h,	18h, 0A1h, 0EEh, 0FCh, 89h, 44h, 1Ch, 0A1h, 0F0h
		db 0FCh, 89h, 44h, 1Eh,	0A1h, 0F2h, 0FCh, 89h, 44h, 3Ch
		db 0A1h, 0F4h, 0FCh, 89h, 44h, 3Eh, 0C3h, 8Bh, 7Ch, 3Ah
		db 8Bh,	1Dh, 2Eh, 0FFh,	0A7h, 0A9h, 49h, 0B5h, 49h, 6
		db 4Ah,	36h, 4Ah, 4Fh, 4Ah, 0F9h, 49h, 0F1h, 49h, 8Bh
		db 44h,	36h, 85h, 0C0h,	74h, 1Ah, 0BFh,	8Ch, 8Eh, 0B9h
		db 8, 0, 3Bh, 5, 74h, 7, 83h, 0C7h, 4, 0E2h, 0F7h, 0EBh
		db 9, 0C7h, 5, 2 dup(0), 0C7h, 45h, 2, 2 dup(0), 80h, 7Ch
		db 26h,	0, 75h,	4, 0E8h, 0E1h, 0BDh, 0C3h, 8Bh,	7Ch, 44h
		db 0FFh, 75h, 46h, 8Bh,	0F7h, 0E8h, 0D5h, 0BDh
		db 5Fh,	85h, 0FFh, 75h,	0F3h, 0C3h, 83h, 0C7h, 6, 89h
		db 7Ch,	3Ah, 0EBh, 0A6h, 8Bh, 45h, 2, 8Bh, 7Ch,	38h, 3
		db 0F8h, 89h, 7Ch, 3Ah,	0EBh, 99h, 8Bh,	45h, 2,	89h, 44h
		db 1Ch,	0C7h, 44h, 1Eh,	2 dup(0), 8Bh, 45h, 4, 99h, 8Ah
		db 0D4h, 8Ah, 0E0h, 32h, 0C0h, 89h, 44h, 3Ch, 89h, 54h
		db 3Eh,	8Bh, 45h, 6, 89h, 44h, 40h, 8Bh, 45h, 8, 89h, 44h
		db 1Ah,	83h, 0C7h, 0Ah,	89h, 7Ch, 3Ah, 0E9h, 68h, 0FEh
		db 8Bh,	45h, 2,	83h, 0C7h, 4, 89h, 7Ch,	3Ah, 29h, 6, 0FEh
		db 0FCh, 7Eh, 3, 0E9h, 57h, 0FFh, 0A1h,	0FEh, 0FCh, 89h
		db 44h,	1Ah, 0C3h, 0E8h, 3Fh, 0F7h, 25h, 0Eh, 0, 8Bh, 0D8h
		db 8Bh,	51h, 2,	85h, 0D2h, 78h,	0F1h, 8Bh, 7Ch,	38h, 3
		db 0FAh, 89h, 7Ch, 3Ah,	0E9h, 36h, 0FFh

; =============== S U B	R O U T	I N E =======================================


sub_14A69	proc near		; CODE XREF: sub_13C75:loc_14078p

; FUNCTION CHUNK AT 4BD4 SIZE 00000074 BYTES

		mov	word ptr ss:byte_447B0+10h, 0C7h ; '
		call	sub_10BC7
		call	sub_10D5F
		call	sub_10C0B
		mov	byte_2C00E, 0FFh
		mov	byte_2C00F, 0FFh
		mov	byte_2C010, 0
		mov	word_2BD46, 0
		mov	si, 3CB6h
		mov	cx, 14h

loc_14A94:				; CODE XREF: sub_14A69+32j
		mov	word ptr [si], 0FFF7h
		add	si, 0Ch
		loop	loc_14A94
		mov	word_3146C, 30h	; '0'
		mov	word_3146E, 44h	; 'D'
		mov	word_31470, 0
		mov	word_31472, 0
		mov	word_31474, 4
		call	sub_15488
		mov	word_31472, 1
		mov	word_31474, 4
		call	sub_15488
		call	sub_1577D
		call	sub_15612
		call	sub_10A51
		call	sub_15612
		call	sub_10E09
		call	sub_10D81
		mov	word_313B8, 0
		call	sub_14BC7
		mov	word_313B8, 7
		call	sub_14C59
		cmp	byte_314E1, 0
		jz	short loc_14AFD
		call	sub_14E12
		jmp	short loc_14B00
; ---------------------------------------------------------------------------

loc_14AFD:				; CODE XREF: sub_14A69+8Dj
		call	sub_15119

loc_14B00:				; CODE XREF: sub_14A69+92j
		call	sub_1558E
		call	sub_15510
		call	sub_1576D
		cmp	byte_314E1, 0
		jz	short loc_14B13
		jmp	loc_14BD4
; ---------------------------------------------------------------------------

loc_14B13:				; CODE XREF: sub_14A69+A5j
		mov	si, 3DA6h
		cmp	word_31E4C, 5
		jnz	short loc_14B3E
		mov	si, 3E82h
		call	sub_15787
		mov	cx, 11h
		call	sub_154FC
		call	sub_1576D
		mov	si, 3EA6h
		call	sub_15787
		mov	cx, 11h
		call	sub_154FC
		call	sub_1576D
		mov	si, 3EB9h

loc_14B3E:				; CODE XREF: sub_14A69+B2j
		call	sub_15787
		call	sub_15154
		call	sub_155D0
		mov	byte_2C00E, 0
		mov	word_31472, 1
		mov	word_31474, 4
		call	sub_15488
		call	sub_14D38
		call	sub_1558E
		call	sub_1576D
		mov	si, 3DC4h
		call	sub_15787
		call	sub_14E78
		call	sub_155D0
		mov	word_313B8, 7
		call	sub_14CAD
		mov	word_313B8, 0
		call	sub_10A51
		call	sub_14BC7
		call	sub_15612
		call	sub_10A51
		call	sub_15612

loc_14B8E:				; CODE XREF: sub_14A69+1DCj
		call	sub_10D5F
		call	sub_10BE9
		mov	word ptr ss:byte_447B0+10h, 0BFh ; '
		call	sub_13319
		call	sub_135F2
		cmp	byte_31491, 0
		jnz	short loc_14BC0
		mov	ax, word_2B578

loc_14BAB:				; CODE XREF: sub_14A69+146j
		cmp	ax, word_2B578
		jz	short loc_14BAB
		call	sub_10985
		call	sub_1080F
		call	sub_10A51
		call	sub_10E2B
		call	sub_10D81

loc_14BC0:				; CODE XREF: sub_14A69+13Dj
		mov	word_316E2, 0Ch
		retn
sub_14A69	endp


; =============== S U B	R O U T	I N E =======================================


sub_14BC7	proc near		; CODE XREF: sub_14A69+7Cp
					; sub_14A69+119p ...
		mov	ax, word_2B576
		add	ax, 9

loc_14BCD:				; CODE XREF: sub_14BC7+Aj
		cmp	ax, word_2B576
		jnz	short loc_14BCD
		retn
sub_14BC7	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_14A69

loc_14BD4:				; CODE XREF: sub_14A69+A7j
		mov	si, 3796h
		call	sub_15787
		mov	cx, 1Eh
		call	sub_14C48
		mov	si, 37B1h
		call	sub_15787
		mov	cx, 1Eh
		call	sub_14C48
		call	sub_1576D
		mov	si, 37D8h
		call	sub_15787
		mov	cx, 11h
		call	sub_14C48
		call	sub_155D0
		mov	word_313B8, 7
		call	sub_14CAD
		mov	word_313B8, 0
		call	sub_10A51
		call	sub_14BC7
		call	sub_15612
		call	sub_10A51
		call	sub_15612
		call	sub_10D5F
		mov	word_313B8, 0
		mov	cx, 96h	; '

loc_14C28:				; CODE XREF: sub_14A69+1CDj
		push	cx
		call	sub_10C4F
		call	sub_10A51
		call	sub_10E2B
		call	sub_10D81
		pop	cx
		loop	loc_14C28
		call	sub_10D5F
		mov	cx, 50h	; 'P'

loc_14C3E:				; CODE XREF: sub_14A69+1DAj
		push	cx
		call	sub_10A51
		pop	cx
		loop	loc_14C3E
		jmp	loc_14B8E
; END OF FUNCTION CHUNK	FOR sub_14A69

; =============== S U B	R O U T	I N E =======================================


sub_14C48	proc near		; CODE XREF: sub_14A69+174p
					; sub_14A69+180p ...
		push	cx
		call	sub_10C93
		call	sub_15691
		call	sub_156B8
		call	sub_10A51
		pop	cx
		loop	sub_14C48
		retn
sub_14C48	endp


; =============== S U B	R O U T	I N E =======================================


sub_14C59	proc near		; CODE XREF: sub_14A69+85p
					; sub_14C59+47j ...
		call	sub_10A51
		cmp	word_3146C, 0
		jz	short loc_14C7C
		sub	word_3146C, 4
		js	short loc_14C6C
		jnz	short loc_14C7C

loc_14C6C:				; CODE XREF: sub_14C59+Fj
		mov	ah, 1
		int	80h		; LINUX	-
		mov	ah, 2
		mov	al, 1
		int	80h		; LINUX	-
		mov	word_3146C, 0

loc_14C7C:				; CODE XREF: sub_14C59+8j
					; sub_14C59+11j
		cmp	word_3146E, 0
		jz	short loc_14C92
		sub	word_3146E, 4
		jz	short loc_14C92
		jns	short loc_14C92
		mov	word_3146E, 0

loc_14C92:				; CODE XREF: sub_14C59+28j
					; sub_14C59+2Fj ...
		call	sub_15612
		call	sub_14CFA
		call	sub_14D0D
		cmp	word_3146C, 0
		jnz	short sub_14C59
		cmp	word_3146E, 0
		jnz	short sub_14C59
		call	sub_10C71
		retn
sub_14C59	endp


; =============== S U B	R O U T	I N E =======================================


sub_14CAD	proc near		; CODE XREF: sub_14A69+10Dp
					; sub_14A69+19Bp
		call	sub_10C71

loc_14CB0:				; CODE XREF: sub_14CAD+46j
		call	sub_10A51
		cmp	word_3146E, 44h	; 'D'
		jz	short loc_14CCC
		add	word_3146E, 4
		cmp	word_3146E, 44h	; 'D'
		jle	short loc_14CCC
		mov	word_3146E, 44h	; 'D'

loc_14CCC:				; CODE XREF: sub_14CAD+Bj
					; sub_14CAD+17j
		cmp	word_3146C, 30h	; '0'
		jz	short loc_14CE5
		add	word_3146C, 4
		cmp	word_3146C, 30h	; '0'
		jle	short loc_14CE5
		mov	word_3146C, 30h	; '0'

loc_14CE5:				; CODE XREF: sub_14CAD+24j
					; sub_14CAD+30j
		call	sub_15612
		call	sub_14D0D
		call	sub_14CFA
		cmp	word_3146E, 44h	; 'D'
		jnz	short loc_14CB0
		mov	ah, 1
		int	80h		; LINUX	-
		retn
sub_14CAD	endp


; =============== S U B	R O U T	I N E =======================================


sub_14CFA	proc near		; CODE XREF: sub_14C59+3Cp
					; sub_14CAD+3Ep
		mov	dx, 4
		mov	si, 0B144h
		test	word_3146C, 4
		jz	short loc_14D1E
		mov	si, 0B1AEh
		jmp	short loc_14D1E
sub_14CFA	endp


; =============== S U B	R O U T	I N E =======================================


sub_14D0D	proc near		; CODE XREF: sub_14C59+3Fp
					; sub_14CAD+3Bp
		mov	dx, 6Dh	; 'm'
		mov	si, 0B144h
		test	word_3146E, 4
		jz	short loc_14D1E
		mov	si, 0B1AEh

loc_14D1E:				; CODE XREF: sub_14CFA+Cj
					; sub_14CFA+11j ...
		push	dx
		push	si
		mov	cx, 0E2h ; '
		call	sub_10C2D
		pop	si
		pop	dx
		push	dx
		push	si
		mov	cx, 102h
		call	sub_10C2D
		pop	si
		pop	dx
		mov	cx, 122h
		jmp	sub_10C2D
sub_14D0D	endp


; =============== S U B	R O U T	I N E =======================================


sub_14D38	proc near		; CODE XREF: sub_14A69+F2p
					; sub_14E78+9Cp
		mov	bx, word_2BD46
		shl	bx, 1
		mov	ax, [bx+38D0h]
		cmp	word_31E4C, 5
		jnz	short loc_14D4B
		shr	ax, 1

loc_14D4B:				; CODE XREF: sub_14D38+Fj
		cwd
		cmp	dx, word_3168C
		jl	short loc_14D60
		jnz	short loc_14D5A
		cmp	ax, word_3168A
		jbe	short loc_14D60

loc_14D5A:				; CODE XREF: sub_14D38+1Aj
		mov	word_2BD46, 0

loc_14D60:				; CODE XREF: sub_14D38+18j
					; sub_14D38+20j
		mov	si, 3CB6h
		mov	bp, word_2BD46
		add	bp, 2
		mov	bx, bp
		dec	bx
		shl	bx, 1
		mov	di, 38D0h
		add	di, bx
		add	bx, 389Ah

loc_14D78:				; CODE XREF: sub_14D38+87j
		mov	ax, [di]
		cmp	word_31E4C, 5
		jnz	short loc_14D83
		shr	ax, 1

loc_14D83:				; CODE XREF: sub_14D38+47j
		cmp	ax, word_3147A
		jg	short loc_14DA2
		cwd
		cmp	dx, word_3168C
		jg	short loc_14DA2
		jnz	short loc_14D98
		cmp	ax, word_3168A
		ja	short loc_14DA2

loc_14D98:				; CODE XREF: sub_14D38+58j
		mov	[si+6],	bp
		mov	ax, [bx]
		mov	[si+8],	ax
		jmp	short loc_14DAC
; ---------------------------------------------------------------------------

loc_14DA2:				; CODE XREF: sub_14D38+4Fj
					; sub_14D38+56j ...
		mov	word ptr [si+6], 1Ah
		mov	word ptr [si+8], 3AE8h

loc_14DAC:				; CODE XREF: sub_14D38+68j
		inc	bp
		add	di, 2
		add	bx, 2
		add	si, 0Ch
		cmp	bp, 1Ah
		jz	short loc_14DF5
		cmp	si, 3D9Ah
		jl	short loc_14D78
		jg	short locret_14E11
		cmp	word_2BD46, 0
		jnz	short loc_14DEA
		mov	ax, [di]
		cmp	word_31E4C, 5
		jnz	short loc_14DD5
		shr	ax, 1

loc_14DD5:				; CODE XREF: sub_14D38+99j
		cmp	ax, word_3147A
		jg	short loc_14DA2
		cwd
		cmp	dx, word_3168C
		jg	short loc_14DA2
		jnz	short loc_14DEA
		cmp	ax, word_3168A
		ja	short loc_14DA2

loc_14DEA:				; CODE XREF: sub_14D38+90j
					; sub_14D38+AAj ...
		mov	word ptr [si+6], 1Bh
		mov	word ptr [si+8], 3AE2h
		retn
; ---------------------------------------------------------------------------

loc_14DF5:				; CODE XREF: sub_14D38+81j
					; sub_14D38+CBj
		cmp	si, 3D9Ah
		jz	short loc_14E05
		mov	word ptr [si+6], 0
		add	si, 0Ch
		jmp	short loc_14DF5
; ---------------------------------------------------------------------------

loc_14E05:				; CODE XREF: sub_14D38+C1j
		cmp	word_2BD46, 0
		jnz	short loc_14DEA
		mov	word ptr [si+6], 0

locret_14E11:				; CODE XREF: sub_14D38+89j
		retn
sub_14D38	endp


; =============== S U B	R O U T	I N E =======================================


sub_14E12	proc near		; CODE XREF: sub_14A69+8Fp
		mov	si, 3CB6h

loc_14E15:				; CODE XREF: sub_14E12+14j
		mov	word ptr [si+6], 1Ah
		mov	word ptr [si+8], 3AE8h
		add	si, 0Ch
		cmp	si, 3D9Ah
		jl	short loc_14E15
		retn
sub_14E12	endp


; =============== S U B	R O U T	I N E =======================================


sub_14E29	proc near		; CODE XREF: sub_14E78+EFp
		mov	si, 3CB6h
		mov	cx, 14h

loc_14E2F:				; CODE XREF: sub_14E29+4Cj
		mov	ax, [si+6]
		test	ax, ax
		jz	short loc_14E72
		cmp	ax, 1Bh
		jnz	short loc_14E43
		cmp	word ptr [si-6], 1Ah
		jz	short loc_14E68
		jmp	short loc_14E72
; ---------------------------------------------------------------------------

loc_14E43:				; CODE XREF: sub_14E29+10j
		cmp	ax, 1Ah
		jge	short loc_14E72
		mov	bx, ax
		shl	bx, 1
		mov	ax, [bx+38CEh]
		cmp	word_31E4C, 5
		jnz	short loc_14E59
		shr	ax, 1

loc_14E59:				; CODE XREF: sub_14E29+2Cj
		cwd
		cmp	dx, word_3168C
		jl	short loc_14E72
		jnz	short loc_14E68
		cmp	ax, word_3168A
		jbe	short loc_14E72

loc_14E68:				; CODE XREF: sub_14E29+16j
					; sub_14E29+37j
		mov	word ptr [si+6], 1Ah
		mov	word ptr [si+8], 3AE8h

loc_14E72:				; CODE XREF: sub_14E29+Bj
					; sub_14E29+18j ...
		add	si, 0Ch
		loop	loc_14E2F
		retn
sub_14E29	endp


; =============== S U B	R O U T	I N E =======================================


sub_14E78	proc near		; CODE XREF: sub_14A69+101p
		mov	word_31472, 0
		mov	word_31474, 0
		mov	word_2BD48, 0FFFFh
		call	sub_15435
		mov	word_2BEE2, 0FFFFh

loc_14E93:				; CODE XREF: sub_14E78+56j
					; sub_14E78+79j ...
		mov	byte_3148B, 0
		call	sub_15369
		cmp	word_31474, 4
		jz	short loc_14F20
		mov	ax, word_31472
		mov	bx, word_31474
		cmp	ax, word_2BD48
		jnz	short loc_14EB5
		cmp	bx, word_2BD4A
		jz	short loc_14F27

loc_14EB5:				; CODE XREF: sub_14E78+35j
		mov	dx, bx
		shl	bx, 1
		shl	bx, 1
		add	bx, dx
		add	ax, bx
		mov	bx, 0Ch
		mul	bx
		mov	si, 3CB6h
		add	si, ax
		mov	ax, [si+6]
		test	ax, ax
		jz	short loc_14E93
		cmp	ax, 1Ah
		jz	short loc_14EF3
		cmp	ax, 1Bh
		jz	short loc_14F04
		mov	ax, word_31472
		mov	word_2BD48, ax
		mov	ax, word_31474
		mov	word_2BD4A, ax
		push	si
		mov	ax, [si+6]
		call	sub_15319
		pop	si
		call	sub_1521A
		jmp	short loc_14E93
; ---------------------------------------------------------------------------

loc_14EF3:				; CODE XREF: sub_14E78+5Bj
		call	sub_1576D
		mov	si, 392Bh
		call	sub_15787
		mov	word_2BEE2, 0FFFFh
		jmp	short loc_14E93
; ---------------------------------------------------------------------------

loc_14F04:				; CODE XREF: sub_14E78+60j
		mov	ax, word_2BD46
		add	ax, 13h
		cmp	ax, 19h
		jl	short loc_14F11
		xor	ax, ax

loc_14F11:				; CODE XREF: sub_14E78+95j
		mov	word_2BD46, ax
		call	sub_14D38
		mov	word_2BEE2, 0FFFFh
		jmp	loc_14E93
; ---------------------------------------------------------------------------

loc_14F20:				; CODE XREF: sub_14E78+28j
		cmp	word_31472, 0
		jz	short loc_14F92

loc_14F27:				; CODE XREF: sub_14E78+3Bj
		mov	word_2BD48, 0FFFFh
		cmp	word_2BEE2, 0
		jns	short loc_14F37
		jmp	loc_14E93
; ---------------------------------------------------------------------------

loc_14F37:				; CODE XREF: sub_14E78+BAj
		call	sub_14FE3
		jz	short loc_14F80
		call	sub_1576D
		mov	si, 3952h
		call	sub_15787
		mov	ax, word_2BEE2
		cwd
		sub	word_3168A, ax
		sbb	word_3168C, dx
		mov	si, word_2BEE4
		mov	bx, [si+6]
		shl	bx, 1
		call	word ptr [bx+381Ah]
		mov	word_2BEE2, 0FFFFh
		call	sub_1577D
		call	sub_14E29
		mov	si, word_2BEE4
		cmp	word ptr [si+6], 2
		jnz	short loc_14F77
		jmp	loc_14E93
; ---------------------------------------------------------------------------

loc_14F77:				; CODE XREF: sub_14E78+FAj
		mov	si, 3967h
		call	sub_15787
		jmp	loc_14E93
; ---------------------------------------------------------------------------

loc_14F80:				; CODE XREF: sub_14E78+C2j
		call	sub_1576D
		mov	si, 3902h
		call	sub_15787
		mov	word_2BEE2, 0FFFFh
		jmp	loc_14E93
; ---------------------------------------------------------------------------

loc_14F92:				; CODE XREF: sub_14E78+ADj
		call	sub_15488
		retn
sub_14E78	endp

; ---------------------------------------------------------------------------
		mov	word_31692, 0AAh ; '
		retn
; ---------------------------------------------------------------------------
		mov	byte_2C010, 0Ch
		call	sub_1576D
		mov	bx, word_31E4C
		dec	bx
		mov	ax, 18h
		mul	bx
		add	ax, word_316E2
		cmp	word_316E2, 8
		jz	short loc_14FC6
		cmp	word_316E2, 14h
		jz	short loc_14FC6
		add	word_316E2, 4

loc_14FC6:				; CODE XREF: seg000:4FB8j seg000:4FBFj
		mov	bx, ax
		shr	bx, 1
		mov	si, [bx+3ED6h]
		call	sub_15787
		mov	byte_2C010, 0
		retn
; ---------------------------------------------------------------------------
		mov	word_31680, 0DCh ; '
		retn
; ---------------------------------------------------------------------------
		inc	word_316BA
		retn

; =============== S U B	R O U T	I N E =======================================


sub_14FE3	proc near		; CODE XREF: sub_14E78:loc_14F37p
		mov	si, word_2BEE4
		mov	bx, [si+6]
		cmp	bx, 3
		jnz	short loc_14FF2
		jmp	loc_150B4
; ---------------------------------------------------------------------------

loc_14FF2:				; CODE XREF: sub_14FE3+Aj
		cmp	bx, 4
		jnz	short loc_14FFA
		jmp	loc_150BD
; ---------------------------------------------------------------------------

loc_14FFA:				; CODE XREF: sub_14FE3+12j
		cmp	bx, 7
		jnz	short loc_15002
		jmp	loc_150BD
; ---------------------------------------------------------------------------

loc_15002:				; CODE XREF: sub_14FE3+1Aj
		cmp	bx, 5
		jnz	short loc_1500A
		jmp	loc_150C6
; ---------------------------------------------------------------------------

loc_1500A:				; CODE XREF: sub_14FE3+22j
		cmp	bx, 6
		jnz	short loc_15012
		jmp	loc_150CF
; ---------------------------------------------------------------------------

loc_15012:				; CODE XREF: sub_14FE3+2Aj
		cmp	bx, 0Ch
		jnz	short loc_1501A
		jmp	loc_150D8
; ---------------------------------------------------------------------------

loc_1501A:				; CODE XREF: sub_14FE3+32j
		cmp	bx, 10h
		jnz	short loc_15022
		jmp	loc_150F5
; ---------------------------------------------------------------------------

loc_15022:				; CODE XREF: sub_14FE3+3Aj
		cmp	bx, 16h
		jnz	short loc_1502A
		jmp	loc_150FE
; ---------------------------------------------------------------------------

loc_1502A:				; CODE XREF: sub_14FE3+42j
		cmp	bx, 18h
		jnz	short loc_15032
		jmp	loc_15107
; ---------------------------------------------------------------------------

loc_15032:				; CODE XREF: sub_14FE3+4Aj
		cmp	bx, 19h
		jnz	short loc_1503A
		jmp	loc_15110
; ---------------------------------------------------------------------------

loc_1503A:				; CODE XREF: sub_14FE3+52j
		mov	al, [bx+384Dh]
		test	al, 1
		jnz	short loc_1508E
		test	al, 2
		jnz	short loc_150A8
		test	al, 4
		jnz	short loc_15074
		test	al, 10h
		jz	short loc_1505E
		cmp	word_3167C, 0
		jz	short loc_150B0
		cmp	word_31678, 0
		jz	short loc_150B0
		jmp	short loc_150AD
; ---------------------------------------------------------------------------

loc_1505E:				; CODE XREF: sub_14FE3+69j
		test	al, 8
		jz	short loc_150B0
		cmp	word_3167C, 0
		jz	short loc_150B0
		mov	di, word_3167E
		cmp	bx, [di+36h]
		jz	short loc_15084
		jmp	short loc_150AD
; ---------------------------------------------------------------------------

loc_15074:				; CODE XREF: sub_14FE3+65j
		cmp	word_31678, 0
		jz	short loc_150B0
		mov	di, word_3167A
		cmp	bx, [di+36h]
		jnz	short loc_150AD

loc_15084:				; CODE XREF: sub_14FE3+8Dj
					; sub_14FE3+B2j
		mov	ax, [di+34h]
		cmp	ax, [di+24h]
		jnz	short loc_150B0
		jmp	short loc_150AD
; ---------------------------------------------------------------------------

loc_1508E:				; CODE XREF: sub_14FE3+5Dj
		mov	di, word_31666
		cmp	bx, [di+36h]
		jz	short loc_15084
		cmp	word_31664, 0
		jz	short loc_150B0
		cmp	word_31664, 94h	; '
		jz	short loc_150B0
		jmp	short loc_150AD
; ---------------------------------------------------------------------------

loc_150A8:				; CODE XREF: sub_14FE3+61j
		call	sub_1100E
		jz	short loc_150B0

loc_150AD:				; CODE XREF: sub_14FE3+79j
					; sub_14FE3+8Fj ...
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_150B0:				; CODE XREF: sub_14FE3+70j
					; sub_14FE3+77j ...
		xor	ax, ax
		dec	ax
		retn
; ---------------------------------------------------------------------------

loc_150B4:				; CODE XREF: sub_14FE3+Cj
		cmp	word_3168E, 2
		jz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_150BD:				; CODE XREF: sub_14FE3+14j
					; sub_14FE3+1Cj
		cmp	word_316B6, 27h	; '''
		jz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_150C6:				; CODE XREF: sub_14FE3+24j
		cmp	word_31662, 3
		jz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_150CF:				; CODE XREF: sub_14FE3+2Cj
		cmp	word_31692, 0
		jnz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_150D8:				; CODE XREF: sub_14FE3+34j
		mov	di, 9134h
		mov	cx, 7

loc_150DE:				; CODE XREF: sub_14FE3+10Ej
		cmp	word ptr [di], 0
		jz	short loc_150EE
		mov	bx, [di+2]
		mov	ax, [bx+34h]
		cmp	ax, [bx+24h]
		jnz	short loc_150B0

loc_150EE:				; CODE XREF: sub_14FE3+FEj
		add	di, 6
		loop	loc_150DE
		jmp	short loc_150AD
; ---------------------------------------------------------------------------

loc_150F5:				; CODE XREF: sub_14FE3+3Cj
		cmp	word_31690, 0
		jnz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_150FE:				; CODE XREF: sub_14FE3+44j
		cmp	word_316BA, 9
		jz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_15107:				; CODE XREF: sub_14FE3+4Cj
		cmp	byte_31753, 0
		jnz	short loc_150AD
		jmp	short loc_150B0
; ---------------------------------------------------------------------------

loc_15110:				; CODE XREF: sub_14FE3+54j
		cmp	word_31680, 0
		jnz	short loc_150AD
		jmp	short loc_150B0
sub_14FE3	endp


; =============== S U B	R O U T	I N E =======================================


sub_15119	proc near		; CODE XREF: sub_14A69:loc_14AFDp
		mov	si, 3CB6h
		mov	di, word_31538

loc_15120:				; CODE XREF: sub_15119+2Aj
		cmp	word ptr [di], 0
		jz	short loc_15145
		cmp	word ptr [di], 94h ; '
		jz	short loc_15140
		mov	bx, [di+36h]
		mov	[si+6],	bx
		mov	[si+0Ah], di
		shl	bx, 1
		mov	ax, [bx+3898h]
		mov	[si+8],	ax
		add	si, 0Ch

loc_15140:				; CODE XREF: sub_15119+10j
		mov	di, [di+0Ah]
		jmp	short loc_15120
; ---------------------------------------------------------------------------

loc_15145:				; CODE XREF: sub_15119+Aj
					; sub_15119+38j
		mov	word ptr [si+6], 0
		add	si, 0Ch
		cmp	si, 3D9Ah
		jle	short loc_15145
		retn
sub_15119	endp


; =============== S U B	R O U T	I N E =======================================


sub_15154	proc near		; CODE XREF: sub_14A69+D8p
		mov	word_31472, 0
		mov	word_31474, 0
		mov	word_2BD48, 0FFFFh
		call	sub_15435
		mov	word_2BEE2, 0FFFFh

loc_1516F:				; CODE XREF: sub_15154+56j
					; sub_15154+7Fj ...
		mov	byte_3148B, 0
		call	sub_15369
		cmp	word_31474, 4
		jz	short loc_151D5
		mov	ax, word_31472
		mov	bx, word_31474
		cmp	ax, word_2BD48
		jnz	short loc_15191
		cmp	bx, word_2BD4A
		jz	short loc_151DC

loc_15191:				; CODE XREF: sub_15154+35j
		mov	dx, bx
		shl	bx, 1
		shl	bx, 1
		add	bx, dx
		add	ax, bx
		mov	bx, 0Ch
		mul	bx
		mov	si, 3CB6h
		add	si, ax
		mov	ax, [si+6]
		test	ax, ax
		jz	short loc_1516F
		mov	ax, word_31472
		mov	word_2BD48, ax
		mov	ax, word_31474
		mov	word_2BD4A, ax
		push	si
		mov	ax, [si+6]
		mov	si, [si+0Ah]
		mov	byte_2C011, 0FFh
		mov	bx, [si+34h]
		call	sub_15319
		pop	si
		call	sub_15240
		mov	byte_2C011, 0
		jmp	short loc_1516F
; ---------------------------------------------------------------------------

loc_151D5:				; CODE XREF: sub_15154+28j
		cmp	word_31472, 0
		jz	short loc_15216

loc_151DC:				; CODE XREF: sub_15154+3Bj
		mov	word_2BD48, 0FFFFh
		mov	ax, word_2BEE2
		test	ax, ax
		js	short loc_1516F
		cwd
		add	word_3168A, ax
		adc	word_3168C, dx
		mov	word_2BEE2, 0FFFFh
		call	sub_1577D
		mov	si, word_2BEE4
		mov	word ptr [si+6], 0
		mov	si, [si+0Ah]
		call	sub_13788
		call	sub_1576D
		mov	si, 3980h
		call	sub_15787
		jmp	loc_1516F
; ---------------------------------------------------------------------------

loc_15216:				; CODE XREF: sub_15154+86j
		call	sub_15488
		retn
sub_15154	endp


; =============== S U B	R O U T	I N E =======================================


sub_1521A	proc near		; CODE XREF: sub_14E78+76p
		mov	word_2BEE4, si
		mov	si, 3AC2h
		call	sub_15787
		mov	si, word_2BEE4
		mov	bx, [si+6]
		shl	bx, 1
		mov	ax, [bx+38CEh]
		cmp	word_31E4C, 5
		jnz	short loc_1523A
		shr	ax, 1

loc_1523A:				; CODE XREF: sub_1521A+1Cj
		mov	word_2BEE2, ax
		jmp	sub_157FA
sub_1521A	endp


; =============== S U B	R O U T	I N E =======================================


sub_15240	proc near		; CODE XREF: sub_15154+77p
		mov	word_2BEE4, si
		mov	word_2C1CA, 0F7h ; '
		mov	word_2C1CC, 78h	; 'x'
		mov	word_2C1CE, 0F700h

loc_15256:				; CODE XREF: sub_15240+2Fj
		call	sub_10A51
		call	sub_10C93
		call	sub_15691
		call	sub_156B8
		call	sub_154DB
		sub	word_2C1CC, 2
		cmp	word_2C1CC, 68h	; 'h'
		jg	short loc_15256
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F470h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F700h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F990h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F700h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F470h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F700h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F990h
		mov	cx, 3
		call	sub_154FC
		mov	word_2C1CE, 0F700h
		mov	cx, 3
		call	sub_154FC

loc_152D7:				; CODE XREF: sub_15240+B1j
		call	sub_10A51
		call	sub_10C93
		call	sub_15691
		call	sub_156B8
		call	sub_154DB
		add	word_2C1CC, 2
		cmp	word_2C1CC, 80h	; '
		jl	short loc_152D7
		mov	si, 3AB4h
		call	sub_15787
		mov	si, word_2BEE4
		mov	bx, [si+6]
		shl	bx, 1
		mov	bx, [bx+38CEh]
		mov	di, [si+0Ah]
		mov	ax, 7D0h
		mul	word ptr [di+34h]
		add	ax, bx
		shr	ax, 1
		mov	word_2BEE2, ax
		jmp	sub_157FA
sub_15240	endp


; =============== S U B	R O U T	I N E =======================================


sub_15319	proc near		; CODE XREF: sub_14E78+72p
					; sub_15154+73p
		push	bx
		push	ax
		call	sub_1576D
		pop	bx
		push	bx
		shl	bx, 1
		mov	si, [bx+3866h]
		call	sub_15787
		pop	ax
		pop	bx
		cmp	byte_2C00E, 0
		jz	short locret_15368
		cmp	ax, 1
		jz	short loc_1535C
		cmp	ax, 13h
		jz	short loc_1535C
		cmp	ax, 12h
		jz	short loc_1535C
		cmp	ax, 8
		jz	short loc_1535C
		cmp	ax, 0Ah
		jz	short loc_1535C
		cmp	ax, 0Eh
		jz	short loc_1535C
		cmp	ax, 9
		jz	short loc_1535C
		cmp	ax, 0Dh
		jz	short loc_1535C
		jmp	short locret_15368
; ---------------------------------------------------------------------------

loc_1535C:				; CODE XREF: sub_15319+1Cj
					; sub_15319+21j ...
		push	bx
		mov	si, 3AD4h
		call	sub_15787
		pop	ax
		inc	ax
		call	sub_157FA

locret_15368:				; CODE XREF: sub_15319+17j
					; sub_15319+41j
		retn
sub_15319	endp


; =============== S U B	R O U T	I N E =======================================


sub_15369	proc near		; CODE XREF: sub_14E78+20p
					; sub_15154+20p ...
		cmp	word_2C00C, 0
		jz	short loc_15377
		dec	word_2C00C
		jmp	loc_15416
; ---------------------------------------------------------------------------

loc_15377:				; CODE XREF: sub_15369+5j
		cmp	byte_3148B, 0
		jz	short loc_15381
		jmp	loc_15429
; ---------------------------------------------------------------------------

loc_15381:				; CODE XREF: sub_15369+13j
		cmp	byte_31489, 0
		jnz	short loc_1538B
		jmp	loc_15416
; ---------------------------------------------------------------------------

loc_1538B:				; CODE XREF: sub_15369+1Dj
		mov	word_313B8, 8
		mov	word_2C00C, 4
		call	sub_15488
		test	byte_31489, 4
		jz	short loc_153C5
		cmp	word_31474, 4
		jnz	short loc_153B7

loc_153A8:				; CODE XREF: sub_15369+68j
		xor	ax, ax
		cmp	word_31472, 0
		jnz	short loc_153B2
		inc	ax

loc_153B2:				; CODE XREF: sub_15369+46j
		mov	word_31472, ax
		jmp	short loc_15413
; ---------------------------------------------------------------------------

loc_153B7:				; CODE XREF: sub_15369+3Dj
		dec	word_31472
		jns	short loc_15413
		mov	word_31472, 4
		jmp	short loc_15413
; ---------------------------------------------------------------------------

loc_153C5:				; CODE XREF: sub_15369+36j
		test	byte_31489, 8
		jz	short loc_153E6
		cmp	word_31474, 4
		jz	short loc_153A8
		inc	word_31472
		cmp	word_31472, 4
		jle	short loc_15413
		mov	word_31472, 0
		jmp	short loc_15413
; ---------------------------------------------------------------------------

loc_153E6:				; CODE XREF: sub_15369+61j
		test	byte_31489, 1
		jz	short loc_153FB
		dec	word_31474
		jns	short loc_15413
		mov	word_31474, 4
		jmp	short loc_15413
; ---------------------------------------------------------------------------

loc_153FB:				; CODE XREF: sub_15369+82j
		test	byte_31489, 2
		jz	short loc_15413
		inc	word_31474
		cmp	word_31474, 4
		jle	short loc_15413
		mov	word_31474, 0

loc_15413:				; CODE XREF: sub_15369+4Cj
					; sub_15369+52j ...
		call	sub_15435

loc_15416:				; CODE XREF: sub_15369+Bj
					; sub_15369+1Fj
		call	sub_10C93
		call	sub_15691
		call	sub_156B8
		call	sub_10A51
		inc	word_316CC
		jmp	sub_15369
; ---------------------------------------------------------------------------

loc_15429:				; CODE XREF: sub_15369+15j
		mov	byte_3148B, 0
		mov	word_313B8, 9
		retn
sub_15369	endp


; =============== S U B	R O U T	I N E =======================================


sub_15435	proc near		; CODE XREF: sub_14E78+12p
					; sub_15154+12p ...
		mov	bx, word_31474
		cmp	bx, 4
		jz	short loc_15465
		mov	bp, bx
		shl	bx, 1
		shl	bx, 1
		add	bx, bp
		add	bx, word_31472
		mov	ax, 0Ch
		mul	bx
		mov	bx, ax
		mov	cx, [bx+3CB8h]
		mov	dx, [bx+3CBAh]
		add	cx, 0Ah
		add	dx, 1Fh
		mov	si, 0B282h
		jmp	sub_10C2D
; ---------------------------------------------------------------------------

loc_15465:				; CODE XREF: sub_15435+7j
		mov	cx, 4
		mov	si, 0DDE0h
		cmp	word_31472, 0
		jz	short loc_15482
		mov	cx, 2Dh	; '-'
		mov	si, 0E1E8h
		cmp	byte_2C00E, 0
		jnz	short loc_15482
		mov	si, 0DFE4h

loc_15482:				; CODE XREF: sub_15435+3Bj
					; sub_15435+48j
		mov	dx, 0A8h ; '
		jmp	sub_10C2D
sub_15435	endp


; =============== S U B	R O U T	I N E =======================================


sub_15488	proc near		; CODE XREF: sub_14A69+52p
					; sub_14A69+61p ...
		mov	bx, word_31474
		cmp	bx, 4
		jz	short loc_154B8
		mov	ax, bx
		shl	bx, 1
		shl	bx, 1
		add	bx, ax
		add	bx, word_31472
		mov	ax, 0Ch
		mul	bx
		mov	bx, ax
		mov	cx, [bx+3CB8h]
		mov	dx, [bx+3CBAh]
		add	cx, 0Ah
		add	dx, 1Fh
		mov	si, 0B218h
		jmp	sub_10C2D
; ---------------------------------------------------------------------------

loc_154B8:				; CODE XREF: sub_15488+7j
		mov	cx, 4
		mov	si, 0E3ECh
		cmp	word_31472, 0
		jz	short loc_154D5
		mov	cx, 2Dh	; '-'
		mov	si, 0E7F4h
		cmp	byte_2C00E, 0
		jnz	short loc_154D5
		mov	si, 0E5F0h

loc_154D5:				; CODE XREF: sub_15488+3Bj
					; sub_15488+48j
		mov	dx, 0A8h ; '
		jmp	sub_10C2D
sub_15488	endp


; =============== S U B	R O U T	I N E =======================================


sub_154DB	proc near		; CODE XREF: sub_15240+22p
					; sub_15240+A3p ...
		push	word ptr ss:byte_447B0+10h
		mov	word ptr ss:byte_447B0+10h, 68h	; 'h'
		mov	cx, word_2C1CA
		mov	dx, word_2C1CC
		mov	si, word_2C1CE
		call	sub_10875
		pop	word ptr ss:byte_447B0+10h
		retn
sub_154DB	endp


; =============== S U B	R O U T	I N E =======================================


sub_154FC	proc near		; CODE XREF: sub_14A69+BDp
					; sub_14A69+CCp ...
		push	cx
		call	sub_10A51
		call	sub_15691
		call	sub_156B8
		call	sub_10C93
		call	sub_154DB
		pop	cx
		loop	sub_154FC
		retn
sub_154FC	endp


; =============== S U B	R O U T	I N E =======================================


sub_15510	proc near		; CODE XREF: sub_14A69+9Ap
		mov	word_2C1CA, 106h
		mov	word_2C1CC, 88h	; '
		mov	word_2C1CE, 0F700h

loc_15522:				; CODE XREF: sub_15510+33j
		call	sub_10A51
		call	sub_15691
		call	sub_156B8
		call	sub_10C93
		call	sub_154DB
		cmp	word_2C1CA, 11Ch
		jz	short loc_15545
		add	word_2C1CA, 2
		sub	word_2C1CC, 2
		jmp	short loc_15522
; ---------------------------------------------------------------------------

loc_15545:				; CODE XREF: sub_15510+27j
		mov	word_2C1CE, 0F990h
		mov	cx, 6
		call	sub_154FC
		mov	ah, 1
		int	80h		; LINUX	-
		mov	word_313B8, 8
		mov	byte_2C00F, 0
		mov	word_2C1CE, 0F700h
		mov	cx, 6
		call	sub_154FC

loc_1556C:				; CODE XREF: sub_15510+7Bj
		call	sub_10A51
		call	sub_15691
		call	sub_156B8
		call	sub_10C93
		call	sub_154DB
		sub	word_2C1CA, 2
		add	word_2C1CC, 2
		cmp	word_2C1CA, 106h
		jg	short loc_1556C
		retn
sub_15510	endp


; =============== S U B	R O U T	I N E =======================================


sub_1558E	proc near		; CODE XREF: sub_14A69:loc_14B00p
					; sub_14A69+F5p ...
		call	sub_10A51
		mov	si, 3CB6h
		mov	cx, 14h

loc_15597:				; CODE XREF: sub_1558E+Ej
		inc	word ptr [si]
		add	si, 0Ch
		loop	loc_15597
		cmp	word_2C1E6, 0
		jz	short loc_155AD
		call	sub_156B8
		call	sub_10C93
		jmp	short sub_1558E
; ---------------------------------------------------------------------------

loc_155AD:				; CODE XREF: sub_1558E+15j
		mov	si, 3CB6h
		mov	cx, 14h

loc_155B3:				; CODE XREF: sub_1558E+2Cj
		mov	word ptr [si], 1
		add	si, 0Ch
		loop	loc_155B3
		mov	cx, 5
		push	cx
		jmp	short loc_155C6
; ---------------------------------------------------------------------------

loc_155C2:				; CODE XREF: sub_1558E+3Fj
		push	cx
		call	sub_10A51

loc_155C6:				; CODE XREF: sub_1558E+32j
		call	sub_156B8
		call	sub_10C93
		pop	cx
		loop	loc_155C2
		retn
sub_1558E	endp


; =============== S U B	R O U T	I N E =======================================


sub_155D0	proc near		; CODE XREF: sub_14A69+DBp
					; sub_14A69+104p ...
		mov	si, 3CB6h
		mov	cx, 14h

loc_155D6:				; CODE XREF: sub_155D0+Dj
		mov	word ptr [si], 0
		add	si, 0Ch
		loop	loc_155D6

loc_155DF:				; CODE XREF: sub_155D0+2Cj
		call	sub_10A51
		mov	si, 3CB6h
		mov	cx, 14h

loc_155E8:				; CODE XREF: sub_155D0+1Dj
		dec	word ptr [si]
		add	si, 0Ch
		loop	loc_155E8
		cmp	word_2C1E6, 0FFF7h
		jz	short loc_155FE
		call	sub_156B8
		call	sub_10C93
		jmp	short loc_155DF
; ---------------------------------------------------------------------------

loc_155FE:				; CODE XREF: sub_155D0+24j
		mov	cx, 0Bh
		push	cx
		jmp	short loc_15608
; ---------------------------------------------------------------------------

loc_15604:				; CODE XREF: sub_155D0+3Fj
		push	cx
		call	sub_10A51

loc_15608:				; CODE XREF: sub_155D0+32j
		call	sub_156B8
		call	sub_10C93
		pop	cx
		loop	loc_15604
		retn
sub_155D0	endp


; =============== S U B	R O U T	I N E =======================================


sub_15612	proc near		; CODE XREF: sub_14A69+67p
					; sub_14A69+6Dp ...
		call	sub_156B8
		call	sub_10C93
		call	sub_10CB5
		retn
sub_15612	endp


; =============== S U B	R O U T	I N E =======================================


sub_1561C	proc near		; CODE XREF: sub_10EE9p
		cmp	byte_2C00F, 0
		jnz	short loc_15632
		cmp	byte_2C010, 0
		jnz	short loc_1563E
		call	sub_14191
		and	ax, 2654h
		jnz	short loc_15655

loc_15632:				; CODE XREF: sub_1561C+5j
		mov	cx, 107h
		mov	dx, 29h	; ')'
		mov	si, 0EA9Eh
		call	sub_10875

loc_1563E:				; CODE XREF: sub_1561C+Cj
		mov	cx, 0F7h ; '
		mov	dx, 29h	; ')'
		mov	si, 0E9F8h
		call	sub_10875
		cmp	byte_2C010, 0
		jz	short loc_15655
		dec	byte_2C010

loc_15655:				; CODE XREF: sub_1561C+14j
					; sub_1561C+33j
		cmp	byte_2C00F, 0
		jnz	short locret_15690
		cmp	byte_2C011, 0
		js	short loc_15684
		jz	short loc_1566B
		dec	byte_2C011
		jmp	short loc_15678
; ---------------------------------------------------------------------------

loc_1566B:				; CODE XREF: sub_1561C+47j
		call	sub_14191
		and	ax, 2654h
		jnz	short locret_15690
		mov	byte_2C011, 8

loc_15678:				; CODE XREF: sub_1561C+4Dj
		mov	cx, 107h
		mov	dx, 23h	; '#'
		mov	si, 0EBEAh
		call	sub_10875

loc_15684:				; CODE XREF: sub_1561C+45j
		mov	cx, 0F5h ; '
		mov	dx, 23h	; '#'
		mov	si, 0EB44h
		call	sub_10875

locret_15690:				; CODE XREF: sub_1561C+3Ej
					; sub_1561C+55j
		retn
sub_1561C	endp


; =============== S U B	R O U T	I N E =======================================


sub_15691	proc near		; CODE XREF: sub_14C48+4p
					; sub_15240+1Cp ...
		mov	si, 3CB6h
		mov	cx, 14h

loc_15697:				; CODE XREF: sub_15691+24j
		cmp	word ptr [si+6], 0
		jnz	short loc_156A3
		mov	word ptr [si], 0
		jmp	short loc_156B2
; ---------------------------------------------------------------------------

loc_156A3:				; CODE XREF: sub_15691+Aj
		dec	word ptr [si]
		jg	short loc_156B2
		call	sub_14191
		and	ax, 0FFh
		add	ax, 14h
		mov	[si], ax

loc_156B2:				; CODE XREF: sub_15691+10j
					; sub_15691+14j
		add	si, 0Ch
		loop	loc_15697
		retn
sub_15691	endp


; =============== S U B	R O U T	I N E =======================================


sub_156B8	proc near		; CODE XREF: sub_14C48+7p
					; sub_15240+1Fp ...
		mov	di, 3CB6h
		mov	cx, 14h

loc_156BE:				; CODE XREF: sub_156B8:loc_15769j
		push	cx
		cmp	word ptr [di], 0
		jg	short loc_156EC
		cmp	word ptr [di], 0FFF8h
		jz	short loc_156D4
		call	sub_10CD7
		cmp	word ptr [di], 0
		jnz	short loc_156D4
		jmp	loc_15761
; ---------------------------------------------------------------------------

loc_156D4:				; CODE XREF: sub_156B8+Fj
					; sub_156B8+17j
		push	di
		mov	cx, [di+2]
		mov	dx, [di+4]
		mov	bx, [di]
		add	bx, 9
		shl	bx, 1
		mov	si, [bx+3CA0h]
		call	sub_10875
		pop	di
		jmp	short loc_15761
; ---------------------------------------------------------------------------

loc_156EC:				; CODE XREF: sub_156B8+Aj
		cmp	word ptr [di], 2
		jg	short loc_15705
		jnz	short loc_15700
		cmp	word_313B8, 0
		jns	short loc_15700
		mov	word_313BA, 0

loc_15700:				; CODE XREF: sub_156B8+39j
					; sub_156B8+40j
		call	sub_10CD7
		jmp	short loc_15761
; ---------------------------------------------------------------------------

loc_15705:				; CODE XREF: sub_156B8+37j
		pop	bx
		push	bx
		and	bx, 1
		shl	bx, 1
		mov	si, [bx+3CB2h]
		mov	cx, [di+2]
		mov	dx, [di+4]
		push	di
		call	sub_10875
		pop	di
		mov	bx, [di+8]
		mov	si, [bx]
		add	bx, 2
		test	si, si
		jnz	short loc_1572E
		mov	bx, [bx]
		mov	si, [bx]
		add	bx, 2

loc_1572E:				; CODE XREF: sub_156B8+6Dj
		mov	[di+8],	bx
		mov	cx, [di+2]
		mov	dx, [di+4]
		push	es
		mov	ax, seg	seg007
		mov	es, ax
		assume es:seg007
		add	cx, es:[si]
		add	dx, es:[si+2]
		mov	ax, es:[si+4]
		shr	ax, 1
		sub	ax, 10h
		sub	cx, ax
		mov	ax, es:[si+6]
		inc	ax
		shr	ax, 1
		sub	ax, 0Eh
		sub	dx, ax
		pop	es
		assume es:nothing
		push	di
		call	sub_10875
		pop	di

loc_15761:				; CODE XREF: sub_156B8+19j
					; sub_156B8+32j ...
		add	di, 0Ch
		pop	cx
		loop	loc_15769
		jmp	short locret_1576C
; ---------------------------------------------------------------------------

loc_15769:				; CODE XREF: sub_156B8+ADj
		jmp	loc_156BE
; ---------------------------------------------------------------------------

locret_1576C:				; CODE XREF: sub_156B8+AFj
		retn
sub_156B8	endp


; =============== S U B	R O U T	I N E =======================================


sub_1576D	proc near		; CODE XREF: sub_14A69+9Dp
					; sub_14A69+C0p ...
		call	sub_10C71
		mov	word_31476, 37h	; '7'
		mov	word_31478, 76h	; 'v'
		retn
sub_1576D	endp


; =============== S U B	R O U T	I N E =======================================


sub_1577D	proc near		; CODE XREF: sub_14A69+64p
					; sub_14E78+ECp ...

; FUNCTION CHUNK AT 0B1D SIZE 0000000E BYTES

		mov	ax, word_3168A
		mov	dx, word_3168C
		jmp	loc_10B1D
sub_1577D	endp


; =============== S U B	R O U T	I N E =======================================


sub_15787	proc near		; CODE XREF: sub_14A69+B7p
					; sub_14A69+C6p ...
		mov	byte ptr word_31470, 0FFh
		push	si
		call	sub_15691
		call	sub_156B8
		call	sub_10C93
		call	sub_10A51
		pop	si

loc_1579A:				; CODE XREF: sub_15787+19j
		call	sub_14191
		and	ax, 3
		jz	short loc_1579A
		dec	ax
		or	ax, 80h
		xor	ax, ax
		mov	di, si

loc_157AA:				; CODE XREF: sub_15787+34j
		cmp	byte ptr [di], 0
		jz	short loc_157BD
		cmp	byte ptr [di], 20h ; ' '
		jz	short loc_157BD
		cmp	byte ptr [di], 0Dh
		jz	short loc_157BD
		inc	ax
		inc	di
		jmp	short loc_157AA
; ---------------------------------------------------------------------------

loc_157BD:				; CODE XREF: sub_15787+26j
					; sub_15787+2Bj ...
		add	ax, word_31476
		cmp	ax, 4Bh	; 'K'
		jle	short loc_157C9
		call	sub_15829

loc_157C9:				; CODE XREF: sub_15787+3Dj
					; sub_15787+5Bj
		xor	ax, ax
		lodsb
		test	al, al
		jz	short loc_157F4
		cmp	al, 20h	; ' '
		jz	short loc_157E4
		cmp	al, 0Dh
		jnz	short loc_157DD
		call	sub_15829
		jmp	short sub_15787
; ---------------------------------------------------------------------------

loc_157DD:				; CODE XREF: sub_15787+4Fj
		push	si
		call	sub_10CF9
		pop	si
		jmp	short loc_157C9
; ---------------------------------------------------------------------------

loc_157E4:				; CODE XREF: sub_15787+4Bj
					; sub_15787+68j
		inc	word_31476
		lodsb
		test	al, al
		jz	short loc_157F4
		cmp	al, 20h	; ' '
		jz	short loc_157E4
		dec	si
		jmp	short sub_15787
; ---------------------------------------------------------------------------

loc_157F4:				; CODE XREF: sub_15787+47j
					; sub_15787+64j
		mov	byte ptr word_31470, 0
		retn
sub_15787	endp


; =============== S U B	R O U T	I N E =======================================


sub_157FA	proc near		; CODE XREF: sub_1521A+23j
					; sub_15240+D6j ...
		mov	byte ptr word_31470, 0FFh
		push	ax
		call	sub_10A51
		call	sub_15691
		call	sub_156B8
		call	sub_10C93
		pop	ax
sub_157FA	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1580D	proc near		; CODE XREF: sub_1580D+Cp
		cmp	ax, 0Ah
		jl	short loc_1581D
		cwd
		mov	bx, 0Ah
		div	bx
		push	dx
		call	sub_1580D
		pop	ax

loc_1581D:				; CODE XREF: sub_1580D+3j
		add	ax, 30h	; '0'
		call	sub_10CF9
		mov	byte ptr word_31470, 0
		retn
sub_1580D	endp


; =============== S U B	R O U T	I N E =======================================


sub_15829	proc near		; CODE XREF: sub_21132:loc_10EEDp
					; sub_15787+3Fp ...
		mov	ax, 37h	; '7'
		mov	word_31476, ax
		add	word_31478, 7
		retn
sub_15829	endp


; =============== S U B	R O U T	I N E =======================================


sub_15835	proc near		; CODE XREF: sub_10EE5p
		mov	si, 3DE4h
		mov	cx, 7

loc_1583B:				; CODE XREF: sub_15835+2Bj
		push	cx
		lodsw
		mov	cx, ax
		lodsw
		mov	dx, ax
		lodsw
		mov	di, ax
		mov	ax, [di]
		add	di, 2
		test	ax, ax
		jnz	short loc_15855
		mov	di, [di]
		mov	ax, [di]
		add	di, 2

loc_15855:				; CODE XREF: sub_15835+17j
		mov	[si-2],	di
		push	si
		mov	si, ax
		call	sub_10875
		pop	si
		pop	cx
		loop	loc_1583B
		retn
sub_15835	endp


; =============== S U B	R O U T	I N E =======================================


sub_15863	proc near		; CODE XREF: sub_13C75+4Ap
		xor	ax, ax
		mov	ah, 2
		mov	al, 0
		int	80h		; LINUX	-
		mov	word_2BC84, 3625h
		mov	word_2BC82, 78h	; 'x'
		mov	word_2BC80, 0
		mov	di, 9A40h
		mov	cx, 30h	; '0'

loc_15883:				; CODE XREF: sub_15863+2Fj
		call	sub_14191
		stosw
		call	sub_14191
		stosw
		call	sub_14191
		and	ax, 1FFFh
		stosw
		loop	loc_15883
		call	sub_10DE7
		call	sub_10D81
		cmp	byte_3148B, 0
		jnz	short loc_15916

loc_158A1:				; CODE XREF: sub_15863+8Cj
					; sub_15863+9Fj ...
		call	sub_10A0D
		call	sub_10D1B
		cmp	word_2BC80, 12h
		jl	short loc_158D9
		mov	word_2BC82, 78h	; 'x'
		mov	si, word_2BC84
		call	sub_10AFB
		cmp	word_2BC80, 24h	; '$'
		jl	short loc_158D9
		cmp	word_2BC80, 36h	; '6'
		jge	short loc_158D9
		mov	word_2BC82, 96h	; '
		mov	si, word_2BC84
		add	si, 14h
		call	sub_10AFB

loc_158D9:				; CODE XREF: sub_15863+49j
					; sub_15863+5Dj ...
		call	sub_10831
		cmp	byte_3148B, 0
		jnz	short loc_15916
		call	sub_10A51
		inc	word_2BC80
		cmp	word_2BC80, 48h	; 'H'
		jnz	short loc_158A1
		mov	word_2BC80, 0
		add	word_2BC84, 28h	; '('
		cmp	word_2BC84, 3715h
		jnz	short loc_158A1
		call	sub_159AA
		cmp	byte_3148B, 0
		jnz	short loc_15916
		mov	word_2BC84, 3625h
		jmp	short loc_158A1
; ---------------------------------------------------------------------------

loc_15916:				; CODE XREF: sub_15863+3Cj
					; sub_15863+7Ej ...
		mov	byte_3148B, 0
		mov	ah, 1
		int	80h		; LINUX	-
		call	sub_10DE7
		call	sub_10D81
		retn
sub_15863	endp


; =============== S U B	R O U T	I N E =======================================


sub_15926	proc near		; CODE XREF: sub_1195B+A7p
					; sub_13C75+80p ...
		push	si
		push	cx
		call	sub_15935
		pop	cx
		pop	si
		mov	ax, 64h	; 'd'
		call	sub_1595D
		jmp	short sub_15950
sub_15926	endp


; =============== S U B	R O U T	I N E =======================================


sub_15935	proc near		; CODE XREF: sub_15926+2p sub_15B10+4p ...
		call	sub_10BC7
		mov	cx, 30h	; '0'
		mov	di, 9A40h

loc_1593E:				; CODE XREF: sub_15935+18j
		call	sub_14191
		stosw
		call	sub_14191
		stosw
		call	sub_14191
		and	ax, 1FFFh
		stosw
		loop	loc_1593E
		retn
sub_15935	endp


; =============== S U B	R O U T	I N E =======================================


sub_15950	proc near		; CODE XREF: sub_15926+Dj
					; sub_159C8+13Fp ...
		call	sub_10E2B
		call	sub_10D81
		call	sub_10BE9
		call	sub_1426A
		retn
sub_15950	endp


; =============== S U B	R O U T	I N E =======================================


sub_1595D	proc near		; CODE XREF: sub_15926+Ap sub_159AA+9p ...
		mov	word_2BC82, ax
		mov	word_2BC84, si
		cmp	byte_2BC7E, 0
		jz	short loc_1598F
		call	sub_10DE7

loc_1596E:				; CODE XREF: sub_1595D+29j
		call	sub_10A0D
		mov	si, word_2BC84
		call	sub_10AFB
		call	sub_10831
		call	sub_10A51
		call	sub_10D81
		cmp	byte_3148B, 0
		jz	short loc_1596E
		mov	byte_3148B, 0
		jmp	short locret_159A9
; ---------------------------------------------------------------------------

loc_1598F:				; CODE XREF: sub_1595D+Cj
					; sub_1595D+4Aj
		push	cx
		call	sub_10A0D
		mov	si, word_2BC84
		call	sub_10AFB
		call	sub_10831
		call	sub_10A51
		call	sub_10DE7
		call	sub_10D81
		pop	cx
		loop	loc_1598F

locret_159A9:				; CODE XREF: sub_1595D+30j
		retn
sub_1595D	endp


; =============== S U B	R O U T	I N E =======================================


sub_159AA	proc near		; CODE XREF: sub_15863+A1p
		mov	ax, 0Ch
		mov	si, 352Bh
		mov	cx, 1
		call	sub_1595D
		mov	cx, 55h	; 'U'

loc_159B9:				; CODE XREF: sub_159AA+1Bj
		push	cx
		call	sub_10B3F
		pop	cx
		cmp	byte_3148B, 0
		jnz	short locret_159C7
		loop	loc_159B9

locret_159C7:				; CODE XREF: sub_159AA+19j
		retn
sub_159AA	endp


; =============== S U B	R O U T	I N E =======================================


sub_159C8	proc near		; CODE XREF: sub_13C75+2C5p
		mov	ax, word_31682
		mov	dx, word_31684
		cmp	dx, word_2BABD
		jge	short loc_159D8
		jmp	locret_15B0A
; ---------------------------------------------------------------------------

loc_159D8:				; CODE XREF: sub_159C8+Bj
		jnz	short loc_159E3
		cmp	ax, word_2BABB
		jg	short loc_159E3
		jmp	locret_15B0A
; ---------------------------------------------------------------------------

loc_159E3:				; CODE XREF: sub_159C8:loc_159D8j
					; sub_159C8+16j
		call	sub_15B0B
		mov	si, 358Bh
		mov	di, 3616h

loc_159EC:				; CODE XREF: sub_159C8+57j
		mov	ax, word_31682
		mov	dx, word_31684
		cmp	dx, [si-2]
		jl	short loc_15A21
		jnz	short loc_159FF
		cmp	ax, [si-4]
		jbe	short loc_15A21

loc_159FF:				; CODE XREF: sub_159C8+30j
		sub	si, 4
		mov	ax, [si]
		mov	[si+4],	ax
		mov	ax, [si+2]
		mov	[si+6],	ax
		mov	cx, 0Bh

loc_15A10:				; CODE XREF: sub_159C8+4Ej
		dec	di
		mov	al, [di]
		mov	[di+0Fh], al
		loop	loc_15A10
		sub	di, 4
		cmp	si, 3567h
		jg	short loc_159EC

loc_15A21:				; CODE XREF: sub_159C8+2Ej
					; sub_159C8+35j
		mov	ax, word_31682
		mov	[si], ax
		mov	ax, word_31684
		mov	[si+2],	ax
		mov	byte ptr [di+0Ch], 3Ah ; ':'
		mov	byte ptr [di+0Dh], 3Ah ; ':'
		mov	byte ptr [di+0Eh], 3Ah ; ':'
		lea	bp, [di+4]
		mov	bx, 3756h
		mov	ax, word_31682
		mov	word_38212, ax
		mov	ax, word_31684
		mov	word_38214, ax

loc_15A4A:				; CODE XREF: sub_159C8+B2j
		cmp	word ptr [bx], 0
		jz	short loc_15A7C
		mov	byte ptr ds:[bp+0], 30h	; '0'

loc_15A54:				; CODE XREF: sub_159C8+9Fj
		mov	ax, [bx]
		sub	word_38212, ax
		mov	ax, [bx+2]
		sbb	word_38214, ax
		js	short loc_15A69
		inc	byte ptr ds:[bp+0]
		jmp	short loc_15A54
; ---------------------------------------------------------------------------

loc_15A69:				; CODE XREF: sub_159C8+99j
		mov	ax, [bx]
		add	word_38212, ax
		mov	ax, [bx+2]
		adc	word_38214, ax
		add	bx, 4
		inc	bp
		jmp	short loc_15A4A
; ---------------------------------------------------------------------------

loc_15A7C:				; CODE XREF: sub_159C8+85j
		mov	byte_3148B, 0
		lea	bp, [di+0Ch]
		mov	bx, 33CAh
		xor	di, di

loc_15A89:				; CODE XREF: sub_159C8+133j
		mov	al, [bx+di]
		mov	ds:[bp+0], al

loc_15A8F:				; CODE XREF: sub_159C8+ECj
					; sub_159C8+122j
		push	bp
		push	bx
		push	di
		call	sub_10B3F
		pop	di
		pop	bx
		pop	bp
		cmp	byte_3148B, 0
		jnz	short loc_15AF0
		mov	ah, byte_31489
		and	ah, 0Ch
		mov	dx, 0FFFFh
		test	ah, 4
		jnz	short loc_15AB6
		mov	dx, 1
		test	ah, 8
		jz	short loc_15A8F

loc_15AB6:				; CODE XREF: sub_159C8+E4j
					; sub_159C8+126j
		mov	cx, 4
		add	di, dx
		jns	short loc_15AC0
		mov	di, 27h	; '''

loc_15AC0:				; CODE XREF: sub_159C8+F3j
		cmp	di, 28h	; '('
		jl	short loc_15AC7
		xor	di, di

loc_15AC7:				; CODE XREF: sub_159C8+FBj
					; sub_159C8+124j
		mov	al, [bx+di]
		mov	ds:[bp+0], al
		push	bx
		push	bp
		push	di
		push	dx
		push	cx
		push	ax
		call	sub_10B3F
		pop	ax
		pop	cx
		pop	dx
		pop	di
		pop	bp
		pop	bx
		cmp	byte_3148B, 0
		jnz	short loc_15AF0
		mov	al, byte_31489
		and	al, 0Ch
		cmp	al, ah
		jnz	short loc_15A8F
		loop	loc_15AC7
		jmp	short loc_15AB6
; ---------------------------------------------------------------------------

loc_15AF0:				; CODE XREF: sub_159C8+D5j
					; sub_159C8+119j
		mov	byte_3148B, 0
		inc	bp
		cmp	byte ptr ds:[bp+0], 3Ah	; ':'
		jz	short loc_15A89
		mov	cx, 12h

loc_15B00:				; CODE XREF: sub_159C8+13Dj
		push	cx
		call	sub_10B3F
		pop	cx
		loop	loc_15B00
		call	sub_15950

locret_15B0A:				; CODE XREF: sub_159C8+Dj
					; sub_159C8+18j
		retn
sub_159C8	endp


; =============== S U B	R O U T	I N E =======================================


sub_15B0B	proc near		; CODE XREF: sub_159C8:loc_159E3p
		mov	si, 352Bh
		jmp	short loc_15B13
sub_15B0B	endp


; =============== S U B	R O U T	I N E =======================================


sub_15B10	proc near		; CODE XREF: sub_15CC5+Fp
					; sub_15E35+19p
		mov	si, 353Fh

loc_15B13:				; CODE XREF: sub_15B0B+3j
		push	si
		call	sub_15935
		mov	ax, 0Ch
		pop	si
		mov	cx, 1
		jmp	sub_1595D
sub_15B10	endp


; =============== S U B	R O U T	I N E =======================================


sub_15B21	proc near		; CODE XREF: sub_13C75+4Dp
		mov	word_316E0, 3
		call	sub_15935
		mov	ax, 0Ch
		mov	si, 3477h
		mov	cx, 1
		call	sub_1595D
		mov	byte_3148B, 0
		xor	ax, ax
		push	ax

loc_15B3E:				; CODE XREF: sub_15B21+95j
					; sub_15B21+9Cj ...
		call	sub_109EB
		mov	word_2BC82, 0Ch
		mov	si, 3477h
		call	sub_10AFB
		mov	word_2BC82, 3Ch	; '<'
		mov	si, 348Bh
		pop	ax
		push	ax
		test	ax, ax
		jnz	short loc_15B5F
		mov	si, 349Fh

loc_15B5F:				; CODE XREF: sub_15B21+39j
		call	sub_10AFB
		mov	word_2BC82, 54h	; 'T'
		mov	si, 34B3h
		pop	ax
		push	ax
		cmp	ax, 1
		jnz	short loc_15B75
		mov	si, 34C7h

loc_15B75:				; CODE XREF: sub_15B21+4Fj
		call	sub_10AFB
		mov	word_2BC82, 6Ch	; 'l'
		mov	si, 34DBh
		cmp	byte_31484, 0
		jnz	short loc_15B8B
		mov	si, 3503h

loc_15B8B:				; CODE XREF: sub_15B21+65j
		pop	ax
		push	ax
		cmp	ax, 2
		jnz	short loc_15B95
		add	si, 14h

loc_15B95:				; CODE XREF: sub_15B21+6Fj
		call	sub_10AFB
		call	sub_15C7C
		call	sub_10831
		call	sub_10A51
		test	byte_31489, 1
		jz	short loc_15BC0
		mov	byte_31489, 0
		mov	word_313B8, 8
		pop	ax
		dec	ax
		push	ax
		jns	short loc_15B3E
		pop	ax
		mov	ax, 2
		push	ax
		jmp	loc_15B3E
; ---------------------------------------------------------------------------

loc_15BC0:				; CODE XREF: sub_15B21+85j
		test	byte_31489, 2
		jz	short loc_15BE4
		mov	byte_31489, 0
		mov	word_313B8, 8
		pop	ax
		inc	ax
		push	ax
		cmp	ax, 3
		jge	short loc_15BDD
		jmp	loc_15B3E
; ---------------------------------------------------------------------------

loc_15BDD:				; CODE XREF: sub_15B21+B7j
		pop	ax
		xor	ax, ax
		push	ax
		jmp	loc_15B3E
; ---------------------------------------------------------------------------

loc_15BE4:				; CODE XREF: sub_15B21+A4j
		cmp	byte_3148B, 0
		jnz	short loc_15BEE
		jmp	loc_15B3E
; ---------------------------------------------------------------------------

loc_15BEE:				; CODE XREF: sub_15B21+C8j
		mov	byte_3148B, 0
		mov	word_313B8, 9
		pop	ax
		push	ax
		cmp	ax, 2
		jnz	short loc_15C07
		not	byte_31484
		jmp	loc_15B3E
; ---------------------------------------------------------------------------

loc_15C07:				; CODE XREF: sub_15B21+DDj
		pop	ax
		inc	ax
		mov	word_313A0, ax
		jmp	sub_15950
sub_15B21	endp


; =============== S U B	R O U T	I N E =======================================


sub_15C0F	proc near		; CODE XREF: sub_13C75+2D1p
		call	sub_15935
		mov	ax, 50h	; 'P'
		mov	si, 344Fh
		mov	cx, 1
		call	sub_1595D
		mov	byte_3148B, 0
		mov	ax, 4Fh	; 'O'
		push	ax

loc_15C27:				; CODE XREF: sub_15C0F+53j
		call	sub_109EB
		mov	word_2BC82, 50h	; 'P'
		mov	si, 344Fh
		call	sub_10AFB
		pop	ax
		push	ax
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	al, 30h	; '0'
		mov	byte_2B99C, al
		mov	word_2BC82, 78h	; 'x'
		mov	si, 3463h
		call	sub_10AFB
		call	sub_15C7C
		call	sub_10831
		call	sub_10A51
		cmp	byte_3148B, 0
		jnz	short loc_15C6D
		pop	ax
		dec	ax
		push	ax
		jnz	short loc_15C27
		add	sp, 2
		call	sub_15950
		xor	ax, ax
		retn
; ---------------------------------------------------------------------------

loc_15C6D:				; CODE XREF: sub_15C0F+4Ej
		add	sp, 2
		call	sub_15950
		mov	byte_3148B, 0
		xor	ax, ax
		dec	ax
		retn
sub_15C0F	endp


; =============== S U B	R O U T	I N E =======================================


sub_15C7C	proc near		; CODE XREF: sub_15B21+77p
					; sub_15C0F+40p
		mov	ax, word_316E0
		add	al, 30h	; '0'
		mov	byte_2B92B, al
		mov	si, 33F3h
		call	sub_10B83
		retn
sub_15C7C	endp


; =============== S U B	R O U T	I N E =======================================


sub_15C8B	proc near		; CODE XREF: start+53p
		mov	dx, 41C8h
		mov	ax, seg	seg007
		mov	es, ax
		assume es:seg007
		xor	di, di
		call	sub_1011C
		mov	dx, 41D2h
		mov	ax, seg	seg007
		mov	es, ax
		mov	di, 6BE6h
		call	sub_1011C
		mov	dx, 41DEh
		mov	ax, seg	seg007
		mov	es, ax
		mov	di, 0ABBCh
		call	sub_1011C
		mov	dx, 41E7h
		mov	ax, seg	seg005
		mov	es, ax
		assume es:seg005
		xor	di, di
		call	sub_1011C
		call	sub_10DA3
		retn
sub_15C8B	endp


; =============== S U B	R O U T	I N E =======================================


sub_15CC5	proc near		; CODE XREF: sub_13C75+5Ep
					; sub_13C75+4DAp
		mov	ax, word_31E4C
		cmp	ax, word_3139C
		jnz	short loc_15CD1
		jmp	locret_15E03
; ---------------------------------------------------------------------------

loc_15CD1:				; CODE XREF: sub_15CC5+7j
		mov	word_3139C, ax
		call	sub_15B10
		mov	ax, word_31E4C
		add	al, 30h	; '0'
		mov	byte_2C71F, al
		mov	byte_2C72A, al
		mov	byte_2C736, al
		mov	byte_2C745, al
		mov	byte_2C752, al
		mov	byte_2C761, al
		mov	dx, 41EEh
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 2EE0h
		mov	dx, 0DF16h
		call	sub_15E52
		mov	bx, word_31390
		call	sub_15E59
		xor	di, di
		mov	si, 0DF16h
		xor	ch, ch

loc_15D10:				; CODE XREF: sub_15CC5+61j
		lodsb
		mov	cl, al
		rep movsw
		lodsb
		mov	cl, al
		xor	ax, ax
		rep stosw
		cmp	di, 2EE0h
		jge	short loc_15D28
		cmp	di, 2EE0h
		jl	short loc_15D10

loc_15D28:				; CODE XREF: sub_15CC5+5Bj
		mov	dx, 4214h
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 82Ah
		mov	dx, 0D274h
		call	sub_15E52
		mov	bx, word_31390
		call	sub_15E59
		mov	dx, 4221h
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 392h
		mov	dx, 0DA9Eh
		call	sub_15E52
		mov	bx, word_31390
		call	sub_15E59
		mov	dx, 4230h
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 1E96h
		mov	dx, 0DE30h
		call	sub_15E52
		mov	bx, word_31390
		call	sub_15E59
		mov	si, 0DE30h
		mov	cx, 73h	; 's'
		mov	ax, 0DF16h

loc_15D82:				; CODE XREF: sub_15CC5+C2j
		add	[si], ax
		add	si, 2
		loop	loc_15D82
		mov	dx, 41F9h
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 0E480h
		xor	dx, dx
		mov	ax, seg	seg009
		push	ds
		mov	ds, ax
		assume ds:seg009
		call	sub_15E52
		pop	ds
		assume ds:dseg
		mov	bx, word_31390
		call	sub_15E59
		push	es
		mov	ax, seg	seg008
		mov	es, ax
		assume es:seg008
		xor	ax, ax
		xor	di, di
		mov	cx, 7A34h
		rep stosw
		pop	es
		assume es:nothing
		mov	dx, 4205h
		call	sub_15E24
		mov	word_31390, ax
		mov	bx, ax
		mov	cx, 0F468h
		mov	dx, 0
		mov	ax, seg	seg008
		push	ds
		mov	ds, ax
		assume ds:seg008
		call	sub_15E52
		pop	ds
		assume ds:dseg
		mov	bx, word_31390
		call	sub_15E59
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		xor	si, si
		mov	di, 5538h
		mov	cx, 1C90h

loc_15DEA:				; CODE XREF: sub_15CC5+132j
		lodsw
		mov	dx, ax
		lodsw
		or	dx, ax
		lodsw
		or	dx, ax
		lodsw
		or	ax, dx
		stosw
		loop	loc_15DEA
		pop	ds
		assume ds:dseg
		call	sub_10DC5
		call	sub_15950
		call	sub_10D5F

locret_15E03:				; CODE XREF: sub_15CC5+9j
		retn
sub_15CC5	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1011C

loc_15E04:				; CODE XREF: sub_1011C+7j
					; sub_1011C+2Dj ...
		mov	ax, seg	dseg
		mov	ds, ax
		mov	es, ax
		assume es:dseg
		mov	ax, 3
		cmp	word_2B574, 4
		jnz	short loc_15E18
		mov	ax, 7

loc_15E18:				; CODE XREF: sub_1011C+5CF7j
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		mov	dx, 300Fh
		mov	ah, 9
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		jmp	loc_1054F
; END OF FUNCTION CHUNK	FOR sub_1011C

; =============== S U B	R O U T	I N E =======================================


sub_15E24	proc near		; CODE XREF: sub_15CC5+2Cp
					; sub_15CC5+66p ...
		push	dx
		mov	ax, 3D00h
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 0 - read
		pop	dx
		jnb	short locret_15E34
		push	dx
		call	sub_15E35
		pop	dx
		jmp	short sub_15E24
; ---------------------------------------------------------------------------

locret_15E34:				; CODE XREF: sub_15E24+7j
		retn
sub_15E24	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E35	proc near		; CODE XREF: sub_15E24+Ap
		call	sub_15950
		call	sub_10D5F
		mov	si, 343Bh
		mov	byte_2BC7E, 0FFh
		call	sub_15926
		mov	byte_2BC7E, 0
		call	sub_10D5F
		call	sub_15B10
		retn
sub_15E35	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E52	proc near		; CODE XREF: sub_15CC5+3Ap
					; sub_15CC5+74p ...
		mov	ah, 3Fh
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		jb	short loc_15E04
		retn
sub_15E52	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E59	proc near		; CODE XREF: sub_15CC5+41p
					; sub_15CC5+7Bp ...
		mov	ah, 3Eh
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		retn
sub_15E59	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E5E	proc near		; CODE XREF: start+50p
		mov	ax, 3509h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word_31396, bx
		mov	word_31398, es
		mov	ax, 2509h
		push	ds
		mov	dx, cs
		mov	ds, dx
		assume ds:seg000
		mov	dx, 5EEBh
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		retn
sub_15E5E	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E7A	proc near		; CODE XREF: start+9Ap
		mov	ax, 2509h
		push	ds
		mov	dx, word_31396
		mov	ds, word_31398
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		retn
sub_15E7A	endp


; =============== S U B	R O U T	I N E =======================================


sub_15E8A	proc near		; CODE XREF: start+40p
		mov	cs:word_16009, 3
		mov	ax, 3508h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word_31392, bx
		mov	word_31394, es
		mov	ax, 2508h
		push	ds
		mov	dx, 600Bh
		mov	cx, cs
		mov	ds, cx
		assume ds:seg000
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		cli
		mov	al, 36h	; '6'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		mov	dx, 5555h
		mov	al, dl
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dh
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	byte_2B572, al
		sti
		retn
sub_15E8A	endp


; =============== S U B	R O U T	I N E =======================================


sub_15EC3	proc near		; CODE XREF: start+97p
		cli
		mov	al, byte_2B572
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 36h	; '6'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		mov	dx, 0FFFFh
		mov	al, dl
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dh
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		sti
		mov	ax, 2508h
		push	ds
		mov	dx, word_31392
		mov	ds, word_31394
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		retn
sub_15EC3	endp

; ---------------------------------------------------------------------------
		push	ds
		push	ax
		push	bx
		mov	ax, seg	dseg
		mov	ds, ax
		in	al, 60h		; 8042 keyboard	controller data	register
		cmp	al, byte_2B4E8
		jz	short loc_15F53
		cmp	al, byte_2B4F4
		jz	short loc_15F6F
		cmp	al, byte_2B500
		jnz	short loc_15F0A
		jmp	loc_15F8A
; ---------------------------------------------------------------------------

loc_15F0A:				; CODE XREF: seg000:5F05j
		cmp	al, byte_2B50C
		jnz	short loc_15F13
		jmp	loc_15FA0
; ---------------------------------------------------------------------------

loc_15F13:				; CODE XREF: seg000:5F0Ej
		cmp	al, byte_2B531
		jnz	short loc_15F1C
		jmp	loc_15FB6
; ---------------------------------------------------------------------------

loc_15F1C:				; CODE XREF: seg000:5F17j
		cmp	al, byte_2B53D
		jnz	short loc_15F25
		jmp	loc_15FEE
; ---------------------------------------------------------------------------

loc_15F25:				; CODE XREF: seg000:5F20j
		cmp	al, byte_2B4E9
		jz	short loc_15F5F
		cmp	al, byte_2B4F5
		jz	short loc_15F7F
		cmp	al, byte_2B501
		jz	short loc_15F95
		cmp	al, byte_2B50D
		jz	short loc_15FAB
		cmp	al, byte_2B532
		jnz	short loc_15F46
		jmp	loc_15FCD
; ---------------------------------------------------------------------------

loc_15F46:				; CODE XREF: seg000:5F41j
		cmp	al, byte_2B53E
		jnz	short loc_15F4F
		jmp	loc_15FF7
; ---------------------------------------------------------------------------

loc_15F4F:				; CODE XREF: seg000:5F4Aj
		cmp	al, 48h	; 'H'
		jnz	short loc_15F5B

loc_15F53:				; CODE XREF: seg000:5EF9j
		or	byte_31489, 1
		jmp	loc_15FF7
; ---------------------------------------------------------------------------

loc_15F5B:				; CODE XREF: seg000:5F51j
		cmp	al, 0C8h ; '
		jnz	short loc_15F67

loc_15F5F:				; CODE XREF: seg000:5F29j
		and	byte_31489, 0FEh
		jmp	loc_15FF7
; ---------------------------------------------------------------------------

loc_15F67:				; CODE XREF: seg000:5F5Dj
		cmp	al, 4Ch	; 'L'
		jz	short loc_15F6F
		cmp	al, 50h	; 'P'
		jnz	short loc_15F77

loc_15F6F:				; CODE XREF: seg000:5EFFj seg000:5F69j
		or	byte_31489, 2
		jmp	loc_15FF7
; ---------------------------------------------------------------------------

loc_15F77:				; CODE XREF: seg000:5F6Dj
		cmp	al, 0CCh ; '
		jz	short loc_15F7F
		cmp	al, 0D0h ; '
		jnz	short loc_15F86

loc_15F7F:				; CODE XREF: seg000:5F2Fj seg000:5F79j
		and	byte_31489, 0FDh
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15F86:				; CODE XREF: seg000:5F7Dj
		cmp	al, 4Bh	; 'K'
		jnz	short loc_15F91

loc_15F8A:				; CODE XREF: seg000:5F07j
		or	byte_31489, 4
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15F91:				; CODE XREF: seg000:5F88j
		cmp	al, 0CBh ; '
		jnz	short loc_15F9C

loc_15F95:				; CODE XREF: seg000:5F35j
		and	byte_31489, 0FBh
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15F9C:				; CODE XREF: seg000:5F93j
		cmp	al, 4Dh	; 'M'
		jnz	short loc_15FA7

loc_15FA0:				; CODE XREF: seg000:5F10j
		or	byte_31489, 8
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15FA7:				; CODE XREF: seg000:5F9Ej
		cmp	al, 0CDh ; '
		jnz	short loc_15FB2

loc_15FAB:				; CODE XREF: seg000:5F3Bj
		and	byte_31489, 0F7h
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15FB2:				; CODE XREF: seg000:5FA9j
		cmp	al, 39h	; '9'
		jnz	short loc_15FC9

loc_15FB6:				; CODE XREF: seg000:5F19j
		test	byte_31489, 80h
		jnz	short loc_15FF7
		mov	byte_3148B, 0FFh
		or	byte_31489, 80h
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15FC9:				; CODE XREF: seg000:5FB4j
		cmp	al, 0B9h ; '
		jnz	short loc_15FD4

loc_15FCD:				; CODE XREF: seg000:5F43j
		and	byte_31489, 7Fh
		jmp	short loc_15FF7
; ---------------------------------------------------------------------------

loc_15FD4:				; CODE XREF: seg000:5FCBj
		cmp	al, 44h	; 'D'
		jnz	short loc_15FF0
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		xor	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		mov	ax, ds
		mov	es, ax
		sti
		jmp	loc_1054F
; ---------------------------------------------------------------------------

loc_15FEE:				; CODE XREF: seg000:5F22j
		mov	al, 1Ch

loc_15FF0:				; CODE XREF: seg000:5FD6j
		test	al, al
		js	short loc_15FF7
		mov	byte_31488, al

loc_15FF7:				; CODE XREF: seg000:5F4Cj seg000:5F58j ...
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		xor	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		pop	bx
		pop	ax
		pop	ds
		iret
; ---------------------------------------------------------------------------
word_16009	dw 3			; DATA XREF: sub_15E8Aw
		db 50h,	32h, 0E4h, 0CDh, 80h, 2Eh, 0FFh, 0Eh, 9, 60h, 75h
		db 3Bh,	2Eh, 0C7h, 6, 9, 60h, 3, 0, 1Eh, 0B8h
		dw seg dseg
		db 8Eh,	0D8h, 0FFh, 6, 46h, 30h, 0FFh, 6, 48h, 30h, 0A0h
		db 8Ah,	8Eh, 84h, 0C0h,	75h, 7,	0A0h, 88h, 8Eh,	84h, 0C0h
		db 74h,	10h, 0B4h, 3, 0CDh, 80h, 0C7h, 6, 88h, 8Eh, 2 dup(0)
		db 0C7h, 6, 8Ah, 8Eh, 2	dup(0),	9Ch, 0FFh, 1Eh,	62h, 8Eh
		db 1Fh,	58h, 0CFh, 0B0h, 20h, 0E6h, 20h, 58h, 0CFh

; =============== S U B	R O U T	I N E =======================================


sub_16058	proc near		; CODE XREF: sub_13C75p
		mov	byte_31483, 0
		mov	word_31480, 200h

loc_16063:				; CODE XREF: sub_16058+20j
					; sub_16058+25j
		shr	word_31480, 1
		call	sub_160EF
		test	bx, bx
		jz	short locret_160A4
		cmp	word_31480, 0
		jz	short loc_1607F
		cmp	bl, 20h	; ' '
		jb	short loc_16063
		cmp	bh, 20h	; ' '
		jb	short loc_16063

loc_1607F:				; CODE XREF: sub_16058+1Bj
		shr	bh, 1
		shr	bl, 1
		mov	word_3147E, bx
		mov	al, bh
		shl	bh, 1
		add	bh, al
		mov	al, bl
		shl	bl, 1
		add	bl, al
		mov	word_3147C, bx
		mov	ax, word_3147C+1
		xchg	ah, al
		mov	word_3147C+1, ax
		mov	byte_31483, 0FFh

locret_160A4:				; CODE XREF: sub_16058+14j
		retn
sub_16058	endp


; =============== S U B	R O U T	I N E =======================================


sub_160A5	proc near		; CODE XREF: sub_10EF1p sub_13C75+196p
		cmp	byte_31483, 0
		jz	short locret_160EE
		call	sub_160EF
		xor	dl, dl
		and	al, 30h
		cmp	al, 30h	; '0'
		jz	short loc_160B9
		mov	dl, 8

loc_160B9:				; CODE XREF: sub_160A5+10j
		mov	ax, word_3147C
		cmp	al, bh
		rcl	dl, 1
		cmp	bh, ah
		rcl	dl, 1
		mov	ax, word_3147E
		cmp	al, bl
		rcl	dl, 1
		cmp	bl, ah
		rcl	dl, 1
		cmp	dl, byte_3148A
		jz	short locret_160EE
		test	dl, 80h
		jz	short loc_160E6
		test	byte_3148A, 80h
		jnz	short loc_160E6
		mov	byte_3148B, 0FFh

loc_160E6:				; CODE XREF: sub_160A5+33j
					; sub_160A5+3Aj
		mov	byte_3148A, dl
		mov	byte_31489, dl

locret_160EE:				; CODE XREF: sub_160A5+5j
					; sub_160A5+2Ej
		retn
sub_160A5	endp


; =============== S U B	R O U T	I N E =======================================


sub_160EF	proc near		; CODE XREF: sub_16058+Fp sub_160A5+7p
		cli
		mov	dx, 201h
		mov	bp, 100h
		out	dx, al		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		xor	bx, bx

loc_160F9:				; CODE XREF: sub_160EF+22j
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)
		test	al, 1
		jz	short loc_16100
		inc	bh

loc_16100:				; CODE XREF: sub_160EF+Dj
		test	al, 2
		jz	short loc_16106
		inc	bl

loc_16106:				; CODE XREF: sub_160EF+13j
		test	al, 3
		jz	short loc_16114
		mov	ax, word_31480

loc_1610D:				; CODE XREF: sub_160EF+1Fj
		dec	ax
		jns	short loc_1610D
		dec	bp
		jnz	short loc_160F9
		in	al, dx		; Game I/O port
					; bits 0-3: Coordinates	(resistive, time-dependent inputs)
					; bits 4-7: Buttons/Triggers (digital inputs)

loc_16114:				; CODE XREF: sub_160EF+19j
		sti
		retn
sub_160EF	endp

; ---------------------------------------------------------------------------
		db 0, 2, 3, 5, 6, 8, 9,	0Bh, 0Ch, 0Eh, 10h, 11h, 13h, 14h
		db 16h,	17h, 18h, 1Ah, 1Bh, 1Dh, 1Eh, 20h, 21h,	22h, 24h
		db 25h,	26h, 27h, 29h, 2Ah, 2Bh, 2Ch, 2Dh, 2Eh,	2Fh, 30h
		db 31h,	32h, 33h, 34h, 35h, 36h, 37h, 2	dup(38h), 39h
		db 3Ah,	2 dup(3Bh), 2 dup(3Ch),	2 dup(3Dh), 3 dup(3Eh)
		db 3 dup(3Fh), 0Bh dup(40h), 3 dup(3Fh), 3 dup(3Eh), 2 dup(3Dh)
		db 2 dup(3Ch), 2 dup(3Bh), 3Ah,	39h, 2 dup(38h), 37h, 36h
		db 35h,	34h, 33h, 32h, 31h, 30h, 2Fh, 2Eh, 2Dh,	2Ch, 2Bh
		db 2Ah,	29h, 27h, 26h, 25h, 24h, 22h, 21h, 20h,	1Eh, 1Dh
		db 1Bh,	1Ah, 18h, 17h, 16h, 14h, 13h, 11h, 10h,	0Eh, 0Ch
		db 0Bh,	9, 8, 6, 5, 3, 2, 0, 0FFh, 0FEh, 0FCh, 0FBh, 0F9h
		db 0F8h, 0F6h, 0F5h, 0F3h, 0F1h, 0F0h, 0EEh, 0EDh, 0EBh
		db 0EAh, 0E9h, 0E7h, 0E6h, 0E4h, 0E3h, 0E1h, 0E0h, 0DFh
		db 0DDh, 0DCh, 0DBh, 0DAh, 0D8h, 0D7h, 0D6h, 0D5h, 0D4h
		db 0D3h, 0D2h, 0D1h, 0D0h, 0CFh, 0CEh, 0CDh, 0CCh, 0CBh
		db 0CAh, 2 dup(0C9h), 0C8h, 0C7h, 2 dup(0C6h), 2 dup(0C5h)
		db 2 dup(0C4h),	3 dup(0C3h), 3 dup(0C2h), 0Bh dup(0C1h)
		db 3 dup(0C2h),	3 dup(0C3h), 2 dup(0C4h), 2 dup(0C5h)
		db 2 dup(0C6h),	0C7h, 0C8h, 2 dup(0C9h), 0CAh, 0CBh, 0CCh
		db 0CDh, 0CEh, 0CFh, 0D0h, 0D1h, 0D2h, 0D3h, 0D4h, 0D5h
		db 0D6h, 0D7h, 0D8h, 0DAh, 0DBh, 0DCh, 0DDh, 0DFh, 0E0h
		db 0E1h, 0E3h, 0E4h, 0E6h, 0E7h, 0E9h, 0EAh, 0EBh, 0EDh
		db 0EEh, 0F0h, 0F1h, 0F3h, 0F5h, 0F6h, 0F8h, 0F9h, 0FBh
		db 0FCh, 0FEh, 0FFh, 0,	2, 3, 5, 6, 8, 9, 0Bh, 0Ch, 0Eh
		db 10h,	11h, 13h, 14h, 16h, 17h, 18h, 1Ah, 1Bh,	1Dh, 1Eh
		align 10h
		db 10h,	0, 5, 0, 4, 0, 6, 0, 0Ah, 0, 2,	0, 6, 0, 4, 0
		db 1, 0, 6, 0, 1, 0, 8,	0, 1Eh,	0, 2, 0, 2, 0, 2, 0, 2
		db 0, 4, 0, 0C3h, 0C8h,	0, 90h,	1, 0Bh,	48h, 53h, 8, 0A7h
		db 3Ah,	49h, 63h, 2, 0,	0FFh, 3	dup(0),	0CCh, 0, 2Ch, 1
		db 0Bh,	48h, 53h, 8, 0A7h, 3Ah,	5Fh, 63h, 2, 0,	0FFh, 3	dup(0)
		db 0F0h, 0, 96h, 0, 0Bh, 48h, 53h, 8, 0A7h, 3Ah, 75h, 63h
		db 1, 5	dup(0),	0F4h, 0, 64h, 0, 0Bh, 48h, 53h,	8, 0A7h
		db 3Ah,	0ABh, 63h, 1, 5	dup(0),	0F8h, 0, 0C8h, 0, 0Bh
		db 48h,	53h, 8,	0A7h, 3Ah, 0C1h, 63h, 1, 5 dup(0), 4, 1
		db 96h,	0, 0Bh,	48h, 53h, 8, 0A7h, 3Ah,	0D3h, 63h, 1, 5	dup(0)
		db 8, 1, 0C8h, 0, 0Bh, 48h, 53h, 8, 39h, 3Ah, 1, 64h, 1
		db 2 dup(0), 0FFh, 8, 1, 2 dup(0), 0CAh, 37h, 53h, 8, 39h
		db 3Ah,	5, 64h,	1, 2 dup(0), 0FFh, 2 dup(0), 18h, 1, 32h
		db 0, 0Bh, 48h,	53h, 8,	0A7h, 3Ah, 2Bh,	64h, 1,	5 dup(0)
		db 1Ch,	1, 64h,	0, 0Bh,	48h, 53h, 8, 0A7h, 3Ah,	75h, 64h
		db 1, 5	dup(0),	20h, 1,	78h, 0,	0Bh, 48h, 53h, 8, 0A7h
		db 3Ah,	9Bh, 64h, 1, 5 dup(0), 29h, 0, 2, 0, 0B9h, 2 dup(2)
		db 0, 49h, 5, 2, 0, 0B9h, 2 dup(2), 3 dup(0), 0E2h, 41h
		db 49h,	63h, 0C5h, 7, 2, 0, 5, 0Ah, 2, 0, 6Dh, 0Ch, 2
		db 0, 5, 0Ah, 2, 3 dup(0), 0E2h, 41h, 5Fh, 63h,	1Dh, 21h
		db 2, 0, 0CDh, 21h, 2, 0, 7Dh, 22h, 2, 0, 2Dh, 23h, 2
		db 0, 0DDh, 23h, 2, 0, 8Dh, 24h, 2, 0, 3Dh, 25h, 2, 0
		db 0EDh, 25h, 2, 0, 9Dh, 26h, 2, 0, 4Dh, 27h, 2, 0, 0FDh
		db 27h,	2, 0, 0ADh, 28h, 2, 3 dup(0), 0E2h, 41h, 75h, 63h
		db 5Dh,	29h, 2,	0, 0Dh,	2Ah, 2,	0, 0B3h, 2Ah, 2, 0, 63h
		db 2Bh,	2, 3 dup(0), 0E2h, 41h,	0ABh, 63h, 9, 2Ch, 1, 0
		db 0AFh, 2Ch, 1, 0, 5Fh, 2Dh, 1, 3 dup(0), 0E2h, 41h, 0C1h
		db 63h,	9Bh, 34h, 1, 0,	4Bh, 35h, 1, 0,	0FBh, 35h, 1, 0
		db 0ABh, 36h, 1, 0, 5Bh, 37h, 1, 0, 0Bh, 38h, 1, 0, 5Bh
		db 37h,	1, 0, 0ABh, 36h, 1, 0, 0FBh, 35h, 1, 0,	4Bh, 35h
		db 1, 3	dup(0),	0E2h, 41h, 0D3h, 63h, 4Bh, 51h,	2 dup(0)
		db 0FBh, 51h, 1, 0, 65h, 52h, 1, 0, 0C1h, 52h, 1, 0, 21h
		db 53h,	1, 0, 7Dh, 53h,	1, 0, 21h, 53h,	1, 0, 0C1h, 52h
		db 1, 0, 65h, 52h, 1, 3	dup(0),	0E2h, 41h, 5, 64h, 4Bh
		db 3Ch,	2, 0, 0F1h, 3Ch, 2, 0, 97h, 3Dh, 2, 0, 33h, 3Eh
		db 2, 0, 0BBh, 3Eh, 2, 0, 61h, 3Fh, 2, 0, 0E9h,	3Fh, 2
		db 0, 7Bh, 40h,	2, 0, 21h, 41h,	2, 0, 0C7h, 41h, 2, 0
		db 63h,	42h, 2,	0, 0EBh, 42h, 2, 0, 7Dh, 43h, 2, 0, 23h
		db 44h,	2, 0, 0B5h, 44h, 2, 0, 3Dh, 45h, 2, 0, 0D9h, 45h
		db 2, 3	dup(0),	0E2h, 41h, 2Bh,	64h, 7Fh, 46h, 1, 0, 2Fh
		db 47h,	1, 0, 0CBh, 47h, 1, 0, 53h, 48h, 1, 0, 0BDh, 48h
		db 1, 0, 0F5h, 48h, 1, 0, 5Fh, 49h, 1, 0, 0E7h,	49h, 1
		db 3 dup(0), 0E2h, 41h
		db 75h,	64h, 83h, 4Ah, 2, 0, 0F7h, 4Ah,	2, 0, 93h, 4Bh
		db 2, 0, 43h, 4Ch, 2, 0, 0DFh, 4Ch, 2, 0, 53h, 4Dh, 2
		db 0, 0EFh, 4Dh, 2, 0, 9Fh, 4Eh, 2, 3 dup(0), 0E2h, 41h
		db 9Bh,	64h, 0BFh, 17h,	2, 0, 0Fh, 19h,	2, 0, 37h, 1Ah
		db 2, 0, 0Fh, 19h, 2, 3	dup(0),	0E2h, 41h, 0C1h, 64h, 37h
		db 1Bh,	2, 0, 0AFh, 1Ch, 2, 0, 55h, 1Eh, 2, 3 dup(0), 0FBh
		db 41h,	0ADh, 0Eh, 2, 0, 0FDh, 0Fh, 2, 0, 25h, 11h, 2
		db 0, 0FDh, 0Fh, 2, 3 dup(0), 0E2h, 41h, 0E7h, 64h, 25h
		db 12h,	2, 0, 9Dh, 13h,	2, 0, 43h, 15h,	2, 3 dup(0), 0FBh
		db 41h,	0BBh, 38h, 2, 0, 0F3h, 38h, 2, 0, 2Bh, 39h, 2
		db 0, 63h, 39h,	2, 3 dup(0), 0E2h, 41h,	0Dh, 65h, 9Bh
		db 39h,	2, 0, 0D3h, 39h, 2, 0, 47h, 3Ah, 2, 0, 7Fh, 3Ah
		db 2, 0, 0F3h, 3Ah, 2, 0, 2Bh, 3Bh, 2, 0, 9Fh, 3Bh, 2
		db 0, 0D7h, 3Bh, 2, 3 dup(0), 0E2h, 41h, 23h, 65h, 0E7h
		db 53h,	2, 0, 97h, 54h,	2, 0, 33h, 55h,	2, 3 dup(0), 0E2h
		db 41h,	49h, 65h, 80h, 3Eh, 2Ch, 92h, 0, 75h, 2Eh, 0A1h
		db 90h,	91h, 3,	6, 16h,	9Fh, 3Dh, 80h, 0Ah, 7Dh, 22h, 0C6h
		db 6, 0B0h, 8Fh, 0FFh, 0C6h, 6,	2Ch, 92h, 0FFh,	0C7h, 6
		db 90h,	91h, 0C0h, 9, 0C7h, 6, 0AAh, 91h, 0C0h,	9, 0C7h
		db 6, 8Eh, 91h,	60h, 18h, 0C7h,	6, 96h,	91h, 2 dup(0)
		db 81h,	3Eh, 90h, 91h, 40h, 0Ah, 7Ch, 44h, 81h,	3Eh, 90h
		db 91h,	10h, 0Dh, 7Fh, 3Ch, 81h, 3Eh, 0AAh, 91h, 10h, 0Dh
		db 7Dh,	6, 0C7h, 6, 0AAh, 91h, 10h, 0Dh, 0E8h, 56h, 2
		db 0BFh, 0D4h, 91h, 0BEh, 0F6h,	65h, 0B9h, 10h,	0, 83h
		db 3Dh,	0, 74h,	15h, 0BBh, 2 dup(0), 2Eh, 3, 1Ch, 0FFh
		db 0Dh,	8Bh, 2Dh, 83h, 0E5h, 3,	0D1h, 0E5h, 2Eh, 8Bh, 42h
		db 2, 89h, 7, 83h, 0C7h, 2, 83h, 0C6h, 0Ah, 0E2h, 0DEh
		db 0C6h, 6, 26h, 92h, 0, 0C6h, 6, 27h, 92h, 0, 0C6h, 6
		db 28h,	92h, 0,	0C6h, 6, 29h, 92h, 0, 0C6h, 6, 2Ah, 92h
		db 0, 0C3h, 0ACh, 1Bh, 0C1h, 53h, 1, 54h, 41h, 54h, 1
		db 54h,	9Ch, 1Ch, 0C1h,	53h, 1,	54h, 41h, 54h, 1, 54h
		db 4, 1Eh, 0C1h, 53h, 1, 54h, 41h, 54h,	1, 54h,	0A4h, 1Bh
		db 1, 53h, 41h,	53h, 81h, 53h, 41h, 53h, 1Ah, 1Ch, 1, 53h
		db 41h,	53h, 81h, 53h, 41h, 53h, 94h, 1Ch, 1, 53h, 41h
		db 53h,	81h, 53h, 41h, 53h, 58h, 1Dh, 1, 53h, 41h, 53h
		db 81h,	53h, 41h, 53h, 76h, 1Fh, 1, 53h, 41h, 53h, 81h
		db 53h,	41h, 53h, 0ECh,	1Fh, 1,	53h, 41h, 53h, 81h, 53h
		db 41h,	53h, 66h, 20h, 1, 53h, 41h, 53h, 81h, 53h, 41h
		db 53h,	5Ah, 1Fh, 0C1h,	53h, 1,	54h, 41h, 54h, 1, 54h
		db 3Ch,	1Fh, 1,	53h, 41h, 53h, 81h, 53h, 41h, 53h, 0F8h
		db 1Fh,	0C1h, 53h, 1, 54h, 41h,	54h, 1,	54h, 0B2h, 1Fh
		db 1, 53h, 41h,	53h, 81h, 53h, 41h, 53h, 4Ah, 20h, 0C1h
		db 53h,	1, 54h,	41h, 54h, 1, 54h, 2Ch, 20h, 1, 53h, 41h
		db 53h,	81h, 53h, 41h, 53h, 0C7h, 45h, 4, 0B9h,	8, 29h
		db 45h,	24h, 76h, 1, 0C3h, 0BDh, 0Dh, 65h, 0EBh, 10h, 0C7h
		db 45h,	4, 0B9h, 8
		db 29h,	45h, 24h, 76h, 1, 0C3h,	0BDh, 23h, 65h,	0EBh, 0
		db 56h,	0E8h, 68h, 0A9h, 57h, 0BFh, 96h, 90h, 0E8h, 0BBh
		db 0A0h, 5Fh, 8Bh, 5, 89h, 4, 0C7h, 44h, 2, 0D0h, 69h
		db 0C7h, 44h, 4, 53h, 8, 8Bh, 45h, 12h,	89h, 44h, 12h
		db 8Bh,	45h, 16h, 89h, 44h, 16h, 2Eh, 8Bh, 46h,	0, 89h
		db 44h,	0Ch, 2Eh, 8Bh, 46h, 2, 89h, 44h, 0Eh, 83h, 0C5h
		db 4, 89h, 6Ch,	10h, 0E8h, 9Eh,	0DAh, 88h, 44h,	1Ch, 0C6h
		db 44h,	1Dh, 0,	8Bh, 45h, 34h, 1, 6, 52h, 91h, 83h, 16h
		db 54h,	91h, 0,	8Bh, 0F7h, 0E8h, 0B5h, 0A0h, 5Eh, 0C3h
		db 0Bh,	0, 14h,	1, 0A6h, 66h, 9Bh, 39h,	0FAh, 0, 10h, 1
		db 96h,	66h, 0BBh, 38h,	32h, 0,	10h, 1,	96h, 66h, 0BBh
		db 38h,	32h, 0,	10h, 1,	96h, 66h, 0BBh,	38h, 32h, 0, 10h
		db 1, 96h, 66h,	0BBh, 38h, 32h,	0, 10h,	1, 96h,	66h, 0BBh
		db 38h,	32h, 0,	10h, 1,	96h, 66h, 0BBh,	38h, 32h, 0, 10h
		db 1, 96h, 66h,	0BBh, 38h, 32h,	0, 10h,	1, 96h,	66h, 0BBh
		db 38h,	32h, 0,	10h, 1,	96h, 66h, 0BBh,	38h, 32h, 0, 10h
		db 1, 96h, 66h,	0BBh, 38h, 32h,	0, 28h,	0, 18h,	0Bh, 2 dup(0)
		db 6, 3	dup(0),	28h, 0,	78h, 0Bh, 1, 0,	0Bh, 0,	1, 0, 28h
		db 0, 8, 0Ch, 2, 0, 8, 0, 2, 0,	28h, 1,	8, 0Bh,	3, 0, 9
		db 0, 3, 0, 18h, 1, 38h, 0Bh, 4, 0, 0Ch, 0, 4, 0, 28h
		db 1, 68h, 0Bh,	5, 0, 0Eh, 0, 5, 0, 8, 1, 0B8h,	0Bh, 6
		db 0, 0Dh, 0, 6, 0, 78h, 0, 98h, 0Ch, 7, 3 dup(0), 7, 0
		db 68h,	0, 0C8h, 0Ch, 8, 0, 3, 0, 8, 0,	78h, 0,	0F8h, 0Ch
		db 9, 0, 0Ah, 0, 9, 0, 0D8h, 0,	88h, 0Ch, 0Ah, 0, 0Fh
		db 0, 0Ah, 0, 28h, 1, 78h, 0Ch,	0Bh, 0,	1, 0, 0Bh, 0, 0C8h
		db 0, 0C8h, 2 dup(0Ch),	0, 2, 0, 0Ch, 0, 18h, 1, 0A8h
		db 0Ch,	0Dh, 0,	4, 0, 0Dh, 0, 0D8h, 0, 0E8h, 0Ch, 0Eh
		db 0, 5, 0, 0Eh, 0, 28h, 1, 0D8h, 0Ch, 0Fh, 0, 7, 0, 0Fh
		db 0, 0BEh, 26h, 92h, 33h, 0C9h, 80h, 3Ch, 0, 75h, 0Ah
		db 0C6h, 4, 0FFh, 56h, 51h, 0E8h, 0Ah, 0, 59h, 5Eh, 46h
		db 41h,	83h, 0F9h, 5, 7Ch, 0EAh, 0C3h, 8Bh, 0D9h, 89h
		db 0Eh,	0FAh, 0FCh, 0D1h, 0E3h,	8Bh, 87h, 0F4h,	91h, 0D1h
		db 0C8h, 0D1h, 0C8h, 0D1h, 0C8h, 89h, 87h, 0F4h, 91h, 25h
		db 0Fh,	0, 8Bh,	0D8h, 0D1h, 0E0h, 0D1h,	0E0h, 3, 0C3h
		db 0D1h, 0E0h, 0BFh, 2 dup(67h), 3, 0F8h, 2Eh, 8Bh, 5
		db 0A3h, 0E2h, 0FCh, 2Eh, 8Bh, 5Dh, 2, 2Bh, 1Eh, 9Ah, 91h
		db 2Bh,	1Eh, 90h, 91h, 89h, 1Eh, 0E6h, 0FCh, 2Eh, 8Bh
		db 6Dh,	4, 0D1h, 0E5h, 3Eh, 83h, 0BEh, 0D4h, 91h, 0, 75h
		db 7, 3Eh, 0C7h, 86h, 0D4h, 91h, 14h, 0, 2Eh, 8Bh, 55h
		db 6, 89h, 16h,	0EEh, 0FCh, 0C7h, 6, 0EAh, 0FCh, 2 dup(0)
		db 2Eh,	8Bh, 7Dh, 8, 0D1h, 0E7h, 8Bh, 0BDh, 2 dup(0DEh)
		db 0BBh, 0Dh, 67h, 2Eh,	8Bh, 0Fh, 83h, 0C3h, 2,	0E8h, 88h
		db 0A7h, 57h, 0BFh, 4Ah, 90h, 0E8h, 0DBh, 9Eh, 5Fh, 56h
		db 0E8h, 7Ch, 0A7h, 57h, 0BFh, 4Ah, 90h, 0E8h, 0CFh, 9Eh
		db 5Fh,	0C7h, 4, 0Ch, 1, 0C7h, 44h
		db 2, 0ADh, 6Ah, 0C7h, 44h, 4, 61h, 7, 0C7h, 44h, 6, 0C8h
		db 69h,	0A1h, 0EEh, 0FCh, 89h, 44h, 20h, 0C7h, 44h, 48h
		db 2 dup(0), 89h, 7Ch, 38h, 89h, 7Ch, 3Ah, 0A1h, 0E2h
		db 0FCh, 89h, 44h, 12h,	0A1h, 0E6h, 0FCh, 89h, 44h, 16h
		db 0A1h, 0EAh, 0FCh, 89h, 44h, 1Ah, 2Eh, 0A1h, 82h, 62h
		db 89h,	44h, 42h, 0A1h,	0FAh, 0FCh, 89h, 44h, 22h, 0C7h
		db 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0C7h, 44h
		db 34h,	2 dup(0), 0E8h,	1Fh, 0A7h, 57h,	0BFh, 4Ah, 90h
		db 0E8h, 72h, 9Eh, 5Fh,	2Eh, 8Bh, 7, 89h, 4, 0C7h, 44h
		db 2, 0Ah, 6Ah,	0C7h, 44h, 4, 61h, 7, 2Eh, 8Bh,	47h, 2
		db 89h,	44h, 6,	2Eh, 8Bh, 47h, 4, 89h, 44h, 0Ch, 2Eh, 8Bh
		db 47h,	6, 89h,	44h, 34h, 83h, 0C3h, 8,	0A1h, 0EEh, 0FCh
		db 89h,	44h, 20h, 0C7h,	44h, 24h, 1, 0,	0C6h, 44h, 27h
		db 0, 0C7h, 44h, 48h, 2	dup(0),	0C7h, 44h, 0Eh,	2 dup(0)
		db 89h,	7Ch, 38h, 89h, 7Ch, 3Ah, 0A1h, 0E2h, 0FCh, 89h
		db 44h,	12h, 0A1h, 0E6h, 0FCh, 89h, 44h, 16h, 0C7h, 44h
		db 36h,	2 dup(0), 0A1h,	0EAh, 0FCh, 89h, 44h, 1Ah, 0C7h
		db 44h,	42h, 4,	0, 0A1h, 0FAh, 0FCh, 89h, 44h, 22h, 83h
		db 2Eh,	0EAh, 0FCh, 7, 0E8h, 0Eh, 0CCh,	0E2h, 83h, 0E8h
		db 0A2h, 0A6h, 0BFh, 4Ah, 90h, 0E8h, 0F6h, 9Dh,	5Fh, 0C7h
		db 4, 0B8h, 0, 0C7h, 44h, 2, 61h, 7, 0C7h, 44h,	4, 61h
		db 7, 0C7h, 44h, 6, 61h, 7, 0C7h, 44h, 28h, 0E8h, 3, 0C7h
		db 44h,	2Ch, 0E8h, 3, 89h, 7Ch,	46h, 0C7h, 5, 0BCh, 0
		db 0C7h, 45h, 2, 0A8h, 25h, 0C7h, 45h, 4, 61h, 7, 0C7h
		db 45h,	6, 61h,	7, 0C7h, 45h, 28h, 0E8h, 3, 0C7h, 45h
		db 2Ch,	0E8h, 3, 89h, 75h, 44h,	0C3h, 56h, 8Bh,	0F7h, 0E8h
		db 0F2h, 9Dh, 5Eh, 0C3h, 0E8h, 0DEh, 0D7h, 8Bh,	5Ch, 1Ch
		db 2Eh,	8Ah, 87h, 16h, 61h, 98h, 0D1h, 0F8h, 0D1h, 0F8h
		db 3, 44h, 16h,	3Dh, 0C0h, 0, 73h, 1Eh,	89h, 44h, 16h
		db 2Eh,	8Ah, 87h, 56h, 61h, 98h, 0D1h, 0F8h, 0D1h, 0F8h
		db 3, 44h, 12h,	3Dh, 40h, 1, 73h, 9, 89h, 44h, 12h, 0C7h
		db 44h,	4, 53h,	8, 0C3h, 0E8h, 0B7h, 9Dh, 0C3h,	8Bh, 5Ch
		db 22h,	0C6h, 87h, 26h,	92h, 0FFh, 8Bh,	7Ch, 0Ah, 81h
		db 3Dh,	0BCh, 0, 75h, 18h, 8Bh,	5Ch, 20h, 0D1h,	0E3h, 83h
		db 0BFh, 0D4h, 91h, 0, 75h, 6, 0C7h, 87h, 0D4h,	91h, 14h
		db 0, 0E8h, 90h, 9Dh, 0FFh, 64h, 2, 8Bh, 45h, 12h, 89h
		db 44h,	12h, 8Bh, 45h, 16h, 3, 6, 98h, 91h, 89h, 44h, 16h
		db 8Bh,	45h, 1Ch, 89h, 44h, 1Ch, 8Bh, 45h, 1Eh,	89h, 44h
		db 1Eh,	8Bh, 45h, 1Ah, 89h, 44h, 1Ah, 81h, 7Ch,	4, 61h
		db 7, 75h, 0Bh,	83h, 7Ch, 1Ah, 0, 78h, 5, 0C7h,	44h, 4
		db 53h,	8, 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h,	0EBh, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h, 0E3h, 0Eh, 0BFh
		db 8Dh,	6Ah, 81h, 3Ch, 10h, 1, 75h, 3, 0BFh, 9Dh, 6Ah
		db 2Eh,	8Bh, 1,	89h, 44h, 0Ch, 0E9h, 0FCh, 0CAh, 9Fh, 3Bh
		db 0D7h, 3Bh, 9Bh, 39h,	0D3h, 39h, 47h,	3Ah, 7Fh, 3Ah
		db 0F3h, 3Ah, 2Bh, 3Bh,	2Bh, 39h, 63h, 39h, 0BBh, 38h
		db 0F3h, 38h, 2Bh, 39h,	63h, 39h, 0BBh,	38h, 0F3h, 38h
		db 0A1h, 98h, 91h, 1, 44h, 16h,	8Bh, 5Ch, 22h, 0C6h, 87h
		db 26h
		db 92h,	0FFh, 0E8h, 0B3h, 0DDh,	83h, 3Ch, 4, 75h, 3, 0FFh
		db 64h,	2, 0C3h, 0A1h, 0AAh, 91h, 5, 0D0h, 0, 3Bh, 44h
		db 16h,	7Dh, 3,	0E9h, 0A1h, 0, 8Bh, 44h, 12h, 5, 4, 0
		db 89h,	44h, 28h, 5, 18h, 0, 89h, 44h, 2Ch, 8Bh, 44h, 16h
		db 2Bh,	6, 90h,	91h, 5,	4, 0, 89h, 44h,	2Ah, 5,	18h, 0
		db 89h,	44h, 2Eh, 8Bh, 5Ch, 1Ah, 0D1h, 0E3h, 0D1h, 0E3h
		db 0D1h, 0E3h, 0BFh, 7Ah, 6Bh, 81h, 3Ch, 0E0h, 0, 74h
		db 3, 0BFh, 9Ah, 6Bh, 3, 0DFh, 8Bh, 7Ch, 38h, 2Eh, 8Bh
		db 7, 89h, 5, 2Eh, 8Bh,	47h, 2,	89h, 45h, 2, 2Eh, 8Bh
		db 47h,	4, 89h,	45h, 28h, 2Eh, 8Bh, 47h, 6, 89h, 45h, 2Ah
		db 0FFh, 44h, 1Ah, 83h,	64h, 1Ah, 3, 2Eh, 0A0h,	2 dup(62h)
		db 0, 44h, 48h,	73h, 3Eh, 0E8h,	53h, 0D6h, 24h,	3Fh, 88h
		db 44h,	48h, 8Bh, 44h, 12h, 5, 10h, 0, 8Bh, 5Ch, 16h, 2Bh
		db 1Eh,	90h, 91h, 83h, 0C3h, 0Eh, 0B9h,	2, 0, 2Eh, 8Bh
		db 2Eh,	64h, 62h, 0D1h,	0E5h, 2Eh, 8Bh,	0AEh, 56h, 76h
		db 81h,	3Ch, 0E4h, 0, 74h, 6, 0B9h, 6, 0, 2Dh, 10h, 0
		db 2Eh,	8Bh, 16h, 66h, 62h, 0E9h, 5Dh, 0B3h, 0E8h, 47h
		db 9Ch,	0C3h, 1, 3Ch, 81h, 5, 1, 3Eh, 81h, 0Ah,	81h, 3Ch
		db 81h,	5, 81h,	3Eh, 81h, 0Ah, 1, 3Fh, 81h, 5, 1, 42h
		db 81h,	0Ah, 81h, 3Fh, 81h, 5, 81h, 42h, 81h, 0Ah, 0C1h
		db 6, 41h, 3Ch,	0C1h, 0Bh, 41h,	3Eh, 0C1h, 6, 0C1h, 3Ch
		db 0C1h, 0Bh, 0C1h, 3Eh, 0C1h, 6, 41h, 3Fh, 0C1h, 0Bh
		db 41h,	42h, 0C1h, 6, 0C1h, 3Fh, 0C1h, 0Bh, 0C1h, 42h
		db 1, 4Ch, 41h,	4Ch, 1,	4Eh, 41h, 4Eh, 81h, 4Ch, 0C1h
		db 4Ch,	81h, 4Eh, 0C1h,	4Eh, 0A1h, 0AAh, 91h, 5, 0D0h
		db 0, 3Bh, 44h,	16h, 7Dh, 3, 0E9h, 0A6h, 0, 8Bh, 44h, 12h
		db 5, 8, 0, 89h, 44h, 28h, 5, 10h, 0, 89h, 44h,	2Ch, 8Bh
		db 44h,	16h, 2Bh, 6, 90h, 91h, 5, 8, 0,	89h, 44h, 2Ah
		db 5, 10h, 0, 89h, 44h,	2Eh, 8Bh, 5Ch, 1Ah, 83h, 0E3h
		db 0FEh, 0D1h, 0E3h, 0BFh, 0D2h, 6Ch, 81h, 3Ch,	0D8h, 0
		db 74h,	3, 0BFh, 82h, 6Ch, 3, 0DFh, 8Bh, 7Ch, 38h, 2Eh
		db 8Bh,	7, 89h,	5, 2Eh,	8Bh, 47h, 2, 89h, 45h, 2, 83h
		db 7Ch,	1Ah, 0,	75h, 11h, 2Eh, 0A0h, 68h, 62h, 0, 44h
		db 48h,	73h, 53h, 0E8h,	60h, 0D5h, 24h,	3Fh, 88h, 44h
		db 48h,	0FFh, 44h, 1Ah,	83h, 7Ch, 1Ah, 28h, 75h, 6, 0C7h
		db 44h,	1Ah, 2 dup(0), 0C3h, 83h, 7Ch, 1Ah, 18h, 75h, 36h
		db 8Bh,	44h, 12h, 5, 1Ah, 0, 8Bh, 5Ch, 16h, 2Bh, 1Eh, 90h
		db 91h,	83h, 0C3h, 2, 2Eh, 8Bh,	2Eh, 6Ah, 62h, 0D1h, 0E5h
		db 2Eh,	8Bh, 0AEh, 56h,	76h, 0B9h, 2, 0, 81h, 3Ch, 0DCh
		db 0, 74h, 6, 0B9h, 6, 0, 2Dh, 1Ah, 0, 2Eh, 8Bh, 16h, 6Ch
		db 62h,	0E9h, 55h, 0B2h, 0E8h, 3Fh, 9Bh, 0C3h, 41h, 3Ah
		db 81h,	3Ah, 0C1h, 3Ah,	1, 3Bh,	41h, 3Bh, 81h, 3Bh, 0C1h
		db 3Bh,	2 dup(0), 0C1h,	3Bh, 1,	51h, 0C1h, 3Bh,	41h, 51h
		db 0C1h, 3Bh, 81h, 51h,	0C1h, 3Bh, 0C1h, 51h, 0C1h, 3Bh
		db 1, 52h, 0C1h, 3Bh, 41h, 52h,	0C1h, 3Bh, 81h,	52h, 0C1h
		db 3Bh,	0C1h, 52h, 0C1h, 3Bh, 0C1h, 51h, 0C1h, 3Bh, 81h
		db 51h,	0C1h, 3Bh
		db 41h,	51h, 0C1h, 3Bh,	1, 51h,	0C1h, 3Bh, 2 dup(0), 41h
		db 3Bh,	81h, 3Bh, 0C1h,	3Ah, 1,	3Bh, 41h, 3Ah, 81h, 3Ah
		db 81h,	38h, 0C1h, 38h,	1, 39h,	41h, 39h, 81h, 39h, 0C1h
		db 39h,	2 dup(0), 1, 3Ah, 1, 4Fh, 1, 3Ah, 41h, 4Fh, 1
		db 3Ah,	81h, 4Fh, 1, 3Ah, 0C1h,	4Fh, 1,	3Ah, 1,	50h, 1
		db 3Ah,	41h, 50h, 1, 3Ah, 81h, 50h, 1, 3Ah, 0C1h, 50h
		db 1, 3Ah, 0C1h, 4Fh, 1, 3Ah, 81h, 4Fh,	1, 3Ah,	41h, 4Fh
		db 1, 3Ah, 1, 4Fh, 1, 3Ah, 2 dup(0), 1,	3Ah, 81h, 39h
		db 0C1h, 39h, 1, 39h, 41h, 39h,	81h, 38h, 0C1h,	38h, 0A1h
		db 0AAh, 91h, 5, 0D0h, 0, 3Bh, 44h, 16h, 7Dh, 3, 0E9h
		db 0A0h, 0, 8Bh, 44h, 12h, 5, 0Ah, 0, 89h, 44h,	28h, 5
		db 12h,	0, 89h,	44h, 2Ch, 8Bh, 44h, 16h, 2Bh, 6, 90h, 91h
		db 5, 4, 0, 89h, 44h, 2Ah, 5, 18h, 0, 89h, 44h,	2Eh, 8Bh
		db 5Ch,	1Ah, 83h, 0E3h,	0FCh, 0D1h, 0E3h, 0BFh,	0FCh, 6Dh
		db 81h,	3Ch, 0E8h, 0, 74h, 3, 0BFh, 0DCh, 6Dh, 3, 0DFh
		db 8Bh,	7Ch, 38h, 2Eh, 8Bh, 7, 89h, 5, 2Eh, 8Bh, 47h, 2
		db 89h,	45h, 2,	2Eh, 8Bh, 47h, 4, 89h, 45h, 28h, 2Eh, 8Bh
		db 47h,	6, 89h,	45h, 2Ah, 0FFh,	44h, 1Ah, 83h, 64h, 1Ah
		db 0Fh,	2Eh, 0A0h, 6Eh,	62h, 0,	44h, 48h, 73h, 3Eh, 0E8h
		db 0F9h, 0D3h, 24h, 3Fh, 88h, 44h, 48h,	8Bh, 44h, 12h
		db 5, 20h, 0, 8Bh, 5Ch,	16h, 2Bh, 1Eh, 90h, 91h, 83h, 0C3h
		db 0Eh,	2Eh, 8Bh, 2Eh, 70h, 62h, 0D1h, 0E5h, 2Eh, 8Bh
		db 0AEh, 56h, 76h, 0B9h, 2, 0, 81h, 3Ch, 0ECh, 0, 74h
		db 6, 0B9h, 6, 0, 2Dh, 20h, 0, 2Eh, 8Bh, 16h, 72h, 62h
		db 0E9h, 3, 0B1h, 0E8h,	0EDh, 99h, 0C3h, 8 dup(0), 1, 40h
		db 41h,	40h, 1,	43h, 41h, 43h, 81h, 40h, 0C1h, 40h, 81h
		db 43h,	0C1h, 43h, 1, 3	dup(41h), 1, 44h, 41h, 44h, 81h
		db 40h,	0C1h, 40h, 81h,	43h, 0C1h, 43h,	81h, 41h, 0C1h
		db 41h,	81h, 44h, 0C1h,	44h, 1,	45h, 41h, 45h, 1, 48h
		db 41h,	48h, 81h, 45h, 0C1h, 45h, 81h, 48h, 0C1h, 48h
		db 1, 45h, 41h,	45h, 1,	48h, 41h, 48h, 1, 4Bh, 41h, 4Bh
		db 1, 4Dh, 41h,	4Dh, 81h, 4Bh, 0C1h, 4Bh, 81h, 4Dh, 0C1h
		db 4Dh,	0A1h, 0AAh, 91h, 5, 0D0h, 0, 2Bh, 6, 90h, 91h
		db 3Bh,	44h, 16h, 7Dh, 3, 0E9h,	0ADh, 0, 0E8h, 70h, 0D3h
		db 0A1h, 98h, 91h, 1, 44h, 16h,	83h, 7Ch, 1Ah, 0, 75h
		db 3, 0E9h, 80h, 0, 8Bh, 44h, 16h, 2Bh,	6, 16h,	9Fh, 3Dh
		db 0Ah,	0, 7Fh,	75h, 3Dh, 0E2h,	0FFh, 7Ch, 70h,	0E8h, 2Dh
		db 0D3h, 3Ch, 32h, 73h,	69h, 0C7h, 44h,	1Ah, 2 dup(0)
		db 0E8h, 6Ch, 99h, 0BFh, 96h, 90h, 0E8h, 6, 99h, 0BFh
		db 0FDh, 64h, 81h, 3Ch,	0D4h, 0, 74h, 3, 0BFh, 0D7h, 64h
		db 2Eh,	8Bh, 5,	89h, 44h, 0Ch, 83h, 0C7h, 2, 2Eh, 8Bh
		db 5, 89h, 44h,	0Eh, 83h, 0C7h,	2, 89h,	7Ch, 10h, 0C7h
		db 6, 0FEh, 0FCh, 2, 0,	2Eh, 8Bh, 2Eh, 74h, 62h, 0D1h
		db 0E5h, 2Eh, 8Bh, 0AEh, 56h, 76h, 8Bh,	44h, 12h, 8Bh
		db 5Ch,	16h, 83h, 0C3h,	7, 0B9h, 5, 0, 81h, 3Ch, 0D4h
		db 0, 74h, 3, 0B9h, 1, 0, 3, 0Eh, 0FEh,	0FCh, 2Eh, 8Bh
		db 16h,	76h, 62h, 0E8h,	9
		db 0B0h, 0FFh, 0Eh, 0FEh, 0FCh,	79h, 0CDh, 0C3h, 8Bh, 44h
		db 1Ah,	1, 44h,	16h, 1,	44h, 22h, 74h, 8, 8Bh, 44h, 22h
		db 3Bh,	44h, 1Ch, 75h, 3, 0F7h,	5Ch, 1Ah, 0E8h,	9Fh, 0C6h
		db 0C3h, 0E8h, 0D2h, 98h, 0C3h,	0D1h, 0E3h, 2Eh, 0FFh
		db 0A7h, 0F6h, 6Eh, 0CEh, 35h, 7Fh, 6Fh, 0, 6Fh, 0E0h
		db 6Fh,	5Bh, 70h, 8Bh, 0FEh, 0B8h, 0E0h, 0, 83h, 7Dh, 0Ch
		db 0, 75h, 3, 0B8h, 0E4h, 0, 0BBh, 0C7h, 6Ah, 0E8h, 15h
		db 0C6h, 0C7h, 44h, 6, 76h, 3Bh, 2Eh, 0A1h, 7Ah, 62h, 89h
		db 44h,	24h, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h
		db 3, 0BBh, 9Ah, 6Bh, 0BDh, 0C2h, 6Bh, 83h, 7Dh, 0Ch, 0
		db 74h,	0Eh, 0BBh, 7Ah,	6Bh, 0BDh, 0BAh, 6Bh, 83h, 44h
		db 38h,	2, 83h,	44h, 12h, 10h, 89h, 5Ch, 0Ch, 89h, 6Ch
		db 10h,	83h, 6Ch, 38h, 2, 83h, 6Ch, 12h, 10h, 8Bh, 7Ch
		db 38h,	2Eh, 8Bh, 7, 89h, 5, 2Eh, 8Bh, 47h, 2, 89h, 45h
		db 2, 2Eh, 8Bh,	47h, 4,	89h, 45h, 28h, 2Eh, 8Bh, 47h, 6
		db 89h,	45h, 2Ah, 0C7h,	44h, 34h, 64h, 0, 0C7h,	44h, 30h
		db 1, 0, 0C7h, 44h, 32h, 1, 0, 0C3h, 8Bh, 0FEh,	0B8h, 0E8h
		db 0, 83h, 7Dh,	0Ch, 0,	75h, 3,	0B8h, 0ECh, 0, 0BBh, 22h
		db 6Dh,	0E8h, 96h, 0C5h, 0C7h, 44h, 6, 76h, 3Bh, 2Eh, 0A1h
		db 7Ch,	62h, 89h, 44h, 24h, 0C7h, 44h, 28h, 0E8h, 3, 0C7h
		db 44h,	2Ch, 0E8h, 3, 0BBh, 0DCh, 6Dh, 0BDh, 24h, 6Eh
		db 83h,	7Dh, 0Ch, 0, 74h, 6, 0BBh, 0FCh, 6Dh, 0BDh, 1Ch
		db 6Eh,	8Bh, 7Ch, 38h, 89h, 5Ch, 0Ch, 89h, 6Ch,	10h, 2Eh
		db 8Bh,	7, 89h,	5, 2Eh,	8Bh, 47h, 2, 89h, 45h, 2, 0C7h
		db 44h,	34h, 64h, 0, 0C7h, 44h,	30h, 1,	0, 0C7h, 44h, 32h
		db 1, 0, 0C3h, 8Bh, 0FEh, 0B8h,	0D8h, 0, 83h, 7Dh, 0Ch
		db 0, 75h, 3, 0B8h, 0DCh, 0, 0BBh, 0CAh, 6Bh, 0E8h, 35h
		db 0C5h, 0C7h, 44h, 6, 76h, 3Bh, 2Eh, 0A1h, 7Eh, 62h, 89h
		db 44h,	24h, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h
		db 3, 0BBh, 4Bh, 70h, 83h, 7Dh,	0Ch, 0,	74h, 3,	0BBh, 53h
		db 70h,	8Bh, 7Ch, 38h, 89h, 5Ch, 0Ch, 0C7h, 44h, 10h, 0D4h
		db 6Dh,	2Eh, 8Bh, 7, 89h, 5, 2Eh, 8Bh, 47h, 2, 89h, 45h
		db 2, 2Eh, 8Bh,	47h, 4,	89h, 45h, 28h, 2Eh, 8Bh, 47h, 6
		db 89h,	45h, 2Ah, 0C7h,	44h, 34h, 64h, 0, 0C7h,	44h, 30h
		db 1, 0, 0C7h, 44h, 32h, 1, 0, 0C3h, 41h, 3Ah, 81h, 3Ah
		db 81h,	3Dh, 0C1h, 3Dh,	81h, 38h, 0C1h,	38h, 1,	3Dh, 41h
		db 3Dh,	56h, 0E8h, 0C3h, 9Fh, 0BFh, 4Ah, 90h, 0E8h, 17h
		db 97h,	5Fh, 0C7h, 4, 0D4h, 0, 0BBh, 0E7h, 64h,	83h, 7Dh
		db 0Ch,	0, 75h,	7, 0C7h, 4, 0D0h, 0, 0BBh, 0C1h, 64h, 0C7h
		db 44h,	2, 2Ch,	6Eh, 0C7h, 44h,	4, 53h,	8, 2Eh,	8Bh, 7
		db 89h,	44h, 0Ch, 83h, 0C3h, 2,	2Eh, 8Bh, 7, 89h, 44h
		db 0Eh,	83h, 0C3h, 2, 89h, 5Ch,	10h, 0C7h, 44h,	6, 0A7h
		db 3Ah,	2Eh, 0A1h, 80h,	62h, 89h, 44h, 24h, 0C6h, 44h
		db 27h,	0FFh, 0C7h, 44h, 34h, 0FAh, 0, 0C7h, 44h, 48h
		db 2 dup(0), 8Bh, 45h, 8, 2Dh, 8, 0, 83h, 7Dh, 0Ch, 0
		db 74h,	3, 5, 10h, 0, 89h, 44h,	12h, 8Bh, 45h, 0Ah, 2Dh
		db 8
		db 0, 2Bh, 6, 90h, 91h,	89h, 44h, 16h, 0C7h, 44h, 1Ah
		db 2 dup(0FFh),	8Bh, 5Dh, 6, 0D1h, 0E3h, 0D1h, 0E3h, 0D1h
		db 0E3h, 0D1h, 0E3h, 89h, 5Ch, 1Ch, 89h, 5Ch, 22h, 0C7h
		db 44h,	36h, 2 dup(0), 0E8h, 99h, 0C4h,	0C3h, 0D1h, 0E3h
		db 2Eh,	0FFh, 0A7h, 0F8h, 70h, 60h, 33h, 0Eh, 71h, 14h
		db 71h,	1Ah, 71h, 20h, 71h, 26h, 71h, 2Ch, 71h,	32h, 71h
		db 38h,	71h, 3Eh, 71h, 44h, 71h, 0BBh, 85h, 62h, 0E9h
		db 75h,	0C2h, 0BBh, 97h, 62h, 0E9h, 6Fh, 0C2h, 0BBh, 0A9h
		db 62h,	0E9h, 69h, 0C2h, 2 dup(0BBh), 62h, 0E9h, 63h, 0C2h
		db 0BBh, 0CDh, 62h, 0E9h, 5Dh, 0C2h, 0BBh, 0DFh, 62h, 0E9h
		db 57h,	0C2h, 0BBh, 0F1h, 62h, 0E9h, 51h, 0C2h,	0BBh, 13h
		db 63h,	0E9h, 4Bh, 0C2h, 0BBh, 25h, 63h, 0E9h, 45h, 0C2h
		db 0BBh, 37h, 63h, 0E9h, 3Fh, 0C2h, 33h, 0C0h, 0C3h, 80h
		db 3Eh,	2Bh, 92h, 0, 74h, 54h, 50h, 0A1h, 0B4h,	8Eh, 0A3h
		db 0E2h, 0FCh, 0A1h, 0B6h, 8Eh,	0A3h, 0E6h, 0FCh, 0A1h
		db 0B8h, 8Eh, 0A3h, 0EAh, 0FCh,	0A1h, 0BAh, 8Eh, 0A3h
		db 0EEh, 0FCh, 0C7h, 6,	0F2h, 0FCh, 98h, 0, 0C7h, 6, 0FAh
		db 0FCh, 0A7h, 0, 8Bh, 45h, 16h, 0A3h, 0F6h, 0FCh, 0A1h
		db 90h,	91h, 29h, 6, 0F6h, 0FCh, 83h, 6, 0F6h, 0FCh, 44h
		db 0A1h, 0F6h, 0FCh, 0A3h, 0FEh, 0FCh, 83h, 6, 0FEh, 0FCh
		db 0Eh,	0E8h, 96h, 9Dh,	74h, 0Ch, 58h, 0C7h, 45h, 4, 69h
		db 75h,	29h, 45h, 24h, 76h, 3, 0C3h, 58h, 0C3h,	0C6h, 6
		db 2Bh,	92h, 0,	56h, 8Bh, 0F7h,	0E8h, 0Ch, 96h,	0B9h, 8
		db 0, 0E8h, 2Ah, 0A4h, 0B9h, 13h, 0, 0B8h, 2 dup(0), 0BBh
		db 2 dup(0), 0BAh, 40h,	1, 0BFh, 0C0h, 0, 0BDh,	4Ch, 12h
		db 0E8h, 0B9h, 0A3h, 8Bh, 36h, 54h, 90h, 0E8h, 8Ah, 0C5h
		db 5Eh,	0C6h, 6, 61h, 8Fh, 0FFh, 0C3h, 80h, 3Eh, 2Bh, 92h
		db 0, 75h, 3, 0E9h, 0D9h, 0, 8Bh, 7Ch, 10h, 8Bh, 45h, 12h
		db 89h,	44h, 12h, 8Bh, 45h, 14h, 89h, 44h, 14h,	8Bh, 45h
		db 16h,	89h, 44h, 16h, 8Bh, 45h, 18h, 89h, 44h,	18h, 8Bh
		db 45h,	1Ch, 89h, 44h, 1Ch, 8Bh, 45h, 1Eh, 89h,	44h, 1Eh
		db 8Bh,	45h, 3Ch, 89h, 44h, 3Ch, 8Bh, 45h, 3Eh,	89h, 44h
		db 3Eh,	8Bh, 45h, 40h, 89h, 44h, 40h, 8Bh, 45h,	42h, 89h
		db 44h,	42h, 83h, 3Dh, 50h, 75h, 19h, 0C7h, 44h, 12h, 0A0h
		db 0, 0C7h, 44h, 14h, 2	dup(0),	83h, 44h, 16h, 60h, 0C7h
		db 44h,	18h, 2 dup(0), 0A1h, 90h, 91h, 29h, 44h, 16h, 0C7h
		db 44h,	1Ah, 64h, 0, 0E8h, 0C2h, 0D5h, 83h, 7Ch, 42h, 0
		db 74h,	63h, 81h, 3Ch, 0, 1, 75h, 5Ah, 0A1h, 12h, 9Fh
		db 2Bh,	44h, 12h, 8Bh, 1Eh, 16h, 9Fh, 2Bh, 5Ch,	16h, 0E8h
		db 28h,	0A9h, 89h, 44h,	1Ch, 8Bh, 0D8h,	0D1h, 0E3h, 2Eh
		db 8Bh,	87h, 0ECh, 76h,	89h, 44h, 0Ch, 83h, 7Ch, 42h, 0Bh
		db 7Ch,	35h, 80h, 44h, 48h, 0Fh, 73h, 2Fh, 0E8h, 0Bh, 0CFh
		db 25h,	3Fh, 0,	88h, 44h, 48h, 8Bh, 44h, 12h, 8Bh, 5Ch
		db 16h,	8Bh, 4Ch, 1Ch, 0BAh, 4,	0, 0E8h, 38h, 0ACh, 0BDh
		db 49h,	65h, 2Eh, 8Bh, 46h, 0, 89h, 45h, 0Ch, 2Eh, 8Bh
		db 46h,	2, 89h,	45h, 0Eh, 83h, 0C5h, 4,	89h, 6Dh, 10h
		db 0E9h, 0D4h, 0C2h, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h
		db 2Ch,	0E8h, 3, 0C3h, 0E8h, 0FDh, 94h,	0C3h, 81h, 3Eh
		db 90h,	91h, 0C0h, 1, 7Eh, 3, 0E9h, 46h, 2, 80h, 3Eh
		db 2Bh,	92h, 0,	74h, 3,	0E9h, 91h, 0, 0C6h, 6, 2Bh, 92h
		db 0FFh, 0B9h, 7, 0, 8Bh, 0EEh,	56h, 0E8h, 3Bh,	9Dh, 8Bh
		db 0FEh, 5Eh, 83h, 0F9h, 7, 75h, 0Eh, 56h, 8Bh,	0F7h, 0BFh
		db 4Ah,	90h, 0E8h, 84h,	94h, 8Bh, 0FEh,	5Eh, 0EBh, 0Bh
		db 56h,	8Bh, 0F7h, 8Bh,	0FDh, 0E8h, 77h, 94h, 8Bh, 0FEh
		db 5Eh,	0C7h, 5, 0FCh, 0, 85h, 0C9h, 75h, 4, 0C7h, 5, 0
		db 1, 0C7h, 45h, 2, 0DDh, 71h, 0C7h, 45h, 4, 53h, 8, 0C7h
		db 45h,	6, 99h,	3Ah, 0C7h, 45h,	0Ch, 0Fh, 2Eh, 0C7h, 45h
		db 0Eh,	2 dup(0), 0C7h,	45h, 48h, 2 dup(0), 89h, 6Dh, 10h
		db 8Bh,	0EFh, 0C6h, 45h, 27h, 0, 0C6h, 45h, 4Ah, 0FFh
		db 0C7h, 45h, 16h, 9Ch,	0FFh, 0C7h, 45h, 28h, 0E8h, 3
		db 0C7h, 45h, 2Ch, 0E8h, 3, 49h, 79h, 92h, 0C7h, 44h, 1Ch
		db 2 dup(0), 0C7h, 44h,	1Eh, 2 dup(0), 0C7h, 44h, 3Ch
		db 2 dup(0), 0C7h, 44h,	3Eh, 2 dup(0), 0C7h, 44h, 40h
		db 2 dup(0), 81h, 3Eh, 0AAh, 91h, 0C0h,	1, 7Fh,	6, 0C7h
		db 6, 0AAh, 91h, 0C0h, 1, 0C7h,	44h, 28h, 80h, 0, 0C7h
		db 44h,	2Ch, 0C8h, 0, 8Bh, 44h,	16h, 2Bh, 6, 90h, 91h
		db 5, 4, 0, 89h, 44h, 2Ah, 5, 50h, 0, 89h, 44h,	2Eh, 83h
		db 7Ch,	1Ah, 0,	75h, 1Bh, 0B8h,	30h, 0,	39h, 6,	90h, 91h
		db 7Eh,	3, 0E9h, 0Ch, 1, 0C7h, 44h, 1Ah, 1, 0, 0C7h, 44h
		db 20h,	2 dup(0), 0C7h,	44h, 22h, 0AAh,	0, 83h,	7Ch, 1Ah
		db 0, 78h, 17h,	83h, 7Ch, 42h, 0Bh, 7Dh, 1Ah, 83h, 7Ch
		db 42h,	0, 75h,	6, 0C7h, 6, 8Ah, 8Eh, 1, 0, 0FFh, 44h
		db 42h,	0EBh, 9, 83h, 7Ch, 42h,	0, 74h,	3, 0FFh, 4Ch, 42h
		db 0FFh, 44h, 1Ah, 74h,	0FBh, 83h, 7Ch,	1Ah, 64h, 7Ch
		db 5, 0C7h, 44h, 1Ah, 0D8h, 0FFh, 0A1h,	9Ch, 91h, 25h
		db 7Fh,	0, 0A9h, 40h, 0, 74h, 5, 2Dh, 7Fh, 0, 0F7h, 0D8h
		db 98h,	5, 20h,	0, 89h,	44h, 1Ch, 0A1h,	9Ch, 91h, 5, 50h
		db 0, 25h, 0FFh, 0, 0A9h, 80h, 0, 74h, 2, 0F6h,	0D0h, 2Dh
		db 40h,	0, 99h,	8Ah, 0F2h, 8Ah,	0D4h, 8Ah, 0E0h, 32h, 0C0h
		db 0D0h, 0E4h, 0D1h, 0D2h, 0D0h, 0E4h, 0D1h, 0D2h, 89h
		db 44h,	3Ch, 89h, 54h, 3Eh, 0A1h, 9Ch, 91h, 5, 0A0h, 0
		db 25h,	0FFh, 1, 0A9h, 0, 1, 74h, 3, 35h, 0FFh,	1, 2Dh
		db 80h,	0, 0B1h, 5, 0D3h, 0E0h,	89h, 44h, 40h, 8Bh, 44h
		db 20h,	3, 44h,	16h, 3Dh, 10h, 0, 7Dh, 8, 0B8h,	10h, 0
		db 0C7h, 44h, 22h, 2 dup(0), 3Dh, 0E0h,	1, 7Eh,	8, 0B8h
		db 0E0h, 1, 0C7h, 44h, 22h, 2 dup(0), 89h, 44h,	16h, 0FFh
		db 4Ch,	22h, 79h, 39h, 83h, 7Ch, 20h, 0FFh, 75h, 0Ch, 0C7h
		db 44h,	20h, 2 dup(0), 0C7h, 44h, 22h, 0AAh, 0,	0EBh, 27h
		db 83h,	7Ch, 20h, 1, 75h, 0Ch, 0C7h, 44h, 20h, 2 dup(0)
		db 0C7h, 44h, 22h, 3Ch,	0, 0EBh, 15h, 0C7h, 44h, 22h, 32h
		db 0, 0C7h, 44h, 20h, 1, 0, 83h, 7Ch, 16h, 10h,	74h, 5
		db 0C7h, 44h, 20h, 2 dup(0FFh),	0B8h, 1Eh, 0, 2Bh, 44h
		db 24h,	0, 6, 0FEh, 91h, 8Bh, 1Eh, 9Ch,	91h, 83h, 0E3h
		db 0Ch,	0D1h, 0EBh, 2Eh, 8Bh, 9Fh, 0E4h, 76h, 0BFh, 9Eh
		db 76h,	2Eh, 8Bh, 7, 2Eh, 89h, 5, 2Eh, 8Bh, 47h, 2, 2Eh
		db 89h,	45h, 2,	83h, 0C7h, 4, 83h, 0C3h, 4, 2Eh, 8Bh, 7
		db 2Eh,	89h, 5
		db 2Eh,	8Bh, 47h, 2, 2Eh, 89h, 45h, 2, 83h, 0C3h, 4, 83h
		db 0C7h, 8, 2Eh, 8Bh, 7, 2Eh, 89h, 5, 2Eh, 8Bh,	47h, 2
		db 2Eh,	89h, 45h, 2, 83h, 0C7h,	4, 83h,	0C3h, 4, 2Eh, 8Bh
		db 7, 2Eh, 89h,	5, 2Eh,	8Bh, 47h, 2, 2Eh, 89h, 45h, 2
		db 83h,	7Ch, 1Ah, 0, 74h, 1, 0C3h, 0C7h, 44h, 28h, 0E8h
		db 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0C3h, 81h, 3Eh, 90h, 91h
		db 80h,	2, 7Dh,	40h, 0B8h, 6, 0, 0BBh, 7, 0, 8Bh, 54h
		db 16h,	2Bh, 16h, 90h, 91h, 0B9h, 38h, 0, 56h, 0BEh, 60h
		db 76h,	0E8h, 2, 94h, 5Eh, 8Bh,	1Eh, 0FEh, 91h,	0D1h, 0EBh
		db 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h
		db 0E3h, 6, 0B9h, 98h, 0, 8Bh, 54h, 16h, 2Bh, 16h, 90h
		db 91h,	83h, 0C2h, 42h,	56h, 2Eh, 8Bh, 0B7h, 0FCh, 76h
		db 0E8h, 0Eh, 93h, 5Eh,	0C3h, 0C7h, 44h, 4, 20h, 75h, 81h
		db 3Eh,	90h, 91h, 80h, 2, 7Dh, 18h, 0B8h, 6, 0,	0BBh, 7
		db 0, 8Bh, 54h,	16h, 2Bh, 16h, 90h, 91h, 0B9h, 38h, 0
		db 56h,	0BEh, 60h, 76h,	0E8h, 0D6h, 93h, 5Eh, 0C3h, 0C7h
		db 6, 0ACh, 8Eh, 0B8h, 0Bh, 0C7h, 6, 0AEh, 8Eh,	58h, 2
		db 0C7h, 6, 0A8h, 91h, 2 dup(0), 0C7h, 6, 0AAh,	91h, 0FFh
		db 11h,	0C6h, 6, 2Ch, 92h, 0, 0C7h, 6, 0FEh, 91h, 2 dup(0)
		db 0E8h, 6Dh, 9Ah, 0BFh, 4Ah, 90h, 0E8h, 0C1h, 91h, 0C7h
		db 4, 50h, 0, 0C7h, 44h, 2, 0C4h, 72h, 0C7h, 44h, 4, 20h
		db 75h,	0C7h, 44h, 6, 4Dh, 71h,	0C7h, 44h, 48h,	2 dup(0)
		db 0C6h, 44h, 4Ah, 0FFh, 0C6h, 44h, 4Bh, 0FFh, 0C7h, 44h
		db 16h,	10h, 0,	2Eh, 0A1h, 78h,	62h, 89h, 44h, 24h, 0C7h
		db 44h,	1Ah, 2 dup(0), 0C7h, 44h, 42h, 2 dup(0), 0C6h
		db 6, 2Bh, 92h,	0, 0C6h, 6, 26h, 92h, 0, 0C6h, 6, 27h
		db 92h,	0, 0C6h, 6, 28h, 92h, 0, 0C6h, 6, 29h, 92h, 0
		db 0C6h, 6, 2Ah, 92h, 0, 0BFh, 0D4h, 91h, 0B9h,	10h, 0
		db 33h,	0C0h, 0F3h, 0ABh, 0C7h,	6, 0F4h, 91h, 72h, 0D2h
		db 0C7h, 6, 0F6h, 91h, 4Ah, 6Ah, 0C7h, 6, 0F8h,	91h, 5Dh
		db 0BAh, 0C7h, 6, 0FAh,	91h, 12h, 25h, 0C7h, 6,	0FCh, 91h
		db 1Ah,	0E5h, 0B8h, 1, 0, 33h, 0D2h, 0F7h, 26h,	1Ah, 99h
		db 0A3h, 76h, 8Eh, 0B8h, 2, 0, 33h, 0D2h, 0F7h,	26h, 1Ah
		db 99h,	0A3h, 78h, 8Eh,	0C7h, 6, 72h, 8Eh, 63h,	34h, 0C3h
		db 2Bh,	34h, 63h, 34h, 0D1h, 20h, 36h, 68h, 5Ah, 68h, 0C1h
		db 1Ch,	1, 1Dh,	41h, 1Dh, 81h, 1Dh, 0C1h, 1Dh, 1, 1Eh
		db 41h,	21h, 80h, 21h, 0C0h, 21h, 0, 22h, 40h, 22h, 81h
		db 22h,	0C1h, 25h, 0, 26h, 40h,	26h, 80h, 26h, 0C0h, 26h
		db 1, 27h, 41h,	2Ah, 81h, 2Ah, 0C0h, 2Ah, 0, 2Bh, 40h
		db 2Bh,	81h, 2Bh, 0C1h,	2Eh, 1,	2Fh, 41h, 2Fh, 80h, 2Fh
		db 0C0h, 2Fh, 1, 30h, 2	dup(0),	41h, 33h, 81h, 33h, 0C1h
		db 33h,	1, 34h,	41h, 34h, 2 dup(0), 81h, 37h, 0C1h, 37h
		db 1, 38h, 41h,	38h, 2 dup(0), 41h, 33h, 81h, 33h, 0C1h
		db 33h,	1, 34h,	81h, 37h, 0C1h,	37h, 1,	38h, 41h, 38h
		db 1, 46h, 40h,	46h, 80h, 46h, 0C1h, 46h, 1, 49h, 41h
		db 49h,	81h, 49h, 0C1h,	49h, 1,	47h, 41h, 47h, 81h, 47h
		db 0C1h, 47h, 1, 4Ah, 41h, 4Ah,	81h, 4Ah, 0C1h,	4Ah, 0B4h
		db 76h
		db 0C4h, 76h, 0D4h, 76h, 0C4h, 76h, 6Bh, 31h, 0BBh, 30h
		db 0Bh,	30h, 5Bh, 2Fh, 0ABh, 2Eh, 7Bh, 33h, 0CBh, 32h
		db 1Bh,	32h, 3Bh, 4Fh, 0EBh, 4Fh, 9Bh, 50h, 0EBh, 4Fh
		db 0Ch dup(0), 6, 0, 4,	0, 10h,	0, 1, 0, 6, 0, 6, 0, 4
		db 0, 2, 0, 2, 0, 8, 0,	2, 0, 6, 0, 1, 0, 8, 0,	4Bh, 0
		db 0Ch,	0, 30h,	0, 0Ah,	0, 7, 0, 0C8h, 0, 90h, 1, 0Bh
		db 48h,	53h, 8,	0A7h, 3Ah, 0A2h, 77h, 2, 0, 0FFh, 3 dup(0)
		db 0CCh, 0, 90h, 1, 0Bh, 48h, 53h, 8, 0A7h, 3Ah, 0B0h
		db 77h,	2, 0, 0FFh, 3 dup(0), 0D0h, 0, 2Ch, 1, 0Bh, 48h
		db 53h,	8, 0A7h, 3Ah, 0C6h, 77h, 1, 5 dup(0), 0D4h, 0
		db 0C8h, 0, 0Bh, 48h, 53h, 8, 0A7h, 3Ah, 0E4h, 77h, 1
		db 5 dup(0), 0D8h, 0, 96h, 0, 0Bh, 48h,	53h, 8,	0A7h, 3Ah
		db 0FAh, 77h, 1, 5 dup(0), 0DCh, 0, 64h, 0, 0Bh, 48h, 53h
		db 8, 0A7h, 3Ah, 18h, 78h, 1, 5	dup(0),	35h, 16h, 1, 0
		db 0C5h, 18h, 1, 3 dup(0), 0E2h, 41h, 0A2h, 77h, 0F5h
		db 0Bh,	3, 0, 85h, 0Eh,	3, 0, 15h, 11h,	3, 0, 0A5h, 13h
		db 3, 3	dup(0),	0E2h, 41h, 0B0h, 77h, 13h, 47h,	2, 0, 0C3h
		db 47h,	2, 0, 73h, 48h,	2, 0, 23h, 49h,	2, 0, 0D3h, 49h
		db 2, 0, 83h, 4Ah, 2, 3	dup(0),	0E2h, 41h, 0C6h, 77h, 33h
		db 4Bh,	1, 0, 0E3h, 4Bh, 1, 0, 93h, 4Ch, 1, 0, 0E3h, 4Bh
		db 1, 3	dup(0),	0E2h, 41h, 0E4h, 77h, 43h, 4Dh,	1, 0, 0F3h
		db 4Dh,	1, 0, 8Fh, 4Eh,	1, 0, 2Bh, 4Fh,	1, 0, 0DBh, 4Fh
		db 1, 0, 77h, 50h, 1, 3	dup(0),	0E2h, 41h, 0FAh, 77h, 0D1h
		db 54h,	1, 0, 63h, 55h,	1, 0, 0FFh, 55h, 1, 0, 0A5h, 56h
		db 1, 0, 5, 57h, 1, 0, 65h, 57h, 1, 0, 0C5h, 57h, 1, 0
		db 6Bh,	58h, 1,	3 dup(0), 0E2h,	41h, 18h, 78h, 29h, 0
		db 3, 0, 69h, 2, 3, 3 dup(0), 0E2h, 41h, 3Eh, 78h, 69h
		db 2, 1, 0, 0BDh, 4, 3,	0, 11h,	7, 3, 0, 65h, 9, 2 dup(0)
		db 7, 59h, 2 dup(0), 0A3h, 59h,	3, 0, 3Fh, 5Ah,	3, 0, 0DBh
		db 5Ah,	2 dup(0), 0C5h,	2Ch, 2,	0, 15h,	2Ch, 2,	0, 65h
		db 2Bh,	2, 0, 0B5h, 2Ah, 2, 0, 5, 2Ah, 2, 0, 0D5h, 2Eh
		db 2, 0, 25h, 2Eh, 2, 0, 75h, 2Dh, 2, 3	dup(0),	0E2h, 41h
		db 6Ch,	78h, 0B5h, 34h,	2, 0, 5Bh, 35h,	2, 0, 0Bh, 36h
		db 2, 0, 0BBh, 36h, 2, 0, 0B5h,	34h, 2,	0, 5Bh,	35h, 2
		db 0, 0Bh, 36h,	2, 0, 0BBh, 36h, 2, 3 dup(0), 0E2h, 41h
		db 92h,	78h, 85h, 2Fh, 2, 0, 0Fh, 34h, 2, 0, 73h, 33h
		db 2, 0, 0CDh, 32h, 2, 0, 1Dh, 32h, 2, 0, 77h, 31h, 2
		db 0, 0DBh, 30h, 2, 0, 35h, 30h, 2, 3 dup(0), 0E2h, 41h
		db 0B8h, 78h, 6Bh, 37h,	2, 0, 1Bh, 38h,	2, 0, 0CBh, 38h
		db 2, 0, 1Bh, 38h, 2, 3	dup(0),	0E2h, 41h, 0DEh, 78h, 1Bh
		db 38h,	2, 0, 7Bh, 39h,	2, 0, 2Bh, 3Ah,	2, 0, 0DBh, 3Ah
		db 2, 0, 8Bh, 3Bh, 2, 0, 3Bh, 3Ch, 2, 0, 3Bh, 3Ch, 2, 0
		db 0E1h, 3Ch, 2, 3 dup(0), 0E2h, 41h, 0Ch, 79h,	87h, 3Dh
		db 2, 0, 37h, 3Eh
		db 2, 3	dup(0),	0E2h, 41h, 1Ah,	79h, 0E7h, 3Eh,	2, 0, 97h
		db 3Fh,	2, 3 dup(0), 0E2h, 41h,	28h, 79h, 47h, 40h, 2
		db 0, 0F7h, 40h, 2, 3 dup(0), 0E2h, 41h, 36h, 79h, 0A7h
		db 41h,	2, 0, 4Dh, 42h,	2, 3 dup(0), 0E2h, 41h,	44h, 79h
		db 0F3h, 42h, 2, 0, 0A3h, 43h, 2, 3 dup(0), 0E2h, 41h
		db 52h,	79h, 53h, 44h, 2, 0, 3,	45h, 2,	3 dup(0), 0E2h
		db 41h,	60h, 79h, 0B3h,	45h, 2,	0, 63h,	46h, 2,	3 dup(0)
		db 0E2h, 41h, 6Eh, 79h,	0BBh, 1Ch, 1, 0, 33h, 1Ch, 1, 0
		db 8Dh,	1Bh, 1,	0, 33h,	1Ch, 1,	3 dup(0), 0E2h,	41h, 7Ch
		db 79h,	67h, 1Eh, 1, 0,	0D5h, 1Dh, 1, 0, 25h, 1Dh, 1, 0
		db 0D5h, 1Dh, 1, 3 dup(0), 0E2h, 41h, 92h, 79h,	4Fh, 20h
		db 1, 0, 9Fh, 1Fh, 1, 0, 0EFh, 1Eh, 1, 0, 9Fh, 1Fh, 1
		db 3 dup(0), 0E2h, 41h,	0A8h, 79h, 41h,	22h, 1,	0, 0AFh
		db 21h,	1, 0, 0FFh, 20h, 1, 0, 0AFh, 21h, 1, 3 dup(0)
		db 0E2h, 41h, 0BEh, 79h, 0F7h, 23h, 1, 0, 6Fh, 23h, 1
		db 0, 0C9h, 22h, 1, 0, 6Fh, 23h, 1, 3 dup(0), 0E2h, 41h
		db 0D4h, 79h, 0A3h, 25h, 1, 0, 11h, 25h, 1, 0, 61h, 24h
		db 1, 0, 11h, 25h, 1, 3	dup(0),	0E2h, 41h, 0EAh, 79h, 8Bh
		db 27h,	1, 0, 0DBh, 26h, 1, 0, 2Bh, 26h, 1, 0, 0DBh, 26h
		db 1, 3	dup(0),	0E2h, 41h, 0, 7Ah, 7Dh,	29h, 1,	0, 0EBh
		db 28h,	1, 0, 3Bh, 28h,	1, 0, 0EBh, 28h, 1, 3 dup(0), 0E2h
		db 41h,	16h, 7Ah, 0E7h,	5Dh, 2,	0, 97h,	5Eh, 2,	0, 33h
		db 5Fh,	2, 0, 0BBh, 5Fh, 2, 0, 33h, 5Fh, 2, 0, 97h, 5Eh
		db 2, 3	dup(0),	0E2h, 41h, 2Ch,	7Ah, 41h, 51h, 2, 0, 0F1h
		db 51h,	1, 0, 8Dh, 52h,	2 dup(0), 8Bh, 5Bh, 2, 0, 3Bh
		db 5Ch,	2, 0, 0D7h, 5Ch, 2, 0, 5Fh, 5Dh, 2, 0, 0D7h, 5Ch
		db 2, 0, 3Bh, 5Ch, 2, 3	dup(0),	0E2h, 41h, 56h,	7Ah, 21h
		db 54h,	2, 0, 85h, 53h,	1, 0, 25h, 53h,	2 dup(0), 57h
		db 60h,	1, 0, 57h, 61h,	1, 0, 57h, 62h,	1, 3 dup(0), 0E2h
		db 41h,	80h, 7Ah, 57h, 63h, 1, 0, 0FDh,	63h, 1,	0, 8Fh
		db 64h,	1, 0, 0Dh, 65h,	1, 3 dup(0), 0E2h, 41h,	92h, 7Ah
		db 0BEh, 8Bh, 93h, 0BFh, 0Ch, 0D1h, 0B9h, 0B4h,	0, 2Eh
		db 8Bh,	4, 8Bh,	1Dh, 89h, 5, 2Eh, 89h, 1Ch, 83h, 0C6h
		db 2, 83h, 0C7h, 2, 0E2h, 0EEh,	0C3h, 0A1h, 0AAh, 91h
		db 5, 0D0h, 0, 3Bh, 44h, 16h, 7Fh, 4, 0E8h, 0EEh, 8Ch
		db 0C3h, 8Bh, 44h, 16h,	2Bh, 6,	90h, 91h, 3Dh, 0B4h, 0
		db 7Ch,	3, 0E9h, 0Ch, 1, 83h, 7Ch, 1Ah,	5, 7Ch,	1Ah, 83h
		db 7Ch,	22h, 0,	74h, 10h, 83h, 7Ch, 1Ah, 9, 7Ch, 0Eh, 0C7h
		db 44h,	1Ah, 2 dup(0), 0FFh, 4Ch, 22h, 0EBh, 4,	0E8h, 0BFh
		db 8Ch,	0C3h, 83h, 7Ch,	1Ah, 1,	77h, 1Fh, 8Bh, 44h, 16h
		db 2Bh,	6, 90h,	91h, 3Dh, 64h, 0, 7Ch, 7, 0C7h,	44h, 1Ah
		db 2, 0, 0EBh, 0Ch, 0A1h, 9Ch, 91h, 25h, 3, 0, 75h, 4
		db 83h,	74h, 1Ah, 1, 8Bh, 44h, 1Ah, 0D1h, 0E0h,	0D1h, 0E0h
		db 0D1h, 0E0h, 8Bh, 7Ch, 38h, 0BBh, 2 dup(8Fh),	3, 0D8h
		db 2Eh,	8Bh, 7,	89h, 5,	2Eh, 8Bh, 47h, 2, 89h, 45h, 2
		db 2Eh,	8Bh, 47h, 4, 89h, 45h
		db 28h,	2Eh, 8Bh, 47h, 6, 89h, 45h, 2Ah, 83h, 7Ch, 1Ah
		db 2, 73h, 3, 0E9h, 93h, 0, 0A1h, 9Ch, 91h, 25h, 3, 0
		db 74h,	3, 0E9h, 88h, 0, 0FFh, 44h, 1Ah, 83h, 7Ch, 1Ah
		db 4, 75h, 7Fh,	8Bh, 44h, 12h, 0A3h, 0E2h, 0FCh, 8Bh, 44h
		db 16h,	0A3h, 0E6h, 0FCh, 0A1h,	90h, 91h, 29h, 6, 0E6h
		db 0FCh, 83h, 6, 0E2h, 0FCh, 10h, 83h, 6, 0E6h,	0FCh, 10h
		db 56h,	0E8h, 92h, 94h,	0BFh, 4Ah, 90h,	0E8h, 0E6h, 8Bh
		db 0C7h, 4, 0E0h, 0, 0C7h, 44h,	2, 0Ch,	83h, 0C7h, 44h
		db 4, 53h, 8, 0C7h, 44h, 6, 0A7h, 3Ah, 0BFh, 3Eh, 78h
		db 2Eh,	8Bh, 5,	89h, 44h, 0Ch, 2Eh, 8Bh, 45h, 2, 89h, 44h
		db 0Eh,	83h, 0C7h, 4, 89h, 7Ch,	10h, 0C7h, 44h,	48h, 2 dup(0)
		db 0A1h, 0E2h, 0FCh, 89h, 44h, 12h, 0A1h, 0E6h,	0FCh, 89h
		db 44h,	16h, 2Eh, 0A1h,	10h, 77h, 89h, 44h, 24h, 0C6h
		db 44h,	27h, 0FFh, 0C7h, 44h, 34h, 2Ch,	1, 0C7h, 44h, 1Ah
		db 2 dup(0), 0C7h, 44h,	36h, 2 dup(0), 0E8h, 9Ch, 0B9h
		db 5Eh,	0C3h, 0A1h, 0AAh, 91h, 5, 0D0h,	0, 3Bh,	44h, 16h
		db 7Fh,	4, 0E8h, 0C3h, 8Bh, 0C3h, 8Bh, 44h, 16h, 2Bh, 6
		db 90h,	91h, 3Dh, 0B4h,	0, 7Ch,	3, 0E9h, 0D8h, 0, 83h
		db 7Ch,	1Ah, 5,	7Ch, 1Ah, 83h, 7Ch, 22h, 0, 74h, 10h, 83h
		db 7Ch,	1Ah, 9,	7Ch, 0Eh, 0C7h,	44h, 1Ah, 2 dup(0), 0FFh
		db 4Ch,	22h, 0EBh, 4, 0E8h, 94h, 8Bh, 0C3h, 83h, 7Ch, 1Ah
		db 1, 77h, 14h,	8Bh, 44h, 16h, 2Bh, 6, 90h, 91h, 3Dh, 64h
		db 0, 7Dh, 3, 0E9h, 0A3h, 0, 0C7h, 44h,	1Ah, 2,	0, 8Bh
		db 5Ch,	1Ah, 0D1h, 0E3h, 8Bh, 7Ch, 38h,	2Eh, 8Bh, 87h
		db 0D7h, 8Fh, 89h, 5, 83h, 7Ch,	1Ah, 2,	73h, 3,	0E9h, 86h
		db 0, 0A1h, 9Ch, 91h, 25h, 3, 0, 75h, 7Eh, 0FFh, 44h, 1Ah
		db 83h,	7Ch, 1Ah, 4, 2 dup(75h), 8Bh, 44h, 12h,	0A3h, 0E2h
		db 0FCh, 8Bh, 44h, 16h,	0A3h, 0E6h, 0FCh, 0A1h,	90h, 91h
		db 29h,	6, 0E6h, 0FCh, 56h, 0E8h, 9Bh, 93h, 0BFh, 4Ah
		db 90h,	0E8h, 0EFh, 8Ah, 0C7h, 4, 0E4h,	0, 0C7h, 44h, 2
		db 0Ch,	83h, 0C7h, 44h,	4, 53h,	8, 0C7h, 44h, 6, 0A7h
		db 3Ah,	0BFh, 5Ch, 78h,	2Eh, 8Bh, 5, 89h, 44h, 0Ch, 2Eh
		db 8Bh,	45h, 2,	89h, 44h, 0Eh, 83h, 0C7h, 4, 89h, 7Ch
		db 10h,	0C7h, 44h, 48h,	2 dup(0), 0A1h,	0E2h, 0FCh, 89h
		db 44h,	12h, 0A1h, 0E6h, 0FCh, 89h, 44h, 16h, 2Eh, 0A1h
		db 12h,	77h, 89h, 44h, 24h, 0C6h, 44h, 27h, 0, 0C7h, 44h
		db 34h,	96h, 0,	0C7h, 44h, 1Ah,	2 dup(0), 0C7h,	44h, 36h
		db 2 dup(0), 0E8h, 0A5h, 0B8h, 5Eh, 0C3h, 8Bh, 44h, 1Ah
		db 85h,	0C0h, 75h, 14h,	8Bh, 44h, 16h, 2Bh, 6, 90h, 91h
		db 2Eh,	3Bh, 6,	30h, 77h, 7Ch, 5, 0C7h,	44h, 1Ah, 1, 0
		db 0C3h, 8Bh, 0D8h, 0D1h, 0E3h,	81h, 0C3h, 19h,	90h, 81h
		db 3Ch,	0F0h, 0, 74h, 3, 83h, 0C3h, 2Ah, 2Eh, 8Bh, 1Fh
		db 8Bh,	7Ch, 38h, 2Eh, 8Bh, 7, 89h, 5, 2Eh, 8Bh, 47h, 2
		db 89h,	45h, 2,	2Eh, 8Bh, 47h, 4, 89h, 45h, 28h, 2Eh, 8Bh
		db 47h,	6, 89h,	45h, 2Ah, 0FFh,	44h, 1Ah, 83h, 7Ch, 1Ah
		db 15h,	7Ch, 0C5h, 8Bh,	44h, 12h, 0A3h,	0E2h, 0FCh, 8Bh
		db 44h,	16h, 0A3h, 0E6h, 0FCh, 0A1h, 90h, 91h, 29h, 6
		db 0E6h, 0FCh, 83h, 6, 0E2h, 0FCh
		db 10h,	83h, 6,	0E6h, 0FCh, 10h, 0B9h, 8, 0, 0BBh, 0E9h
		db 8Fh,	56h, 0E8h, 0C0h, 92h, 0BFh, 4Ah, 90h, 0E8h, 14h
		db 8Ah,	0C7h, 4, 8, 1, 0C7h, 44h, 2, 0D0h, 85h,	0C7h, 44h
		db 4, 53h, 8, 0C7h, 44h, 6, 55h, 3Bh, 2Eh, 8Bh,	3Fh, 83h
		db 0C3h, 2, 2Eh, 8Bh, 5, 89h, 44h, 0Ch,	2Eh, 8Bh, 45h
		db 2, 89h, 44h,	0Eh, 83h, 0C7h,	4, 89h,	7Ch, 10h, 0C7h
		db 44h,	48h, 2 dup(0), 0A1h, 0E2h, 0FCh, 2Eh, 3, 7, 83h
		db 0C3h, 2, 89h, 44h, 12h, 0A1h, 0E6h, 0FCh, 2Eh, 3, 7
		db 83h,	0C3h, 2, 89h, 44h, 16h,	49h, 89h, 4Ch, 1Ch, 41h
		db 0C7h, 44h, 24h, 1, 0, 0C6h, 44h, 27h, 0, 0C7h, 44h
		db 34h,	14h, 0,	0E8h, 0CAh, 0C3h, 25h, 1Fh, 0, 89h, 44h
		db 1Ah,	0C7h, 44h, 36h,	2 dup(0), 51h, 0E8h, 0B3h, 0B7h
		db 59h,	0E2h, 86h, 5Eh,	0E8h, 0E3h, 89h, 0C3h, 0A1h, 0AAh
		db 91h,	5, 0D0h, 0, 3Bh, 44h, 16h, 7Dh,	3, 0E9h, 97h, 0
		db 8Bh,	44h, 12h, 2Dh, 8, 0, 89h, 44h, 28h, 5, 14h, 0
		db 89h,	44h, 2Ch, 8Bh, 44h, 16h, 2Bh, 6, 90h, 91h, 5, 4
		db 0, 89h, 44h,	2Ah, 5,	8, 0, 89h, 44h,	2Eh, 8Bh, 44h
		db 1Ah,	85h, 0C0h, 75h,	10h, 0E8h, 79h,	0C3h, 2Eh, 3Ah
		db 6, 14h, 77h,	73h, 5,	0C7h, 44h, 1Ah,	1, 0, 0C3h, 8Bh
		db 0D8h, 0D1h, 0E3h, 81h, 0C3h,	0C1h, 90h, 81h,	3Ch, 0E8h
		db 0, 74h, 3, 83h, 0C3h, 1Eh, 8Bh, 7Ch,	38h, 2Eh, 8Bh
		db 7, 89h, 5, 0FFh, 44h, 1Ah, 83h, 7Ch,	1Ah, 7,	74h, 0Ch
		db 83h,	7Ch, 1Ah, 0Fh, 75h, 5, 0C7h, 44h, 1Ah, 2 dup(0)
		db 0C3h, 8Bh, 44h, 12h,	8Bh, 5Ch, 16h, 2Bh, 1Eh, 90h, 91h
		db 5, 8, 0, 83h, 0C3h, 8, 2Eh, 8Bh, 3Eh, 16h, 77h, 0D1h
		db 0E7h, 2Eh, 8Bh, 0ADh, 0A9h, 92h, 0B9h, 2, 0,	81h, 3Ch
		db 0ECh, 0, 74h, 3, 0B9h, 6, 0,	2Eh, 8Bh, 16h, 18h, 77h
		db 0E9h, 50h, 0A0h, 0E8h, 3Ah, 89h, 0C3h, 0A1h,	0AAh, 91h
		db 5, 0D0h, 0, 2Bh, 6, 90h, 91h, 3Bh, 44h, 16h,	7Dh, 3
		db 0E9h, 95h, 0, 0E8h, 15h, 0C3h, 0A1h,	98h, 91h, 1, 44h
		db 16h,	83h, 7Ch, 1Ah, 0, 74h, 6Bh, 8Bh, 44h, 16h, 2Bh
		db 6, 16h, 9Fh,	3Dh, 0Ah, 0, 7Fh, 60h, 3Dh, 0E2h, 0FFh
		db 7Ch,	5Bh, 0E8h, 0D5h, 0C2h, 3Ch, 1Eh, 73h, 54h, 0C7h
		db 44h,	1Ah, 2 dup(0), 0E8h, 14h, 89h, 0BFh, 96h, 90h
		db 0E8h, 0AEh, 88h, 0BFh, 74h, 7Ah, 81h, 3Ch, 0, 1, 74h
		db 3, 0BFh, 4Ah, 7Ah, 2Eh, 8Bh,	5, 89h,	44h, 0Ch, 2Eh
		db 8Bh,	45h, 2,	89h, 44h, 0Eh, 83h, 0C7h, 4, 89h, 7Ch
		db 10h,	0BDh, 0EDh, 52h, 8Bh, 44h, 12h,	8Bh, 5Ch, 16h
		db 5, 0Bh, 0, 83h, 0C3h, 7, 0B9h, 6, 0,	81h, 3Ch, 0, 1
		db 74h,	6, 0B9h, 2, 0, 2Dh, 8, 0, 2Eh, 8Bh, 16h, 1Ah, 77h
		db 0E8h, 0C0h, 9Fh, 0C3h, 8Bh, 44h, 1Ah, 1, 44h, 16h, 1
		db 44h,	22h, 74h, 8, 8Bh, 44h, 22h, 3Bh, 44h, 1Ch, 75h
		db 3, 0F7h, 5Ch, 1Ah, 0E8h, 5Ch, 0B6h, 0C3h, 0E8h, 8Fh
		db 88h,	0C3h, 80h, 3Eh,	30h, 92h, 0, 75h, 15h, 81h, 3Eh
		db 90h,	91h, 0D0h, 9, 7Ch, 2Dh,	81h, 3Eh, 90h, 91h, 50h
		db 0Bh,	7Fh, 25h, 0E8h,	40h, 2,	0EBh, 20h, 81h,	3Eh, 90h
		db 91h,	0F0h, 9, 7Eh, 18h
		db 0C7h, 6, 90h, 91h, 0F0h, 9, 0C7h, 6,	0AAh, 91h, 0F0h
		db 9, 0C7h, 6, 8Eh, 91h, 0D8h, 18h, 0C7h, 6, 96h, 91h
		db 2 dup(0), 0C6h, 6, 2Dh, 92h,	0, 0C6h, 6, 2Eh, 92h, 0
		db 0C3h, 8Bh, 0FEh, 0D1h, 0E3h,	2Eh, 0FFh, 0A7h, 0FDh
		db 90h,	0B8h, 0E8h, 0, 83h, 7Dh, 0Ch, 0, 75h, 3, 0B8h
		db 0ECh, 0, 0BBh, 0DEh,	7Dh, 0E8h, 95h,	0B5h, 0C7h, 44h
		db 6, 76h, 3Bh,	2Eh, 0A1h, 1Ch,	77h, 89h, 44h, 24h, 0C7h
		db 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 8Bh, 5Ch
		db 38h,	0BDh, 0DFh, 90h, 0BAh, 0BFh, 90h, 83h, 7Dh, 0Ch
		db 0, 74h, 6, 0BDh, 0C1h, 90h, 0BAh, 0BDh, 90h,	89h, 6Ch
		db 0Ch,	89h, 54h, 10h, 2Eh, 8Bh, 46h, 0, 89h, 7, 0C7h
		db 44h,	34h, 64h, 0, 0C7h, 44h,	30h, 2 dup(0), 0C7h, 44h
		db 32h,	2 dup(0), 0C3h,	0B8h, 0F0h, 0, 83h, 7Dh, 0Ch, 0
		db 75h,	3, 0B8h, 0F4h, 0, 0BBh,	0E6h, 7Ch, 0E8h, 49h, 0B5h
		db 8Bh,	5Ch, 38h, 0BDh,	6Dh, 90h, 83h, 7Dh, 0Ch, 0, 75h
		db 3, 0BDh, 95h, 90h, 2Eh, 8Bh,	46h, 0,	89h, 7,	2Eh, 8Bh
		db 46h,	2, 89h,	47h, 2,	2Eh, 8Bh, 46h, 4, 89h, 47h, 28h
		db 2Eh,	8Bh, 46h, 6, 89h, 47h, 2Ah, 0C3h, 0E8h,	7, 90h
		db 57h,	0BFh, 4Ah, 90h,	0E8h, 5Ah, 87h,	5Fh, 0C7h, 4, 0
		db 1, 0BBh, 56h, 7Ah, 83h, 7Dh,	0Ch, 0,	75h, 7,	0C7h, 2	dup(4)
		db 1, 0BBh, 2Ch, 7Ah, 0C7h, 44h, 2, 87h, 7Eh, 0C7h, 44h
		db 4, 53h, 8, 2Eh, 8Bh,	7, 89h,	44h, 0Ch, 2Eh, 8Bh, 47h
		db 2, 89h, 44h,	0Eh, 83h, 0C3h,	4, 89h,	5Ch, 10h, 0C7h
		db 44h,	48h, 2 dup(0), 0C7h, 44h, 6, 0A7h, 3Ah,	2Eh, 0A1h
		db 1Eh,	77h, 89h, 44h, 24h, 0C6h, 44h, 27h, 0, 0C7h, 44h
		db 34h,	0C8h, 0, 8Bh, 45h, 8, 2Dh, 8, 0, 89h, 44h, 12h
		db 8Bh,	45h, 0Ah, 2Dh, 8, 0, 2Bh, 6, 90h, 91h, 89h, 44h
		db 16h,	0C7h, 44h, 1Ah,	2 dup(0FFh), 8Bh, 45h, 4, 0D1h
		db 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 89h, 44h
		db 1Ch,	89h, 44h, 22h, 0C7h, 44h, 36h, 2 dup(0), 0E8h
		db 0E7h, 0B4h, 0C3h, 0B8h, 0FCh, 0, 0BBh, 0EFh,	7Bh, 0E8h
		db 8Ah,	0B4h, 0C7h, 44h, 22h, 1, 0, 8Bh, 7Ch, 38h, 2Eh
		db 0A1h, 0D7h, 8Fh, 89h, 5, 0C3h, 0B8h,	0F8h, 0, 0BBh
		db 0C4h, 7Ah, 0E8h, 72h, 0B4h, 0C7h, 44h, 22h, 1, 0, 0C3h
		db 0D1h, 0E3h, 2Eh, 0FFh, 0A7h,	9, 91h,	0BBh, 36h, 77h
		db 0E9h, 2 dup(0B2h), 0BBh, 48h, 77h, 0E9h, 0ACh, 0B2h
		db 0BBh, 5Ah, 77h, 0E9h, 0A6h, 0B2h, 0BBh, 6Ch,	77h, 0E9h
		db 0A0h, 0B2h, 0BBh, 7Eh, 77h, 0E9h, 9Ah, 0B2h,	0BBh, 90h
		db 77h,	0E9h, 94h, 0B2h, 0C7h, 45h, 4, 0B9h, 8,	3Bh, 45h
		db 24h,	7Dh, 3,	0E9h, 0A5h, 0B9h, 8Bh, 4Dh, 22h, 0B0h
		db 1, 0D2h, 0E0h, 0F6h,	0D0h, 20h, 6, 2, 92h, 0BBh, 6Ch
		db 78h,	0EBh, 22h, 0C7h, 45h, 4, 0B9h, 8, 3Bh, 45h, 24h
		db 7Dh,	3, 0E9h, 86h, 0B9h, 0BBh, 92h, 78h, 0EBh, 10h
		db 0C7h, 45h, 4, 0B9h, 8, 3Bh, 45h, 24h, 7Dh, 3, 0E9h
		db 74h,	0B9h, 0BBh, 0B8h, 78h, 56h, 2 dup(0E8h), 8Eh, 57h
		db 0BFh, 96h, 90h, 0E8h, 3Bh, 86h, 5Fh,	8Bh, 5,	89h, 4
		db 8Bh,	45h, 2,	89h, 44h, 2, 0C7h, 44h,	4, 53h,	8, 8Bh
		db 45h,	12h, 89h, 44h, 12h, 8Bh, 45h, 16h, 89h,	44h, 16h
		db 2Eh,	8Bh
		db 7, 89h, 44h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Ch, 10h, 0C7h, 44h, 1Ah, 0, 80h, 0E8h
		db 19h,	0C0h, 0C7h, 44h, 1Ch, 2	dup(0),	0C7h, 44h, 1Eh
		db 2 dup(0), 88h, 44h, 1Ch, 8Bh, 0F7h, 0E8h, 36h, 86h
		db 5Eh,	0C3h, 80h, 3Eh,	30h, 92h, 0, 75h, 2Ah, 80h, 3Eh
		db 2Dh,	92h, 0,	75h, 0Eh, 0C7h,	6, 0FAh, 0FCh, 2 dup(0)
		db 0E8h, 44h, 0, 0C6h, 6, 2Dh, 92h, 0FFh, 80h, 3Eh, 2Eh
		db 92h,	0, 75h,	0Eh, 0C7h, 6, 0FAh, 0FCh, 1, 0,	0E8h, 2Fh
		db 0, 0C6h, 6, 2Eh, 92h, 0FFh, 0C3h, 83h, 3Eh, 0FAh, 0FCh
		db 0, 75h, 11h,	0A1h, 0F4h, 91h, 0D1h, 0C8h, 0D1h, 0C8h
		db 0D1h, 0C8h, 0D1h, 0C8h, 0D1h, 0C8h, 0A3h, 0F4h, 91h
		db 0C3h, 0A1h, 0F6h, 91h, 0D1h,	0C8h, 0D1h, 0C8h, 0D1h
		db 0C8h, 0D1h, 0C8h, 0D1h, 0C8h, 0A3h, 0F6h, 91h, 0C3h
		db 83h,	3Eh, 0,	92h, 1,	74h, 0Bh, 80h, 3Eh, 2Fh, 92h, 0
		db 74h,	0Ch, 0FEh, 0Eh,	2Fh, 92h, 0E8h,	0C2h, 0FFh, 25h
		db 6, 0, 0EBh, 9, 0E8h,	0BAh, 0FFh, 25h, 6, 0, 5, 8, 0
		db 3, 6, 0FAh, 0FCh, 0BAh, 0Ah,	0, 0F7h, 0E2h, 0BFh, 79h
		db 91h,	3, 0F8h, 2Eh, 8Bh, 5, 0A3h, 0E2h, 0FCh,	83h, 0C7h
		db 2, 2Eh, 8Bh,	5, 0A3h, 0E6h, 0FCh, 83h, 0C7h,	2, 0A1h
		db 9Ah,	91h, 29h, 6, 0E6h, 0FCh, 0A1h, 90h, 91h, 29h, 6
		db 0E6h, 0FCh, 2Eh, 8Bh, 1Dh, 83h, 0C7h, 2, 0D1h, 0E3h
		db 83h,	0BFh, 0D2h, 91h, 0, 75h, 6, 0C7h, 87h, 0D2h, 91h
		db 18h,	0, 2Eh,	8Bh, 5,	0A3h, 0EEh, 0FCh, 83h, 0C7h, 2
		db 0C7h, 6, 0EAh, 0FCh,	2 dup(0), 2Eh, 8Bh, 3Dh, 0D1h
		db 0E7h, 8Bh, 0BDh, 0B4h, 0DEh,	0BBh, 17h, 91h,	2Eh, 8Bh
		db 7, 0A3h, 0FEh, 0FCh,	83h, 0C3h, 2, 0E8h, 0AEh, 8Dh
		db 57h,	0BFh, 4Ah, 90h,	0E8h, 1, 85h, 5Fh, 2Eh,	8Bh, 7
		db 89h,	4, 83h,	0C3h, 2, 0C7h, 44h, 2, 6Dh, 86h, 0C7h
		db 44h,	4, 61h,	7, 2Eh,	8Bh, 7,	89h, 44h, 6, 83h, 0C3h
		db 2, 2Eh, 8Bh,	7, 89h,	44h, 0Ch, 83h, 0C3h, 2,	2Eh, 8Bh
		db 7, 89h, 44h,	34h, 83h, 0C3h,	2, 0A1h, 0EEh, 0FCh, 89h
		db 44h,	20h, 2Eh, 0A1h,	20h, 77h, 89h, 44h, 24h, 0C7h
		db 44h,	48h, 2 dup(0), 0C6h, 44h, 27h, 0, 0C7h,	44h, 0Eh
		db 2 dup(0), 89h, 7Ch, 38h, 89h, 7Ch, 3Ah, 0A1h, 0E2h
		db 0FCh, 89h, 44h, 12h,	0A1h, 0E6h, 0FCh, 89h, 44h, 16h
		db 0C7h, 44h, 36h, 2 dup(0), 0A1h, 0EAh, 0FCh, 89h, 44h
		db 1Ah,	2Eh, 0A1h, 22h,	77h, 89h, 44h, 42h, 0A1h, 0FAh
		db 0FCh, 89h, 44h, 22h,	83h, 2Eh, 0EAh,	0FCh, 0Ah, 0E8h
		db 93h,	0B2h, 0FFh, 0Eh, 0FEh, 0FCh, 78h, 3, 0E9h, 72h
		db 0FFh, 0B0h, 1, 8Bh, 0Eh, 0FAh, 0FCh,	0D2h, 0E0h, 8
		db 6, 2, 92h, 0C3h, 0E8h, 0A2h,	0BEh, 83h, 7Ch,	1Ah, 0
		db 74h,	3, 0E9h, 87h, 0, 83h, 7Ch, 16h,	32h, 7Fh, 41h
		db 8Bh,	44h, 12h, 2Bh, 6, 12h, 9Fh, 79h, 2, 0F7h, 0D8h
		db 3Dh,	0Ah, 0,	7Ch, 4Ah, 8Bh, 44h, 12h, 3Bh, 6, 12h, 9Fh
		db 7Ch,	22h, 83h, 6Ch, 12h, 4, 8Bh, 1Eh, 9Ch, 91h, 3, 0DEh
		db 83h,	0E3h, 0Eh, 8Bh,	87h, 0CEh, 32h,	3, 44h,	16h, 3Dh
		db 32h,	0, 7Eh,	3, 0B8h, 32h, 0, 89h, 44h, 16h,	0E9h, 30h
		db 0B2h, 83h, 44h, 12h,	4, 0EBh, 0DCh, 83h, 6Ch, 16h, 5
		db 8Bh,	1Eh, 9Ch
		db 91h,	3, 0DEh, 0D1h, 0EBh, 83h, 0E3h,	0Eh, 8Bh, 87h
		db 0CEh, 32h, 1, 44h, 12h, 0E9h, 11h, 0B2h, 0C7h, 44h
		db 1Ah,	1, 0, 0BFh, 4Ch, 78h, 81h, 3Ch,	0E0h, 0, 74h, 3
		db 0BFh, 60h, 78h, 2Eh,	8Bh, 5,	89h, 44h, 0Ch, 2Eh, 8Bh
		db 45h,	2, 89h,	44h, 0Eh, 83h, 0C7h, 4,	89h, 7Ch, 10h
		db 0E9h, 0EAh, 0B1h, 83h, 44h, 16h, 0Ch, 81h, 7Ch, 16h
		db 0A0h, 0, 7Ch, 0F2h, 0C7h, 44h, 1Ah, 2 dup(0), 0BFh
		db 3Eh,	78h, 81h, 3Ch, 0E0h, 0,	74h, 0D1h, 0BFh, 5Ch, 78h
		db 0EBh, 0CCh, 0E8h, 0F1h, 0BDh, 0A1h, 98h, 91h, 1, 44h
		db 16h,	8Bh, 44h, 1Ah, 85h, 0C0h, 75h, 6Bh, 8Bh, 5Ch, 1Ch
		db 0D1h, 0E3h, 8Bh, 44h, 12h, 3, 87h, 0DEh, 32h, 8Bh, 4Ch
		db 16h,	3, 8Fh,	0EEh, 32h, 3Dh,	74h, 0,	7Fh, 0Dh, 0B8h
		db 74h,	0, 0C7h, 44h, 1Ah, 1, 0, 0C7h, 44h, 1Ch, 4, 0
		db 3Dh,	0CCh, 0, 7Ch, 0Dh, 0B8h, 0CCh, 0, 0C7h,	44h, 1Ah
		db 1, 0, 0C7h, 44h, 1Ch, 2 dup(0), 3, 0Eh, 90h,	91h, 83h
		db 0F9h, 6Ch, 7Fh, 0Dh,	0B9h, 6Ch, 0, 0C7h, 44h, 1Ah, 1
		db 0, 0C7h, 44h, 1Ch, 6, 0, 81h, 0F9h, 54h, 1, 7Ch, 0Dh
		db 0B9h, 54h, 1, 0C7h, 44h, 1Ah, 1, 0, 0C7h, 44h, 1Ch
		db 2, 0, 89h, 44h, 12h,	2Bh, 0Eh, 90h, 91h, 89h, 4Ch, 16h
		db 0C3h, 3Dh, 1, 0, 75h, 24h, 0E8h, 51h, 0BDh, 25h, 7
		db 0, 75h, 1Bh,	0C7h, 44h, 1Ah,	2, 0, 0BFh, 0F4h, 78h
		db 2Eh,	8Bh, 5,	89h, 44h, 0Ch, 2Eh, 8Bh, 45h, 2, 89h, 44h
		db 0Eh,	83h, 0C7h, 4, 89h, 7Ch,	10h, 0C3h, 81h,	7Ch, 0Ch
		db 3Bh,	3Ch, 75h, 78h, 56h, 0E8h, 0B6h,	8Bh, 0BFh, 4Ah
		db 90h,	0E8h, 0Ah, 83h,	8Bh, 0FEh, 5Eh,	0C7h, 5, 10h, 1
		db 0C7h, 45h, 2, 0E1h, 84h, 0C7h, 45h, 4, 53h, 8, 0C7h
		db 45h,	6, 0A7h, 3Ah, 2Eh, 0A1h, 24h, 77h, 89h,	45h, 24h
		db 0C6h, 45h, 27h, 0, 0C7h, 45h, 48h, 2	dup(0),	0C7h, 45h
		db 34h,	1Eh, 0,	0C7h, 45h, 36h,	2 dup(0), 8Bh, 5Ch, 1Ch
		db 0D1h, 0E3h, 2Eh, 8Bh, 9Fh, 0Bh, 95h,	2Eh, 8Bh, 7, 89h
		db 45h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh, 83h, 0C3h
		db 4, 89h, 5Dh,	10h, 8Bh, 44h, 12h, 89h, 45h, 12h, 8Bh
		db 44h,	16h, 89h, 45h, 16h, 8Bh, 44h, 1Ch, 89h,	45h, 1Ch
		db 0C7h, 45h, 1Ah, 2 dup(0FFh),	87h, 0FEh, 0E8h, 0AEh
		db 0B0h, 87h, 0FEh, 0E8h, 0E0h,	82h, 0C3h, 0E8h, 0CDh
		db 0BCh, 0A1h, 98h, 91h, 1, 44h, 16h, 8Bh, 44h,	1Ah, 85h
		db 0C0h, 78h, 4Ch, 0F7h, 6, 9Ch, 91h, 1, 0, 74h, 3Ch, 2Bh
		db 44h,	1Ch, 74h, 3Ah, 79h, 3, 5, 8, 0,	3Dh, 4,	0, 7Eh
		db 9, 0FFh, 4Ch, 1Ch, 83h, 64h,	1Ch, 7,	0EBh, 7, 0FFh
		db 44h,	1Ch, 83h, 64h, 1Ch, 7, 8Bh, 5Ch, 1Ch, 0D1h, 0E3h
		db 2Eh,	8Bh, 9Fh, 0Bh, 95h, 2Eh, 8Bh, 7, 89h, 44h, 0Ch
		db 2Eh,	8Bh, 47h, 2, 89h, 44h, 0Eh, 83h, 0C3h, 4, 89h
		db 5Ch,	10h, 0E9h, 51h,	0B0h, 0C7h, 44h, 1Ah, 2	dup(0FFh)
		db 81h,	7Ch, 16h, 0C0h,	0, 73h,	3Dh, 2Eh, 0A0h,	26h, 77h
		db 0, 44h, 48h,	73h, 34h, 0E8h,	41h, 0BCh, 24h,	3Fh, 88h
		db 44h,	48h, 0A1h, 12h,	9Fh, 8Bh, 1Eh, 16h, 9Fh, 2Bh, 44h
		db 12h,	2Bh, 5Ch, 16h, 0E8h, 2Bh, 96h, 8Bh, 0C8h, 2Eh
		db 8Bh,	1Eh, 28h, 77h
		db 0D1h, 0E3h, 2Eh, 8Bh, 0AFh, 0A9h, 92h, 8Bh, 44h, 12h
		db 8Bh,	5Ch, 16h, 2Eh, 8Bh, 16h, 2Ah, 77h, 0E8h, 52h, 99h
		db 8Bh,	5Ch, 1Ch, 0D1h,	0E3h, 8Bh, 44h,	12h, 8Bh, 4Ch
		db 16h,	3, 87h,	0FEh, 32h, 3, 8Fh, 0Eh,	33h, 89h, 44h
		db 12h,	89h, 4Ch, 16h, 3, 0Eh, 90h, 91h, 0BFh, 1Eh, 33h
		db 8Bh,	15h, 83h, 0C7h,	2, 3Bh,	5, 75h,	1Ah, 3Bh, 4Dh
		db 2, 75h, 15h,	0E8h, 0DFh, 0BBh, 25h, 3, 0, 74h, 0F8h
		db 8Bh,	0D8h, 0D1h, 0E3h, 8Bh, 51h, 2, 89h, 54h, 1Ah, 0E9h
		db 0C5h, 0AFh, 83h, 0C7h, 0Ah, 4Ah, 79h, 0DCh, 0E8h, 0BCh
		db 0AFh, 0E9h, 8Fh, 7, 0E8h, 0DEh, 0BBh, 0FFh, 44h, 1Ah
		db 8Bh,	44h, 1Ah, 3Dh, 50h, 0, 7Dh, 7Fh, 25h, 0Fh, 0, 75h
		db 34h,	0A1h, 12h, 9Fh,	8Bh, 1Eh, 16h, 9Fh, 2Bh, 44h, 12h
		db 2Bh,	5Ch, 16h, 0E8h,	9Dh, 95h, 0F7h,	0D0h, 25h, 7, 0
		db 89h,	44h, 1Ch, 8Bh, 0D8h, 0D1h, 0E3h, 2Eh, 8Bh, 9Fh
		db 1Bh,	95h, 2Eh, 8Bh, 7, 89h, 44h, 0Ch, 2Eh, 8Bh, 47h
		db 2, 89h, 44h,	0Eh, 83h, 0C3h,	4, 89h,	5Ch, 10h, 8Bh
		db 5Ch,	1Ch, 0D1h, 0E3h, 8Bh, 87h, 90h,	33h, 3,	44h, 12h
		db 3Dh,	40h, 1,	73h, 31h, 89h, 44h, 12h, 8Bh, 87h, 0A0h
		db 33h,	3, 44h,	16h, 3,	6, 98h,	91h, 3Dh, 0C0h,	0, 73h
		db 1Eh,	89h, 44h, 16h, 0E8h, 48h, 0AFh,	0E8h, 0A7h, 0BCh
		db 74h,	16h, 83h, 3Eh, 88h, 91h, 0, 75h, 10h, 0C7h, 6
		db 4, 9Fh, 0B9h, 8, 0B8h, 4, 0,	0E8h, 0F6h, 0B5h, 0E8h
		db 64h,	81h, 0C3h, 0E8h, 95h, 88h, 0BAh, 53h, 8, 0BDh
		db 30h,	12h, 0E8h, 0BDh, 0ACh, 0E8h, 54h, 81h, 0C3h, 81h
		db 7Ch,	1Ah, 0,	80h, 75h, 3Ah, 0E8h, 3Ah, 0BBh,	8Bh, 5Ch
		db 1Ch,	2Eh, 8Ah, 87h, 16h, 61h, 98h, 0D1h, 0F8h, 0D1h
		db 0F8h, 3, 44h, 16h, 3Dh, 0C0h, 0, 73h, 1Eh, 89h, 44h
		db 16h,	2Eh, 8Ah, 87h, 56h, 61h, 98h, 0D1h, 0F8h, 0D1h
		db 0F8h, 3, 44h, 12h, 3Dh, 40h,	1, 73h,	9, 89h,	44h, 12h
		db 0C7h, 44h, 4, 53h, 8, 0C3h, 0E8h, 13h, 81h, 0C3h, 0A1h
		db 98h,	91h, 1,	44h, 16h, 8Bh, 5Ch, 22h, 0C6h, 87h, 2Dh
		db 92h,	0FFh, 0E8h, 4Fh, 0C1h, 83h, 3Ch, 4, 75h, 13h, 8Bh
		db 5Ch,	20h, 0D1h, 0E3h, 83h, 0BFh, 0D2h, 91h, 0, 75h
		db 6, 0C7h, 87h, 0D2h, 91h, 18h, 0, 0C3h, 81h, 7Ch, 4
		db 61h,	7, 74h,	2Dh, 81h, 7Ch, 4, 97h, 8, 74h, 0Fh, 8Bh
		db 7Ch,	3Ah, 83h, 3Dh, 0, 75h, 29h, 0C7h, 44h, 4, 97h
		db 8, 0EBh, 22h, 8Bh, 7Ch, 3Ah,	83h, 3Dh, 0, 74h, 1Ah
		db 83h,	0EFh, 0Ah, 3Bh,	7Ch, 38h, 74h, 12h, 0C7h, 44h
		db 4, 53h, 8, 0EBh, 0Bh, 83h, 7Ch, 1Ah,	0, 78h,	5, 0C7h
		db 44h,	4, 97h,	8, 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h, 0E3h
		db 0Eh,	0BFh, 2Bh, 95h,	81h, 3Ch, 18h, 1, 75h, 3, 0BFh
		db 3Bh,	95h, 81h, 3Ch, 1Ch, 1, 75h, 3, 0BFh, 4Bh, 95h
		db 2Eh,	8Bh, 1,	89h, 44h, 0Ch, 0E9h, 44h, 0AEh,	0C7h, 45h
		db 4, 5Fh, 8Ch,	29h, 45h, 24h, 76h, 1, 0C3h, 56h, 8Bh
		db 0F7h, 0E8h, 6Ah, 80h, 0B9h, 9, 0, 0E8h, 88h,	8Eh, 0B9h
		db 1Dh,	0, 0B8h, 50h, 0, 8Bh, 5Dh, 16h,	2Bh, 1Eh, 90h
		db 91h,	0BAh, 0A0h, 0
		db 0BFh, 70h, 0, 0BDh, 4Ch, 12h, 0E8h, 13h, 8Eh, 8Bh, 36h
		db 54h,	90h, 0E8h, 0E4h, 0AFh, 5Eh, 0C6h, 6, 61h, 8Fh
		db 0FFh, 0C3h, 56h, 0C7h, 44h, 4, 61h, 7, 2 dup(0BFh)
		db 92h,	0B8h, 3, 0, 0BBh, 2, 0,	8Bh, 4Ch, 12h, 0D1h, 0E1h
		db 0D1h, 0E1h, 0D1h, 0E1h, 83h,	0E9h, 10h, 8Bh,	54h, 16h
		db 0D1h, 0E2h, 0D1h, 0E2h, 0D1h, 0E2h, 0D1h, 0E2h, 2Bh
		db 16h,	90h, 91h, 83h, 0EAh, 10h, 83h, 7Ch, 22h, 0, 74h
		db 18h,	83h, 0C1h, 10h,	0BFh, 0B3h, 92h, 83h, 7Ch, 22h
		db 1, 74h, 0Ch,	0BFh, 0CBh, 92h, 0BBh, 3, 0, 83h, 0EAh
		db 10h,	83h, 0E9h, 8, 8Bh, 0F7h, 0E8h, 90h, 81h, 5Eh, 0C3h
		db 83h,	3Eh, 2,	92h, 3,	75h, 3,	0E9h, 0C9h, 0, 0C7h, 45h
		db 4, 83h, 87h,	29h, 45h, 24h, 76h, 3, 0E9h, 0BCh, 0, 0C7h
		db 6, 2, 92h, 3, 0, 8Bh, 5Dh, 0Ch, 0C7h, 7, 0C1h, 62h
		db 0BAh, 53h, 8, 8Bh, 45h, 28h,	5, 8, 0, 8Bh, 5Dh, 2Ah
		db 83h,	0C3h, 8, 0BDh, 30h, 12h, 0E8h, 18h, 0ABh, 56h
		db 8Bh,	0F7h, 0E8h, 0ACh, 7Fh, 5Eh, 0FFh, 0Eh, 0, 92h
		db 83h,	3Eh, 0,	92h, 1,	75h, 12h, 0C7h,	6, 8Ch,	91h, 2 dup(0FFh)
		db 0C7h, 6, 0F4h, 91h, 51h, 0D2h, 0C7h,	6, 0F6h, 91h, 4Dh
		db 89h,	83h, 3Eh, 0, 92h, 0, 75h, 6Fh, 0C7h, 6,	8Ch, 91h
		db 1, 0, 57h, 0BFh, 2 dup(0), 81h, 0C7h, 50h, 19h, 0B9h
		db 0CCh, 1, 33h, 0C0h, 0F3h, 0ABh, 56h,	8Bh, 36h, 54h
		db 90h,	8Bh, 4,	85h, 0C0h, 74h,	13h, 50h, 0E8h,	2Ch, 8Eh
		db 58h,	57h, 3Dh, 50h, 0, 74h, 5, 8Bh, 0FEh, 0E8h, 0CAh
		db 0B1h, 5Eh, 0EBh, 0E7h, 0C6h,	6, 2Dh,	92h, 0,	0C6h, 6
		db 2Eh,	92h, 0,	0BFh, 8Ch, 8Eh,	0B9h, 10h, 0, 33h, 0C0h
		db 0F3h, 0ABh, 0B9h, 27h, 0, 0B8h, 2 dup(0), 0BBh, 2 dup(0)
		db 0BAh, 40h, 1, 0BFh, 0C0h, 0,	0BDh, 4Ch, 12h,	0E8h, 0F3h
		db 8Ch,	0B9h, 4, 0, 0E8h, 49h, 8Dh, 5Eh, 5Fh, 0C7h, 6
		db 0A8h, 91h, 2	dup(0),	0C6h, 6, 30h, 92h, 0FFh, 0C3h
		db 83h,	3Eh, 8Ch, 91h, 0, 79h, 0Eh, 81h, 3Eh, 0AAh, 91h
		db 40h,	0Bh, 7Fh, 6, 0C7h, 6, 0AAh, 91h, 40h, 0Bh, 83h
		db 7Ch,	22h, 2,	75h, 9,	83h, 3Eh, 0, 92h, 1, 75h, 21h
		db 0EBh, 2Bh, 83h, 7Ch,	22h, 1,	75h, 0Ah, 81h, 3Eh, 12h
		db 9Fh,	0A0h, 0, 7Dh, 11h, 0EBh, 8, 81h, 3Eh, 12h, 9Fh
		db 0A0h, 0, 7Ch, 7, 83h, 3Eh, 2, 92h, 3, 75h, 0Ch, 0C7h
		db 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0EBh, 39h
		db 8Bh,	44h, 12h, 0D1h,	0E0h, 0D1h, 0E0h, 0D1h,	0E0h, 0D1h
		db 0E0h, 89h, 44h, 28h,	5, 0Fh,	0, 89h,	44h, 2Ch, 8Bh
		db 44h,	16h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h
		db 0E0h, 2Bh, 6, 90h, 91h, 89h,	44h, 2Ah, 5, 0Fh, 0, 89h
		db 44h,	2Eh, 83h, 7Ch, 1Ah, 4, 75h, 7, 83h, 3Eh, 2, 92h
		db 3, 75h, 0Fh,	0F7h, 6, 9Ch, 91h, 1, 0, 75h, 7, 0FFh
		db 44h,	1Ah, 83h, 64h, 1Ah, 7, 8Bh, 5Ch, 1Ah, 83h, 0FBh
		db 4, 7Eh, 5, 83h, 0EBh, 8, 0F7h, 0DBh,	0D1h, 0E3h, 8Bh
		db 7Ch,	0Ch, 2Eh, 8Bh, 87h, 0DDh, 92h, 89h, 5, 83h, 7Ch
		db 22h,	2, 75h,	4Eh, 0BDh, 0D4h, 91h, 0BFh, 19h, 92h, 0B9h
		db 8, 0, 3Eh, 83h, 7Eh,	2 dup(0), 74h, 36h, 0BBh, 2 dup(0)
		db 2Eh,	3
		db 1Dh,	3Eh, 0FFh, 4Eh,	0, 56h,	3Eh, 0F7h, 46h,	0, 2, 0
		db 75h,	5, 8Dh,	75h, 2,	0EBh, 3, 8Dh, 75h, 0Ah,	2Eh, 8Bh
		db 4, 89h, 7, 2Eh, 8Bh,	44h, 2,	89h, 47h, 2, 2Eh, 8Bh
		db 44h,	4, 89h,	47h, 28h, 2Eh, 8Bh, 44h, 6, 89h, 47h, 2Ah
		db 5Eh,	83h, 0C5h, 2, 83h, 0C7h, 12h, 0E2h, 0BBh, 0C3h
		db 81h,	3Eh, 0AAh, 91h,	20h, 1,	7Fh, 6,	0C7h, 6, 0AAh
		db 91h,	20h, 1,	83h, 7Ch, 20h, 0, 75h, 4Dh, 83h, 7Ch, 1Ah
		db 0, 79h, 33h,	0C7h, 44h, 28h,	0E8h, 3, 0C7h, 44h, 2Ch
		db 0E8h, 3, 0A1h, 16h, 9Fh, 3, 6, 90h, 91h, 3Dh, 0B0h
		db 0, 7Fh, 1Ch,	0A1h, 12h, 9Fh,	3Dh, 2 dup(0), 7Ch, 14h
		db 3Dh,	3Fh, 1,	7Fh, 0Fh, 0C7h,	44h, 20h, 0E8h,	3, 0C7h
		db 44h,	1Ch, 3,	0, 0C7h, 44h, 1Ah, 54h,	1, 0C3h, 0FFh
		db 4Ch,	1Ah, 79h, 0Fh, 0C7h, 44h, 30h, 2 dup(0), 0C7h
		db 44h,	20h, 0E8h, 3, 0C7h, 44h, 1Ch, 0FDh, 0FFh, 2Eh
		db 0A0h, 32h, 77h, 0, 44h, 48h,	2 dup(73h), 0E8h, 76h
		db 0B7h, 24h, 3Fh, 88h,	44h, 48h, 0E8h,	6Eh, 0B7h, 25h
		db 3, 0, 74h, 30h, 0B8h, 0A0h, 0, 8Bh, 5Ch, 16h, 2Bh, 1Eh
		db 90h,	91h, 83h, 0C3h,	70h, 0B9h, 4, 0, 2Eh, 8Bh, 16h
		db 34h,	77h, 0E8h, 93h,	94h, 0BBh, 80h,	7Ah, 2Eh, 8Bh
		db 7, 89h, 45h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Dh, 10h, 0EBh, 33h, 0B9h, 10h, 0, 51h
		db 0B8h, 0A0h, 0, 8Bh, 5Ch, 16h, 2Bh, 1Eh, 90h,	91h, 83h
		db 0C3h, 70h, 49h, 2Eh,	8Bh, 16h, 34h, 77h, 0E8h, 61h
		db 94h,	0BBh, 92h, 7Ah,	2Eh, 8Bh, 7, 89h, 45h, 0Ch, 2Eh
		db 8Bh,	47h, 2,	89h, 45h, 0Eh, 83h, 0C3h, 4, 89h, 5Dh
		db 10h,	59h, 0E2h, 0D0h, 0C7h, 6, 0F2h,	0FCh, 98h, 0, 0C7h
		db 6, 0FAh, 0FCh, 0A7h,	0, 8Bh,	44h, 16h, 0A3h,	0F6h, 0FCh
		db 0A1h, 90h, 91h, 29h,	6, 0F6h, 0FCh, 83h, 6, 0F6h, 0FCh
		db 70h,	0A1h, 0F6h, 0FCh, 0A3h,	0FEh, 0FCh, 83h, 6, 0FEh
		db 0FCh, 0Ah, 0A1h, 0F2h, 0FCh,	89h, 44h, 28h, 0A1h, 0F6h
		db 0FCh, 89h, 44h, 2Ah,	0A1h, 0FAh, 0FCh, 89h, 44h, 2Ch
		db 0A1h, 0FEh, 0FCh, 89h, 44h, 2Eh, 81h, 3Eh, 90h, 91h
		db 60h,	1, 7Ch,	3, 0E9h, 66h, 1, 83h, 7Ch, 30h,	0, 75h
		db 3, 0E9h, 98h, 0, 8Bh, 5Ch, 22h, 83h,	0C3h, 2, 83h, 0E3h
		db 6, 89h, 5Ch,	22h, 2Eh, 8Bh, 9Fh, 0F3h, 94h, 0BFh, 33h
		db 93h,	2Eh, 8Bh, 7, 2Eh, 89h, 5, 2Eh, 8Bh, 47h, 2, 2Eh
		db 89h,	45h, 2,	2Eh, 8Bh, 47h, 4, 2Eh, 89h, 45h, 0Ch, 2Eh
		db 8Bh,	47h, 6,	2Eh, 89h, 45h, 0Eh, 0FFh, 4Ch, 30h, 75h
		db 60h,	56h, 0E8h, 7, 85h, 0BFh, 4Ah, 90h, 0E8h, 5Bh, 7Ch
		db 8Bh,	0FEh, 5Eh, 0C7h, 5, 0Ch, 1, 0C7h, 45h, 2, 0BDh
		db 83h,	0C7h, 45h, 4, 53h, 8, 0C7h, 45h, 6, 61h, 7, 0C7h
		db 45h,	28h, 0E8h, 3, 0C7h, 45h, 2Ch, 0E8h, 3, 0C7h, 45h
		db 12h,	0A0h, 0, 8Bh, 44h, 16h,	2Bh, 6,	90h, 91h, 5, 80h
		db 0, 89h, 45h,	16h, 0BBh, 0DEh, 78h, 2Eh, 8Bh,	7, 89h
		db 45h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh, 83h, 0C3h
		db 4, 89h, 5Dh,	10h, 0C7h, 45h,	1Ah, 2 dup(0), 0E8h, 20h
		db 0B6h, 25h, 7, 0, 89h, 45h, 1Ch, 0C3h
		db 83h,	7Ch, 20h, 0, 75h, 3, 0E9h, 8Ch,	0, 0B4h, 11h, 0CDh
		db 80h,	84h, 0C0h, 75h,	6, 0C7h, 6, 88h, 8Eh, 11h, 0, 0FFh
		db 4Ch,	20h, 8Bh, 44h, 1Ch, 3, 44h, 16h, 3Dh, 60h, 0, 7Dh
		db 8, 0B8h, 60h, 0, 0C7h, 44h, 20h, 2 dup(0), 3Dh, 0C0h
		db 0, 7Eh, 8, 0B8h, 0C0h, 0, 0C7h, 44h,	20h, 2 dup(0)
		db 89h,	44h, 16h, 8Bh, 1Eh, 9Ch, 91h, 83h, 0E3h, 1, 0D1h
		db 0E3h, 53h, 2Eh, 8Bh,	9Fh, 0FBh, 94h,	0BFh, 3Bh, 93h
		db 2Eh,	8Bh, 7,	2Eh, 89h, 5, 2Eh, 8Bh, 47h, 2, 2Eh, 89h
		db 45h,	2, 2Eh,	8Bh, 47h, 4, 2Eh, 89h, 45h, 0Ch, 2Eh, 8Bh
		db 47h,	6, 2Eh,	89h, 45h, 0Eh, 5Bh, 2Eh, 8Bh, 9Fh, 0FFh
		db 94h,	0BFh, 43h, 93h,	2Eh, 8Bh, 7, 2Eh, 89h, 5, 2Eh
		db 8Bh,	47h, 2,	2Eh, 89h, 45h, 2, 2Eh, 8Bh, 47h, 4, 2Eh
		db 89h,	45h, 0Ch, 2Eh, 8Bh, 47h, 6, 2Eh, 89h, 45h, 0Eh
		db 0C3h, 83h, 3Eh, 32h,	8Fh, 10h, 7Dh, 12h, 0E8h, 7Ah
		db 0B5h, 0A9h, 0, 20h, 75h, 0Ah, 25h, 7, 0, 5, 2, 0, 89h
		db 44h,	30h, 0C3h, 0BAh, 0FDh, 0FFh, 0A9h, 0, 40h, 75h
		db 3, 0BAh, 3, 0, 25h, 7, 0, 5,	8, 0, 89h, 44h,	20h, 89h
		db 54h,	1Ch, 0C3h, 81h,	3Eh, 90h, 91h, 60h, 1, 7Dh, 18h
		db 56h,	0B8h, 6, 0, 0BBh, 9, 0,	8Bh, 54h, 16h, 2Bh, 16h
		db 90h,	91h, 0B9h, 38h,	0, 0BEh, 0E7h, 92h, 0E8h, 0E4h
		db 7Ch,	5Eh, 0C3h, 0C7h, 44h, 4, 3Eh, 8Ch, 81h,	3Eh, 90h
		db 91h,	60h, 1,	7Dh, 18h, 56h, 0B8h, 6,	0, 0BBh, 9, 0
		db 8Bh,	54h, 16h, 2Bh, 16h, 90h, 91h, 0B9h, 38h, 0, 0BEh
		db 0E7h, 92h, 0E8h, 0E0h, 7Ch, 5Eh, 0C3h, 33h, 0DBh, 81h
		db 3Eh,	0E6h, 0FCh, 80h, 0, 7Fh, 3, 83h, 0CBh, 2, 81h
		db 3Eh,	0E2h, 0FCh, 80h, 0, 7Fh, 3, 83h, 0CBh, 4, 2Eh
		db 8Bh,	0BFh, 3, 95h, 81h, 0C7h, 8Bh, 93h, 0C3h, 0A1h
		db 90h,	91h, 1,	6, 0E6h, 0FCh, 0A1h, 90h, 91h, 1, 6, 0EEh
		db 0FCh, 81h, 3Eh, 0E6h, 0FCh, 0B0h, 1,	7Dh, 4Bh, 0E8h
		db 0C5h, 0FFh, 2Eh, 8Bh, 0Dh, 83h, 0C7h, 2, 51h, 2Eh, 83h
		db 3Dh,	0, 74h,	32h, 2Eh, 8Bh, 45h, 2, 0A3h, 0F2h, 0FCh
		db 0A1h, 0EAh, 0FCh, 39h, 6, 0F2h, 0FCh, 7Fh, 2Ah, 2Eh
		db 8Bh,	45h, 4,	0A3h, 0F6h, 0FCh, 0A1h,	0F2h, 0FCh, 0A3h
		db 0FAh, 0FCh, 83h, 6, 0FAh, 0FCh, 0Fh,	0A1h, 0F6h, 0FCh
		db 0A3h, 0FEh, 0FCh, 83h, 6, 0FEh, 0FCh, 0Fh, 0E8h, 32h
		db 82h,	75h, 0Ch, 83h, 0C7h, 8,	59h, 0E2h, 0C1h, 0EBh
		db 1, 59h, 33h,	0C0h, 0C3h, 0BBh, 0CEh,	98h, 89h, 7Fh
		db 0Ch,	8Bh, 0FBh, 59h,	33h, 0C0h, 48h,	0C3h, 0BBh, 0CEh
		db 98h,	8Bh, 7Fh, 0Ch, 2Eh, 0C7h, 5, 2 dup(0), 2Eh, 8Bh
		db 5Dh,	2, 2Eh,	8Bh, 45h, 4, 0D1h, 0E8h, 0D1h, 0E8h, 0D1h
		db 0E8h, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0BAh, 14h
		db 0, 0F7h, 0E2h, 3, 0D8h, 0C7h, 87h, 4	dup(0),	0BAh, 53h
		db 8, 2Eh, 8Bh,	45h, 2,	5, 8, 0, 2Eh, 8Bh, 5Dh,	4, 2Bh
		db 1Eh,	90h, 91h, 83h, 0C3h, 8,	0BDh, 30h, 12h,	0E9h, 0C7h
		db 0A5h, 8Bh, 44h, 28h,	0A3h, 0E2h, 0FCh, 8Bh, 44h, 2Ah
		db 0A3h, 0E6h, 0FCh, 8Bh, 44h, 2Ch, 0A3h, 0EAh,	0FCh, 8Bh
		db 44h,	2Eh, 0A3h, 0EEh, 0FCh, 0A1h, 90h, 91h, 1, 6, 0E6h
		db 0FCh
		db 0A1h, 90h, 91h, 1, 6, 0EEh, 0FCh, 0E8h, 0FDh, 0FEh
		db 2Eh,	8Bh, 0Dh, 83h, 0C7h, 2,	51h, 2Eh, 83h, 3Dh, 0
		db 75h,	52h, 2Eh, 8Bh, 45h, 2, 0A3h, 0F2h, 0FCh, 2Eh, 8Bh
		db 45h,	4, 0A3h, 0F6h, 0FCh, 0A1h, 0F2h, 0FCh, 0A3h, 0FAh
		db 0FCh, 83h, 6, 0FAh, 0FCh, 0Fh, 0A1h,	0F6h, 0FCh, 0A3h
		db 0FEh, 0FCh, 83h, 6, 0FEh, 0FCh, 0Fh,	0E8h, 73h, 81h
		db 74h,	29h, 2Eh, 0C7h,	5, 1, 0, 0A1h, 0F6h, 0FCh, 8Bh
		db 1Eh,	0F2h, 0FCh, 0D1h, 0E8h,	0D1h, 0E8h, 0D1h, 0E8h
		db 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0BAh, 14h, 0, 0F7h
		db 0E2h, 3, 0D8h, 2Eh, 8Bh, 45h, 6, 89h, 87h, 2	dup(0)
		db 0EBh, 7, 83h, 0C7h, 8, 59h, 0E2h, 0A1h, 0C3h, 59h, 0C3h
		db 2Eh,	8Bh, 0Ch, 83h, 0C6h, 2,	2Eh, 0C7h, 4, 1, 0, 83h
		db 0C6h, 8, 0E2h, 0F6h,	0C3h, 0C7h, 6, 0A8h, 91h, 0E0h
		db 9, 0C7h, 6, 0AAh, 91h, 0FFh,	11h, 0C7h, 6, 0ACh, 8Eh
		db 0A0h, 0Fh, 0C7h, 6, 0AEh, 8Eh, 0B0h,	4, 0C6h, 6, 30h
		db 92h,	0, 0E8h, 1, 82h, 0BFh, 4Ah, 90h, 0E8h, 55h, 79h
		db 0C7h, 4, 50h, 0, 0C7h, 44h, 2, 0AEh,	89h, 0C7h, 44h
		db 4, 3Eh, 8Ch,	0C7h, 44h, 6, 45h, 87h,	0C7h, 44h, 48h
		db 2 dup(0), 0C6h, 44h,	4Ah, 0FFh, 0C6h, 44h, 4Bh, 0FFh
		db 0C7h, 44h, 16h, 60h,	0, 2Eh,	0A1h, 2Ch, 77h,	89h, 44h
		db 24h,	0C7h, 44h, 1Ah,	2 dup(0FFh), 0C7h, 44h,	20h, 2 dup(0)
		db 0C7h, 44h, 30h, 2 dup(0), 0C7h, 44h,	22h, 2 dup(0)
		db 0C7h, 44h, 36h, 2 dup(0), 0B9h, 3, 0, 0BFh, 0B0h, 33h
		db 0E8h, 0ADh, 81h, 57h, 0BFh, 4Ah, 90h, 0E8h, 0, 79h
		db 5Fh,	0C7h, 4, 54h, 0, 0C7h, 44h, 2, 0A9h, 88h, 0C7h
		db 44h,	4, 61h,	7, 0C7h, 44h, 6, 0D5h, 87h, 2Eh, 0A1h
		db 2Eh,	77h, 89h, 44h, 24h, 0C6h, 44h, 4Ah, 0FFh, 0C6h
		db 44h,	4Bh, 0FFh, 0C7h, 44h, 48h, 2 dup(0), 8Bh, 1Dh
		db 83h,	0C7h, 2, 89h, 5Ch, 12h,	8Bh, 5,	83h, 0C7h, 2, 89h
		db 44h,	16h, 0BAh, 14h,	0, 0F7h, 0E2h, 3, 0C3h,	0D1h, 0E0h
		db 5, 2	dup(0),	89h, 44h, 0Ch, 0C7h, 44h, 1Ah, 2 dup(0)
		db 49h,	89h, 4Ch, 22h, 41h, 0E2h, 0A3h,	0C7h, 6, 0, 92h
		db 3, 0, 0C7h, 6, 2, 92h, 2 dup(0), 0C6h, 6, 2Dh, 92h
		db 0, 0C6h, 6, 2Eh, 92h, 0, 0C6h, 6, 2Fh, 92h, 2, 0C7h
		db 6, 0D4h, 91h, 2 dup(0), 0C7h, 6, 0D6h, 91h, 2 dup(0)
		db 0C7h, 6, 0D8h, 91h, 2 dup(0), 0C7h, 6, 0DAh,	91h, 2 dup(0)
		db 0C7h, 6, 0DCh, 91h, 2 dup(0), 0C7h, 6, 0DEh,	91h, 2 dup(0)
		db 0C7h, 6, 0E0h, 91h, 2 dup(0), 0C7h, 6, 0E2h,	91h, 2 dup(0)
		db 0BEh, 8Bh, 93h, 83h,	0C6h, 0, 0E8h, 0CDh, 0FEh, 0BEh
		db 8Bh,	93h, 83h, 0C6h,	62h, 0E8h, 0C4h, 0FEh, 0BEh, 8Bh
		db 93h,	81h, 0C6h, 0C4h, 0, 0E8h, 0BAh,	0FEh, 0BEh, 8Bh
		db 93h,	81h, 0C6h, 16h,	1, 0E8h, 0B0h, 0FEh, 0BBh, 0CEh
		db 98h,	0C7h, 7, 2 dup(0), 89h,	5Fh, 0Ah, 89h, 5Fh, 8
		db 0C7h, 47h, 2, 61h, 7, 0C7h, 47h, 4, 61h, 7, 0C7h, 47h
		db 6, 18h, 8Dh,	0C7h, 6, 0F4h, 91h, 0D2h, 45h, 0C7h, 6
		db 0F6h, 91h, 6Ah, 0AAh, 0A1h, 1Ah, 99h, 0A3h, 76h, 8Eh
		db 0A1h, 1Ah, 99h, 0D1h, 0E0h, 0A3h, 78h, 8Eh, 0BEh, 8Bh
		db 93h,	0BFh, 0Ch, 0D1h, 0B9h, 0B4h, 0,	2Eh, 8Bh, 4, 83h
		db 0C6h, 2, 0ABh, 0E2h,	0F7h, 0C7h, 6, 72h, 8Eh, 55h, 1Bh
		db 0C3h, 0C0h, 49h, 0
		db 4Ah,	40h, 4Bh, 80h, 4Bh, 40h, 4Ah, 80h, 4Ah,	0C0h, 4Bh
		db 0, 4Ch, 0C0h, 4Ah, 0, 4Bh, 40h, 4Ch,	80h, 4Ch, 0C0h
		db 4Ch,	0, 4Dh,	0C0h, 4Fh, 0, 50h, 40h,	4Dh, 80h, 4Dh
		db 40h,	50h, 80h, 50h, 0C0h, 52h, 0, 53h, 40h, 55h, 80h
		db 55h,	40h, 53h, 80h, 53h, 0C0h, 55h, 0, 56h, 0C0h, 53h
		db 0, 54h, 40h,	56h, 80h, 56h, 40h, 54h, 80h, 54h, 0C0h
		db 56h,	0, 57h,	80h, 29h, 80h, 29h, 80h, 5Fh, 0C0h, 5Fh
		db 0, 60h, 40h,	60h, 80h, 60h, 0C0h, 60h, 1, 61h, 7Ch
		db 79h,	2 dup(0), 0FCh,	0FFh, 92h, 79h,	3, 0, 0FDh, 0FFh
		db 0A8h, 79h, 4, 3 dup(0), 0BEh, 79h, 3, 0, 3, 0, 0D4h
		db 79h,	2 dup(0), 4, 0,	0EAh, 79h, 0FDh, 0FFh, 3, 2 dup(0)
		db 7Ah,	0FCh, 0FFh, 2 dup(0), 16h, 7Ah,	0FCh, 0FFh, 0FDh
		db 0FFh, 6Dh, 90h, 75h,	90h, 7Dh, 90h, 7Dh, 90h, 7Dh, 90h
		db 75h,	90h, 6Dh, 90h, 6Dh, 90h, 6Dh, 90h, 75h,	90h, 7Dh
		db 90h,	7Dh, 90h, 7Dh, 90h, 75h, 90h, 6Dh, 90h,	6Dh, 90h
		db 6Dh,	90h, 75h, 90h, 7Dh, 90h, 85h, 90h, 8Dh,	90h, 95h
		db 90h,	9Dh, 90h, 0A5h,	90h, 0A5h, 90h,	0A5h, 90h, 9Dh
		db 90h,	95h, 90h, 95h, 90h, 95h, 90h, 9Dh, 90h,	0A5h, 90h
		db 0A5h, 90h, 0A5h, 90h, 9Dh, 90h, 95h,	90h, 95h, 90h
		db 95h,	90h, 9Dh, 90h, 0A5h, 90h, 0ADh,	90h, 0B5h, 90h
		db 0C1h, 3Dh, 1, 3Eh, 41h, 40h,	81h, 40h, 0C1h,	40h, 1
		db 2 dup(41h), 45h, 81h, 45h, 2	dup(41h), 81h, 41h, 0C1h
		db 45h,	1, 46h,	0C1h, 41h, 1, 42h, 41h,	46h, 81h, 46h
		db 41h,	42h, 81h, 42h, 0C1h, 46h, 1, 47h, 0C1h,	42h, 1
		db 43h,	41h, 47h, 81h, 47h, 41h, 43h, 81h, 43h,	0C1h, 47h
		db 1, 48h, 0C1h, 43h, 1, 44h, 41h, 48h,	81h, 48h, 41h
		db 44h,	81h, 44h, 0C1h,	48h, 1,	49h, 0C1h, 44h,	1, 45h
		db 41h,	49h, 81h, 49h, 0C1h, 5Bh, 1, 5Ch, 0C1h,	57h, 1
		db 58h,	41h, 58h, 81h, 58h, 0C1h, 58h, 1, 59h, 41h, 59h
		db 81h,	59h, 41h, 59h, 1, 59h, 0C1h, 58h, 81h, 58h, 41h
		db 58h,	1, 58h,	0C1h, 57h, 0C1h, 59h, 1, 5Ah, 41h, 5Ah
		db 81h,	5Ah, 0C1h, 5Ah,	1, 5Bh,	41h, 5Bh, 81h, 5Bh, 41h
		db 5Bh,	1, 5Bh,	0C1h, 5Ah, 81h,	5Ah, 41h, 5Ah, 1, 5Ah
		db 0C1h, 59h, 0CEh, 35h, 82h, 7Fh, 0DBh, 7Fh, 18h, 80h
		db 0A3h, 80h, 0BBh, 80h, 60h, 33h, 0D1h, 80h, 0D7h, 80h
		db 0DDh, 80h, 0E3h, 80h, 0E9h, 80h, 0EFh, 80h, 0Bh, 0
		db 14h,	1, 0F5h, 80h, 5, 2Ah, 0FAh, 0, 18h, 1, 14h, 81h
		db 0B5h, 34h, 32h, 0, 18h, 1, 14h, 81h,	0B5h, 34h, 32h
		db 0, 18h, 1, 14h, 81h,	0B5h, 34h, 32h,	0, 18h,	1, 14h
		db 81h,	0B5h, 34h, 32h,	0, 18h,	1, 14h,	81h, 0B5h, 34h
		db 32h,	0, 18h,	1, 14h,	81h, 0B5h, 34h,	32h, 0,	18h, 1
		db 14h,	81h, 0B5h, 34h,	32h, 0,	18h, 1,	14h, 81h, 0B5h
		db 34h,	32h, 0,	18h, 1,	14h, 81h, 0B5h,	34h, 32h, 0, 18h
		db 1, 14h, 81h,	0B5h, 34h, 32h,	0, 1Ch,	1, 26h,	81h, 85h
		db 2Fh,	64h, 0,	58h, 0,	68h, 0Bh, 3, 0,	5, 3 dup(0), 0D8h
		db 0, 68h, 0Bh,	6, 0, 4, 0, 13h, 0, 58h, 0, 68h, 0Bh, 3
		db 0, 6, 0, 1, 0, 0D8h,	0, 68h,	0Bh, 6
		db 0, 3, 0, 12h, 0, 68h, 0, 88h, 0Bh, 4, 0, 5, 0, 2, 0
		db 0C8h, 0, 88h, 0Bh, 5, 0, 4, 0, 11h, 0, 68h, 0, 88h
		db 0Bh,	4, 0, 6, 0, 3, 0, 0C8h,	0, 88h,	0Bh, 5,	0, 3, 0
		db 10h,	0, 58h,	0, 68h,	0Ah, 1,	0, 8, 0, 4, 0, 0D8h, 0
		db 68h,	0Ah, 8,	0, 1, 0, 0Ah, 0, 58h, 0, 68h, 0Ah, 1, 0
		db 8, 0, 4, 0, 0D8h, 0,	68h, 0Ah, 8, 0,	1, 0, 0Ah, 0, 58h
		db 0, 68h, 0Ah,	1, 0, 8, 0, 4, 0, 0D8h,	0, 68h,	0Ah, 8
		db 0, 1, 0, 0Ah, 0, 58h, 0, 68h, 0Ah, 1, 0, 8, 0, 4, 0
		db 0D8h, 0, 68h, 0Ah, 8, 0, 1, 0, 0Ah, 0, 0D2h,	19h, 0C1h
		db 3Bh,	1, 3Ch,	41h, 3Eh, 81h, 3Eh, 41h, 3Ch, 81h, 3Ch
		db 0C1h, 3Eh, 1, 3Fh, 0EAh, 1Ah, 0C1h, 3Bh, 1, 3Ch, 41h
		db 3Eh,	81h, 3Eh, 41h, 3Ch, 81h, 3Ch, 0C1h, 3Eh, 1, 3Fh
		db 52h,	1Ch, 0C1h, 3Bh,	1, 3Ch,	41h, 3Eh, 81h, 3Eh, 41h
		db 3Ch,	81h, 3Ch, 0C1h,	3Eh, 1,	3Fh, 0A4h, 1Ch,	0C1h, 3Bh
		db 1, 3Ch, 41h,	3Eh, 81h, 3Eh, 41h, 3Ch, 81h, 3Ch, 0C1h
		db 3Eh,	1, 3Fh,	0AEh, 1Ch, 0C1h, 3Ch, 1, 3Dh, 41h, 3Fh
		db 81h,	3Fh, 41h, 3Dh, 81h, 3Dh, 0C1h, 3Fh, 1, 40h, 60h
		db 1Ch,	0C1h, 3Ch, 1, 3Dh, 41h,	3Fh, 81h, 3Fh, 41h, 3Dh
		db 81h,	3Dh, 0C1h, 3Fh,	1, 40h,	0F8h, 1Ah, 0C1h, 3Ch, 1
		db 3Dh,	41h, 3Fh, 81h, 3Fh, 41h, 3Dh, 81h, 3Dh,	0C1h, 3Fh
		db 1, 40h, 0E0h, 19h, 0C1h, 3Ch, 1, 3Dh, 41h, 3Fh, 81h
		db 3Fh,	41h, 3Dh, 81h, 3Dh, 0C1h, 3Fh, 1, 40h, 55h, 1Bh
		db 13h,	51h, 0EDh, 52h,	36h, 68h, 5Ah, 68h, 41h, 61h, 81h
		db 61h,	0C1h, 61h, 41h,	5Ch, 4 dup(0), 1, 62h, 41h, 62h
		db 81h,	62h, 4 dup(0), 41h, 5Ch, 2 dup(0), 40h,	15h, 4 dup(0)
		db 80h,	15h, 2 dup(0), 41h, 0Dh, 41h, 5Ch, 81h,	0Dh, 41h
		db 5Ch,	81h, 5Ch, 0C1h,	5Ch, 1,	5Dh, 41h, 5Dh, 2 dup(0)
		db 1, 34h, 4 dup(0), 41h, 3Ah, 4 dup(0), 1, 3Ah, 4 dup(0)
		db 81h,	3Ah, 2 dup(0), 0C1h, 1Ch, 1, 1Dh, 41h, 1Dh, 81h
		db 1Dh,	0C1h, 1Dh, 1, 1Eh, 0C1h, 21h, 1, 22h, 40h, 22h
		db 80h,	22h, 0C1h, 22h,	1, 23h,	0C1h, 26h, 1, 27h, 40h
		db 27h,	80h, 27h, 0C0h,	27h, 1,	28h, 0C1h, 2Bh,	1, 2Ch
		db 40h,	2Ch, 80h, 2Ch, 0C0h, 2Ch, 1, 2Dh, 0C1h,	30h, 1
		db 31h,	41h, 31h, 81h, 31h, 0C1h, 31h, 1, 32h, 0C1h, 35h
		db 1, 36h, 41h,	36h, 81h, 36h, 0C1h, 36h, 1, 37h, 0C1h
		db 3Ah,	1, 3Bh,	4 dup(0), 41h, 3Bh, 81h, 3Bh, 0C1h, 35h
		db 1, 36h, 0C1h, 3Ah, 1, 3Bh, 0C1h, 4Eh, 1, 4Fh, 0C1h
		db 51h,	1, 52h,	0C1h, 36h, 1, 37h, 41h,	3Bh, 81h, 3Bh
		db 41h,	4Fh, 81h, 4Fh, 41h, 52h, 81h, 52h, 41h,	31h, 81h
		db 31h,	41h, 36h, 81h, 36h, 0C1h, 4Dh, 1, 4Eh, 0C1h, 50h
		db 1, 51h, 41h,	4Eh, 81h, 4Eh, 41h, 51h, 81h, 51h, 0Ch
		db 3 dup(0), 20h, 0, 0A0h, 1, 0C1h, 39h, 2 dup(0), 20h
		db 0, 90h, 1, 81h, 39h,	2 dup(0), 30h, 0, 90h, 1, 0C1h
		db 39h,	2 dup(0), 30h, 0, 80h, 1, 81h, 39h, 2 dup(0), 40h
		db 0, 80h, 1, 0C1h, 39h, 2 dup(0), 40h,	0, 70h,	1, 81h
		db 39h,	2 dup(0), 50h, 0, 70h, 1, 0C1h,	39h, 2 dup(0)
		db 50h,	0, 60h,	1, 81h,	39h, 2 dup(0), 60h, 0, 60h, 1
		db 0C1h, 39h, 2	dup(0),	60h, 0,	50h, 1,	81h, 39h, 2 dup(0)
		db 70h,	0, 50h,	1, 0C1h, 39h, 2	dup(0),	70h, 0,	40h, 1
		db 81h,	39h, 0Ch, 3 dup(0), 0C0h, 0, 50h, 2 dup(1), 39h
		db 2 dup(0), 0C0h, 0, 40h, 1, 41h, 39h,	2 dup(0), 0D0h
		db 0, 60h, 2 dup(1), 39h, 2 dup(0), 0D0h, 0, 50h, 1, 41h
		db 39h,	2 dup(0), 0E0h,	0, 70h,	2 dup(1), 39h, 2 dup(0)
		db 0E0h, 0, 60h, 1, 41h, 39h, 2	dup(0),	0F0h, 0, 80h, 2	dup(1)
		db 39h,	2 dup(0), 0F0h,	0, 70h,	1, 41h,	39h, 3 dup(0)
		db 1, 90h, 2 dup(1), 39h, 3 dup(0), 1, 80h, 1, 41h, 39h
		db 2 dup(0), 10h, 1, 0A0h, 2 dup(1), 39h, 2 dup(0), 10h
		db 1, 90h, 1, 41h, 39h,	0Ah, 3 dup(0), 30h, 0, 20h, 0
		db 41h,	39h, 2 dup(0), 30h, 0, 30h, 0, 1, 39h, 2 dup(0)
		db 40h,	0, 30h,	0, 41h,	39h, 2 dup(0), 40h, 0, 40h, 0
		db 1, 39h, 2 dup(0), 50h, 0, 40h, 0, 41h, 39h, 2 dup(0)
		db 50h,	0, 50h,	0, 1, 39h, 2 dup(0), 60h, 0, 50h, 0, 41h
		db 39h,	2 dup(0), 60h, 0, 60h, 0, 1, 39h, 2 dup(0), 70h
		db 0, 60h, 0, 41h, 39h,	2 dup(0), 70h, 0, 70h, 0, 1, 39h
		db 0Ah,	3 dup(0), 0C0h,	0, 60h,	0, 81h,	39h, 2 dup(0)
		db 0C0h, 0, 70h, 0, 0C1h, 39h, 2 dup(0), 0D0h, 0, 50h
		db 0, 81h, 39h,	2 dup(0), 0D0h,	0, 60h,	0, 0C1h, 39h, 2	dup(0)
		db 0E0h, 0, 40h, 0, 81h, 39h, 2	dup(0),	0E0h, 0, 50h, 0
		db 0C1h, 39h, 2	dup(0),	0F0h, 0, 30h, 0, 81h, 39h, 2 dup(0)
		db 0F0h, 0, 40h, 0, 0C1h, 39h, 3 dup(0), 1, 20h, 0, 81h
		db 39h,	3 dup(0), 1, 30h, 0, 0C1h, 39h,	73h, 93h, 7Bh
		db 93h,	83h, 93h, 7Bh, 93h, 53h, 93h, 5Bh, 93h,	63h, 93h
		db 6Bh,	93h, 62h, 0, 16h, 1, 2 dup(0), 0C4h, 0,	44h, 79h
		db 36h,	79h, 28h, 79h, 1Ah, 79h, 0Ch, 79h, 6Eh,	79h, 60h
		db 79h,	52h, 79h, 16h, 7Ah, 0, 7Ah, 0EAh, 79h, 0D4h, 79h
		db 0BEh, 79h, 0A8h, 79h, 92h, 79h, 7Ch,	79h, 65h, 2Bh
		db 0B5h, 2Ah, 5, 2Ah, 0D5h, 2Eh, 25h, 2Eh, 75h,	2Dh, 0C5h
		db 2Ch,	15h, 2Ch, 0Bh, 36h, 0BBh, 36h, 0B5h, 34h, 5Bh
		db 35h,	0Bh, 36h, 0BBh,	36h, 0B5h, 34h,	5Bh, 35h, 73h
		db 33h,	0CDh, 32h, 1Dh,	32h, 77h, 31h, 0DBh, 30h, 35h
		db 30h,	85h, 2Fh, 0Fh, 34h, 5 dup(0), 8, 0, 3, 0, 6, 0
		db 0Ch,	0, 6, 0, 18h, 0, 2, 0, 2, 0, 6,	0, 6, 0, 14h, 0
		db 0E0h, 0, 28h, 0, 1, 0, 6, 0,	18h, 0,	18h, 0,	8, 0, 10h
		db 0, 7, 0, 50h, 0, 14h, 0, 14h, 0, 0Ch, 0, 10h, 0, 14h
		db 0, 6, 0, 1Eh, 0, 0Ah, 0, 0D4h, 0, 2Ch, 1, 0Bh, 48h
		db 53h,	8, 0A7h, 3Ah, 54h, 96h,	3, 5 dup(0), 0E0h, 0, 2Ch
		db 1, 0Bh, 48h,	53h, 8,	0A7h, 3Ah, 7Ah,	96h, 3,	5 dup(0)
		db 0E4h, 0, 0F4h, 1, 0FBh, 99h,	53h, 8,	39h, 3Ah, 90h
		db 96h,	0Ch, 0,	2 dup(0FFh), 0E4h, 0, 0Eh, 0, 3, 9Ah, 53h
		db 8, 39h, 3Ah,	94h, 96h, 0Ch, 0, 2 dup(0FFh), 0E4h, 0
		db 1Ch,	0, 3, 9Ah, 53h,	8, 39h,	3Ah, 94h, 96h, 0Ch, 0
		db 2 dup(0FFh),	0E4h, 0, 2Ah, 0, 3, 9Ah, 53h, 8, 39h, 3Ah
		db 94h,	96h, 0Ch, 0, 2 dup(0FFh), 0E4h,	0
		db 38h,	0, 3, 9Ah, 53h,	8, 39h,	3Ah, 94h, 96h, 0Ch, 0
		db 2 dup(0FFh),	0E4h, 0, 46h, 0, 3, 9Ah, 53h, 8, 39h, 3Ah
		db 94h,	96h, 0Ch, 0, 2 dup(0FFh), 0E4h,	0, 54h,	0, 0Bh
		db 9Ah,	53h, 8,	39h, 3Ah, 98h, 96h, 0Ch, 0, 2 dup(0FFh)
		db 2 dup(0), 0E8h, 0, 0C8h, 0, 2Bh, 9Ah, 53h, 8, 0A7h
		db 3Ah,	9Ch, 96h, 3, 5 dup(0), 0ECh, 0,	64h, 0,	0Bh, 48h
		db 53h,	8, 0A7h, 3Ah, 0A0h, 96h, 3, 5 dup(0), 35h, 0DEh
		db 1, 0, 85h, 0DFh, 1, 0, 0D5h,	0E0h, 1, 0, 1Bh, 0E2h
		db 1, 0, 61h, 0E3h, 1, 0, 0B1h,	0E4h, 1, 0, 1, 0E6h, 1
		db 0, 47h, 0E7h, 1, 3 dup(0), 0E2h, 41h, 54h, 96h, 8Dh
		db 0E8h, 3, 0, 0C9h, 0E9h, 3, 0, 0F1h, 0EAh, 3,	0, 41h
		db 0ECh, 3, 3 dup(0), 0E2h, 41h, 7Ah, 96h, 0FFh, 73h, 2	dup(0)
		db 9Fh,	6Bh, 2 dup(0), 5Fh, 6Eh, 2 dup(0), 21h,	80h, 2 dup(0)
		db 95h,	41h, 1,	0, 45h,	42h, 1,	0, 0F5h, 42h, 1, 0, 0A5h
		db 43h,	1, 0, 55h, 44h,	1, 0, 5, 45h, 1, 0, 0B5h, 45h
		db 1, 0, 65h, 46h, 1, 3	dup(0),	0E2h, 41h, 0A0h, 96h, 11h
		db 88h,	2, 0, 0C1h, 88h, 2, 0, 5Dh, 89h, 2, 0, 0Dh, 8Ah
		db 2, 3	dup(0),	0E2h, 41h, 0C6h, 96h, 21h, 80h,	2, 0, 0D1h
		db 80h,	2, 0, 77h, 81h,	2, 0, 27h, 82h,	2, 3 dup(0), 0E2h
		db 41h,	0DCh, 96h, 79h,	85h, 2,	0, 15h,	86h, 2,	0, 0C5h
		db 86h,	2, 0, 61h, 87h,	2, 3 dup(0), 0E2h, 41h,	0F2h, 96h
		db 0CDh, 82h, 2, 0, 7Dh, 83h, 2, 0, 23h, 84h, 2, 0, 0D3h
		db 84h,	2, 3 dup(0), 0E2h, 41h,	8, 97h,	0C5h, 0DBh, 2
		db 0, 75h, 0DCh, 2, 0, 11h, 0DDh, 2, 0,	99h, 0DDh, 2, 3	dup(0)
		db 0E2h, 41h, 1Eh, 97h,	0A5h, 0B4h, 2, 0, 35h, 0B7h, 2
		db 0, 0B1h, 0B9h, 2, 0,	35h, 0B7h, 2, 3	dup(0),	0E2h, 41h
		db 34h,	97h, 3Dh, 0B2h,	2 dup(0), 8Dh, 0AAh, 2,	0, 1Dh
		db 0ADh, 2, 0, 0ADh, 0AFh, 2, 0, 1Dh, 0ADh, 2, 3 dup(0)
		db 0E2h, 41h, 4Eh, 97h,	0B5h, 0BBh, 2 dup(0), 1, 0A1h
		db 2, 0, 7Dh, 0A3h, 2, 0, 0F9h,	0A5h, 2, 0, 7Dh, 0A3h
		db 2, 3	dup(0),	0E2h, 41h, 68h,	97h, 0F5h, 0C5h, 2 dup(0)
		db 45h,	0BEh, 2, 0, 0D5h, 0C0h,	2, 0, 65h, 0C3h, 2, 0
		db 0D5h, 0C0h, 2, 3 dup(0), 0E2h, 41h, 82h, 97h, 0FDh
		db 0A7h, 2 dup(0), 0E7h, 5Dh, 2, 0, 97h, 5Eh, 2, 0, 47h
		db 5Fh,	2, 0, 0EDh, 5Fh, 2, 3 dup(0), 0E2h, 41h, 9Ch, 97h
		db 7Bh,	58h, 2,	0, 2Bh,	59h, 2,	0, 0DBh, 59h, 2, 0, 81h
		db 5Ah,	2, 3 dup(0), 0E2h, 41h,	0B2h, 97h, 9, 66h, 2, 0
		db 0B9h, 66h, 2, 0, 5Fh, 67h, 2, 0, 0Fh, 68h, 2, 3 dup(0)
		db 0E2h, 41h, 0C8h, 97h, 53h, 63h, 2, 0, 3, 64h, 2, 0
		db 0B3h, 64h, 2, 0, 59h, 65h, 2, 3 dup(0), 0E2h, 41h, 0DEh
		db 97h,	0C5h, 55h, 2, 0, 75h, 56h, 2, 0, 1Bh, 57h, 2, 0
		db 0CBh, 57h, 2, 3 dup(0), 0E2h, 41h, 0F4h, 97h, 31h, 5Bh
		db 2, 0, 0E1h, 5Bh, 2, 0, 87h, 5Ch, 2, 0, 37h, 5Dh, 2
		db 3 dup(0), 0E2h, 41h,	0Ah, 98h, 9Dh, 60h, 2, 0, 4Dh
		db 61h,	2, 0, 0FDh, 61h, 2, 0, 0A3h, 62h, 2, 3 dup(0)
		db 0E2h, 41h, 20h, 98h,	0BFh, 68h, 2, 0
		db 6Fh,	69h, 2,	0, 15h,	6Ah, 2,	0, 0C5h, 6Ah, 2, 3 dup(0)
		db 0E2h, 41h, 36h, 98h,	0A9h, 8Ah, 4, 0, 0C9h, 8Eh, 4
		db 3 dup(0), 0E2h, 41h,	4Ch, 98h, 61h, 93h, 2 dup(0), 49h
		db 98h,	4, 0, 69h, 9Ch,	4, 3 dup(0), 0E2h, 41h,	5Eh, 98h
		db 9, 7Bh, 2 dup(0), 91h, 7Bh, 2, 0, 19h, 7Ch, 2, 0, 0A1h
		db 7Ch,	14h, 0,	19h, 7Ch, 2, 0,	91h, 7Bh, 2, 3 dup(0)
		db 0E2h, 41h, 6Ch, 98h,	7Fh, 79h, 2 dup(0), 0E9h, 2Bh
		db 3, 0, 15h, 2Eh, 3, 3	dup(0),	0E2h, 41h, 8Eh,	98h, 69h
		db 0EDh, 1, 0, 0C9h, 0EDh, 1, 0, 5Bh, 0EEh, 1, 0, 0A7h
		db 0EEh, 1, 3 dup(0), 0E2h, 41h, 9Ch, 98h, 0D9h, 39h, 2	dup(0)
		db 0D9h, 39h, 2, 0, 79h, 3Bh, 1, 0, 69h, 3Dh, 2	dup(0)
		db 79h,	3Bh, 2,	3 dup(0), 0E2h,	41h, 0B2h, 98h,	1Dh, 34h
		db 2 dup(0), 1Dh, 34h, 2, 0, 0BDh, 35h,	1, 0, 0ADh, 37h
		db 2 dup(0), 0BDh, 35h,	2, 3 dup(0), 0E2h, 41h,	0CCh, 98h
		db 35h,	9, 3, 0, 71h, 0Ah, 3, 0, 0ADh, 0Bh, 3, 0, 71h
		db 0Ah,	3, 3 dup(0), 0E2h, 41h,	0E6h, 98h, 0ADh, 0Bh, 3
		db 0, 0E9h, 0Ch, 3, 0, 89h, 0Eh, 3, 0, 29h, 10h, 3, 0
		db 89h,	0Eh, 3,	0, 0E9h, 0Ch, 3, 0, 0ADh, 0Bh, 2 dup(0)
		db 29h,	0, 3, 0, 65h, 1, 3, 0, 0A1h, 2,	3, 0, 65h, 1, 3
		db 3 dup(0), 0E2h, 41h,	18h, 99h, 0A1h,	2, 3, 0, 0DDh
		db 2 dup(3), 0,	7Dh, 5,	3, 0, 1Dh, 7, 3, 0, 7Dh, 5, 3
		db 0, 0DDh, 2 dup(3), 0, 0A1h, 2, 2 dup(0), 15h, 47h, 1
		db 0, 0BBh, 47h, 1, 0, 43h, 48h, 1, 0, 0BBh, 47h, 1, 3 dup(0)
		db 0E2h, 41h, 4Ah, 99h,	0ADh, 48h, 1, 0, 5Dh, 49h, 1, 0
		db 0EFh, 49h, 1, 0, 5Dh, 49h, 1, 3 dup(0), 0E2h, 41h, 60h
		db 99h,	77h, 4Ah, 1, 0,	27h, 4Bh, 1, 0,	0D7h, 4Bh, 1, 0
		db 27h,	4Bh, 1,	3 dup(0), 0E2h,	41h, 76h, 99h, 87h, 4Ch
		db 1, 0, 37h, 4Dh, 1, 0, 0C9h, 4Dh, 1, 0, 37h, 4Dh, 1
		db 3 dup(0), 0E2h, 41h,	8Ch, 99h, 51h, 4Eh, 1, 0, 0F7h
		db 4Eh,	1, 0, 7Fh, 4Fh,	1, 0, 0F7h, 4Eh, 1, 3 dup(0), 0E2h
		db 41h,	0A2h, 99h, 0E9h, 4Fh, 1, 0, 99h, 50h, 1, 0, 2Bh
		db 51h,	1, 0, 99h, 50h,	1, 3 dup(0), 0E2h, 41h,	0B8h, 99h
		db 0B3h, 51h, 1, 0, 63h, 52h, 1, 0, 13h, 53h, 1, 0, 63h
		db 52h,	1, 3 dup(0), 0E2h, 41h,	0CEh, 99h, 0C3h, 53h, 1
		db 0, 73h, 54h,	1, 0, 5, 55h, 1, 0, 73h, 54h, 1, 3 dup(0)
		db 0E2h, 41h, 0E4h, 99h, 0C3h, 0E8h, 10h, 0AEh,	0BFh, 0E9h
		db 0ACh, 0EBh, 0Eh, 0E8h, 8, 0AEh, 0BFh, 0F9h, 0ACh, 0EBh
		db 6, 0E8h, 0, 0AEh, 0BFh, 9, 0ADh, 8Bh, 5Ch, 1Ch, 83h
		db 0C3h, 10h, 0D1h, 0EBh, 0D1h,	0EBh, 0D1h, 0EBh, 0D1h
		db 0EBh, 83h, 0E3h, 0Eh, 2Eh, 8Bh, 1, 89h, 44h,	0Ch, 0E9h
		db 5Eh,	9Bh, 0E8h, 0DDh, 0ADh, 8Bh, 44h, 12h, 85h, 0C0h
		db 79h,	15h, 8Bh, 5Ch, 16h, 85h, 0DBh, 79h, 23h, 3Bh, 0D8h
		db 7Ch,	5, 0BBh, 2 dup(0), 0EBh, 34h, 0BBh, 2, 0, 0EBh
		db 2Fh,	8Bh, 5Ch, 16h, 85h, 0DBh, 79h, 1Ah, 2Dh, 40h, 1
		db 0F7h, 0D8h, 3Bh, 0D8h, 7Ch, 0EBh, 0BBh, 4, 0, 0EBh
		db 1Ah,	81h, 0EBh, 0C0h, 0, 0F7h, 0DBh,	3Bh, 0D8h, 7Ch
		db 0Dh,	0EBh
		db 0D5h, 2Dh, 40h, 1, 81h, 0EBh, 0C0h, 0, 3Bh, 0D8h, 7Ch
		db 0E4h, 0BBh, 6, 0, 2Eh, 8Bh, 0BFh, 19h, 0ADh,	2Eh, 8Bh
		db 5, 89h, 44h,	0Ch, 2Eh, 8Bh, 45h, 2, 89h, 44h, 0Eh, 83h
		db 0C7h, 4, 89h, 7Ch, 10h, 0C7h, 44h, 2, 0Bh, 48h, 0E9h
		db 0F0h, 9Ah, 81h, 3Eh,	0A8h, 91h, 0F0h, 0Ah, 75h, 2Eh
		db 81h,	3Eh, 90h, 91h, 0F0h, 0Ah, 75h, 26h, 0C7h, 6, 0AAh
		db 91h,	0F0h, 0Ah, 0A1h, 9Ah, 91h, 0E8h, 67h, 0A7h, 0C7h
		db 6, 9Ah, 91h,	2 dup(0), 80h, 3Eh, 35h, 92h, 0, 74h, 7
		db 0C6h, 6, 35h, 92h, 0, 0EBh, 6, 0C7h,	6, 0A8h, 91h, 2	dup(0)
		db 81h,	3Eh, 90h, 91h, 0D0h, 0,	7Fh, 3Ch, 83h, 3Eh, 0AAh
		db 91h,	20h, 7Dh, 6, 0C7h, 6, 0AAh, 91h, 20h, 0, 0E8h
		db 3Bh,	0, 0C6h, 6, 33h, 92h, 0, 0C6h, 6, 34h, 92h, 0
		db 80h,	3Eh, 31h, 92h, 0, 74h, 29h, 80h, 3Eh, 32h, 92h
		db 0, 74h, 22h,	80h, 3Eh, 61h, 8Fh, 0, 75h, 1Bh, 0B9h
		db 9, 0, 0E8h, 0D8h, 7Ah, 0C6h,	6, 61h,	8Fh, 0FFh, 0EBh
		db 0Eh,	81h, 3Eh, 0AAh,	91h, 30h, 0Ah, 7Dh, 6, 0C7h, 6
		db 0AAh, 91h, 30h, 0Ah,	0C3h, 80h, 3Eh,	31h, 92h, 0, 75h
		db 10h,	80h, 3Eh, 33h, 92h, 0, 75h, 9, 0C7h, 6,	0FAh, 0FCh
		db 2 dup(0), 0E8h, 2Ah,	0, 0C3h, 83h, 3Eh, 0FAh, 0FCh
		db 0, 75h, 11h,	0A1h, 0F4h, 91h, 0D1h, 0C8h, 0D1h, 0C8h
		db 0D1h, 0C8h, 0D1h, 0C8h, 0D1h, 0C8h, 0A3h, 0F4h, 91h
		db 0C3h, 0A1h, 0F6h, 91h, 0D1h,	0C8h, 0D1h, 0C8h, 0D1h
		db 0C8h, 0D1h, 0C8h, 0D1h, 0C8h, 0A3h, 0F6h, 91h, 0C3h
		db 83h,	3Eh, 8,	92h, 1,	74h, 9,	0A1h, 8, 92h, 0FFh, 6
		db 8, 92h, 0EBh, 10h, 0E8h, 0C4h, 0FFh,	25h, 7,	0, 3Dh
		db 1, 0, 7Ch, 0F5h, 3Dh, 7, 0, 74h, 0F0h, 0D1h,	0E0h, 0BFh
		db 0A8h, 0DEh, 3, 0F8h,	0C7h, 6, 0EAh, 0FCh, 2 dup(0)
		db 8Bh,	3Dh, 8Bh, 45h, 2, 0A3h,	0E2h, 0FCh, 8Bh, 45h, 4
		db 2Bh,	6, 90h,	91h, 2Bh, 6, 9Ah, 91h, 0A3h, 0E6h, 0FCh
		db 0BBh, 21h, 0ADh, 2Eh, 8Bh, 17h, 83h,	0C3h, 2, 0E8h
		db 70h,	74h, 8Bh, 0EEh,	0C7h, 44h, 6, 4Dh, 9Dh,	0EBh, 0Fh
		db 57h,	8Bh, 0FEh, 0E8h, 61h, 74h, 89h,	75h, 46h, 5Fh
		db 0C7h, 44h, 6, 99h, 3Ah, 57h,	0BFh, 4Ah, 90h,	0E8h, 0ABh
		db 6Bh,	5Fh, 0C7h, 4, 50h, 0, 0A1h, 0EAh, 0FCh,	89h, 44h
		db 1Ah,	2Eh, 8Bh, 7, 29h, 6, 0EAh, 0FCh, 83h, 0C3h, 2
		db 2Eh,	8Bh, 7,	89h, 44h, 2, 83h, 0C3h,	2, 0C7h, 44h, 4
		db 53h,	8, 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 83h, 0C3h, 2, 0C7h
		db 44h,	34h, 0D0h, 7, 0C7h, 44h, 48h, 2	dup(0),	0C6h, 44h
		db 27h,	0, 0C6h, 44h, 26h, 0, 0C7h, 44h, 0Eh, 2	dup(0)
		db 89h,	7Ch, 38h, 89h, 7Ch, 3Ah, 0C7h, 44h, 1Ch, 0C0h
		db 0, 0A1h, 0E2h, 0FCh,	89h, 44h, 12h, 0A1h, 0E6h, 0FCh
		db 89h,	44h, 16h, 0C7h,	44h, 36h, 2 dup(0), 2Eh, 0A1h
		db 60h,	95h, 89h, 44h, 42h, 0A1h, 0FAh,	0FCh, 89h, 44h
		db 22h,	0E8h, 49h, 99h,	89h, 6Ch, 44h, 0C7h, 44h, 46h
		db 2 dup(0), 4Ah, 78h, 3, 0E9h,	6Dh, 0FFh, 0C3h, 0A1h
		db 98h,	91h, 1,	44h, 16h, 0FFh,	74h, 1Ch, 0E8h,	0B0h, 0ABh
		db 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h,	0EBh, 0D1h, 0EBh
		db 0D1h, 0EBh, 0D1h, 0EBh, 83h,	0E3h, 0Eh, 58h,	5, 10h
		db 0, 0D1h, 0E8h
		db 0D1h, 0E8h, 0D1h, 0E8h, 0D1h, 0E8h, 25h, 0Eh, 0, 3Bh
		db 0C3h, 74h, 18h, 2Eh,	8Bh, 0BFh, 65h,	0ADh, 2Eh, 8Bh
		db 5, 89h, 44h,	0Ch, 2Eh, 8Bh, 45h, 2, 89h, 44h, 0Eh, 83h
		db 0C7h, 4, 89h, 7Ch, 10h, 2Eh,	0A0h, 8Ch, 95h,	0, 44h
		db 48h,	73h, 33h, 8Bh, 44h, 12h, 8Bh, 5Ch, 16h,	0B9h, 7
		db 0, 2Eh, 8Bh,	16h, 8Eh, 95h, 50h, 53h, 51h, 52h, 0E8h
		db 1Eh,	82h, 0BDh, 1Eh,	97h, 2Eh, 8Bh, 46h, 0, 89h, 45h
		db 0Ch,	2Eh, 8Bh, 46h, 0, 89h, 45h, 0Eh, 83h, 0C5h, 4
		db 89h,	6Dh, 10h, 5Ah, 59h, 5Bh, 58h, 49h, 79h,	0DBh, 0E9h
		db 0B3h, 98h, 0A1h, 98h, 91h, 1, 44h, 16h, 0E8h, 2Fh, 0ABh
		db 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h,	0EBh, 0D1h, 0EBh
		db 0D1h, 0EBh, 0D1h, 0EBh, 83h,	0E3h, 0Eh, 2Eh,	8Bh, 87h
		db 75h,	0ADh, 89h, 44h,	0Ch, 0E9h, 8Eh,	98h, 0A1h, 98h
		db 91h,	1, 44h,	16h, 0E8h, 0Ah,	0ABh, 8Bh, 5Ch,	1Ch, 83h
		db 0C3h, 10h, 0D1h, 0EBh, 0D1h,	0EBh, 0D1h, 0EBh, 0D1h
		db 0EBh, 83h, 0E3h, 0Eh, 2Eh, 8Bh, 87h,	85h, 0ADh, 89h
		db 44h,	0Ch, 0E9h, 69h,	98h, 0A1h, 98h,	91h, 1,	44h, 16h
		db 8Bh,	5Ch, 22h, 0C6h,	87h, 33h, 92h, 0FFh, 0E8h, 0DDh
		db 0AAh, 8Bh, 5Ch, 1Ch,	83h, 0C3h, 10h,	0D1h, 0EBh, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h, 0E3h, 0Eh, 2Eh, 8Bh
		db 87h,	95h, 0ADh, 89h,	44h, 0Ch, 0E9h,	3Ch, 98h, 8Bh
		db 0DFh, 0C7h, 47h, 4, 0B9h, 8,	83h, 7Fh, 46h, 0, 74h
		db 5, 8Bh, 5Fh,	46h, 0EBh, 0F0h, 0BBh, 0Ah, 92h, 3, 5Dh
		db 22h,	3, 5Dh,	22h, 29h, 7, 76h, 1, 0C3h, 57h,	0BBh, 31h
		db 92h,	3, 5Dh,	22h, 0C6h, 7, 0FFh, 0C6h, 47h, 2, 0, 0FFh
		db 75h,	46h, 56h, 8Bh, 0F7h, 0E8h, 3Ch,	6Ah, 5Eh, 5Fh
		db 85h,	0FFh, 75h, 0F1h, 0B9h, 13h, 0, 0B8h, 2 dup(0)
		db 0BBh, 2 dup(0), 0BAh, 40h, 1, 0BFh, 0C0h, 0,	0BDh, 4Ch
		db 12h,	0E8h, 0E9h, 77h, 56h, 8Bh, 36h,	54h, 90h, 0E8h
		db 0B9h, 99h, 5Eh, 5Fh,	0C3h, 8Bh, 0FEh, 0D1h, 0E3h, 2Eh
		db 0FFh, 0A7h, 0A5h, 0ADh, 0E8h, 6Ch, 72h, 57h,	0BFh, 4Ah
		db 90h,	0E8h, 0BFh, 69h, 5Fh, 0C7h, 4, 0DCh, 0,	0C7h, 44h
		db 2, 69h, 0A4h, 0C7h, 44h, 4, 53h, 8, 8Bh, 5Dh, 6, 89h
		db 5Ch,	1Ch, 0D1h, 0E3h, 0C7h, 44h, 48h, 2 dup(0), 8Bh
		db 45h,	8, 2Dh,	8, 0, 3, 87h, 62h, 40h,	89h, 44h, 12h
		db 8Bh,	45h, 0Ah, 2Dh, 8, 0, 2Bh, 6, 90h, 91h, 3, 87h
		db 72h,	40h, 89h, 44h, 16h, 2Eh, 8Bh, 0AFh, 0B3h, 0ADh
		db 2Eh,	8Bh, 46h, 0, 89h, 44h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h
		db 44h,	0Eh, 83h, 0C5h,	4, 89h,	6Ch, 10h, 0C7h,	44h, 6
		db 0A7h, 3Ah, 2Eh, 0A1h, 62h, 95h, 89h,	44h, 24h, 0C6h
		db 44h,	27h, 0,	0C7h, 44h, 34h,	64h, 0,	0C7h, 44h, 1Ah
		db 2 dup(0), 0C7h, 44h,	36h, 2 dup(0), 0E9h, 57h, 97h
		db 0C6h, 6, 35h, 92h, 0FFh, 0E8h, 0D1h,	0A9h, 2Eh, 0A0h
		db 92h,	95h, 0,	44h, 48h, 73h, 45h, 0E8h, 4Bh, 0A3h, 24h
		db 3Fh,	88h, 44h, 48h, 0A1h, 12h, 9Fh, 8Bh, 1Eh, 16h, 9Fh
		db 2Bh,	44h, 12h, 2Bh, 5Ch, 16h, 0E8h, 35h, 7Dh, 8Bh, 0C8h
		db 8Bh,	44h, 12h, 8Bh, 5Ch, 16h, 5, 10h, 0, 83h, 0C3h
		db 3Ch,	2Eh, 8Bh, 16h, 94h, 95h, 0E8h, 62h, 80h, 0BDh
		db 9Ch,	98h, 2Eh, 8Bh, 46h
		db 0, 89h, 45h,	0Ch, 2Eh, 8Bh, 46h, 2, 89h, 45h, 0Eh, 83h
		db 0C5h, 4, 89h, 6Dh, 10h, 0C3h, 0E8h, 25h, 0A3h, 8Bh
		db 7Ch,	44h, 8Bh, 45h, 12h, 3, 44h, 3Ch, 89h, 44h, 12h
		db 8Bh,	45h, 16h, 3, 44h, 3Eh, 89h, 44h, 16h, 0E9h, 0E5h
		db 96h,	0E8h, 0E2h, 0FFh, 83h, 7Ch, 22h, 28h, 74h, 23h
		db 83h,	3Eh, 6,	92h, 0,	74h, 2,	79h, 2Ah, 0C7h,	44h, 0Ch
		db 0BBh, 7Dh, 0C7h, 44h, 0Eh, 2	dup(0),	0C7h, 44h, 28h
		db 0E8h, 3, 0C7h, 44h, 28h, 0E8h, 3, 0C7h, 44h,	6, 61h
		db 7, 0C3h, 83h, 3Eh, 4, 92h, 0, 74h, 2, 79h, 7, 0C7h
		db 44h,	0Ch, 29h, 7Dh, 0EBh, 0DBh, 83h,	7Ch, 0Eh, 0, 75h
		db 33h,	2Eh, 0A0h, 96h,	95h, 0,	44h, 48h, 73h, 1Fh, 0E8h
		db 9Fh,	0A2h, 24h, 3Fh,	88h, 44h, 48h, 0BDh, 70h, 98h
		db 2Eh,	8Bh, 46h, 0, 89h, 44h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h
		db 44h,	0Eh, 83h, 0C5h,	4, 89h,	6Ch, 10h, 0C7h,	44h, 28h
		db 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0C3h, 0E9h, 6Dh, 96h
		db 8Bh,	5Dh, 44h, 0C7h,	47h, 4,	0B9h, 8, 8Bh, 5Fh, 46h
		db 85h,	0DBh, 75h, 0F4h, 83h, 7Dh, 22h,	28h, 74h, 7, 29h
		db 2 dup(6), 92h, 76h, 8, 0C3h,	29h, 6,	4, 92h,	76h, 1
		db 0C3h, 0C7h, 45h, 28h, 0E8h, 3, 0C7h,	45h, 28h, 0E8h
		db 3, 0C7h, 45h, 6, 61h, 7, 56h, 8Bh, 0F7h, 0E8h, 0A1h
		db 6Fh,	5Eh, 0BDh, 30h,	12h, 0BAh, 53h,	8, 0E8h, 0C8h
		db 93h,	0FFh, 2	dup(0Eh), 92h, 74h, 1, 0C3h, 8Bh, 5Dh
		db 44h,	0C7h, 47h, 24h,	2 dup(0), 0B8h,	1, 0, 0E8h, 0C6h
		db 9Ah,	0B9h, 4, 0, 0E8h, 6Bh, 76h, 0C6h, 6, 25h, 92h
		db 0, 0C3h, 0E8h, 7, 0FFh, 83h,	7Ch, 30h, 0, 75h, 74h
		db 0E8h, 6, 0A2h, 3Ch, 3, 72h, 3, 0E9h,	85h, 0,	0C7h, 6
		db 8Ah,	8Eh, 1,	0, 0C7h, 44h, 30h, 1, 0, 0C7h, 44h, 20h
		db 1, 0, 8Bh, 7Ch, 0Ah,	0A1h, 12h, 9Fh,	2Bh, 44h, 12h
		db 8Bh,	1Eh, 16h, 9Fh, 2Bh, 5Ch, 16h, 0E8h, 0DBh, 7Bh
		db 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h
		db 0E0h, 2Ch, 60h, 0C7h, 45h, 1Eh, 2 dup(0), 89h, 45h
		db 1Ch,	0E8h, 0C5h, 0A1h, 25h, 1Fh, 0, 5, 20h, 0, 8Ah
		db 0E0h, 32h, 0C0h, 0D0h, 0E4h,	0D0h, 0E4h, 0C7h, 45h
		db 3Eh,	2 dup(0), 89h, 45h, 3Ch, 0C7h, 45h, 40h, 2 dup(0)
		db 0C7h, 45h, 42h, 1, 0, 83h, 7Ch, 22h,	3Ch, 75h, 7, 80h
		db 45h,	1Ch, 40h, 0F7h,	5Dh, 3Ch, 0E9h,	8Dh, 95h, 8Bh
		db 44h,	20h, 1,	44h, 30h, 83h, 7Ch, 30h, 0Eh, 75h, 3, 0F7h
		db 5Ch,	20h, 8Bh, 7Ch, 0Ah, 8Bh, 44h, 30h, 89h,	45h, 42h
		db 0E9h, 72h, 95h, 8Bh,	7Ch, 0Ah, 0C7h,	45h, 42h, 2 dup(0)
		db 0C7h, 45h, 1Ch, 40h,	0, 0E9h, 62h, 95h, 8Bh,	7Ch, 8
		db 8Bh,	45h, 12h, 89h, 44h, 12h, 8Bh, 45h, 14h,	89h, 44h
		db 14h,	8Bh, 45h, 16h, 89h, 44h, 16h, 8Bh, 45h,	18h, 89h
		db 44h,	18h, 0C7h, 44h,	1Ah, 0E8h, 3, 0FFh, 74h, 1Ch, 0FFh
		db 74h,	1Eh, 0FFh, 74h,	3Ch, 0FFh, 74h,	3Eh, 0FFh, 74h
		db 40h,	0E8h, 0Ch, 0A8h, 8Bh, 7Ch, 0Ah,	8Bh, 44h, 1Ch
		db 89h,	45h, 1Ch, 8Bh, 44h, 1Eh, 89h, 45h, 1Eh,	8Bh, 44h
		db 3Ch,	89h, 45h, 3Ch, 8Bh, 44h, 3Eh, 89h, 45h,	3Eh, 8Bh
		db 44h,	40h, 89h, 45h, 40h, 8Bh, 44h, 42h, 89h,	45h
		db 42h,	8Fh, 44h, 40h, 8Fh, 44h, 3Eh, 8Fh, 44h,	3Ch, 8Fh
		db 44h,	1Eh, 8Fh, 44h, 1Ch, 0C3h, 8Bh, 7Ch, 8, 8Bh, 45h
		db 12h,	89h, 44h, 12h, 8Bh, 45h, 14h, 89h, 44h,	14h, 8Bh
		db 45h,	16h, 89h, 44h, 16h, 8Bh, 45h, 18h, 89h,	44h, 18h
		db 0C7h, 44h, 1Ah, 0E8h, 3, 0E8h, 0B2h,	0A7h, 8Bh, 5Ch
		db 1Ch,	0D1h, 0EBh, 0D1h, 0EBh,	0D1h, 0EBh, 83h, 0E3h
		db 1Ch,	83h, 7Ch, 42h, 0Eh, 75h, 6, 0C7h, 6, 88h, 8Eh
		db 1, 0, 0A1h, 9Ch, 91h, 25h, 4, 0, 0D1h, 0E8h,	3, 0D8h
		db 2Eh,	8Bh, 87h, 6Fh, 0AEh, 89h, 44h, 0Ch, 0C7h, 44h
		db 0Eh,	2 dup(0), 0E9h,	0A4h, 94h, 0BFh, 0C3h, 0ADh, 0E8h
		db 37h,	6Fh, 8Bh, 0EEh,	57h, 0BFh, 4Ah,	90h, 0E8h, 9Ah
		db 66h,	5Fh, 0EBh, 0Eh,	0E8h, 28h, 6Fh,	57h, 0BFh, 4Ah
		db 90h,	0E8h, 8Dh, 66h,	5Fh, 89h, 77h, 46h, 0C7h, 4, 54h
		db 0, 2Eh, 8Bh,	5, 89h,	44h, 2,	83h, 0C7h, 2, 0C7h, 44h
		db 4, 53h, 8, 2Eh, 8Bh,	5, 89h,	44h, 6,	83h, 0C7h, 2, 0C7h
		db 44h,	1Ah, 2 dup(0), 2Eh, 8Bh, 1Dh, 83h, 0C7h, 2, 2Eh
		db 8Bh,	7, 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh
		db 83h,	0C3h, 4, 89h, 5Ch, 10h,	2Eh, 8Bh, 5, 89h, 44h
		db 3Ch,	83h, 0C7h, 2, 2Eh, 8Bh,	5, 89h,	44h, 3Eh, 83h
		db 0C7h, 2, 0C7h, 44h, 48h, 2 dup(0), 0C7h, 44h, 34h, 0E8h
		db 3, 0C6h, 44h, 27h, 0FFh, 8Bh, 1Eh, 0D6h, 0DEh, 89h
		db 5Ch,	38h, 8Bh, 47h, 2, 89h, 44h, 12h, 8Bh, 47h, 4, 89h
		db 44h,	16h, 83h, 6Ch, 12h, 20h, 83h, 6Ch, 16h,	28h, 0C7h
		db 44h,	14h, 2 dup(0), 0C7h, 44h, 18h, 2 dup(0), 83h, 0C3h
		db 6, 89h, 5Ch,	3Ah, 0C7h, 44h,	1Ch, 2 dup(0), 0C7h, 44h
		db 1Eh,	2 dup(0), 0C7h,	44h, 40h, 2 dup(0), 0C7h, 44h
		db 36h,	2 dup(0), 2Eh, 0A1h, 64h, 95h, 89h, 44h, 42h, 0E8h
		db 0E2h, 93h, 89h, 6Ch,	44h, 0C7h, 44h,	46h, 2 dup(0)
		db 8Bh,	0C7h, 2Dh, 0C3h, 0ADh, 89h, 44h, 22h, 0C7h, 44h
		db 30h,	2 dup(0), 8Bh, 0DEh, 2Eh, 83h, 3Dh, 0, 74h, 3
		db 0E9h, 30h, 0FFh, 0C6h, 6, 35h, 92h, 0FFh, 0C6h, 6, 25h
		db 92h,	0FFh, 0C3h, 0E8h, 4Dh, 6Eh, 57h, 0BFh, 4Ah, 90h
		db 0E8h, 0A0h, 65h, 5Fh, 56h, 8Bh, 45h,	8, 0A3h, 0E2h
		db 0FCh, 83h, 2Eh, 0E2h, 0FCh, 8, 83h, 7Dh, 0Ch, 0, 74h
		db 5, 83h, 6, 0E2h, 0FCh, 20h, 8Bh, 45h, 0Ah, 0A3h, 0E6h
		db 0FCh, 0A1h, 90h, 91h, 29h, 6, 0E6h, 0FCh, 0C7h, 6, 0FEh
		db 0FCh, 7, 0, 0E8h, 18h, 6Eh, 57h, 0BFh, 4Ah, 90h, 0E8h
		db 6Bh,	65h, 5Fh, 8Bh, 0EEh, 0C7h, 4, 0C8h, 0, 0C7h, 44h
		db 0Ch,	45h, 40h, 0C7h,	44h, 0Eh, 2 dup(0), 0C7h, 44h
		db 48h,	2 dup(0), 83h, 7Dh, 0Ch, 0, 74h, 9, 0C7h, 4, 0CCh
		db 0, 0C7h, 44h, 0Ch, 95h, 3Fh,	83h, 3Eh, 0FEh,	0FCh, 0
		db 75h,	1Fh, 0BBh, 0B2h, 98h, 83h, 7Dh,	0Ch, 0,	74h, 3
		db 0BBh, 0CCh, 98h, 2Eh, 8Bh, 7, 89h, 44h, 0Ch,	2Eh, 8Bh
		db 47h,	2, 89h,	44h, 0Eh, 83h, 0C3h, 4,	89h, 5Ch, 10h
		db 0C7h, 44h, 2, 56h, 0A6h, 83h, 3Eh, 0FEh, 0FCh, 0, 75h
		db 5, 0C7h, 44h, 2, 13h, 0A6h, 83h, 3Eh, 0FEh, 0FCh, 7
		db 75h,	5, 0C7h, 44h, 2, 0A4h, 0A5h, 0C7h, 44h,	4, 53h
		db 8, 0A1h, 0E2h, 0FCh,	89h, 44h, 12h, 0A1h, 0E2h, 0FCh
		db 89h,	44h, 20h, 0A1h,	0E6h
		db 0FCh, 89h, 44h, 16h,	0C7h, 44h, 6, 39h, 3Ah,	0C6h, 44h
		db 26h,	1, 2Eh,	0A1h, 66h, 95h,	89h, 44h, 24h, 0C6h, 44h
		db 27h,	0, 0C7h, 44h, 34h, 90h,	1, 0C7h, 44h, 1Ah, 2 dup(0)
		db 0C7h, 44h, 36h, 2 dup(0), 0C7h, 44h,	1Ch, 2 dup(0)
		db 0B8h, 7, 0, 2Bh, 6, 0FEh, 0FCh, 83h,	7Dh, 0Ch, 0, 74h
		db 2, 0F7h, 0D8h, 89h, 44h, 22h, 0E8h, 0BCh, 92h, 89h
		db 6Ch,	44h, 0C7h, 44h,	46h, 2 dup(0), 83h, 3Eh, 0FEh
		db 0FCh, 0, 74h, 0Dh, 57h, 8Bh,	0FEh, 0E8h, 40h, 6Dh, 0E8h
		db 97h,	64h, 89h, 75h, 46h, 5Fh, 0FFh, 0Eh, 0FEh, 0FCh
		db 78h,	3, 0E9h, 22h, 0FFh, 5Fh, 0E8h, 2Ch, 6Dh, 57h, 0BFh
		db 4Ah,	90h, 0E8h, 7Fh,	64h, 5Fh, 0C7h,	4, 0B8h, 0, 0C7h
		db 44h,	2, 61h,	7, 0C7h, 44h, 4, 61h, 7, 0C7h, 44h, 6
		db 61h,	7, 0C7h, 44h, 28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h
		db 3, 89h, 7Ch,	46h, 0C7h, 5, 0BCh, 0, 0C7h, 45h, 2, 0A8h
		db 25h,	0C7h, 45h, 4, 61h, 7, 0C7h, 45h, 6, 61h, 7, 0C7h
		db 45h,	28h, 0E8h, 3, 0C7h, 45h, 2Ch, 0E8h, 3, 89h, 75h
		db 44h,	0C3h, 0E8h, 0E0h, 6Ch, 57h, 0BFh, 4Ah, 90h, 0E8h
		db 33h,	64h, 5Fh, 0C7h,	4, 0D0h, 0, 0C7h, 44h, 2, 89h
		db 0A6h, 0C7h, 44h, 4, 53h, 8, 0C7h, 44h, 48h, 2 dup(0)
		db 8Bh,	45h, 8,	2Dh, 8,	0, 89h,	44h, 12h, 8Bh, 45h, 0Ah
		db 5, 8, 0, 2Bh, 6, 90h, 91h, 89h, 44h,	16h, 0BBh, 0E6h
		db 98h,	0C7h, 44h, 1Ch,	2, 0, 81h, 7Ch,	12h, 0A0h, 0, 7Eh
		db 8, 0BBh, 18h, 99h, 0C7h, 44h, 1Ch, 0FEh, 0FFh, 2Eh
		db 8Bh,	7, 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh
		db 83h,	0C3h, 4, 89h, 5Ch, 10h,	0C7h, 44h, 6, 0A7h, 3Ah
		db 2Eh,	0A1h, 68h, 95h,	89h, 44h, 24h, 0C6h, 44h, 27h
		db 0FFh, 0C7h, 44h, 34h, 2Ch, 1, 0C7h, 44h, 1Ah, 2 dup(0)
		db 0C7h, 44h, 36h, 2 dup(0), 0E9h, 0CAh, 91h, 0B8h, 0F8h
		db 0, 0BBh, 0DFh, 0A7h,	0E8h, 61h, 91h,	0C7h, 44h, 4, 61h
		db 7, 0C7h, 44h, 6, 0D4h, 0A8h,	2Eh, 0A1h, 6Ah,	95h, 89h
		db 44h,	24h, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h
		db 3, 8Bh, 7Ch,	38h, 0BBh, 8Fh,	0AEh, 0B9h, 6, 0, 2Eh
		db 8Bh,	7, 89h,	5, 2Eh,	8Bh, 47h, 2, 89h, 45h, 2, 2Eh
		db 8Bh,	47h, 4,	89h, 45h, 4, 2Eh, 8Bh, 47h, 6, 89h, 45h
		db 6, 83h, 0C3h, 8, 83h, 0C7h, 28h, 0E2h, 0DEh,	0C3h, 0B8h
		db 0F0h, 0, 83h, 7Dh, 0Ch, 0, 74h, 3, 0B8h, 0F4h, 0, 0BBh
		db 25h,	0ABh, 0E8h, 8, 91h, 0C7h, 44h, 6, 76h, 3Bh, 2Eh
		db 0A1h, 7Ch, 95h, 89h,	44h, 24h, 0C7h,	44h, 28h, 0E8h
		db 3, 0C7h, 44h, 2Ch, 0E8h, 3, 8Bh, 6Ch, 38h, 0BBh, 57h
		db 0AFh, 0BAh, 73h, 0AFh, 83h, 7Dh, 0Ch, 0, 74h, 6, 0BBh
		db 65h,	0AFh, 0BAh, 75h, 0AFh, 89h, 5Ch, 0Ch, 89h, 54h
		db 10h,	2Eh, 8Bh, 7, 3Eh, 89h, 46h, 0, 0C7h, 44h, 34h
		db 64h,	0, 0C7h, 44h, 30h, 2 dup(0), 0C7h, 44h,	32h, 2 dup(0)
		db 0C3h, 0E8h, 45h, 9Dh, 0A1h, 98h, 91h, 1, 44h, 16h, 0A1h
		db 0AAh, 91h, 5, 0D0h, 0, 2Bh, 6, 90h, 91h, 3Bh, 44h, 16h
		db 7Dh,	3, 0E9h, 1Ch, 1, 8Bh, 5Ch, 1Ch,	0D1h, 0E3h, 8Bh
		db 87h,	82h, 40h, 85h, 0C0h, 74h, 25h, 79h, 13h, 3, 44h
		db 12h,	89h, 44h, 12h, 25h, 0Fh, 0, 3Dh, 0Fh, 0, 74h, 3
		db 0E9h, 0BCh, 0, 0EBh,	3Ch, 3,	44h, 12h, 89h, 44h, 12h
		db 25h,	0Fh, 0,	74h, 3,	0E9h, 0ACh, 0, 0EBh, 2Ch, 8Bh
		db 87h,	92h, 40h, 78h, 14h, 3, 44h, 16h, 89h, 44h, 16h
		db 3, 6, 90h, 91h, 25h,	0Fh, 0,	74h, 3,	0E9h, 92h, 0, 0EBh
		db 12h,	3, 44h,	16h, 89h, 44h, 16h, 3, 6, 90h, 91h, 25h
		db 0Fh,	0, 3Dh,	0Fh, 0,	75h, 7Eh, 8Bh, 44h, 12h, 85h, 0C0h
		db 74h,	48h, 3Dh, 40h, 1, 73h, 43h, 0BFh, 2 dup(0), 0D1h
		db 0E8h, 0D1h, 0E8h, 0D1h, 0E8h, 25h, 0FEh, 0, 3, 0F8h
		db 8Bh,	54h, 16h, 3, 16h, 90h, 91h, 0D1h, 0EAh,	0D1h, 0EAh
		db 0D1h, 0EAh, 0D1h, 0EAh, 0B8h, 28h, 0, 0F7h, 0E2h, 3
		db 0F8h, 83h, 3Dh, 0, 74h, 10h,	8Bh, 87h, 82h, 40h, 29h
		db 44h,	12h, 8Bh, 87h, 92h, 40h, 29h, 44h, 16h,	0EBh, 0Ah
		db 8Bh,	0AFh, 0A2h, 40h, 3Eh, 83h, 3Bh,	0, 75h,	2Fh, 8Bh
		db 87h,	0B2h, 40h, 1, 44h, 12h,	8Bh, 87h, 0C2h,	40h, 1
		db 44h,	16h, 8Bh, 9Fh, 0D2h, 40h, 89h, 5Ch, 1Ch, 0D1h
		db 0E3h, 2Eh, 8Bh, 9Fh,	0B3h, 0ADh, 2Eh, 8Bh, 7, 89h, 44h
		db 0Ch,	2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h, 0C3h, 4
		db 89h,	5Ch, 10h, 2Eh, 0A0h, 6Ch, 95h, 0, 44h, 48h, 73h
		db 34h,	0E8h, 25h, 9Ch,	24h, 3Fh, 88h, 44h, 48h, 2Eh, 8Bh
		db 1Eh,	6Eh, 95h, 0D1h,	0E3h, 2Eh, 8Bh,	0AFh, 0C7h, 0AFh
		db 0A1h, 12h, 9Fh, 2Bh,	44h, 12h, 8Bh, 1Eh, 16h, 9Fh, 2Bh
		db 5Ch,	16h, 0E8h, 3, 76h, 8Bh,	0C8h, 8Bh, 44h,	12h, 8Bh
		db 5Ch,	16h, 2Eh, 8Bh, 16h, 70h, 95h, 0E8h, 36h, 79h, 2	dup(0E9h)
		db 8Fh,	0E8h, 1Dh, 62h,	0C3h, 0A1h, 98h, 91h, 1, 44h, 16h
		db 81h,	7Ch, 16h, 0E8h,	0, 7Dh,	5Eh, 0C7h, 44h,	4, 61h
		db 7, 83h, 7Ch,	1Ch, 0,	75h, 2Ch, 83h, 7Ch, 22h, 0, 79h
		db 5, 0FFh, 44h, 22h, 0EBh, 45h, 8Bh, 44h, 16h,	2Bh, 6
		db 16h,	9Fh, 79h, 2, 0F7h, 0D8h, 3Dh, 20h, 0, 7Fh, 35h
		db 0C7h, 44h, 1Ch, 2, 0, 0E8h, 0B2h, 9Bh, 25h, 6, 0, 5
		db 0Ah,	0, 89h,	44h, 22h, 0C7h,	44h, 4,	53h, 8,	8Bh, 44h
		db 1Ch,	3, 44h,	1Ah, 89h, 44h, 1Ah, 75h, 0Ch, 0C7h, 44h
		db 1Ch,	2 dup(0), 0C7h,	44h, 22h, 0FBh,	0FFh, 0EBh, 8
		db 3Bh,	44h, 22h, 75h, 3, 0F7h,	5Ch, 1Ch, 0E9h,	7Ah, 8Fh
		db 0E8h, 0AEh, 61h, 0C3h, 0A1h,	98h, 91h, 1, 44h, 16h
		db 81h,	7Ch, 16h, 0E8h,	0, 7Dh,	32h, 0E8h, 8Eh,	9Bh, 8Bh
		db 7Ch,	44h, 8Bh, 44h, 22h, 0F7h, 65h, 1Ah, 3, 44h, 20h
		db 89h,	44h, 12h, 83h, 7Dh, 1Ch, 2, 75h, 6, 83h, 7Dh, 1Ah
		db 2, 74h, 0Ch,	8Bh, 45h, 22h, 85h, 0C0h, 7Eh, 0Ah, 3Bh
		db 45h,	1Ah, 75h, 5, 0C7h, 44h,	0Eh, 1,	0, 0E9h, 37h, 8Fh
		db 0E8h, 6Bh, 61h, 0C3h, 0A1h, 98h, 91h, 1, 44h, 16h, 81h
		db 7Ch,	16h, 0E8h, 0, 7Dh, 22h,	0C7h, 44h, 4, 61h, 7, 8Bh
		db 7Ch,	44h, 8Bh, 44h, 22h, 0F7h, 65h, 1Ah, 3, 44h, 20h
		db 89h,	44h, 12h, 83h, 7Dh, 1Ch, 0, 74h, 5, 0C7h, 44h
		db 4, 53h, 8, 0E9h, 4, 8Fh, 0E8h, 38h, 61h, 0C3h, 0A1h
		db 98h,	91h, 1,	44h, 16h, 0A1h,	0AAh, 91h, 5, 0D0h, 0
		db 2Bh,	6, 90h
		db 91h,	3Bh, 44h, 16h, 7Dh, 3, 0E9h, 0Fh, 1, 0E8h, 0Dh
		db 9Bh,	83h, 7Ch, 1Ah, 0, 75h, 5Fh, 8Bh, 44h, 1Ch, 3, 44h
		db 12h,	89h, 44h, 12h, 3Dh, 0E0h, 0FFh,	7Fh, 21h, 0C7h
		db 44h,	12h, 2 dup(0), 0BBh, 0E6h, 98h,	0F7h, 5Ch, 1Ch
		db 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h
		db 0Eh,	83h, 0C3h, 4, 89h, 5Ch,	10h, 0E9h, 0B0h, 8Eh, 3Dh
		db 60h,	1, 7Ch,	0Ah, 0C7h, 44h,	12h, 40h, 1, 0BBh, 18h
		db 99h,	0EBh, 0D8h, 3Dh, 88h, 0, 75h, 0Ah, 0C7h, 44h, 1Ah
		db 1, 0, 0BBh, 0FCh, 98h, 0EBh,	0CCh, 3Dh, 0B8h, 0, 75h
		db 0Ah,	0C7h, 44h, 1Ah,	1, 0, 0BBh, 2Eh, 99h, 0EBh, 0BDh
		db 0E9h, 80h, 8Eh, 83h,	7Ch, 0Eh, 0, 75h, 20h, 0C7h, 44h
		db 1Ah,	2 dup(0), 81h, 7Ch, 12h, 0A0h, 0, 7Fh, 0Ah, 0C7h
		db 44h,	12h, 68h, 0, 0BBh, 18h,	99h, 0EBh, 9Bh,	0C7h, 44h
		db 12h,	0D8h, 0, 0BBh, 0E6h, 98h, 0EBh,	91h, 0FFh, 44h
		db 1Ah,	83h, 7Ch, 1Ah, 0Bh, 2 dup(75h),	8Bh, 44h, 12h
		db 0A3h, 0E2h, 0FCh, 8Bh, 44h, 16h, 0A3h, 0E6h,	0FCh, 83h
		db 2Eh,	0E2h, 0FCh, 5, 83h, 6, 0E6h, 0FCh, 4, 0BBh, 0F5h
		db 40h,	81h, 3Eh, 0E2h,	0FCh, 0A0h, 0, 7Eh, 8, 83h, 6
		db 0E2h, 0FCh, 0Ah, 0BBh, 29h, 41h, 56h, 0E8h, 0BDh, 68h
		db 0BFh, 96h, 90h, 0E8h, 11h, 60h, 8Bh,	0FEh, 5Eh, 0C7h
		db 5, 14h, 0, 0C7h, 45h, 2, 0B4h, 0A7h,	0C7h, 45h, 4, 53h
		db 8, 89h, 5Dh,	0Ch, 0C7h, 45h,	0Eh, 2 dup(0), 0A1h, 0E2h
		db 0FCh, 89h, 45h, 12h,	0A1h, 0E6h, 0FCh, 89h, 45h, 16h
		db 0C7h, 45h, 1Ah, 2 dup(0), 2Eh, 0A1h,	72h, 95h, 89h
		db 45h,	42h, 0C7h, 45h,	1Ch, 3,	0, 81h,	7Ch, 12h, 0A0h
		db 0, 7Ch, 5, 0C7h, 45h, 1Ch, 5, 0, 0E9h, 0D9h,	8Dh, 0E8h
		db 0Dh,	60h, 0C3h, 0E8h, 96h, 77h, 83h,	3Ch, 14h, 75h
		db 22h,	81h, 7Ch, 12h, 80h, 0, 7Dh, 0Ah, 0C7h, 44h, 1Ch
		db 3, 0, 0C7h, 44h, 0Ch, 0F5h, 40h, 81h, 7Ch, 12h, 0C0h
		db 0, 7Ch, 0Ah,	0C7h, 44h, 1Ch,	5, 0, 0C7h, 44h, 0Ch, 29h
		db 41h,	0C3h, 0A1h, 0AAh, 91h, 5, 0D0h,	0, 3Bh,	44h, 16h
		db 7Dh,	3, 0E9h, 0E3h, 0, 8Bh, 44h, 12h, 5, 10h, 0, 89h
		db 44h,	28h, 5,	1Fh, 0,	89h, 44h, 2Ch, 8Bh, 44h, 16h, 2Bh
		db 6, 90h, 91h,	5, 40h,	0, 89h,	44h, 2Ah, 5, 1Ah, 0, 89h
		db 44h,	2Eh, 8Bh, 44h, 1Ah, 75h, 0Dh, 0E8h, 7Ah, 99h, 2Eh
		db 3Ah,	6, 74h,	95h, 73h, 63h, 0B8h, 2 dup(0), 25h, 0FEh
		db 0FFh, 0D1h, 0E0h, 0D1h, 0E0h, 8Bh, 0D8h, 8Bh, 7Ch, 38h
		db 2Eh,	8Bh, 87h, 0BFh,	0AEh, 89h, 85h,	0A2h, 0, 2Eh, 8Bh
		db 87h,	0C1h, 0AEh, 89h, 85h, 0A4h, 0, 2Eh, 8Bh, 87h, 0C3h
		db 0AEh, 89h, 85h, 0CAh, 0, 2Eh, 8Bh, 87h, 0C5h, 0AEh
		db 89h,	85h, 0CCh, 0, 0FFh, 44h, 1Ah, 83h, 7Ch,	1Ah, 12h
		db 74h,	22h, 83h, 7Ch, 1Ah, 4, 7Ch, 21h, 83h, 7Ch, 1Ah
		db 0Bh,	7Eh, 1Ch, 83h, 7Ch, 1Ah, 0Ch, 75h, 15h,	0E8h, 22h
		db 99h,	2Eh, 3Ah, 6, 76h, 95h, 73h, 0Bh, 0C7h, 44h, 1Ah
		db 4, 0, 0C3h, 0C7h, 44h, 1Ah, 2 dup(0), 0C3h, 2Eh, 0A0h
		db 78h,	95h, 0,	44h, 48h, 73h, 0F6h, 0E8h, 3, 99h, 24h
		db 3Fh,	88h, 44h, 48h, 8Bh, 44h, 12h, 8Bh, 5Ch,	16h, 5
		db 20h,	0, 2Bh,	1Eh, 90h
		db 91h,	83h, 0C3h, 58h,	2Eh, 8Bh, 3Eh, 7Ah, 95h, 0D1h
		db 0E7h, 2Eh, 8Bh, 0ADh, 0C7h, 0AFh, 0B9h, 4, 0, 8Bh, 54h
		db 1Ah,	83h, 0E2h, 0FEh, 83h, 0FAh, 6, 75h, 3, 0B9h, 3
		db 0, 83h, 0FAh, 8, 75h, 3, 0B9h, 5, 0,	2Eh, 8Bh, 16h
		db 7Ch,	95h, 0E9h, 3, 76h, 0E8h, 0EDh, 5Eh, 0C3h, 29h
		db 45h,	24h, 76h, 6, 0C7h, 45h,	4, 78h,	0A9h, 0C3h, 0BAh
		db 53h,	8, 8Bh,	45h, 12h, 5, 20h, 0, 8Bh, 5Dh, 16h, 2Bh
		db 1Eh,	90h, 91h, 83h, 0C3h, 40h, 0BDh,	4Ch, 12h, 0E8h
		db 2Eh,	8Ah, 8Bh, 5Dh, 38h, 0C7h, 47h, 50h, 2 dup(0), 0C7h
		db 47h,	52h, 2 dup(0), 0C7h, 47h, 54h, 2 dup(0), 0C7h
		db 47h,	56h, 2 dup(0), 0C7h, 47h, 78h, 2 dup(0), 0C7h
		db 47h,	7Ah, 2 dup(0), 0C7h, 47h, 7Ch, 2 dup(0), 0C7h
		db 47h,	7Eh, 2 dup(0), 0C7h, 87h, 0A0h,	3 dup(0), 0C7h
		db 87h,	0A2h, 3	dup(0),	0C7h, 87h, 0A4h, 3 dup(0), 0C7h
		db 87h,	0A6h, 3	dup(0),	0C7h, 87h, 0CAh, 3 dup(0), 0C7h
		db 87h,	0CCh, 3	dup(0),	0C7h, 45h, 2, 0CFh, 0A9h, 0C7h
		db 45h,	4, 61h,	7, 0C7h, 45h, 6, 9Eh, 0AAh, 2Eh, 0A1h
		db 7Eh,	95h, 89h, 45h, 24h, 0C7h, 45h, 28h, 0E8h, 3, 0C7h
		db 45h,	2Ch, 0E8h, 3, 0C7h, 45h, 1Ah, 2	dup(0),	81h, 6
		db 52h,	91h, 0F4h, 1, 83h, 16h,	54h, 91h, 0, 0C3h, 0C7h
		db 44h,	4, 61h,	7, 0B8h, 4, 0, 0BBh, 3,	0, 8Bh,	54h, 16h
		db 2Bh,	16h, 90h, 91h, 83h, 0C2h, 20h, 8Bh, 4Ch, 12h, 0D1h
		db 0E9h, 83h, 0E1h, 0FCh, 56h, 0BEh, 7,	0AFh, 0E8h, 0C7h
		db 5Fh,	5Eh, 2 dup(0BFh), 0AEh,	8Bh, 44h, 1Ah, 25h, 0FEh
		db 0FFh, 0D1h, 0E0h, 0D1h, 0E0h, 3, 0F8h, 0B8h,	2, 0, 0BBh
		db 2, 0, 8Bh, 54h, 16h,	2Bh, 16h, 90h, 91h, 83h, 0C2h
		db 40h,	8Bh, 4Ch, 12h, 83h, 0C1h, 10h, 0D1h, 0E9h, 83h
		db 0E1h, 0FCh, 56h, 8Bh, 0F7h, 0E8h, 96h, 5Fh, 5Eh, 0C3h
		db 0A1h, 0AAh, 91h, 5, 0D0h, 0,	3Bh, 44h, 16h, 7Dh, 3
		db 0E9h, 0BDh, 0, 8Bh, 44h, 12h, 5, 10h, 0, 89h, 44h, 28h
		db 5, 1Fh, 0, 89h, 44h,	2Ch, 8Bh, 44h, 16h, 5, 4, 0, 2Bh
		db 6, 90h, 91h,	89h, 44h, 2Ah, 5, 17h, 0, 89h, 44h, 2Eh
		db 8Bh,	44h, 1Ah, 75h, 14h, 2Eh, 0A0h, 80h, 95h, 0, 44h
		db 48h,	73h, 4Ch, 0E8h,	81h, 97h, 24h, 3Fh, 88h, 44h, 48h
		db 0B8h, 2 dup(0), 25h,	0FEh, 0FFh, 0D1h, 0E0h,	0D1h, 0E0h
		db 8Bh,	0D8h, 8Bh, 7Ch,	38h, 2Eh, 8Bh, 87h, 2Fh, 0AFh
		db 89h,	45h, 2,	2Eh, 8Bh, 87h, 31h, 0AFh, 89h, 45h, 4
		db 2Eh,	8Bh, 87h, 33h, 0AFh, 89h, 45h, 2Ah, 2Eh, 8Bh, 87h
		db 35h,	0AFh, 89h, 45h,	2Ch, 0FFh, 44h,	1Ah, 83h, 7Ch
		db 1Ah,	0Ah, 74h, 7, 83h, 7Ch, 1Ah, 4, 74h, 7, 0C3h, 0C7h
		db 44h,	1Ah, 2 dup(0), 0C3h, 0B9h, 7, 0, 0BFh, 1Fh, 0AFh
		db 8Bh,	44h, 12h, 8Bh, 5Ch, 16h, 5, 20h, 0, 2Bh, 1Eh, 90h
		db 91h,	83h, 0C3h, 18h,	2Eh, 8Bh, 2Dh, 83h, 0C7h, 2, 2Eh
		db 8Bh,	16h, 82h, 95h, 57h, 0E8h, 54h, 74h, 50h, 2Eh, 8Bh
		db 46h,	0, 89h,	45h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h, 45h, 0Eh
		db 58h,	83h, 0C5h, 4, 89h, 6Dh,	10h, 5Fh, 49h, 79h, 0D7h
		db 0C3h, 0E8h, 23h, 5Dh, 0C3h, 29h, 45h, 24h, 76h, 6, 0C7h
		db 45h,	4, 0FFh, 0AAh, 0C3h, 0BAh, 53h,	8, 8Bh,	45h, 12h
		db 5, 20h, 0, 8Bh, 5Dh,	16h, 2Bh, 1Eh
		db 90h,	91h, 83h, 0C3h,	10h, 0BDh, 4Ch,	12h, 0E8h, 64h
		db 88h,	8Bh, 5Dh, 38h, 0C7h, 7,	2 dup(0), 0C7h,	47h, 2
		db 2 dup(0), 0C7h, 47h,	4, 2 dup(0), 0C7h, 47h,	6, 2 dup(0)
		db 0C7h, 47h, 28h, 2 dup(0), 0C7h, 47h,	2Ah, 2 dup(0)
		db 0C7h, 47h, 2Ch, 2 dup(0), 0C7h, 47h,	2Eh, 2 dup(0)
		db 81h,	6, 52h,	91h, 0F4h, 1, 83h, 16h,	54h, 91h, 0, 56h
		db 8Bh,	0F7h, 0E8h, 0C3h, 5Ch, 5Eh, 0C3h, 0C7h,	44h, 4
		db 61h,	7, 0B8h, 2, 0, 0BBh, 2,	0, 8Bh,	54h, 16h, 2Bh
		db 16h,	90h, 91h, 8Bh, 4Ch, 12h, 83h, 0C1h, 10h, 0D1h
		db 0E9h, 83h, 0E1h, 0FCh, 56h, 0BEh, 2Fh, 0AFh,	0E8h, 40h
		db 2 dup(5Eh), 0C3h, 0A1h, 0AAh, 91h, 5, 0D0h, 0, 3Bh
		db 44h,	16h, 7Dh, 3, 0E9h, 95h,	0, 8Bh,	44h, 12h, 5, 2
		db 0, 89h, 44h,	28h, 5,	0Ch, 0,	89h, 44h, 2Ch, 8Bh, 44h
		db 16h,	2Bh, 6,	90h, 91h, 5, 2,	0, 89h,	44h, 2Ah, 5, 0Ch
		db 0, 89h, 44h,	2Eh, 8Bh, 44h, 1Ah, 85h, 0C0h, 75h, 17h
		db 2Eh,	0A0h, 84h, 95h,	0, 44h,	48h, 73h, 0Dh, 0E8h, 29h
		db 96h,	24h, 3Fh, 88h, 44h, 48h, 0C7h, 44h, 1Ah, 1, 0
		db 0C3h, 25h, 0FEh, 0FFh, 0BBh,	57h, 0AFh, 81h,	3Ch, 0F0h
		db 0, 74h, 3, 0BBh, 65h, 0AFh, 8Bh, 7Ch, 38h, 3, 0D8h
		db 2Eh,	8Bh, 7,	89h, 5,	0FFh, 44h, 1Ah,	83h, 7Ch, 1Ah
		db 8, 74h, 0Ch,	83h, 7Ch, 1Ah, 0Eh, 75h, 5, 0C7h, 44h
		db 1Ah,	2 dup(0), 0C3h,	8Bh, 44h, 12h, 8Bh, 5Ch, 16h, 5
		db 8, 0, 2Bh, 1Eh, 90h,	91h, 0BDh, 0B7h, 73h, 0B9h, 2 dup(0)
		db 81h,	3Ch, 0F0h, 0, 74h, 6, 0B9h, 4, 0, 83h, 0C3h, 0Ah
		db 2Eh,	8Bh, 16h, 86h, 95h, 0E9h, 0Bh, 73h, 0E8h, 0F5h
		db 5Bh,	0C3h, 0D1h, 0E3h, 2Eh, 0FFh, 0A7h, 77h,	0AFh, 0BBh
		db 9Ah,	95h, 0E9h, 0B0h, 87h, 0BBh, 0ACh, 95h, 0E9h, 0AAh
		db 87h,	0FFh, 36h, 78h,	8Eh, 2Eh, 0A1h,	98h, 95h, 0A3h
		db 78h,	8Eh, 0BBh, 0BEh, 95h, 0E8h, 99h, 87h, 8Fh, 6, 78h
		db 8Eh,	0C3h, 0BBh, 30h, 96h, 0E9h, 8Eh, 87h, 0BBh, 42h
		db 96h,	0E9h, 88h, 87h,	56h, 80h, 3Eh, 33h, 92h, 0, 75h
		db 9, 80h, 3Eh,	34h, 92h, 0, 75h, 2, 5Eh, 0C3h,	0BEh, 83h
		db 0AFh, 2Eh, 83h, 3Ch,	0, 74h,	0F5h, 2Eh, 8Bh,	3Ch, 2Eh
		db 8Bh,	44h, 2,	40h, 2Eh, 8Bh, 5Ch, 4, 43h, 2Eh, 8Bh, 54h
		db 6, 2Eh, 8Bh,	4Ch, 8,	83h, 0C6h, 0Ah,	2Bh, 16h, 90h
		db 91h,	81h, 0FAh, 0C0h, 0, 7Dh, 0D8h, 83h, 0FAh, 0D0h
		db 7Eh,	0D3h, 56h, 8Bh,	0F7h, 0E8h, 0F9h, 5Ch, 5Eh, 0EBh
		db 0CAh, 33h, 0C0h, 0C3h, 0C7h,	6, 0A8h, 91h, 0F0h, 0Ah
		db 0C7h, 6, 0AAh, 91h, 0FFh, 11h, 0C7h,	6, 0ACh, 8Eh, 88h
		db 13h,	0C7h, 6, 0AEh, 8Eh, 0D0h, 7, 0E8h, 0B9h, 63h, 0BFh
		db 0E2h, 90h, 0E8h, 1Fh, 5Bh, 0C7h, 4, 50h, 0, 0C7h, 44h
		db 2, 61h, 7, 0C7h, 44h, 4, 1, 0ACh, 0C6h, 44h,	4Ah, 0FFh
		db 0C7h, 6, 0F4h, 91h, 96h, 0E4h, 0C7h,	6, 0F6h, 91h, 74h
		db 52h,	0C6h, 6, 31h, 92h, 0, 0C6h, 6, 32h, 92h, 0FFh
		db 0C6h, 6, 33h, 92h, 0, 0C6h, 6, 34h, 92h, 0, 0C7h, 6
		db 8, 92h, 2 dup(0), 2Eh, 0A1h,	88h, 95h, 0A3h,	0Ah, 92h
		db 2Eh,	0A1h, 88h, 95h,	0A3h, 0Ch, 92h,	0C6h, 6, 35h, 92h
		db 0, 0C7h, 6, 0Eh, 92h, 2, 0, 2Eh, 0A1h, 8Ah
		db 95h,	0A3h, 4, 92h, 2Eh, 0A1h, 8Ah, 95h, 0A3h, 6, 92h
		db 0A1h, 1Ah, 99h, 0D1h, 0E0h, 0A3h, 76h, 8Eh, 0A1h, 1Ah
		db 99h,	8Bh, 0D8h, 0D1h, 0E0h, 3, 0C3h,	0A3h, 78h, 8Eh
		db 0C7h, 6, 72h, 8Eh, 8Dh, 55h,	0C3h, 1Fh, 78h,	0CFh, 78h
		db 0FFh, 73h, 0AFh, 74h, 5Fh, 75h, 0Fh,	76h, 0BFh, 76h
		db 6Fh,	77h, 0AFh, 6Dh,	0FFh, 6Ch, 4Fh,	6Ch, 9Fh, 6Bh
		db 0AFh, 6Dh, 0FFh, 6Ch, 4Fh, 6Ch, 9Fh,	6Bh, 57h, 72h
		db 7, 73h, 5Fh,	6Eh, 0FBh, 6Eh,	0ABh, 6Fh, 5Bh,	70h, 0Bh
		db 71h,	0A7h, 71h, 0C6h, 96h, 0DCh, 96h, 0F2h, 96h, 8
		db 97h,	0Ah, 0,	1Ch, 0,	4Fh, 9Ch, 1, 0A1h, 1Ch,	0, 0D6h
		db 9Ch,	5Dh, 0C8h, 15h,	0, 0D6h, 9Ch, 5Dh, 0C8h, 0Eh, 0
		db 0FBh, 9Ch, 9Fh, 6Bh,	0Eh, 0,	0FBh, 9Ch, 9Fh,	6Bh, 0Eh
		db 0, 0FBh, 9Ch, 9Fh, 6Bh, 0Eh,	0, 0FBh, 9Ch, 9Fh, 6Bh
		db 0Eh,	0, 0FBh, 9Ch, 9Fh, 6Bh,	0Eh, 0,	0FBh, 9Ch, 9Fh
		db 6Bh,	0Eh, 0,	0FBh, 9Ch, 9Fh,	6Bh, 0Eh, 0, 20h, 9Dh
		db 5Fh,	6Eh, 34h, 97h, 64h, 97h, 82h, 97h, 7Eh,	97h, 68h
		db 97h,	98h, 97h, 4Eh, 97h, 4Ah, 97h, 11h, 0D2h, 29h, 0D4h
		db 0B9h, 0D6h, 49h, 0D9h, 5Dh, 0C8h, 75h, 0CAh,	5, 0CDh
		db 95h,	0CFh, 0AFh, 6Dh, 9Fh, 6Bh, 4Fh,	6Ch, 0FFh, 6Ch
		db 0AFh, 6Dh, 9Fh, 6Bh,	4Fh, 6Ch, 0FFh,	6Ch, 57h, 72h
		db 7, 73h, 5Fh,	6Eh, 0FBh, 6Eh,	0ABh, 6Fh, 5Bh,	70h, 0Bh
		db 71h,	0A7h, 71h, 0CEh, 35h, 0D2h, 0A1h, 3Fh, 0A3h, 0E5h
		db 0A0h, 0Fh, 0A4h, 0BFh, 0A3h,	0B3h, 9Dh, 9Ch,	97h, 0B2h
		db 97h,	0C8h, 97h, 0DEh, 97h, 0F4h, 97h, 0Ah, 98h, 20h
		db 98h,	36h, 98h, 32h, 9Eh, 61h, 7, 5Ah, 98h, 4	dup(0)
		db 89h,	9Eh, 61h, 7, 4Ch, 98h, 0E0h, 0FFh, 2 dup(0), 89h
		db 9Eh,	61h, 7,	5Eh, 98h, 20h, 3 dup(0), 0A4h, 9Eh, 1Ch
		db 9Fh,	6Ch, 98h, 5, 0,	38h, 0,	0A4h, 9Eh, 1Ch,	9Fh, 6Ch
		db 98h,	19h, 0,	38h, 0,	7Fh, 9Fh, 61h, 7, 8Ah, 98h, 0F6h
		db 0FFh, 33h, 0, 27h, 0A0h, 61h, 7, 8Ah, 98h, 0E6h, 0FFh
		db 33h,	0, 27h,	0A0h, 61h, 7, 8Ah, 98h,	0E6h, 0FFh, 33h
		db 0, 27h, 0A0h, 61h, 7, 8Ah, 98h, 0E6h, 0FFh, 33h, 0
		db 27h,	0A0h, 61h, 7, 8Ah, 98h,	0E6h, 0FFh, 33h, 0, 90h
		db 0A0h, 61h, 7, 8Eh, 98h, 0E6h, 0FFh, 33h, 0, 7Fh, 9Fh
		db 61h,	7, 8Ah,	98h, 2Ah, 0, 33h, 0, 27h, 0A0h,	61h, 7
		db 8Ah,	98h, 1Ah, 0, 33h, 0, 27h, 0A0h,	61h, 7,	8Ah, 98h
		db 1Ah,	0, 33h,	0, 27h,	0A0h, 61h, 7, 8Ah, 98h,	1Ah, 0
		db 33h,	0, 27h,	0A0h, 61h, 7, 8Ah, 98h,	1Ah, 0,	33h, 0
		db 90h,	0A0h, 61h, 7, 8Eh, 98h,	1Ah, 0,	33h, 3 dup(0)
		db 89h,	23h, 0B5h, 25h,	0A5h, 27h, 0D1h, 29h, 0E9h, 2Bh
		db 15h,	2Eh, 0D9h, 2Fh,	5, 32h,	41h, 12h, 6Dh, 14h, 5Dh
		db 16h,	89h, 18h, 0A1h,	1Ah, 0CDh, 1Ch,	91h, 1Eh, 0Dh
		db 21h,	81h, 2Ah, 0C1h,	34h, 1,	35h, 0C1h, 2Ah,	41h, 2Eh
		db 41h,	35h, 81h, 35h, 81h, 2Eh, 41h, 24h, 81h,	24h, 0C1h
		db 24h,	1, 25h,	41h, 27h, 80h, 27h, 0C0h, 27h, 1, 28h
		db 41h,	2Ah, 0C1h, 2Fh,	1, 30h,	1, 2Bh,	2 dup(0), 0C1h
		db 31h,	1, 32h,	2 dup(0), 0C1h,	2Fh, 1,	30h, 0C1h, 31h
		db 1, 32h, 41h,	30h, 81h, 30h, 41h, 32h
		db 81h,	32h, 0C1h, 30h,	1, 31h,	0C1h, 32h, 1, 33h, 41h
		db 31h,	81h, 31h, 41h, 33h, 81h, 33h, 0C1h, 30h, 1, 31h
		db 0C1h, 32h, 1, 33h, 0C1h, 33h, 1, 34h, 41h, 34h, 81h
		db 34h,	0C1h, 30h, 1, 31h, 0C1h, 32h, 1, 33h, 41h, 30h
		db 81h,	30h, 41h, 32h, 81h, 32h, 0C1h, 2Fh, 1, 30h, 0C1h
		db 31h,	1, 32h,	41h, 24h, 81h, 24h, 0C1h, 24h, 1, 25h
		db 41h,	27h, 80h, 27h, 0C0h, 27h, 1, 28h, 41h, 2Ah, 4 dup(0)
		db 1, 2Bh, 0E4h, 99h, 0CEh, 99h, 0B8h, 99h, 0A2h, 99h
		db 8Ch,	99h, 76h, 99h, 60h, 99h, 4Ah, 99h, 0C1h, 34h, 1
		db 35h,	41h, 35h, 81h, 35h, 0C1h, 35h, 1, 36h, 0C1h, 36h
		db 1, 37h, 41h,	36h, 81h, 36h, 41h, 37h, 81h, 37h, 0C1h
		db 35h,	1, 36h,	0C1h, 36h, 1, 37h, 0C1h, 34h, 1, 35h, 41h
		db 35h,	81h, 35h, 0C1h,	37h, 1,	38h, 41h, 38h, 81h, 38h
		db 41h,	38h, 1,	38h, 0C1h, 37h,	0C1h, 38h, 1, 39h, 41h
		db 39h,	81h, 39h, 41h, 39h, 1, 39h, 0C1h, 38h, 0C1h, 39h
		db 1, 3Ah, 60h,	33h, 0D3h, 0ABh, 0D9h, 0ABh, 0DFh, 0ABh
		db 0F5h, 0ABh, 0FBh, 0ABh, 0B7h, 0AFh, 2 dup(0), 2, 0
		db 10h,	1, 2 dup(0), 0B7h, 0AFh, 2 dup(0), 2, 0, 50h, 3	dup(0)
		db 0C3h, 0AFh, 1, 5 dup(0), 48h, 0, 0BDh, 0AFh,	2 dup(0)
		db 2, 0, 60h, 0, 98h, 0, 0BDh, 0AFh, 2 dup(0), 2, 2 dup(0)
		db 1, 98h, 3 dup(0), 81h, 17h, 1, 1Bh, 81h, 1Eh, 41h, 17h
		db 0C1h, 1Ah, 41h, 1Eh,	0C1h, 21h, 1, 22h, 75h,	6Bh, 8Dh
		db 55h,	0DFh, 7Ah, 36h,	68h, 5Ah, 68h, 0Fh dup(0), 8, 0
		db 4, 0, 40h, 0, 2, 0, 5, 0, 1,	0, 8, 0, 4, 0, 0Ah, 0
		db 6, 0, 6, 0, 7, 0, 4,	0, 7, 0, 2, 0, 0Ah, 0, 18h, 0
		db 6, 0, 10h, 0, 10h, 0, 1, 0, 6, 0, 32h, 0, 64h, 0, 0Ah
		db 0, 6, 0, 14h, 0, 14h, 0, 0AFh, 0, 6,	0, 0Ah,	0, 6, 0
		db 1, 0, 20h, 0, 8, 0, 2, 0, 0E8h, 0, 90h, 1, 0Bh, 48h
		db 53h,	8, 39h,	3Ah, 0F0h, 0B0h, 8, 0, 2 dup(0FFh), 0E8h
		db 3 dup(0), 0CAh, 37h,	53h, 8,	39h, 3Ah, 0Ah, 0B1h, 8
		db 0, 2	dup(0FFh), 2 dup(0), 0ECh, 0, 0FAh, 0, 0Bh, 48h
		db 53h,	8, 0A7h, 3Ah, 24h, 0B1h, 4, 5 dup(0), 0FCh, 0
		db 0C8h, 0, 0Bh, 48h, 53h, 8, 0A7h, 3Ah, 3Eh, 0B1h, 4
		db 6 dup(0), 1,	2Ch, 1,	0Bh, 48h, 53h, 8, 0A7h,	3Ah, 5Ch
		db 0B1h, 4, 5 dup(0), 4, 1, 64h, 0, 0Bh, 48h, 53h, 8, 0A7h
		db 3Ah,	0CAh, 0B0h, 4, 5 dup(0), 8, 1, 96h, 0, 0Bh, 48h
		db 53h,	8, 0A7h, 3Ah, 0A4h, 0B0h, 4, 5 dup(0), 51h, 9Eh
		db 2, 0, 1, 9Fh, 2, 0, 0B1h, 9Fh, 2, 0,	61h, 0A0h, 2, 0
		db 11h,	0A1h, 2, 0, 0C1h, 0A1h,	2, 0, 71h, 0A2h, 2, 0
		db 21h,	0A3h, 2, 3 dup(0), 0E2h, 41h, 0A4h, 0B0h, 21h
		db 99h,	1, 0, 0D1h, 99h, 1, 0, 81h, 9Ah, 1, 0, 31h, 9Bh
		db 1, 0, 0E1h, 9Bh, 1, 0, 41h, 9Ch, 1, 0, 0F1h,	9Ch, 1
		db 0, 0A1h, 9Dh, 1, 3 dup(0), 0E2h, 41h, 0CAh, 0B0h, 9Dh
		db 82h,	3, 0, 9Dh, 83h,	3, 0, 9Dh, 84h,	3, 0, 9Dh, 85h
		db 3, 0, 9Dh, 86h, 3, 3	dup(0),	0E2h, 41h, 0F0h, 0B0h
		db 9Dh,	87h
		db 3, 0, 8Fh, 88h, 3, 0, 81h, 89h, 3, 0, 73h, 8Ah, 3, 0
		db 65h,	8Bh, 3,	3 dup(0), 0E2h,	41h, 0Ah, 0B1h,	65h, 8Ch
		db 2, 0, 0B5h, 8Dh, 2, 0, 5, 8Fh, 2, 0,	55h, 90h, 2, 0
		db 0A5h, 91h, 2, 3 dup(0), 0E2h, 41h, 24h, 0B1h, 83h, 7Dh
		db 2, 0, 29h, 7Eh, 2, 0, 0CFh, 7Eh, 2, 0, 2 dup(7Fh), 2
		db 0, 25h, 80h,	2, 0, 0CBh, 80h, 2, 3 dup(0), 0E2h, 41h
		db 3Eh,	0B1h, 0F5h, 92h, 2, 0, 1Dh, 94h, 2, 0, 59h, 95h
		db 2, 0, 0A9h, 96h, 2, 0, 0F9h,	97h, 2,	3 dup(0), 0E2h
		db 41h,	5Ch, 0B1h, 29h,	0, 2, 0, 91h, 2	dup(2),	0, 37h
		db 4, 2, 0, 9Fh, 6, 2, 0, 0F3h,	8, 2, 0, 0A7h, 0Ah, 2
		db 3 dup(0), 0E2h, 41h,	76h, 0B1h, 0FBh, 0Ch, 2, 0, 63h
		db 0Fh,	2, 0, 9, 11h, 2, 0, 71h, 13h, 2, 0, 0C5h, 15h
		db 2, 0, 79h, 17h, 2, 3	dup(0),	0E2h, 41h, 94h,	0B1h, 0A1h
		db 21h,	3, 0, 9, 24h, 3, 0, 49h, 26h, 3, 0, 9Dh, 28h, 3
		db 0, 5, 2Bh, 3, 0, 31h, 2Dh, 3, 3 dup(0), 0E2h, 41h, 0B2h
		db 0B1h, 71h, 2Fh, 3, 0, 0D9h, 31h, 3, 0, 19h, 34h, 3
		db 0, 6Dh, 36h,	3, 0, 0D5h, 38h, 3, 0, 1, 3Bh, 3, 3 dup(0)
		db 0E2h, 41h, 0D0h, 0B1h, 0D9h,	75h, 0Ah, 0, 89h, 76h
		db 2, 0, 39h, 77h, 2, 0, 0E9h, 77h, 2, 0, 99h, 78h, 2
		db 0, 49h, 79h,	1, 0, 0A9h, 79h, 2, 0, 59h, 7Ah, 2, 0
		db 9, 7Bh, 2, 0, 0B9h, 7Bh, 2, 0, 0D9h,	75h, 1,	0, 0D9h
		db 75h,	2 dup(0), 49h, 6Fh, 0Ah, 0, 0F9h, 6Fh, 2, 0, 0A9h
		db 70h,	2, 0, 59h, 71h,	2, 0, 9, 72h, 2, 0, 0B9h, 72h
		db 1, 0, 19h, 73h, 2, 0, 0C9h, 73h, 2, 0, 79h, 74h, 2
		db 0, 29h, 75h,	2, 0, 49h, 6Fh,	1, 0, 49h, 6Fh,	2 dup(0)
		db 81h,	5Eh, 1,	0, 1Dh,	5Fh, 1,	0, 0B9h, 5Fh, 1, 0, 0Fh
		db 60h,	1, 0, 0B9h, 5Fh, 1, 0, 1Dh, 5Fh, 1, 3 dup(0), 0E2h
		db 41h,	4Eh, 0B2h, 65h,	60h, 1,	0, 0E3h, 60h, 1, 0, 2 dup(61h)
		db 1, 0, 0DFh, 61h, 1, 0, 2 dup(61h), 1, 0, 0E3h, 60h
		db 1, 3	dup(0),	0E2h, 41h, 6Ch,	0B2h, 5Dh, 62h,	1, 0, 0EFh
		db 62h,	1, 0, 59h, 63h,	1, 0, 0A5h, 63h, 1, 0, 59h, 63h
		db 1, 0, 0EFh, 62h, 1, 3 dup(0), 0E2h, 41h, 8Ah, 0B2h
		db 5, 64h, 1, 0, 0B5h, 64h, 1, 0, 5Bh, 65h, 1, 0, 0D9h
		db 65h,	1, 0, 5Bh, 65h,	1, 0, 0B5h, 64h, 1, 3 dup(0), 0E2h
		db 41h,	0A8h, 0B2h, 57h, 66h, 1, 0, 0F3h, 66h, 1, 0, 8Fh
		db 67h,	1, 0, 0E5h, 67h, 1, 0, 8Fh, 67h, 1, 0, 0F3h, 66h
		db 1, 3	dup(0),	0E2h, 41h, 0C6h, 0B2h, 3Bh, 68h, 1, 0
		db 0EBh, 68h, 1, 0, 91h, 69h, 1, 0, 0Fh, 6Ah, 1, 0, 91h
		db 69h,	1, 0, 0EBh, 68h, 1, 3 dup(0), 0E2h, 41h, 0E4h
		db 0B2h, 0E1h, 5Ah, 1, 0, 73h, 5Bh, 1, 0, 0DDh,	5Bh, 1
		db 0, 29h, 5Ch,	1, 0, 0DDh, 5Bh, 1, 0, 73h, 5Bh, 1, 3 dup(0)
		db 0E2h, 41h, 2, 0B3h, 89h, 5Ch, 1, 0, 7, 5Dh, 1, 0, 85h
		db 5Dh,	1, 0, 3, 5Eh, 1, 0
		db 85h,	5Dh, 1,	0, 7, 5Dh, 1, 3	dup(0),	0E2h, 41h, 20h
		db 0B3h, 0F9h, 0CCh, 1,	0, 6Dh,	0CDh, 1, 3 dup(0), 0E2h
		db 41h,	3Eh, 0B3h, 81h,	0C8h, 1, 0, 71h, 0CAh, 1, 3 dup(0)
		db 0E2h, 41h, 4Ch, 0B3h, 0ADh, 0CBh, 1,	0, 49h,	0CCh, 1
		db 3 dup(0), 0E2h, 41h,	5Ah, 0B3h, 0B9h, 0CDh, 1, 0, 0F5h
		db 0CEh, 1, 3 dup(0), 0E2h, 41h, 68h, 0B3h, 0F9h, 0CCh
		db 1, 0, 6Dh, 0CDh, 1, 3 dup(0), 0E2h, 41h, 76h, 0B3h
		db 0CDh, 19h, 2	dup(0),	0D1h, 0A3h, 2 dup(0), 51h, 0B8h
		db 2 dup(0), 8Dh, 6Ah, 2 dup(0), 29h, 6Bh, 1, 0, 0D9h
		db 6Bh,	1, 0, 89h, 6Ch,	1, 0, 39h, 6Dh,	1, 0, 0E9h, 6Dh
		db 1, 0, 99h, 6Eh, 1, 0, 0E9h, 6Dh, 1, 0, 39h, 6Dh, 1
		db 0, 89h, 6Ch,	1, 0, 0D9h, 6Bh, 1, 3 dup(0), 0E2h, 41h
		db 94h,	0B3h, 0B5h, 0E9h, 4, 0,	69h, 0EBh, 4, 3	dup(0)
		db 0E2h, 41h, 0C2h, 0B3h, 1Dh, 0EDh, 4,	0, 5Dh,	0EFh, 4
		db 3 dup(0), 0E2h, 41h,	0D0h, 0B3h, 0E5h, 0D0h,	4, 0, 0B7h
		db 0D2h, 4, 3 dup(0), 0E2h, 41h, 0DEh, 0B3h, 0A7h, 0D4h
		db 4, 0, 0FBh, 0D6h, 4,	3 dup(0), 0E2h,	41h, 0ECh, 0B3h
		db 63h,	0D9h, 4, 0, 17h, 0DBh, 4, 3 dup(0), 0E2h, 41h
		db 0FAh, 0B3h, 0CBh, 0DCh, 4, 0, 0Bh, 0DFh, 4, 3 dup(0)
		db 0E2h, 41h, 8, 0B4h, 5Fh, 0E1h, 4, 0,	31h, 0E3h, 4, 3	dup(0)
		db 0E2h, 41h, 16h, 0B4h, 21h, 0E5h, 4, 0, 61h, 0E7h, 4
		db 3 dup(0), 0E2h, 41h,	24h, 0B4h, 0B1h, 0F1h, 1, 0, 61h
		db 0F2h, 1, 0, 11h, 0F3h, 1, 0,	0C1h, 0F3h, 1, 3 dup(0)
		db 0E2h, 41h, 32h, 0B4h, 69h, 0C0h, 2, 0, 19h, 0C1h, 2
		db 0, 0BFh, 0C1h, 2, 0,	19h, 0C1h, 2, 3	dup(0),	0E2h, 41h
		db 48h,	0B4h, 51h, 0C2h, 2, 0, 1, 0C3h,	2, 0, 0B1h, 0C3h
		db 2, 0, 1, 0C3h, 2, 3 dup(0), 0E2h, 41h, 5Eh, 0B4h, 61h
		db 0C4h, 2, 0, 11h, 0C5h, 2, 0,	0C1h, 0C5h, 2, 0, 11h
		db 0C5h, 2, 3 dup(0), 0E2h, 41h, 74h, 0B4h, 71h, 0C6h
		db 2, 0, 21h, 0C7h, 2, 0, 0D1h,	0C7h, 2, 0, 21h, 0C7h
		db 2, 3	dup(0),	0E2h, 41h, 8Ah,	0B4h, 51h, 0B8h, 2, 0
		db 1, 0B9h, 2, 0, 0A7h,	0B9h, 2, 0, 1, 0B9h, 2,	3 dup(0)
		db 0E2h, 41h, 0A0h, 0B4h, 39h, 0BAh, 2,	0, 0E9h, 0BAh
		db 2, 0, 99h, 0BBh, 2, 0, 0E9h,	0BAh, 2, 3 dup(0), 0E2h
		db 41h,	0B6h, 0B4h, 49h, 0BCh, 2, 0, 0F9h, 0BCh, 2, 0
		db 0A9h, 0BDh, 2, 0, 0F9h, 0BCh, 2, 3 dup(0), 0E2h, 41h
		db 0CCh, 0B4h, 59h, 0BEh, 2, 0,	9, 0BFh, 2, 0, 0B9h, 0BFh
		db 2, 0, 9, 0BFh, 2, 3 dup(0), 0E2h, 41h, 0E2h,	0B4h, 45h
		db 52h,	2, 0, 0D1h, 53h, 2, 0, 61h, 56h, 2, 0, 0C9h, 58h
		db 2, 3	dup(0),	0E2h, 41h, 0F8h, 0B4h, 0A9h, 49h, 2, 0
		db 0C1h, 4Bh, 2, 0, 29h, 4Eh, 2, 0, 0B9h, 50h, 2, 3 dup(0)
		db 0E2h, 41h, 0Eh, 0B5h, 41h, 3Dh, 2 dup(0), 41h, 3Dh
		db 4, 0, 0F5h, 3Eh, 8, 0, 0E5h,	40h, 2 dup(0), 0F5h, 3Eh
		db 4, 0, 41h, 3Dh, 2 dup(0), 75h, 43h, 2 dup(0), 75h, 43h
		db 4, 0, 29h, 45h, 8, 0, 19h, 47h, 2 dup(0), 29h, 45h
		db 4, 0, 75h, 43h, 2 dup(0), 0C3h, 81h,	3Eh, 0AAh, 91h
		db 0F0h, 0Dh, 7Ch, 0Eh,	81h, 3Eh, 90h, 91h, 0F0h, 0Dh
		db 7Fh,	6, 0C7h, 6, 0AAh, 91h, 0F0h, 0Dh, 0A1h,	9Ch, 91h
		db 25h,	0Fh, 0,	74h, 3,	0E9h, 9Ch, 0, 81h, 3Eh,	90h, 91h
		db 50h,	0Eh, 7Eh, 3, 0E9h, 91h,	0, 81h,	3Eh, 90h, 91h
		db 0E0h, 0Ah, 7Dh, 3, 0E9h, 86h, 0, 0E8h, 93h, 5Ah, 0BFh
		db 4Ah,	90h, 0E8h, 0E7h, 51h, 0E8h, 0F9h, 8Bh, 25h, 1
		db 0, 74h, 3, 0B8h, 8, 0, 0F7h,	6, 9Ch,	91h, 20h, 0, 74h
		db 3, 5, 10h, 0, 0BBh, 2Ah, 0C8h, 3, 0D8h, 2Eh,	8Bh, 7
		db 89h,	4, 83h,	0C3h, 2, 2Eh, 8Bh, 7, 89h, 44h,	12h, 83h
		db 0C3h, 2, 2Eh, 8Bh, 7, 89h, 44h, 2, 83h, 0C3h, 2, 0C7h
		db 44h,	6, 0A7h, 3Ah, 0C7h, 44h, 4, 53h, 8, 2Eh, 8Bh, 1Fh
		db 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h
		db 0Eh,	83h, 0C3h, 4, 89h, 5Ch,	10h, 0E8h, 0A4h, 8Bh, 88h
		db 44h,	48h, 0C7h, 44h,	16h, 0E0h, 0FFh, 0C7h, 44h, 1Ah
		db 2 dup(0), 2Eh, 0A1h,	0E0h, 0AFh, 89h, 44h, 24h, 0C6h
		db 44h,	27h, 0FFh, 0C7h, 44h, 36h, 2 dup(0), 0C7h, 44h
		db 34h,	2Ch, 1,	0E8h, 77h, 7Fh,	0C3h, 0E8h, 9Bh, 8Bh, 0A1h
		db 98h,	91h, 2Eh, 3, 6,	0E2h, 0AFh, 1, 44h, 16h, 81h, 7Ch
		db 16h,	0C8h, 0, 7Ch, 3, 0E9h, 0BCh, 0,	0FFh, 44h, 1Ah
		db 83h,	7Ch, 1Ah, 8, 74h, 0Dh, 83h, 7Ch, 1Ah, 0Ch, 75h
		db 70h,	0C7h, 44h, 1Ah,	2 dup(0), 0EBh,	69h, 2Eh, 0A0h
		db 0E4h, 0AFh, 0, 44h, 48h, 73h, 60h, 0E8h, 44h, 8Bh, 24h
		db 3Fh,	88h, 44h, 48h, 56h, 0E8h, 0CCh,	59h, 0BFh, 96h
		db 90h,	0E8h, 20h, 51h,	8Bh, 0FEh, 5Eh,	0BBh, 4Ah, 0C8h
		db 81h,	3Ch, 0C8h, 0, 74h, 3, 0BBh, 50h, 0C8h, 2Eh, 8Bh
		db 7, 89h, 5, 83h, 0C3h, 2, 0C7h, 45h, 2, 0EBh,	0B6h, 0C7h
		db 45h,	4, 53h,	8, 2Eh,	8Bh, 7,	89h, 45h, 12h, 83h, 0C3h
		db 2, 8Bh, 44h,	16h, 2Dh, 1Eh, 0, 89h, 45h, 16h, 0C7h
		db 45h,	1Ah, 2 dup(0), 2Eh, 8Bh, 1Fh, 2Eh, 8Bh,	7, 89h
		db 45h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh, 83h, 0C3h
		db 4, 89h, 5Dh,	10h, 2Eh, 0A0h,	4, 0B0h, 0, 44h, 49h, 73h
		db 31h,	0E8h, 0DBh, 8Ah, 24h, 3Fh, 88h,	44h, 49h, 8Bh
		db 44h,	12h, 8Bh, 5Ch, 16h, 5, 14h, 0, 2Eh, 8Bh, 2Eh, 26h
		db 0B0h, 0D1h, 0E5h, 2Eh, 8Bh, 0AEh, 50h, 0CCh,	0B9h, 4
		db 0, 81h, 3Ch,	0C8h, 0, 74h, 3, 2Dh, 24h, 0, 2Eh, 8Bh
		db 16h,	24h, 0B0h, 0E8h, 0EFh, 67h, 0E9h, 0A2h,	7Eh, 0E8h
		db 0D6h, 50h, 0C3h, 0A1h, 98h, 91h, 1, 44h, 16h, 0E8h
		db 0BDh, 8Ah, 83h, 7Ch,	0Eh, 0,	75h, 2Ah, 0E8h,	0F8h, 57h
		db 0C7h, 4, 0Ch, 0, 0C7h, 44h, 2, 98h, 39h, 89h, 44h, 12h
		db 89h,	5Ch, 16h, 0BDh,	30h, 12h, 2Eh, 8Bh, 46h, 0, 89h
		db 44h,	0Ch, 2Eh, 8Bh, 46h, 2, 89h, 44h, 0Eh, 83h, 0C5h
		db 4, 89h, 6Ch,	10h, 0C3h, 81h,	7Ch, 0Ch, 0B9h,	72h, 74h
		db 19h,	81h, 7Ch, 0Ch, 49h, 79h, 74h, 3, 0E9h, 0D7h, 0
		db 0B8h, 2 dup(0), 0BBh, 0Ah, 0, 8Bh, 2Eh, 0C0h, 0DEh
		db 83h,	0C5h, 6, 0EBh, 0Dh, 0B8h, 80h, 0, 0BBh,	0F6h, 0FFh
		db 8Bh,	2Eh, 0C4h, 0DEh, 83h, 0C5h, 6, 56h, 0E8h, 0CDh
		db 58h,	0BFh, 4Ah, 90h,	0E8h, 21h, 50h,	8Bh, 0FEh, 5Eh
		db 0C7h, 5, 0F8h, 0, 0C7h, 45h,	2, 0Dh,	0B8h, 0C7h, 45h
		db 4, 53h, 8, 0C7h, 45h, 6, 0A7h, 3Ah, 0C7h, 45h
		db 1Eh,	2 dup(0), 89h, 45h, 1Ch, 0C7h, 45h, 3Ch, 2 dup(0)
		db 0C7h, 45h, 3Eh, 2 dup(0), 0C7h, 45h,	40h, 2 dup(0)
		db 3, 5Ch, 12h,	89h, 5Dh, 12h, 8Bh, 44h, 16h, 89h, 45h
		db 16h,	0C7h, 45h, 1Ah,	2 dup(0), 0C7h,	45h, 34h, 64h
		db 0, 2Eh, 0A1h, 0E6h, 0AFh, 89h, 45h, 24h, 0C6h, 45h
		db 27h,	0, 8Bh,	16h, 0ACh, 91h,	89h, 55h, 36h, 0FFh, 6
		db 0ACh, 91h, 0BBh, 8Ch, 8Eh, 0B9h, 8, 0, 83h, 3Fh, 0
		db 74h,	7, 83h,	0C3h, 4, 0E2h, 0F6h, 0EBh, 7, 89h, 17h
		db 0C7h, 47h, 2, 1, 0, 0C7h, 45h, 28h, 0E8h, 3,	0C7h, 45h
		db 2Ch,	0E8h, 3, 8Bh, 5Dh, 1Ch,	0D1h, 0EBh, 0D1h, 0EBh
		db 0D1h, 0EBh, 0D1h, 0EBh, 2Eh,	8Bh, 9Fh, 56h, 0C8h, 2Eh
		db 8Bh,	7, 89h,	45h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh
		db 83h,	0C3h, 4, 89h, 5Dh, 10h,	89h, 6Dh, 38h, 89h, 6Dh
		db 3Ah,	2Eh, 0A1h, 0E8h, 0AFh, 89h, 45h, 42h, 0C7h, 45h
		db 48h,	2 dup(0), 0C3h,	0FFh, 74h, 1Ch,	0E8h, 0F8h, 8Fh
		db 81h,	3Ch, 0F8h, 0, 74h, 3Dh,	0C7h, 4, 0F8h, 0, 0C7h
		db 44h,	2, 0Dh,	0B8h, 0C7h, 44h, 6, 0A7h, 3Ah, 0C7h, 44h
		db 4, 53h, 8, 0E8h, 62h, 89h, 25h, 4, 0, 81h, 7Ch, 12h
		db 0A0h, 0, 7Ch, 3, 5, 2, 0, 8Bh, 0D8h,	8Bh, 9Fh, 0C0h
		db 41h,	0D1h, 0E3h, 8Bh, 9Fh, 0C0h, 0DEh, 83h, 0C3h, 6
		db 89h,	5Ch, 38h, 89h, 5Ch, 3Ah, 0C7h, 44h, 1Ah, 2 dup(0)
		db 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h,	0EBh, 0D1h, 0EBh
		db 0D1h, 0EBh, 0D1h, 0EBh, 83h,	0E3h, 0Eh, 58h,	5, 10h
		db 0, 0D1h, 0E8h, 0D1h,	0E8h, 0D1h, 0E8h, 0D1h,	0E8h, 25h
		db 0Eh,	0, 3Bh,	0C3h, 74h, 1Eh,	2Eh, 8Bh, 9Fh, 56h, 0C8h
		db 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h
		db 0Eh,	83h, 0C3h, 4, 89h, 5Ch,	10h, 0E9h, 0F4h, 7Ch, 0E8h
		db 28h,	4Fh, 0C3h, 0E8h, 15h, 89h, 0A1h, 98h, 91h, 2Eh
		db 3, 6, 0EAh, 0AFh, 1,	44h, 16h, 81h, 7Ch, 16h, 0C8h
		db 0, 7Dh, 3Dh,	2Eh, 0A0h, 0ECh, 0AFh, 0, 44h, 48h, 73h
		db 31h,	0E8h, 0D7h, 88h, 24h, 3Fh, 88h,	44h, 48h, 8Bh
		db 44h,	12h, 8Bh, 5Ch, 16h, 5, 1Ah, 0, 83h, 0C3h, 1Ah
		db 0BDh, 69h, 82h, 0B9h, 0Ah, 0, 81h, 3Ch, 0D8h, 0, 74h
		db 9, 0B9h, 0Dh, 0, 2Dh, 34h, 0, 0BDh, 35h, 82h, 2Eh, 8Bh
		db 16h,	0EEh, 0AFh, 0E8h, 0EBh,	65h, 0E9h, 9Eh,	7Ch, 0E8h
		db 0D2h, 4Eh, 0C3h, 8Bh, 0FEh, 0D1h, 0E3h, 2Eh,	0FFh, 0A7h
		db 5Eh,	0C9h, 0C7h, 45h, 4, 8Bh, 0B9h, 29h, 45h, 24h, 77h
		db 2Dh,	56h, 57h, 8Bh, 36h, 54h, 90h, 0E8h, 55h, 7Eh, 0B9h
		db 9, 0, 0E8h, 0D3h, 5Ch, 0B9h,	13h, 0,	0B8h, 70h, 0, 5Fh
		db 57h,	8Bh, 5Dh, 16h, 0BAh, 60h, 0, 0BFh, 50h,	0, 0BDh
		db 4Ch,	12h, 0E8h, 60h,	5Ch, 0C6h, 6, 61h, 8Fh,	0FFh, 5Fh
		db 5Eh,	0C3h, 0C7h, 45h, 4, 0B3h, 0B9h,	29h, 45h, 24h
		db 76h,	1, 0C3h, 0FFh, 0Eh, 12h, 92h, 8Bh, 45h,	12h, 8Bh
		db 5Dh,	16h, 2Bh, 1Eh, 90h, 91h, 5, 10h, 0, 83h, 0C3h
		db 20h,	0BDh, 4Ch, 12h,	0BAh, 53h, 8, 0E8h, 0CEh, 79h
		db 0C7h, 45h, 1Ch, 2 dup(0FFh),	0C7h, 45h, 2, 0ABh, 0BAh
		db 0C7h, 45h, 6, 61h, 7, 0C3h, 0B8h, 6,	0, 0BBh, 5, 0
		db 8Bh,	54h, 16h, 0B9h,	38h, 0,	0BFh, 66h, 0C8h, 83h, 7Ch
		db 1Ah,	0
		db 74h,	6, 0BBh, 6, 0, 0BFh, 0A2h, 0C8h, 56h, 8Bh, 0F7h
		db 0E8h, 0B8h, 4Fh, 5Eh, 0C3h, 0C7h, 44h, 4, 68h, 0B9h
		db 0B8h, 6, 0, 0BBh, 5,	0, 8Bh,	54h, 16h, 0B9h,	38h, 0
		db 0BFh, 66h, 0C8h, 83h, 7Ch, 1Ah, 0, 74h, 6, 0BBh, 6
		db 0, 0BFh, 0A2h, 0C8h,	56h, 8Bh, 0F7h,	0E8h, 0B2h, 4Fh
		db 5Eh,	0C3h, 0C7h, 44h, 4, 0E3h, 0B9h,	0BFh, 0ECh, 0C8h
		db 81h,	7Ch, 12h, 0A0h,	0, 7Ch,	3, 0BFh, 0FEh, 0C8h, 8Bh
		db 5Ch,	1Ch, 0D1h, 0E3h, 2Eh, 8Bh, 39h,	0B8h, 2, 0, 0BBh
		db 2, 0, 8Bh, 54h, 16h,	8Bh, 4Ch, 12h, 0D1h, 0E9h, 56h
		db 8Bh,	0F7h, 0E8h, 82h, 4Fh, 5Eh, 0C3h, 0BFh, 0ECh, 0C8h
		db 81h,	7Ch, 12h, 0A0h,	0, 7Ch,	3, 0BFh, 0FEh, 0C8h, 8Bh
		db 5Ch,	1Ch, 0D1h, 0E3h, 2Eh, 8Bh, 39h,	0B8h, 2, 0, 0BBh
		db 2, 0, 8Bh, 54h, 16h,	8Bh, 4Ch, 12h, 0D1h, 0E9h, 56h
		db 8Bh,	0F7h, 0E8h, 35h, 4Fh, 5Eh, 0C3h, 83h, 7Ch, 42h
		db 0, 74h, 3, 0E9h, 3Ch, 4Eh, 0C3h, 0C7h, 44h, 4, 0Eh
		db 0BAh, 83h, 7Ch, 42h,	0, 74h,	3, 0E9h, 0B5h, 4Eh, 0C3h
		db 83h,	3Eh, 0AAh, 91h,	10h, 7Dh, 6, 0C7h, 6, 0AAh, 91h
		db 10h,	0, 0A1h, 98h, 91h, 8Bh,	1Eh, 9Ch, 91h, 83h, 0E3h
		db 0Fh,	0D1h, 0E3h, 3, 87h, 0E2h, 40h, 0A3h, 14h, 92h
		db 1, 44h, 16h,	83h, 3Eh, 12h, 92h, 0, 74h, 0Ch, 0C7h
		db 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0EBh, 19h
		db 0C7h, 44h, 28h, 94h,	0, 0C7h, 44h, 2Ch, 0ACh, 0, 8Bh
		db 44h,	16h, 5,	20h, 0,	89h, 44h, 2Ah, 5, 8, 0,	89h, 44h
		db 2Eh,	83h, 7Ch, 1Ah, 0, 75h, 17h, 2Eh, 0A0h, 0F0h, 0AFh
		db 0, 44h, 48h,	73h, 25h, 0E8h,	9, 87h,	24h, 3Fh, 88h
		db 44h,	48h, 0C7h, 6, 8Ah, 8Eh,	1, 0, 0FEh, 44h, 1Ah, 78h
		db 0Dh,	80h, 7Ch, 1Ah, 78h, 75h, 6, 0C7h, 6, 8Ah, 8Eh
		db 1, 0, 0C3h, 0C7h, 44h, 1Ah, 2 dup(0), 0C3h, 0A1h, 14h
		db 92h,	1, 44h,	16h, 8Bh, 44h, 12h, 5, 6, 0, 89h, 44h
		db 28h,	5, 14h,	0, 89h,	44h, 2Ch, 8Bh, 44h, 16h, 5, 6
		db 0, 89h, 44h,	2Ah, 5,	14h, 0,	89h, 44h, 2Eh, 0C3h, 0A1h
		db 14h,	92h, 1,	44h, 16h, 8Bh, 44h, 12h, 5, 6, 0, 89h
		db 44h,	28h, 5,	14h, 0,	89h, 44h, 2Ch, 8Bh, 44h, 16h, 5
		db 6, 0, 89h, 44h, 2Ah,	5, 14h,	0, 89h,	44h, 2Eh, 0A1h
		db 12h,	9Fh, 2Bh, 44h, 12h, 2Dh, 10h, 0, 8Bh, 1Eh, 16h
		db 9Fh,	2Bh, 5Ch, 16h, 83h, 0EBh, 10h, 0E8h, 86h, 60h
		db 0BFh, 22h, 41h, 81h,	7Ch, 12h, 0A0h,	0, 7Ch,	3, 0BFh
		db 2Ah,	41h, 8Bh, 0D8h,	8Ah, 1,	89h, 44h, 1Ch, 2Eh, 0A0h
		db 0F2h, 0AFh, 0, 44h, 48h, 73h, 4Fh, 0E8h, 67h, 86h, 24h
		db 3Fh,	88h, 44h, 48h, 8Bh, 44h, 12h, 5, 10h, 0, 8Bh, 5Ch
		db 16h,	83h, 0C3h, 10h,	8Bh, 4Ch, 1Ch, 8Bh, 0E9h, 0D1h
		db 0E5h, 2Eh, 8Bh, 0AEh, 4Eh, 0CAh, 2Eh, 8Bh, 16h, 0F4h
		db 0AFh, 0E8h, 84h, 63h, 2Eh, 8Bh, 46h,	0, 89h,	45h, 0Ch
		db 2Eh,	8Bh, 46h, 2, 89h, 45h, 0Eh, 83h, 0C5h, 4, 89h
		db 6Dh,	10h, 8Bh, 5Dh, 1Ch, 0D1h, 0E3h,	8Bh, 87h, 2, 41h
		db 1, 45h, 12h,	8Bh, 87h, 12h, 41h, 1, 45h, 16h, 0C3h
		db 0C7h, 44h, 0Ch, 19h,	7Dh
		db 0C7h, 44h, 0Eh, 2 dup(0), 0A1h, 14h,	92h, 1,	44h, 16h
		db 0E8h, 75h, 4, 80h, 74h, 1Ch,	80h, 8Bh, 7Ch, 44h, 8Bh
		db 45h,	1Ah, 3Dh, 8, 0,	7Eh, 0Dh, 2Dh, 80h, 0, 0F7h, 0D8h
		db 3Dh,	8, 0, 7Eh, 3, 0B8h, 8, 0, 89h, 44h, 42h, 85h, 0C0h
		db 75h,	0Ah, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h
		db 3, 0C3h, 0C7h, 44h, 0Ch, 19h, 7Dh, 0C7h, 44h, 0Eh, 2	dup(0)
		db 0A1h, 14h, 92h, 1, 44h, 16h,	0E8h, 0F1h, 2, 83h, 7Ch
		db 42h,	0, 75h,	0Ah, 0C7h, 44h,	28h, 0E8h, 3, 0C7h, 44h
		db 2Ch,	0E8h, 3, 0C3h, 0C7h, 44h, 0Ch, 69h, 7Ch, 0C7h
		db 44h,	0Eh, 2 dup(0), 0A1h, 14h, 92h, 1, 44h, 16h, 0E8h
		db 0CDh, 2, 83h, 7Ch, 42h, 0, 75h, 0Ah,	0C7h, 44h, 28h
		db 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0C3h, 80h,	3Eh, 37h
		db 92h,	0, 74h,	3, 0E9h, 0A0h, 0, 0C6h,	6, 37h,	92h, 0FFh
		db 0BFh, 6Ah, 0C9h, 0B9h, 13h, 0, 0E8h,	0Ah, 54h, 89h
		db 36h,	0DEh, 0FCh, 0EBh, 3, 0E8h, 1, 54h, 57h,	0BFh, 4Ah
		db 90h,	0E8h, 66h, 4Bh,	5Fh, 0C7h, 4, 50h, 0, 2Eh, 8Bh
		db 5, 89h, 44h,	2, 2Eh,	8Bh, 45h, 2, 89h, 44h, 6, 2Eh
		db 8Bh,	45h, 4,	89h, 44h, 4, 2Eh, 8Bh, 45h, 6, 89h, 44h
		db 12h,	2Eh, 8Bh, 45h, 8, 0C6h,	44h, 4Ah, 0FFh,	2Bh, 6
		db 90h,	91h, 89h, 44h, 16h, 0C7h, 44h, 1Ah, 2 dup(0), 0C7h
		db 44h,	1Ch, 2 dup(0), 0C7h, 44h, 1Eh, 2 dup(0), 0C7h
		db 44h,	3Ch, 2 dup(0), 0C7h, 44h, 3Eh, 2 dup(0), 0C7h
		db 44h,	40h, 2 dup(0), 0C7h, 44h, 42h, 3, 0, 2Eh, 8Bh
		db 45h,	0Ah, 89h, 44h, 24h, 83h, 0C7h, 0Ch, 0C6h, 44h
		db 27h,	0FFh, 0C7h, 44h, 20h, 2	dup(0),	0C7h, 44h, 28h
		db 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0A1h, 0DEh, 0FCh
		db 89h,	2 dup(44h), 0E2h, 2, 0EBh, 3, 0E9h, 7Ah, 0FFh
		db 0C7h, 6, 12h, 92h, 2, 0, 0C3h, 0C7h,	45h, 4,	0B9h, 8
		db 29h,	45h, 24h, 77h, 1Dh, 0FEh, 0Eh, 10h, 92h, 0C7h
		db 6, 8Ch, 91h,	2 dup(0FFh), 0B9h, 0Ah,	0, 51h,	0C7h, 45h
		db 34h,	64h, 0,	0FFh, 75h, 8, 0E8h, 0E4h, 7Dh, 5Fh, 59h
		db 0E2h, 0F0h, 0C3h, 50h, 0A1h,	0B4h, 8Eh, 0A3h, 0E2h
		db 0FCh, 0A1h, 0B6h, 8Eh, 0A3h,	0E6h, 0FCh, 0A1h, 0B8h
		db 8Eh,	0A3h, 0EAh, 0FCh, 0A1h,	0BAh, 8Eh, 0A3h, 0EEh
		db 0FCh, 8Bh, 45h, 28h,	0A3h, 0F2h, 0FCh, 8Bh, 45h, 2Ah
		db 0A3h, 0F6h, 0FCh, 8Bh, 45h, 2Ch, 0A3h, 0FAh,	0FCh, 8Bh
		db 45h,	2Eh, 0A3h, 0FEh, 0FCh, 0A1h, 0FEh, 0FCh, 0A3h
		db 0F6h, 0FCh, 0E8h, 22h, 52h, 75h, 2Dh, 8Bh, 45h, 2Ah
		db 0A3h, 0F6h, 0FCh, 0A1h, 0F6h, 0FCh, 0A3h, 0FEh, 0FCh
		db 0E8h, 11h, 52h, 75h,	1Ch, 0E8h, 0Ch,	52h, 75h, 17h
		db 58h,	0C7h, 45h, 4, 0B9h, 8, 29h, 45h, 24h, 77h, 12h
		db 0FEh, 0Eh, 10h, 92h,	0C7h, 45h, 34h,	2Ch, 1,	0E9h, 76h
		db 7Dh,	0E8h, 5Ah, 7Dh,	83h, 0C4h, 2, 0C3h, 8Bh, 7Dh, 8
		db 83h,	3Eh, 10h, 92h, 0, 74h, 3, 0E9h,	84h, 0,	8Bh, 5Dh
		db 0Ah,	0C7h, 45h, 4, 0B9h, 8, 0C7h, 47h, 4, 0B9h, 8, 29h
		db 45h,	24h, 77h, 72h, 8Bh, 1Eh, 54h, 90h, 83h,	3Fh, 0
		db 74h,	0Dh, 0FFh, 77h,	0Ah, 56h, 8Bh, 0F3h, 0E8h, 4Ch
		db 4Ah,	5Eh, 5Bh, 0EBh,	0EEh, 57h, 56h,	0B9h, 27h, 0, 0B8h
		db 2 dup(0), 0BBh, 2 dup(0), 0BAh, 40h,	1, 0BFh, 0C0h
		db 0, 0BDh
		db 4Ch,	12h, 0E8h, 0F9h, 57h, 0B9h, 4, 0, 0E8h,	4Fh, 58h
		db 0BFh, 2 dup(0), 81h,	0C7h, 58h, 16h,	0B9h, 40h, 1, 33h
		db 0C0h, 0F3h, 0ABh, 5Eh, 5Fh, 0C7h, 6,	0A8h, 91h, 2 dup(0)
		db 81h,	6, 52h,	91h, 0D0h, 7, 83h, 16h,	54h, 91h, 0, 0C7h
		db 6, 8Ch, 91h,	1, 0, 0C7h, 6, 90h, 91h, 0A0h, 8, 0C7h
		db 6, 0AAh, 91h, 0A0h, 8, 0C7h,	6, 8Eh,	91h, 90h, 15h
		db 0C7h, 6, 96h, 91h, 2	dup(0),	0C3h, 0A1h, 98h, 91h, 1
		db 44h,	16h, 83h, 7Ch, 1Ah, 0, 74h, 3, 0E9h, 0BEh, 0, 0A1h
		db 12h,	9Fh, 2Bh, 44h, 12h, 8Bh, 1Eh, 16h, 9Fh,	2Bh, 5Ch
		db 16h,	0E8h, 9Ch, 5Dh,	3Dh, 2,	0, 7Dh,	3, 0B8h, 2, 0
		db 3Dh,	6, 0, 7Eh, 3, 0B8h, 6, 0, 0D1h,	0E0h, 0D1h, 0E0h
		db 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 2Ch, 40h, 0C7h
		db 44h,	1Eh, 2 dup(0), 89h, 44h, 1Ch, 0C7h, 44h, 3Ch, 2	dup(0)
		db 0C7h, 44h, 3Eh, 2 dup(0), 0C7h, 44h,	40h, 2 dup(0)
		db 0E8h, 67h, 83h, 2Eh,	3Ah, 6,	0F6h, 0AFh, 72h, 3, 0E9h
		db 0D8h, 0, 0C7h, 44h, 20h, 2, 0, 0A1h,	12h, 9Fh, 2Bh
		db 44h,	12h, 8Bh, 1Eh, 16h, 9Fh, 2Bh, 5Ch, 16h,	0E8h, 47h
		db 5Dh,	3Dh, 2,	0, 7Dh,	3, 0B8h, 2, 0, 3Dh, 6, 0, 7Eh
		db 3, 0B8h, 6, 0, 0D1h,	0E0h, 0D1h, 0E0h, 0D1h,	0E0h, 0D1h
		db 0E0h, 0D1h, 0E0h, 2Ch, 60h, 0C7h, 44h, 1Eh, 2 dup(0)
		db 89h,	44h, 1Ch, 0E8h,	21h, 83h, 25h, 1Fh, 0, 5, 20h
		db 0, 8Ah, 0E0h, 32h, 0C0h, 0D0h, 0E4h,	0D0h, 0E4h, 89h
		db 44h,	3Ch, 0C7h, 44h,	3Eh, 2 dup(0), 0C7h, 44h, 40h
		db 2 dup(0), 83h, 7Ch, 1Ch, 20h, 7Ch, 7, 81h, 7Ch, 1Ch
		db 0A0h, 0, 7Ch, 0Ah, 80h, 44h,	1Ch, 40h, 0F7h,	54h, 3Eh
		db 0F7h, 54h, 3Ch, 8Bh,	44h, 20h, 1, 44h, 1Ah, 83h, 7Ch
		db 1Ah,	18h, 7Ch, 3, 0F7h, 5Ch,	20h, 8Bh, 44h, 1Ah, 5
		db 4, 0, 89h, 44h, 42h,	0EBh, 50h, 8Bh,	7Ch, 8,	8Bh, 45h
		db 12h,	89h, 44h, 12h, 8Bh, 45h, 14h, 89h, 44h,	14h, 8Bh
		db 45h,	16h, 89h, 44h, 16h, 8Bh, 45h, 18h, 89h,	44h, 18h
		db 8Bh,	45h, 1Ch, 89h, 44h, 1Ch, 8Bh, 45h, 1Eh,	89h, 44h
		db 1Eh,	8Bh, 45h, 3Ch, 89h, 44h, 3Ch, 8Bh, 45h,	3Eh, 89h
		db 44h,	3Eh, 8Bh, 45h, 40h, 89h, 44h, 40h, 8Bh,	45h, 42h
		db 89h,	44h, 42h, 0C7h,	44h, 1Ah, 64h, 0, 0E9h,	62h, 89h
		db 0A1h, 98h, 91h, 1, 44h, 16h,	0E8h, 0B0h, 0FFh, 8Bh
		db 5Ch,	1Ch, 83h, 0C3h,	10h, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h
		db 0EBh, 0D1h, 0EBh, 83h, 0E3h,	6, 2Eh,	8Bh, 87h, 76h
		db 0CBh, 89h, 44h, 0Ch,	0E9h, 61h, 76h,	81h, 3Eh, 0AAh
		db 91h,	0B0h, 9, 7Dh, 6, 0C7h, 6, 0AAh,	91h, 0B0h, 9, 0A1h
		db 98h,	91h, 1,	44h, 16h, 0E8h,	7Dh, 0FFh, 0A1h, 12h, 9Fh
		db 2Bh,	44h, 12h, 8Bh, 1Eh, 16h, 9Fh, 2Bh, 5Ch,	16h, 0E8h
		db 41h,	5Ch, 3Dh, 2, 0,	7Dh, 3,	0B8h, 2, 0, 3Dh, 6, 0
		db 7Eh,	3, 0B8h, 6, 0, 89h, 44h, 1Ch, 8Bh, 0D8h, 0D1h
		db 0E3h, 2Eh, 8Bh, 87h,	7Eh, 0CBh, 89h,	44h, 0Ch, 0E9h
		db 18h,	76h, 0E8h, 3Dh,	82h, 8Bh, 7Ch, 8, 8Bh, 45h, 12h
		db 89h,	44h, 12h, 8Bh, 45h, 16h, 89h, 44h, 16h,	8Bh, 45h
		db 1Ch,	3Bh, 44h, 1Ch, 74h, 1Fh, 89h, 44h, 1Ch,	8Bh, 0D8h
		db 0D1h, 0E3h, 2Eh, 8Bh
		db 9Fh,	8Eh, 0CBh, 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh
		db 47h,	2, 89h,	44h, 0Eh, 83h, 0C3h, 4,	89h, 5Ch, 10h
		db 2Eh,	0A0h, 10h, 0B0h, 0, 44h, 48h, 73h, 3Eh,	0E8h, 0DBh
		db 81h,	24h, 3Fh, 88h, 44h, 48h, 8Bh, 44h, 12h,	8Bh, 5Ch
		db 16h,	8Bh, 4Ch, 1Ch, 8Bh, 0E9h, 0D1h,	0E5h, 3Eh, 3, 86h
		db 32h,	41h, 3Eh, 3, 9Eh, 42h, 41h, 2Eh, 8Bh, 16h, 12h
		db 0B0h, 0E8h, 0F9h, 5Eh, 0BDh,	32h, 0B4h, 2Eh,	8Bh, 46h
		db 0, 89h, 45h,	0Ch, 2Eh, 8Bh, 46h, 2, 89h, 45h, 0Eh, 83h
		db 0C5h, 4, 89h, 6Dh, 10h, 0E9h, 95h, 75h, 0A1h, 98h, 91h
		db 1, 44h, 16h,	0C7h, 44h, 42h,	0Ch, 0,	0A1h, 9Ch, 91h
		db 0D1h, 0E0h, 0D1h, 0E0h, 25h,	7Fh, 0,	0A9h, 40h, 0, 74h
		db 5, 2Dh, 7Fh,	0, 0F7h, 0D8h, 5, 0A0h,	0, 89h,	44h, 1Ch
		db 0A1h, 9Ch, 91h, 0D1h, 0E0h, 5, 50h, 0, 25h, 0FFh, 0
		db 0A9h, 80h, 0, 74h, 2, 0F6h, 0D0h, 2Dh, 40h, 0, 99h
		db 8Ah,	0F2h, 8Ah, 0D4h, 8Ah, 0E0h, 32h, 0C0h, 89h, 44h
		db 3Ch,	89h, 54h, 3Eh, 0A1h, 9Ch, 91h, 5, 0A0h,	0, 25h
		db 0FFh, 1, 0A9h, 0, 1,	74h, 3,	35h, 0FFh, 1, 2Dh, 80h
		db 0, 0D1h, 0E0h, 0D1h,	0E0h, 89h, 44h,	40h, 0E9h, 2Eh
		db 75h,	0A1h, 98h, 91h,	1, 44h,	16h, 0E8h, 58h,	0FEh, 0E9h
		db 22h,	75h, 0A1h, 98h,	91h, 1,	44h, 16h, 0E8h,	41h, 81h
		db 0E8h, 49h, 0FEh, 2Eh, 0A0h, 1Ch, 0B0h, 0, 44h, 48h
		db 73h,	3Fh, 0E8h, 12h,	81h, 24h, 3Fh, 88h, 44h, 48h, 0B9h
		db 7, 0, 8Bh, 44h, 12h,	8Bh, 5Ch, 16h, 2Eh, 8Bh, 2Eh, 20h
		db 0B0h, 0D1h, 0E5h, 2Eh, 8Bh, 0AEh, 50h, 0CCh,	2Eh, 8Bh
		db 16h,	1Eh, 0B0h, 0E8h, 32h, 5Eh, 0BDh, 32h, 0B4h, 2Eh
		db 8Bh,	46h, 0,	89h, 45h, 0Ch, 2Eh, 8Bh, 46h, 2, 89h, 45h
		db 0Eh,	83h, 0C5h, 4, 89h, 6Dh,	10h, 49h, 79h, 0CCh, 0E9h
		db 0CBh, 74h, 0A1h, 98h, 91h, 1, 44h, 16h, 0E8h, 0EAh
		db 80h,	0A1h, 12h, 9Fh,	2Bh, 44h, 12h, 8Bh, 1Eh, 16h, 9Fh
		db 2Bh,	5Ch, 16h, 0E8h,	0B9h, 5Ah, 3Bh,	44h, 1Ch, 74h
		db 1Fh,	89h, 44h, 1Ch, 8Bh, 0D8h, 0D1h,	0E3h, 2Eh, 8Bh
		db 9Fh,	9Eh, 0CBh, 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh
		db 47h,	2, 89h,	44h, 0Eh, 83h, 0C3h, 4,	89h, 5Ch, 10h
		db 2Eh,	0A0h, 0F8h, 0AFh, 0, 44h, 48h, 73h, 1Ch, 0E8h
		db 8Ah,	80h, 24h, 3Fh, 88h, 44h, 48h, 8Bh, 44h,	12h, 8Bh
		db 5Ch,	16h, 8Bh, 4Ch, 1Ch, 0BDh, 0C5h,	81h, 2Eh, 8Bh
		db 16h,	0FAh, 0AFh, 0E8h, 0B3h,	5Dh, 0E8h, 66h,	74h, 83h
		db 6Ch,	2Ah, 8,	83h, 44h, 2Eh, 8, 0C3h,	80h, 3Eh, 36h
		db 92h,	0, 74h,	3, 0E9h, 0BCh, 0, 0C6h,	6, 36h,	92h, 0FFh
		db 0C7h, 6, 0A6h, 91h, 0B0h, 9,	0C7h, 6, 0A2h, 91h, 0A0h
		db 0, 0C7h, 6, 0A4h, 91h, 0B0h,	0, 0E8h, 9Bh, 74h, 0BFh
		db 5Eh,	0CAh, 0B9h, 14h, 0, 0E8h, 0C9h,	4Eh, 57h, 0BFh
		db 4Ah,	90h, 0E8h, 2Eh,	46h, 5Fh, 0C7h,	4, 54h,	0, 2Eh
		db 8Bh,	5, 89h,	44h, 2,	0C7h, 44h, 4, 53h, 8, 2Eh, 8Bh
		db 45h,	2, 89h,	44h, 6,	2Eh, 8Bh, 5Dh, 4, 2Eh, 8Bh, 7
		db 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Ch, 10h, 0C6h, 44h, 4Ah, 0FFh, 2Eh, 8Bh
		db 45h,	6, 89h,	44h, 12h, 2Eh, 8Bh, 45h, 8, 2Bh, 6, 90h
		db 91h,	89h, 44h, 16h, 0C7h, 44h, 1Ah, 2 dup(0), 0C7h
		db 44h,	1Eh, 2 dup(0), 2Eh, 8Bh, 45h, 0Ah, 89h,	44h, 1Ch
		db 0C7h, 44h, 3Ch, 2 dup(0), 0C7h, 44h,	3Eh, 2 dup(0)
		db 0C7h, 44h, 40h, 2 dup(0), 0C7h, 44h,	42h, 3,	0, 0B8h
		db 2 dup(0), 2Eh, 8Ah, 45h, 0Ch, 89h, 44h, 24h,	2Eh, 8Ah
		db 45h,	0Dh, 88h, 44h, 27h, 83h, 0C7h, 0Eh, 0C7h, 44h
		db 20h,	2 dup(0), 0E8h,	0A4h, 73h, 0E2h, 2, 0EBh, 3, 0E9h
		db 6Ah,	0FFh, 0B8h, 5, 0, 0A3h,	10h, 92h, 0C3h,	0B8h, 0Ch
		db 1, 83h, 7Dh,	0Ch, 0,	74h, 3,	0B8h, 10h, 1, 0BBh, 30h
		db 0C2h, 0E8h, 31h, 73h, 0A1h, 90h, 91h, 29h, 44h, 16h
		db 0C7h, 44h, 4, 0D5h, 0C2h, 0BBh, 0F8h, 0B4h, 81h, 3Ch
		db 0Ch,	1, 74h,	3, 0BBh, 0Eh, 0B5h, 2Eh, 8Bh, 7, 89h, 44h
		db 0Ch,	2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h, 0C3h, 4
		db 89h,	5Ch, 10h, 0C3h,	0A1h, 98h, 91h,	1, 44h,	16h, 81h
		db 7Ch,	16h, 88h, 1, 7Eh, 3, 0E9h, 91h,	0, 0E8h, 6Eh, 7Fh
		db 83h,	7Ch, 1Ah, 0, 75h, 16h, 0C7h, 44h, 1Ch, 1, 0, 2Eh
		db 0A0h, 0FCh, 0AFh, 0,	44h, 48h, 73h, 17h, 0E8h, 37h
		db 7Fh,	24h, 3Fh, 88h, 44h, 48h, 8Bh, 44h, 1Ch,	1, 44h
		db 1Ah,	83h, 7Ch, 1Ah, 6, 75h, 3, 0F7h,	5Ch, 1Ch, 81h
		db 3Ch,	0Ch, 1,	75h, 15h, 8Bh, 44h, 12h, 8Bh, 4Ch, 1Ah
		db 0D1h, 0E1h, 0D1h, 0E1h, 0D1h, 0E1h, 0D1h, 0E1h, 3, 0C8h
		db 83h,	0C1h, 10h, 0EBh, 18h, 8Bh, 4Ch,	12h, 83h, 0C1h
		db 10h,	8Bh, 44h, 1Ah, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h
		db 0D1h, 0E0h, 0F7h, 0D8h, 3, 0C1h, 2Dh, 10h, 0, 8Bh, 5Ch
		db 16h,	83h, 0C3h, 8, 8Bh, 0D3h, 83h, 0C2h, 10h, 89h, 44h
		db 28h,	89h, 5Ch, 2Ah, 89h, 4Ch, 2Ch, 89h, 54h,	2Eh, 0E8h
		db 0F3h, 7Fh, 74h, 13h,	83h, 3Eh, 88h, 91h, 0, 75h, 0Ch
		db 0B8h, 6, 0, 0E8h, 85h, 79h, 0C7h, 6,	4, 9Fh,	0B9h, 8
		db 0C3h, 0E8h, 0ECh, 44h, 0C3h,	81h, 3Ch, 0Ch, 1, 75h
		db 3Ch,	8Bh, 44h, 1Ah, 85h, 0C0h, 74h, 1Bh, 0BBh, 2, 0
		db 8Bh,	54h, 16h, 8Bh, 4Ch, 12h, 0D1h, 0E9h, 0BFh, 0BAh
		db 0CBh, 2Bh, 7Ch, 1Ah,	2Bh, 7Ch, 1Ah, 56h, 8Bh, 0F7h
		db 0E8h, 45h, 46h, 5Eh,	8Bh, 4Ch, 1Ah, 0D1h, 0E1h, 0D1h
		db 0E1h, 0D1h, 0E1h, 0D1h, 0E1h, 3, 4Ch, 12h, 8Bh, 54h
		db 16h,	83h, 0C2h, 8, 8Bh, 74h,	0Ch, 0E9h, 5Eh,	45h, 8Bh
		db 44h,	1Ah, 85h, 0C0h,	74h, 2Bh, 0BBh,	2, 0, 8Bh, 54h
		db 16h,	8Bh, 4Ch, 1Ah, 0D1h, 0E1h, 0D1h, 0E1h, 0D1h, 0E1h
		db 0D1h, 0E1h, 0F7h, 0D9h, 3, 4Ch, 12h,	83h, 0C1h, 10h
		db 0D1h, 0E9h, 0BFh, 0BAh, 0CBh, 2Bh, 7Ch, 1Ah,	2Bh, 7Ch
		db 1Ah,	56h, 8Bh, 0F7h,	0E8h, 0F9h, 45h, 5Eh, 8Bh, 4Ch
		db 1Ah,	0D1h, 0E1h, 0D1h, 0E1h,	0D1h, 0E1h, 0D1h, 0E1h
		db 0F7h, 0D9h, 3, 4Ch, 12h, 83h, 0C1h, 0Fh, 8Bh, 54h, 16h
		db 83h,	0C2h, 8, 8Bh, 74h, 0Ch,	0E9h, 0Dh, 45h,	0B8h, 0E0h
		db 0, 83h, 7Dh,	0Ch, 0,	74h, 3,	0B8h, 0E4h, 0, 0BBh, 0EAh
		db 0C3h, 0E8h, 0AFh, 71h, 83h, 44h, 16h, 1Ch, 81h, 3Ch
		db 0E0h, 0, 75h, 4, 83h, 44h, 12h, 10h,	0C7h, 44h, 4, 75h
		db 0C5h, 0C7h, 44h, 6, 0D8h, 0C4h, 2Eh,	0A1h, 0FEh, 0AFh
		db 89h,	44h, 24h, 0C6h,	44h
		db 27h,	0FFh, 0C7h, 44h, 28h, 0E8h, 3, 0C7h, 44h, 2Ch
		db 0E8h, 3, 0C7h, 44h, 34h, 0C8h, 0, 8Bh, 45h, 6, 89h
		db 44h,	22h, 0BBh, 3Ch,	0B5h, 81h, 3Ch,	0E0h, 0, 74h, 3
		db 0BBh, 24h, 0B5h, 2Eh, 8Bh, 7, 89h, 44h, 0Ch,	2Eh, 8Bh
		db 47h,	2, 89h,	44h, 0Eh, 83h, 0C3h, 4,	89h, 5Ch, 10h
		db 0C7h, 44h, 36h, 2 dup(0), 2Eh, 0A1h,	1Ah, 0B0h, 89h
		db 44h,	48h, 8Bh, 44h, 12h, 89h, 44h, 30h, 8Bh,	44h, 16h
		db 89h,	44h, 32h, 0C3h,	0A1h, 0AAh, 91h, 5, 0D0h, 0, 3Bh
		db 44h,	16h, 7Ch, 7Bh, 0E8h, 0B9h, 7Dh,	83h, 7Ch, 1Ah
		db 0, 75h, 15h,	0E8h, 90h, 7Dh,	2Eh, 3Ah, 6, 0,	0B0h, 73h
		db 0Ah,	0C7h, 44h, 1Ah,	1, 0, 0C7h, 44h, 0Eh, 1, 0, 0C3h
		db 81h,	3Ch, 0E0h, 0, 75h, 9, 2Eh, 0A1h, 2, 0B0h, 1, 44h
		db 12h,	0EBh, 7, 2Eh, 0A1h, 2, 0B0h, 29h, 44h, 12h, 83h
		db 7Ch,	1Ah, 1,	75h, 1Bh, 83h, 7Ch, 0Eh, 0, 75h, 12h, 0C7h
		db 44h,	1Ah, 2,	0, 0A1h, 16h, 9Fh, 2Bh,	44h, 16h, 3, 6
		db 90h,	91h, 89h, 44h, 20h, 0E9h, 81h, 0, 8Bh, 5Ch, 22h
		db 0D1h, 0E3h, 83h, 7Ch, 12h, 28h, 7Ch,	27h, 81h, 7Ch
		db 12h,	18h, 1,	7Fh, 20h, 8Bh, 87h, 52h, 41h, 83h, 7Ch
		db 20h,	0, 79h,	0Eh, 2Eh, 8Bh, 1Eh, 2, 0B0h, 29h, 5Ch
		db 16h,	0EBh, 0Ch, 0E8h, 4Dh, 43h, 0C3h, 2Eh, 8Bh, 1Eh
		db 2, 0B0h, 1, 5Ch, 16h, 83h, 7Ch, 12h,	0E0h, 7Ch, 7, 81h
		db 7Ch,	12h, 60h, 1, 7Ch, 42h, 8Bh, 44h, 30h, 89h, 44h
		db 12h,	8Bh, 44h, 32h, 89h, 44h, 16h, 0C7h, 44h, 1Ah, 2	dup(0)
		db 0C7h, 44h, 28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0BBh
		db 3Ch,	0B5h, 81h, 3Ch,	0E0h, 0, 74h, 3, 0BBh, 24h, 0B5h
		db 2Eh,	8Bh, 7,	89h, 44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h
		db 0Eh,	83h, 0C3h, 4, 89h, 5Ch,	10h, 2Eh, 0A1h,	0FEh, 0AFh
		db 89h,	44h, 24h, 0C3h,	0E8h, 0BBh, 70h, 0A1h, 90h, 91h
		db 29h,	44h, 2Ah, 29h, 44h, 2Eh, 0C3h, 29h, 45h, 24h, 76h
		db 6, 0C7h, 45h, 4, 55h, 0C5h, 0C3h, 56h, 8Bh, 0F7h, 0E8h
		db 0Ch,	4Ah, 5Eh, 2Bh, 1Eh, 90h, 91h, 0BDh, 4Ch, 12h, 0BAh
		db 53h,	8, 0E8h, 2Fh, 6Eh, 8Bh,	45h, 34h, 1, 6,	52h, 91h
		db 83h,	16h, 54h, 91h, 0, 56h, 0E8h, 1Bh, 4Bh, 57h, 0BFh
		db 96h,	90h, 0E8h, 6Eh,	42h, 5Fh, 0BBh,	0B4h, 11h, 0C7h
		db 4, 18h, 0, 0C7h, 44h, 1Ah, 7, 0, 0C7h, 44h, 2, 0DFh
		db 28h,	0C7h, 44h, 4, 53h, 8, 2Eh, 8Bh,	7, 89h,	44h, 0Ch
		db 2Eh,	8Bh, 47h, 2, 89h, 44h, 0Eh, 83h, 0C3h, 4, 89h
		db 5Ch,	10h, 8Bh, 45h, 12h, 89h, 44h, 12h, 8Bh,	45h, 16h
		db 2Bh,	6, 90h,	91h, 89h, 44h, 16h, 0E8h, 46h, 7Ch, 89h
		db 44h,	1Ch, 8Bh, 0F7h,	0E8h, 36h, 0FFh, 5Eh, 0C3h, 0C7h
		db 44h,	4, 75h,	0C5h, 8Bh, 4Ch,	12h, 8Bh, 54h, 16h, 2Bh
		db 16h,	90h, 91h, 81h, 0FAh, 0DCh, 0, 7Fh, 0Ah,	56h, 8Bh
		db 74h,	0Ch, 0E8h, 8Ch,	43h, 5Eh, 0EBh,	19h, 0C3h, 8Bh
		db 4Ch,	12h, 8Bh, 54h, 16h, 2Bh, 16h, 90h, 91h,	81h, 0FAh
		db 0DCh, 0, 7Fh, 0EFh, 56h, 8Bh, 74h, 0Ch, 0E8h, 0E9h
		db 42h,	5Eh, 8Bh, 6Ch, 22h, 0D1h, 0E5h,	8Bh, 44h, 1Ah
		db 3Dh,	2, 0, 7Ch, 1, 0C3h, 0BFh, 0C6h
		db 0CBh, 81h, 3Ch, 0E0h, 0, 74h, 3, 0BFh, 0CCh,	0CBh, 0B8h
		db 1, 0, 0BBh, 3, 0, 3Eh, 8Bh, 8Eh, 94h, 41h, 3Eh, 8Bh
		db 96h,	0AAh, 41h, 2Bh,	16h, 90h, 91h, 56h, 8Bh, 0F7h
		db 0E8h, 80h, 43h, 5Eh,	0C3h, 0B8h, 0D0h, 0, 83h, 7Dh
		db 0Ch,	0, 75h,	3, 0B8h, 0D4h, 0, 0BBh,	1Ah, 0C6h, 0E8h
		db 54h,	6Fh, 0C7h, 44h,	4, 61h,	7, 0C7h, 44h, 6, 0E5h
		db 0C6h, 2Eh, 0A1h, 4, 0B0h, 89h, 44h, 24h, 0C7h, 44h
		db 28h,	0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 8Bh, 7Ch, 38h
		db 0BBh, 0D2h, 0CBh, 81h, 3Ch, 0D0h, 0,	74h, 3,	0BBh, 2
		db 0CCh, 2Eh, 8Bh, 7, 89h, 5, 2Eh, 8Bh,	47h, 2,	89h, 45h
		db 2, 2Eh, 8Bh,	47h, 4,	89h, 45h, 28h, 2Eh, 8Bh, 47h, 6
		db 89h,	45h, 2Ah, 0C3h,	0A1h, 0AAh, 91h, 5, 0D0h, 0, 3Bh
		db 44h,	16h, 7Dh, 3, 0E9h, 0B9h, 0, 8Bh, 44h, 12h, 5, 2
		db 0, 89h, 44h,	28h, 5,	1Ch, 0,	89h, 44h, 2Ch, 8Bh, 44h
		db 16h,	2Bh, 6,	90h, 91h, 5, 2,	0, 89h,	44h, 2Ah, 5, 1Ch
		db 0, 89h, 44h,	2Eh, 8Bh, 44h, 1Ah, 85h, 0C0h, 75h, 17h
		db 2Eh,	0A0h, 6, 0B0h, 0, 44h, 48h, 73h, 0Dh, 0E8h, 34h
		db 7Bh,	24h, 3Fh, 88h, 44h, 48h, 0C7h, 44h, 1Ah, 1, 0
		db 0C3h, 0D1h, 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 0BBh, 0D2h
		db 0CBh, 81h, 3Ch, 0D0h, 0, 74h, 3, 0BBh, 2, 0CCh, 8Bh
		db 7Ch,	38h, 3,	0D8h, 2Eh, 8Bh,	7, 89h,	5, 2Eh,	8Bh, 47h
		db 2, 89h, 45h,	2, 2Eh,	8Bh, 47h, 4, 89h, 45h, 28h, 2Eh
		db 8Bh,	47h, 6,	89h, 45h, 2Ah, 0FFh, 44h, 1Ah, 83h, 7Ch
		db 1Ah,	4, 74h,	0Ch, 83h, 7Ch, 1Ah, 6, 75h, 5, 0C7h, 44h
		db 1Ah,	2 dup(0), 0C3h,	8Bh, 44h, 12h, 8Bh, 5Ch, 16h, 2Bh
		db 1Eh,	90h, 91h, 5, 12h, 0, 83h, 0C3h,	0Eh, 2Eh, 8Bh
		db 2Eh,	8, 0B0h, 0D1h, 0E5h, 2Eh, 8Bh, 0AEh, 50h, 0CCh
		db 0B9h, 2, 0, 81h, 3Ch, 0D4h, 0, 74h, 6, 0B9h,	6, 0, 2Dh
		db 8, 0, 2Eh, 8Bh, 16h,	0Ah, 0B0h, 0E9h, 0F2h, 57h, 0E8h
		db 0DCh, 40h, 0C3h, 29h, 45h, 24h, 76h,	6, 0C7h, 45h, 4
		db 46h,	0C7h, 0C3h, 0BAh, 53h, 8, 8Bh, 45h, 12h, 5, 10h
		db 0, 8Bh, 5Dh,	16h, 2Bh, 1Eh, 90h, 91h, 83h, 0C3h, 10h
		db 0BDh, 4Ch, 12h, 0E8h, 1Dh, 6Ch, 8Bh,	5Dh, 38h, 0BDh
		db 32h,	0CCh, 81h, 3Dh,	0D0h, 0, 74h, 3, 0BDh, 3Ah, 0CCh
		db 2Eh,	8Bh, 46h, 0, 89h, 7, 2Eh, 8Bh, 46h, 2, 89h, 47h
		db 2, 2Eh, 8Bh,	46h, 4,	89h, 47h, 28h, 2Eh, 8Bh, 46h, 6
		db 89h,	47h, 2Ah, 81h, 6, 52h, 91h, 90h, 1, 83h, 16h, 54h
		db 91h,	0, 56h,	8Bh, 0F7h, 0E8h, 7Ch, 40h, 5Eh,	0C3h, 0C7h
		db 44h,	4, 61h,	7, 0BFh, 0D2h, 0CBh, 81h, 3Ch, 0D0h, 0
		db 74h,	3, 0BFh, 2, 0CCh, 0B8h,	2, 0, 0BBh, 2, 0, 8Bh
		db 4Ch,	12h, 0D1h, 0E9h, 8Bh, 54h, 16h,	2Bh, 16h, 90h
		db 91h,	56h, 8Bh, 0F7h,	0E8h, 0F4h, 41h, 5Eh, 0C3h, 0D1h
		db 0E3h, 2Eh, 0FFh, 0A7h, 42h, 0CCh, 0BBh, 28h,	0B0h, 0E9h
		db 0Bh,	6Ch, 0BBh, 5Ch,	0B0h, 0E9h, 5, 6Ch, 0BBh, 6Eh
		db 0B0h, 0E9h, 0FFh, 6Bh, 0BBh,	4Ah, 0B0h, 0E9h, 0F9h
		db 6Bh,	0BBh, 80h, 0B0h, 0E9h, 0F3h, 6Bh, 0BBh,	92h, 0B0h
		db 0E9h, 0EDh, 6Bh, 33h, 0C0h
		db 0C3h, 0C7h, 6, 0A8h,	91h, 80h, 8, 0C7h, 6, 0AAh, 91h
		db 0FFh, 11h, 0C7h, 6, 0ACh, 8Eh, 70h, 17h, 0C7h, 6, 0AEh
		db 8Eh,	0D0h, 7, 0C6h, 6, 36h, 92h, 0, 0C6h, 6,	37h, 92h
		db 0, 2Eh, 0A1h, 0Ch, 0B0h, 2Eh, 0A3h, 80h, 0C9h, 2Eh
		db 0A1h, 0Ch, 0B0h, 2Eh, 0A3h, 8Ch, 0C9h, 2Eh, 0A1h, 0Eh
		db 0B0h, 2Eh, 0A3h, 74h, 0C9h, 2Eh, 0A0h, 14h, 0B0h, 2Eh
		db 0A2h, 4Ah, 0CBh, 2Eh, 0A0h, 14h, 0B0h, 2Eh, 0A2h, 58h
		db 0CBh, 2Eh, 0A0h, 14h, 0B0h, 2Eh, 0A2h, 66h, 0CBh, 2Eh
		db 0A0h, 14h, 0B0h, 2Eh, 0A2h, 74h, 0CBh, 2Eh, 0A0h, 16h
		db 0B0h, 2Eh, 0A2h, 3Ch, 0CBh, 2Eh, 0A0h, 18h, 0B0h, 2Eh
		db 2 dup(0A2h),	0CAh, 0A1h, 1Ah, 99h, 8Bh, 0D8h, 0D1h
		db 0E0h, 3, 0C3h, 0D1h,	0E0h, 0A3h, 76h, 8Eh, 0A1h, 1Ah
		db 99h,	0D1h, 0E0h, 0D1h, 0E0h,	0D1h, 0E0h, 0A3h, 78h
		db 8Eh,	0C7h, 6, 72h, 8Eh, 9Bh,	81h, 0C3h, 0C8h, 0, 20h
		db 0, 13h, 0B6h, 76h, 0B1h, 0D8h, 0, 20h, 0, 99h, 0B8h
		db 0B2h, 0B1h, 0CCh, 0,	20h, 1,	13h, 0B6h, 94h,	0B1h, 0DCh
		db 0, 20h, 1, 99h, 0B8h, 0D0h, 0B1h, 0F0h, 0, 20h, 0, 0EEh
		db 0B1h, 0F4h, 0, 20h, 1, 1Eh, 0B2h, 8Ah, 0B2h,	0A8h, 0B2h
		db 0C6h, 0B2h, 0E4h, 0B2h, 2, 0B3h, 20h, 0B3h, 4Eh, 0B2h
		db 6Ch,	0B2h, 41h, 55h,	81h, 55h, 0C1h,	55h, 1,	56h, 41h
		db 56h,	81h, 56h, 0C1h,	59h, 0,	5Ah, 40h, 5Ah, 80h, 5Ah
		db 0C0h, 5Ah, 1, 5Bh, 41h, 5Eh,	80h, 5Eh, 0C0h,	5Eh, 0
		db 5Fh,	40h, 5Fh, 81h, 5Fh, 0C1h, 62h, 0, 63h, 40h, 63h
		db 80h,	63h, 0C0h, 63h,	1, 64h,	2 dup(0), 41h, 67h, 81h
		db 67h,	0C1h, 67h, 1, 68h, 2 dup(0), 41h, 55h, 81h, 55h
		db 0C1h, 55h, 1, 56h, 41h, 56h,	81h, 56h, 0C1h,	59h, 0
		db 5Ah,	40h, 5Ah, 80h, 5Ah, 0C0h, 5Ah, 1, 5Bh, 41h, 5Eh
		db 80h,	5Eh, 0C0h, 5Eh,	0, 5Fh,	40h, 5Fh, 81h, 5Fh, 0C1h
		db 62h,	0, 63h,	40h, 63h, 80h, 63h, 0C0h, 63h, 1, 64h
		db 2 dup(0), 0C1h, 43h,	0, 44h,	40h, 44h, 81h, 44h, 6 dup(0)
		db 0C1h, 48h, 1, 49h, 4	dup(0),	2Eh, 0C9h, 0Eh,	0C9h, 26h
		db 0C9h, 26h, 0C9h, 26h, 0C9h, 1Eh, 0C9h, 16h, 0C9h, 0Eh
		db 0C9h, 0Eh, 0C9h, 56h, 0C9h, 36h, 0C9h, 36h, 0C9h, 36h
		db 0C9h, 3Eh, 0C9h, 46h, 0C9h, 4Eh, 0C9h, 4Eh, 0C9h, 4Eh
		db 0C9h, 41h, 4Dh, 81h,	4Dh, 41h, 52h, 81h, 52h, 0C1h
		db 56h,	1, 57h,	41h, 5Bh, 81h, 5Bh, 0C1h, 5Fh, 1, 60h
		db 41h,	64h, 81h, 64h, 41h, 68h, 81h, 68h, 41h,	6Bh, 81h
		db 6Bh,	41h, 6Eh, 81h, 6Eh, 41h, 71h, 81h, 71h,	0C1h, 4Dh
		db 1, 4Eh, 0C1h, 52h, 1, 53h, 41h, 57h,	81h, 57h, 0C1h
		db 5Bh,	1, 5Ch,	41h, 60h, 81h, 60h, 0C1h, 64h, 1, 65h
		db 0C1h, 68h, 1, 69h, 0C1h, 6Bh, 1, 6Ch, 0C1h, 6Eh, 1
		db 6Fh,	0C1h, 71h, 1, 72h, 0CEh, 35h, 0C3h, 0C5h, 2Ch
		db 0C1h, 68h, 0C3h, 0, 0BCh, 0F3h, 0C1h, 27h, 0BAh, 0F8h
		db 0B8h, 68h, 0B9h, 0A0h, 3 dup(0), 64h, 0, 0D0h, 0BAh
		db 30h,	0B9h, 0E3h, 0B9h, 70h, 0, 20h, 0, 32h, 0, 0D0h
		db 0BAh, 30h, 0B9h, 0E3h, 0B9h,	0B0h, 0, 20h, 0, 32h, 0
		db 77h,	0BBh, 99h, 3Ah,	0Eh, 0BAh, 0A0h, 0, 58h, 3 dup(0)
		db 0B8h, 0BBh, 99h, 3Ah, 0Eh, 0BAh, 0A0h, 0, 58h, 3 dup(0)
		db 0B8h, 0BBh, 99h, 3Ah, 0Eh, 0BAh, 0A0h, 0, 58h, 0
		db 2 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h, 0
		db 58h,	3 dup(0), 0B8h,	0BBh, 99h, 3Ah,	0Eh, 0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0B8h, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 3 dup(0), 0DCh, 0BBh, 99h, 3Ah, 0Eh,	0BAh, 0A0h
		db 0, 58h, 7 dup(0), 3Eh, 0B3h,	4Ch, 0B3h, 5Ah,	0B3h, 68h
		db 0B3h, 76h, 0B3h, 2 dup(0), 0D5h, 0BDh, 61h, 7, 84h
		db 0B3h, 0A0h, 0, 0E8h,	9, 40h,	0, 32h,	0FFh, 3, 0BFh
		db 61h,	7, 84h,	0B3h, 0A0h, 0, 0E8h, 9,	40h, 0,	32h, 0FFh
		db 3, 0BFh, 61h, 7, 84h, 0B3h, 0A0h, 0,	0E8h, 9, 40h, 0
		db 32h,	0FFh, 3, 0BFh, 61h, 7, 84h, 0B3h, 0A0h,	0, 0E8h
		db 9, 40h, 0, 32h, 0FFh, 28h, 0BFh, 46h, 0BDh, 88h, 0B3h
		db 0A0h, 2 dup(0), 0Ah,	40h, 0,	0AFh, 0FFh, 71h, 0BFh
		db 43h,	0BDh, 8Ch, 0B3h, 0A0h, 2 dup(0), 0Ah, 40h, 0, 32h
		db 0FFh, 0F4h, 0BFh, 61h, 7, 90h, 0B3h,	0A0h, 0, 0F8h
		db 8, 0C0h, 0, 1, 0, 5Bh, 0C0h,	61h, 7,	90h, 0B3h, 0A0h
		db 0, 0F8h, 8, 0C0h, 0,	1, 0, 5Bh, 0C0h, 61h, 7, 90h, 0B3h
		db 0A0h, 0, 0F8h, 8, 0C0h, 0, 1, 0, 5Bh, 0C0h, 61h, 7
		db 90h,	0B3h, 0A0h, 0, 0F8h, 8,	0C0h, 0, 1, 0, 5Bh, 0C0h
		db 61h,	7, 90h,	0B3h, 0A0h, 0, 0F8h, 8,	0C0h, 0, 1, 0
		db 5Bh,	0C0h, 61h, 7, 90h, 0B3h, 0A0h, 0, 0F8h,	8, 0C0h
		db 0, 1, 0, 5Bh, 0C0h, 61h, 7, 90h, 0B3h, 0A0h,	0, 0F8h
		db 8, 0C0h, 0, 1, 0, 5Bh, 0C0h,	61h, 7,	90h, 0B3h, 0A0h
		db 0, 0F8h, 8, 0C0h, 0,	1, 0, 5Bh, 0C0h, 61h, 7, 90h, 0B3h
		db 0A0h, 0, 0F8h, 8, 0C0h, 0, 1, 0, 67h, 0C0h, 0ABh, 0BCh
		db 94h,	0B3h, 0A0h, 0, 0F8h, 8,	0C0h, 0, 14h, 0, 0BEh
		db 0C0h, 0D3h, 0BCh, 0DEh, 0B3h, 78h, 0, 97h, 9, 2 dup(0)
		db 14h,	0, 0BEh, 0C0h, 0D3h, 0BCh, 0DEh, 0B3h, 78h, 0
		db 57h,	9, 2 dup(0), 14h, 0, 0BEh, 0C0h, 0D3h, 0BCh, 0DEh
		db 0B3h, 0C8h, 0, 97h, 9, 2 dup(0), 14h, 0, 0BEh, 0C0h
		db 0D3h, 0BCh, 0DEh, 0B3h, 0C8h, 0, 57h, 9, 2 dup(0), 14h
		db 0, 99h, 1Dh,	81h, 1Bh, 0CDh,	19h, 89h, 1Fh, 11h, 0AEh
		db 0A1h, 0B0h, 31h, 0B3h, 0C1h,	0B5h, 0D1h, 0A3h, 61h
		db 0A6h, 0F1h, 0A8h, 81h, 0ABh,	48h, 0B4h, 5Eh,	0B4h, 74h
		db 0B4h, 8Ah, 0B4h, 0A0h, 0B4h,	0B6h, 0B4h, 0CCh, 0B4h
		db 0E2h, 0B4h, 16h, 0B4h, 24h, 0B4h, 0C2h, 0B3h, 0D0h
		db 0B3h, 0DEh, 0B3h, 0ECh, 0B3h, 0FAh, 0B3h, 8,	0B4h, 41h
		db 3Fh,	41h, 3Fh, 41h, 3Fh, 41h, 3Fh, 41h, 3Fh,	41h, 3Fh
		db 81h,	3Fh, 81h, 3Fh, 81h, 3Fh, 81h, 3Fh, 81h,	3Fh, 81h
		db 3Fh,	1, 31h,	1, 35h,	1, 39h,	0C1h, 30h, 0C1h, 34h, 0C1h
		db 38h,	41h, 39h, 81h, 39h
		db 41h,	3Ch, 81h, 3Ch, 0C1h, 39h, 1, 3Ah, 0C1h,	3Ch, 1
		db 3Dh,	0C1h, 39h, 1, 3Ah, 0C1h, 3Ch, 1, 3Dh, 0C1h, 39h
		db 1, 3Ah, 0C1h, 3Ch, 1, 3Dh, 0C1h, 39h, 1, 3Ah, 0C1h
		db 3Ch,	1, 3Dh,	41h, 39h, 81h, 39h, 41h, 3Ch, 81h, 3Ch
		db 0C1h, 3Ah, 1, 3Bh, 0C1h, 3Dh, 1, 3Eh, 41h, 3Bh, 81h
		db 3Bh,	41h, 3Eh, 81h, 3Eh, 41h, 3Bh, 81h, 3Bh,	41h, 3Eh
		db 81h,	3Eh, 41h, 3Bh, 81h, 3Bh, 41h, 3Eh, 81h,	3Eh, 41h
		db 3Bh,	81h, 3Bh, 41h, 3Eh, 81h, 3Eh, 0C1h, 3Ah, 1, 3Bh
		db 0C1h, 3Dh, 1, 3Eh, 41h, 3Ah,	81h, 3Ah, 41h, 3Dh, 81h
		db 3Dh,	0C1h, 3Bh, 1, 3Ch, 0C1h, 3Eh, 1, 3Fh, 60h, 33h
		db 78h,	0C7h, 7Eh, 0C7h, 84h, 0C7h, 8Ah, 0C7h, 90h, 0C7h
		db 96h,	0C7h, 71h, 81h,	0C5h, 81h, 9Bh,	81h, 36h, 68h
		db 5Ah,	68h, 6 dup(0), 14h, 0, 0Ch, 0, 0Ah, 0, 14h, 0
		db 14h,	0, 6, 0, 50h, 0, 7, 0, 4, 0, 0Fh, 0, 0Fh, 0, 6
		db 0, 0Ah, 0, 10h, 0, 0Ah, 0, 14h, 0, 14h, 0, 12h, 0, 8
		db 0, 0Ah, 0, 0Fh, 0, 8, 0, 1, 0, 14h, 0, 12h, 0, 0Ah
		db 0, 0C8h, 0, 4, 0, 0Ah, 0, 1,	0, 0Eh,	0, 0C8h, 0, 90h
		db 1, 0Bh, 48h,	53h, 8,	0A7h, 3Ah, 2Eh,	0CDh, 0Ah, 0, 0FFh
		db 3 dup(0), 0CCh, 0, 2Ch, 1, 0Bh, 48h,	53h, 8,	0A7h, 3Ah
		db 50h,	0CDh, 0Ah, 0, 0FFh, 3 dup(0), 0D0h, 0, 0C8h, 0
		db 0Bh,	48h, 53h, 8, 0A7h, 3Ah,	6Eh, 0CDh, 5, 5	dup(0)
		db 0D4h, 0, 0FAh, 0, 0Bh, 48h, 53h, 8, 0A7h, 3Ah, 94h
		db 0CDh, 5, 5 dup(0), 0D8h, 0, 64h, 0, 0Bh, 48h, 53h, 8
		db 0A7h, 3Ah, 0DAh, 0CDh, 5, 5 dup(0), 0E0h, 0,	0FAh, 0
		db 0Bh,	48h, 53h, 8, 0A7h, 3Ah,	0, 0CEh, 5, 5 dup(0), 0E8h
		db 0, 0C8h, 0, 3Ch, 0D2h, 53h, 8, 0A7h,	3Ah, 82h, 0CEh
		db 5, 5	dup(0),	0F0h, 0, 64h, 0, 0Bh, 48h, 53h,	8, 0A7h
		db 3Ah,	4Eh, 0CEh, 5, 5	dup(0),	29h, 0,	2, 0, 0B9h, 2 dup(2)
		db 0, 35h, 5, 2, 0, 0C5h, 7, 2,	0, 41h,	0Ah, 2,	0, 0D1h
		db 0Ch,	2, 0, 4Dh, 0Fh,	2, 3 dup(0), 0E2h, 41h,	2Eh, 0CDh
		db 0DDh, 11h, 3, 0, 9, 14h, 3, 0, 35h, 16h, 3, 0, 9Dh
		db 18h,	3, 0, 2Dh, 1Bh,	3, 0, 95h, 1Dh,	3, 3 dup(0), 0E2h
		db 41h,	50h, 0CDh, 41h,	34h, 2,	0, 0F1h, 34h, 2, 0, 97h
		db 35h,	2, 0, 47h, 36h,	2, 0, 0EDh, 36h, 2, 0, 9Dh, 37h
		db 2, 0, 43h, 38h, 2, 0, 0F3h, 38h, 2, 3 dup(0), 0E2h
		db 41h,	6Eh, 0CDh, 41h,	3Bh, 2,	0, 0F1h, 3Bh, 2, 0, 8Dh
		db 3Ch,	2, 0, 15h, 3Dh,	2, 0, 93h, 3Dh,	2, 0, 1Bh, 3Eh
		db 2, 0, 99h, 3Eh, 2, 0, 21h, 3Fh, 2, 0, 0BDh, 3Fh, 2
		db 0, 6Dh, 40h,	2, 0, 9, 41h, 2, 0, 91h, 41h, 2, 0, 0Fh
		db 42h,	2, 0, 97h, 42h,	2, 0, 15h, 43h,	2, 0, 9Dh, 43h
		db 2, 3	dup(0),	0E2h, 41h, 94h,	0CDh, 39h, 44h,	1, 0, 0C1h
		db 44h,	1, 0, 5Dh, 45h,	1, 0, 0Dh, 46h,	1, 0, 0BDh, 46h
		db 1, 0, 6Dh, 47h, 1, 0, 1Dh, 48h, 1, 0, 0CDh, 48h, 1
		db 3 dup(0), 0E2h, 41h,	0DAh, 0CDh, 69h, 54h
		db 1, 0, 0Fh, 55h, 1, 0, 0B5h, 55h, 1, 0, 51h, 56h, 1
		db 0, 0D9h, 56h, 1, 0, 7Fh, 57h, 1, 0, 7, 58h, 1, 0, 0A3h
		db 58h,	1, 0, 49h, 59h,	1, 0, 0EFh, 59h, 1, 0, 95h, 5Ah
		db 1, 0, 31h, 5Bh, 1, 0, 0B9h, 5Bh, 1, 0, 4Bh, 5Ch, 1
		db 0, 0F1h, 5Ch, 1, 0, 83h, 5Dh, 1, 0, 0Bh, 5Eh, 1, 0
		db 0A7h, 5Eh, 1, 3 dup(0), 0E2h, 41h, 0, 0CEh, 0F9h, 0A5h
		db 1, 0, 0A9h, 0A6h, 1,	0, 31h,	0A7h, 1, 0, 0A5h, 0A7h
		db 1, 0, 2Dh, 0A8h, 1, 0, 0DDh,	0A8h, 1, 0, 65h, 0A9h
		db 1, 0, 0D9h, 0A9h, 1,	3 dup(0), 0E2h,	41h, 4Eh, 0CEh
		db 6Dh,	83h, 2,	0, 1Dh,	84h, 2,	3 dup(0), 0E2h,	41h, 74h
		db 0CEh, 0CDh, 84h, 2, 0, 7Dh, 85h, 2, 3 dup(0), 0E2h
		db 41h,	82h, 0CEh, 2Dh,	86h, 2,	0, 0DDh, 86h, 2, 3 dup(0)
		db 0E2h, 41h, 90h, 0CEh, 69h, 49h, 3, 0, 19h, 4Ah, 3, 3	dup(0)
		db 0E2h, 41h, 9Eh, 0CEh, 0C9h, 4Ah, 3, 0, 79h, 4Bh, 3
		db 3 dup(0), 0E2h, 41h,	0ACh, 0CEh, 29h, 4Ch, 3, 0, 0D9h
		db 4Ch,	3, 3 dup(0), 0E2h, 41h,	0BAh, 0CEh, 89h, 4Dh, 3
		db 0, 39h, 4Eh,	3, 3 dup(0), 0E2h, 41h,	0C8h, 0CEh, 0E9h
		db 4Eh,	3, 0, 99h, 4Fh,	3, 3 dup(0), 0E2h, 41h,	0D6h, 0CEh
		db 49h,	50h, 3,	0, 0F9h, 50h, 3, 3 dup(0), 0E2h, 41h, 0E4h
		db 0CEh, 0A9h, 51h, 3, 0, 59h, 52h, 3, 3 dup(0), 0E2h
		db 41h,	0F2h, 0CEh, 9, 53h, 3, 0, 0B9h,	53h, 3,	3 dup(0)
		db 0E2h, 41h, 0, 0CFh, 0C1h, 1Fh, 2, 0,	51h, 22h, 2, 0
		db 0E1h, 24h, 2, 0, 71h, 27h, 2, 3 dup(0), 0E2h, 41h, 0Eh
		db 0CFh, 1, 2Ah, 2, 0, 91h, 2Ch, 2, 0, 21h, 2Fh, 2, 0
		db 0B1h, 31h, 2, 3 dup(0), 0E2h, 41h, 24h, 0CFh, 71h, 27h
		db 2, 0, 0E1h, 24h, 2, 0, 51h, 22h, 2, 0, 0C1h,	1Fh, 2
		db 3 dup(0), 0E2h, 41h,	3Ah, 0CFh, 0B1h, 31h, 2, 0, 21h
		db 2Fh,	2, 0, 91h, 2Ch,	2, 0, 1, 2Ah, 2, 3 dup(0), 0E2h
		db 41h,	50h, 0CFh, 61h,	7Ah, 2,	0, 11h,	7Bh, 2,	3 dup(0)
		db 0E2h, 41h, 66h, 0CFh, 0B7h, 7Bh, 2, 0, 53h, 7Ch, 2
		db 3 dup(0), 0E2h, 41h,	74h, 0CFh, 0DBh, 7Ch, 2, 0, 4Fh
		db 7Dh,	2, 3 dup(0), 0E2h, 41h,	82h, 0CFh, 0C3h, 7Dh, 2
		db 0, 5Fh, 7Eh,	2, 3 dup(0), 0E2h, 41h,	90h, 0CFh, 0E7h
		db 7Eh,	2, 0, 97h, 7Fh,	2, 3 dup(0), 0E2h, 41h,	9Eh, 0CFh
		db 3Dh,	80h, 2,	0, 0D9h, 80h, 2, 3 dup(0), 0E2h, 41h, 0ACh
		db 0CFh, 61h, 81h, 2, 0, 0D5h, 81h, 2, 3 dup(0), 0E2h
		db 41h,	0BAh, 0CFh, 49h, 82h, 2, 0, 0E5h, 82h, 2, 3 dup(0)
		db 0E2h, 41h, 0C8h, 0CFh, 4 dup(0), 55h, 64h, 2	dup(0)
		db 61h,	0AAh, 2	dup(0),	0DDh, 99h, 2 dup(0), 23h, 9Bh
		db 2, 0, 9Fh, 9Dh, 2, 0, 0A9h, 9Eh, 2, 0, 0C7h,	9Fh, 2
		db 3 dup(0), 0E2h, 41h,	0E2h, 0CFh, 29h, 99h, 1, 0, 4Dh
		db 99h,	1, 0, 71h, 99h,	1, 0, 95h, 99h,	1, 0, 0B9h, 99h
		db 1, 0, 95h, 99h, 1, 0, 71h, 99h, 1, 0, 4Dh, 99h, 1, 3	dup(0)
		db 0E2h, 41h, 0FCh, 0CFh, 0F9h,	0A0h, 2, 0, 61h, 0A3h
		db 2, 0, 0E9h, 0A4h, 2,	0, 61h,	0A3h, 2, 3 dup(0), 0E2h
		db 41h,	22h, 0D0h, 8Dh,	87h, 2,	0, 3Dh,	88h, 2,	0
		db 2 dup(0), 0E2h, 41h,	38h, 0D0h, 0EDh, 88h, 2, 0, 9Dh
		db 89h,	2, 3 dup(0), 0E2h, 41h,	46h, 0D0h, 4Dh,	8Ah, 2
		db 0, 0FDh, 8Ah, 2, 3 dup(0), 0E2h, 41h, 54h, 0D0h, 0ADh
		db 8Bh,	2, 0, 5Dh, 8Ch,	2, 3 dup(0), 0E2h, 41h,	62h, 0D0h
		db 0Dh,	8Dh, 2,	0, 0BDh, 8Dh, 2, 3 dup(0), 0E2h, 41h, 70h
		db 0D0h, 6Dh, 8Eh, 2, 0, 1Dh, 8Fh, 2, 3	dup(0),	0E2h, 41h
		db 7Eh,	0D0h, 0CDh, 8Fh, 2, 0, 7Dh, 90h, 2, 3 dup(0), 0E2h
		db 41h,	8Ch, 0D0h, 2Dh,	91h, 2,	0, 0DDh, 91h, 2, 3 dup(0)
		db 0E2h, 41h, 9Ah, 0D0h, 4Dh, 5Fh, 1, 0, 0F3h, 5Fh, 1
		db 0, 85h, 60h,	1, 0, 3, 61h, 1, 3 dup(0), 0E2h, 41h, 0A8h
		db 0D0h, 99h, 39h, 3, 0, 0Dh, 3Ah, 3, 3	dup(0),	0E2h, 41h
		db 0BEh, 0D0h, 6Dh, 3Ah, 3, 0, 0E1h, 3Ah, 3, 3 dup(0)
		db 0E2h, 41h, 0CCh, 0D0h, 0A1h,	16h, 92h, 0A3h,	9Eh, 0DAh
		db 0A1h, 18h, 92h, 0A3h, 74h, 0D2h, 2 dup(0C3h), 8Bh, 0FEh
		db 0D1h, 0E3h, 2Eh, 0FFh, 0A7h,	2Eh, 0E7h, 8Bh,	5Dh, 6
		db 0D1h, 0E3h, 8Bh, 9Fh, 0Ch, 0DFh, 8Dh, 6Fh, 6, 0C7h
		db 6, 0FEh, 0FCh, 9, 0,	0C7h, 6, 0FAh, 0FCh, 2 dup(0)
		db 8Bh,	45h, 8,	0A3h, 0E2h, 0FCh, 8Bh, 45h, 0Ah, 0A3h
		db 0E6h, 0FCh, 0A1h, 90h, 91h, 29h, 6, 0E6h, 0FCh, 0E8h
		db 3, 3Fh, 0BFh, 4Ah, 90h, 0E8h, 69h, 36h, 0C7h, 4, 0DCh
		db 0, 0C7h, 44h, 2, 0B9h, 0D1h,	0C7h, 44h, 4, 53h, 8, 0C7h
		db 44h,	6, 0A7h, 3Ah, 0C7h, 44h, 0Ch, 69h, 49h,	0C7h, 44h
		db 0Eh,	2 dup(0), 8Bh, 47h, 2, 89h, 44h, 12h, 8Bh, 47h
		db 4, 2Bh, 6, 90h, 91h,	89h, 44h, 16h, 2Eh, 0A1h, 60h
		db 0CCh, 89h, 44h, 24h,	0C6h, 44h, 27h,	0, 0C7h, 44h, 1Ch
		db 2 dup(0), 0C7h, 44h,	1Eh, 2 dup(0), 0C7h, 44h, 3Ch
		db 2 dup(0), 0C7h, 44h,	3Eh, 2 dup(0), 0C7h, 44h, 40h
		db 2 dup(0), 89h, 5Ch, 38h, 89h, 6Ch, 3Ah, 0A1h, 0FAh
		db 0FCh, 89h, 44h, 1Ah,	2Eh, 0A1h, 62h,	0CCh, 29h, 6, 0FAh
		db 0FCh, 0C7h, 44h, 28h, 0E8h, 3, 0C7h,	44h, 2Ch, 0E8h
		db 3, 0C7h, 44h, 34h, 0C8h, 0, 0C7h, 44h, 36h, 2 dup(0)
		db 2Eh,	0A1h, 64h, 0CCh, 89h, 44h, 42h,	0B8h, 19h, 0, 0F7h
		db 26h,	0FEh, 0FCh, 88h, 44h, 48h, 0FFh, 0Eh, 0FEh, 0FCh
		db 78h,	3, 0E9h, 64h, 0FFh, 0C3h, 0A1h,	98h, 91h, 1, 44h
		db 16h,	81h, 7Ch, 16h, 90h, 1, 7Dh, 72h, 0FFh, 74h, 1Ch
		db 0E8h, 99h, 76h, 8Bh,	5Ch, 1Ch, 83h, 0C3h, 10h, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h, 0E3h
		db 0Eh,	58h, 5,	10h, 0,	0D1h, 0E8h, 0D1h, 0E8h,	0D1h, 0E8h
		db 0D1h, 0E8h, 25h, 0Eh, 0, 3Bh, 0C3h, 74h, 18h, 2Eh, 8Bh
		db 0BFh, 42h, 0E7h, 2Eh, 8Bh, 5, 89h, 44h, 0Ch,	2Eh, 8Bh
		db 45h,	2, 89h,	44h, 0Eh, 83h, 0C7h, 4,	89h, 7Ch, 10h
		db 2Eh,	0A0h, 96h, 0CCh, 0, 44h, 48h, 73h, 24h,	0C6h, 44h
		db 48h,	0, 0B9h, 7, 0, 8Bh, 44h, 12h, 8Bh, 5Ch,	16h, 2Eh
		db 8Bh,	2Eh, 9Ah, 0CCh,	0D1h, 0E5h, 2Eh, 8Bh, 0AEh, 0BCh
		db 0EBh, 2Eh, 8Bh, 16h,	98h, 0CCh, 0E8h, 0A1h, 4Ch, 49h
		db 79h,	0E3h, 0E9h, 51h, 63h, 0E8h, 85h, 35h, 0C3h, 0FFh
		db 74h,	1Ch, 0E8h, 0C9h, 75h, 8Bh, 5Ch,	1Ch, 83h, 0EBh
		db 20h,	0D1h, 0EBh, 0D1h, 0EBh,	0D1h, 0EBh, 0D1h, 0EBh
		db 0D1h, 0EBh, 83h, 0E3h, 6, 58h, 2Dh, 20h, 0, 0D1h, 0E8h
		db 0D1h, 0E8h, 0D1h
		db 0E8h, 0D1h, 0E8h, 0D1h, 0E8h, 25h, 6, 0, 3Bh, 0C3h
		db 75h,	1, 0C3h, 2Eh, 8Bh, 9Fh,	52h, 0E7h, 2Eh,	8Bh, 7
		db 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Ch, 10h, 0E9h, 3, 63h, 0B8h, 0, 1, 83h
		db 7Dh,	0Ch, 0,	74h, 3,	0B8h, 4, 1, 0BBh, 0F0h,	0D2h, 0E8h
		db 91h,	62h, 0A1h, 90h,	91h, 29h, 44h, 16h, 0C7h, 44h
		db 4, 53h, 8, 0C7h, 44h, 6, 0A7h, 3Ah, 2Eh, 0A1h, 66h
		db 0CCh, 89h, 44h, 24h,	0C6h, 44h, 27h,	0FFh, 0C7h, 44h
		db 28h,	0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0C7h,	44h, 34h
		db 0FAh, 0, 0BBh, 0Eh, 0CFh, 81h, 3Ch, 0, 1, 74h, 7, 83h
		db 44h,	12h, 10h, 0BBh,	24h, 0CFh, 2Eh,	8Bh, 7,	89h, 44h
		db 0Ch,	2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h, 0C3h, 4
		db 89h,	5Ch, 10h, 0C7h,	44h, 36h, 2 dup(0), 0C7h, 44h
		db 1Ch,	14h, 0,	0C3h, 0A1h, 98h, 91h, 1, 44h, 16h, 81h
		db 7Ch,	16h, 90h, 1, 7Ch, 3, 0E9h, 88h,	0, 0E8h, 0AEh
		db 6Eh,	0A1h, 90h, 91h,	83h, 7Ch, 1Ch, 0, 78h, 1Eh, 0FFh
		db 44h,	16h, 3,	44h, 16h, 3Dh, 20h, 0Fh, 7Ch, 42h, 0C7h
		db 44h,	1Ch, 2 dup(0FFh), 0BFh,	3Ah, 0CFh, 81h,	3Ch, 0
		db 1, 74h, 21h,	0BFh, 50h, 0CFh, 0EBh, 1Ch, 0FFh, 4Ch
		db 16h,	3, 44h,	16h, 3Dh, 30h, 0Eh, 7Fh, 24h, 0C7h, 44h
		db 1Ch,	1, 0, 0BFh, 0Eh, 0CFh, 81h, 3Ch, 0, 1, 74h, 3
		db 0BFh, 24h, 0CFh, 2Eh, 8Bh, 5, 89h, 44h, 0Ch,	2Eh, 8Bh
		db 45h,	2, 89h,	44h, 0Eh, 83h, 0C7h, 4,	89h, 7Ch, 10h
		db 2Eh,	0A0h, 68h, 0CCh, 0, 44h, 48h, 73h, 23h,	0E8h, 2Ch
		db 6Eh,	24h, 3Fh, 88h, 44h, 48h, 8Bh, 44h, 12h,	5, 20h
		db 0, 8Bh, 5Ch,	16h, 0B9h, 2, 0, 81h, 3Ch, 0, 1, 74h, 6
		db 0B9h, 6, 0, 2Dh, 40h, 0, 0E8h, 7, 0,	0E9h, 1, 62h, 0E8h
		db 35h,	34h, 0C3h, 56h,	0E8h, 92h, 3Ch,	0BFh, 4Ah, 90h
		db 0E8h, 0E6h, 33h, 8Bh, 0FEh, 5Eh, 0C7h, 5, 0E4h, 0, 0C7h
		db 45h,	2, 0FAh, 0D3h, 0C7h, 45h, 4, 53h, 8, 0C7h, 45h
		db 6, 0A7h, 3Ah, 89h, 45h, 12h,	89h, 5Dh, 16h, 89h, 4Dh
		db 1Ch,	8Bh, 0D9h, 0D1h, 0E3h, 2Eh, 8Bh, 9Fh, 5Ah, 0E7h
		db 2Eh,	8Bh, 7,	89h, 45h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h
		db 0Eh,	83h, 0C3h, 4, 89h, 5Dh,	10h, 2Eh, 0A1h,	6Ah, 0CCh
		db 89h,	45h, 24h, 0C6h,	45h, 27h, 0, 0C7h, 45h,	34h, 64h
		db 0, 0E8h, 0ADh, 6Dh, 25h, 1Fh, 0, 89h, 45h, 1Ah, 0C7h
		db 45h,	36h, 2 dup(0), 0C7h, 45h, 28h, 0E8h, 3,	0C7h, 45h
		db 2Ch,	0E8h, 3, 0C3h, 0E8h, 0B4h, 6Dh,	0FFh, 44h, 1Ah
		db 8Bh,	44h, 1Ah, 2Eh, 3Bh, 6, 6Ch, 0CCh, 7Ch, 3, 0E9h
		db 8Bh,	0, 25h,	7, 0, 75h, 50h,	0A1h, 12h, 9Fh,	8Bh, 1Eh
		db 16h,	9Fh, 2Bh, 44h, 12h, 2Bh, 5Ch, 16h, 0E8h, 6Eh, 47h
		db 2Bh,	44h, 1Ch, 74h, 3Bh, 79h, 3, 5, 8, 0, 0FFh, 44h
		db 1Ch,	3Dh, 4,	0, 7Ch,	0Dh, 75h, 7, 0F7h, 44h,	12h, 1
		db 0, 75h, 4, 83h, 6Ch,	1Ch, 2,	83h, 64h, 1Ch, 7, 8Bh
		db 5Ch,	1Ch, 0D1h, 0E3h, 2Eh, 8Bh, 9Fh,	5Ah, 0E7h, 2Eh
		db 8Bh,	7, 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh
		db 83h,	0C3h, 4, 89h, 5Ch
		db 10h,	8Bh, 5Ch, 1Ch, 0D1h, 0E3h, 8Bh,	87h, 70h, 33h
		db 1, 44h, 12h,	8Bh, 87h, 80h, 33h, 3, 6, 98h, 91h, 1
		db 44h,	16h, 0E8h, 0Dh,	61h, 0E8h, 6Ch,	6Eh, 74h, 26h
		db 83h,	3Eh, 88h, 91h, 0, 75h, 10h, 0C7h, 6, 4,	9Fh, 0B9h
		db 8, 0B8h, 4, 0, 0E8h,	0BBh, 67h, 0E8h, 29h, 33h, 0C3h
		db 0E8h, 5Ah, 3Ah, 0BDh, 30h, 12h, 0BAh, 53h, 8, 0E8h
		db 82h,	5Eh, 0E8h, 19h,	33h, 0C3h, 80h,	3Eh, 38h, 92h
		db 0, 74h, 3, 0E9h, 2Ah, 1, 0C6h, 6, 38h, 92h, 0FFh, 0C7h
		db 6, 0A6h, 91h, 0A0h, 1, 0C7h,	6, 0A2h, 91h, 0A0h, 0
		db 0C7h, 6, 0A4h, 91h, 0B0h, 0,	0E8h, 1Fh, 61h,	0C6h, 6
		db 9Eh,	0DAh, 0FFh, 0C6h, 6, 74h, 0D2h,	0FFh, 0C7h, 6
		db 16h,	92h, 2 dup(0FFh), 0C7h,	6, 18h,	92h, 2 dup(0FFh)
		db 0BFh, 2 dup(0), 0B9h, 78h, 0, 33h, 0C0h, 0F3h, 0ABh
		db 0B9h, 12h, 0, 0BEh, 12h, 0E5h, 0C7h,	5, 2 dup(0), 0C7h
		db 45h,	2, 2 dup(0), 0C7h, 45h,	4, 2 dup(0), 83h, 0C7h
		db 6, 51h, 0B9h, 1Eh, 0, 2Eh, 8Ah, 4, 46h, 0AAh, 0E2h
		db 0F9h, 59h, 0C7h, 5, 2 dup(0), 0C7h, 45h, 2, 2 dup(0)
		db 83h,	0C7h, 4, 0E2h, 0D5h, 0B9h, 2Ch,	1, 33h,	0C0h, 0F3h
		db 0ABh, 0C7h, 6, 8Eh, 91h, 10h, 4, 0C7h, 6, 90h, 91h
		db 0A0h, 1, 0C7h, 6, 0AAh, 91h,	0A0h, 1, 0BFh, 6Ah, 0E7h
		db 0B9h, 16h, 0, 0E8h, 0E3h, 3Ah, 89h, 36h, 0DEh, 0FCh
		db 0EBh, 3, 0E8h, 0DAh,	3Ah, 57h, 0BFh,	4Ah, 90h, 0E8h
		db 3Fh,	32h, 5Fh, 2Eh, 8Bh, 5, 89h, 4, 2Eh, 8Bh, 45h, 2
		db 89h,	44h, 2,	2Eh, 8Bh, 45h, 4, 89h, 44h, 4, 2Eh, 8Bh
		db 45h,	6, 89h,	44h, 6,	2Eh, 8Bh, 5Dh, 8, 2Eh, 8Bh, 7
		db 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Ch, 10h, 0C7h, 44h, 12h, 30h,	0, 0C7h
		db 44h,	16h, 0C0h, 0FEh, 2Eh, 8Bh, 45h,	0Ah, 89h, 44h
		db 30h,	2Eh, 8Bh, 45h, 0Ch, 89h, 44h, 32h, 0C7h, 44h, 1Ah
		db 2 dup(0), 0C6h, 44h,	4Ah, 0FFh, 0C7h, 44h, 1Ch, 4, 0
		db 33h,	0C0h, 2Eh, 8Ah,	45h, 0Eh, 89h, 44h, 24h, 2Eh, 8Ah
		db 45h,	0Fh, 88h, 44h, 27h, 83h, 0C7h, 10h, 0C7h, 44h
		db 28h,	0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0A1h,	0DEh, 0FCh
		db 89h,	2 dup(44h), 0C7h, 44h, 36h, 2 dup(0), 0E2h, 2
		db 0EBh, 3, 0E9h, 6Fh, 0FFh, 0C7h, 6, 1Ah, 92h,	12h, 0
		db 0C3h, 0C7h, 44h, 4, 4Ch, 0D7h, 0B8h,	0Fh, 0,	0BBh, 12h
		db 0, 8Bh, 54h,	16h, 8Bh, 4Ch, 12h, 0D1h, 0E9h,	56h, 0BEh
		db 12h,	0E5h, 0E8h, 6Ch, 33h, 5Eh, 0C3h, 0E8h, 11h, 4
		db 8Bh,	44h, 12h, 8Bh, 5Ch, 16h, 89h, 44h, 28h,	89h, 5Ch
		db 2Ah,	3, 44h,	24h, 2,	5Ch, 27h, 89h, 44h, 2Ch, 89h, 5Ch
		db 2Eh,	0C3h, 0E8h, 99h, 6Bh, 0E8h, 0F2h, 3, 0E9h, 6Bh
		db 5Fh,	0E8h, 0ECh, 3, 83h, 3Eh, 1Ah, 92h, 0, 75h, 3, 0E9h
		db 5Eh,	5Fh, 0C3h, 0C7h, 6, 0AAh, 91h, 0A0h, 1,	83h, 3Eh
		db 90h,	91h, 0,	75h, 8,	56h, 0A1h, 9Ah,	91h, 0E8h, 0DCh
		db 6Bh,	5Eh, 0A1h, 98h,	91h, 1,	44h, 16h, 83h, 7Ch, 1Ah
		db 0, 74h, 41h,	78h, 23h, 83h, 44h, 1Ah, 2, 83h, 7Ch, 1Ah
		db 14h,	74h, 12h, 83h, 7Ch, 1Ah, 28h, 74h, 59h,	83h, 7Ch
		db 1Ah,	3Ch, 75h, 52h, 0C7h, 44h, 1Ah, 2 dup(0), 0C3h
		db 0C7h, 6
		db 8Ah,	8Eh, 0Ch, 0, 0C3h, 83h,	6Ch, 1Ah, 2, 83h, 7Ch
		db 1Ah,	0ECh, 74h, 0EFh, 83h, 7Ch, 1Ah,	0D8h, 74h, 36h
		db 83h,	7Ch, 1Ah, 0C4h,	75h, 2Fh, 0C7h,	44h, 1Ah, 2 dup(0)
		db 0C3h, 2Eh, 0A0h, 6Eh, 0CCh, 0, 44h, 48h, 73h, 20h, 0E8h
		db 0F7h, 6Ah, 24h, 3Fh,	88h, 44h, 48h, 0C7h, 6,	8Ah, 8Eh
		db 2 dup(0), 0C7h, 44h,	1Ah, 2,	0, 0F7h, 6, 9Ch, 91h, 1
		db 0, 75h, 5, 0C7h, 44h, 1Ah, 0FEh, 0FFh, 0C3h,	0B4h, 1
		db 0CDh, 80h, 8Bh, 44h,	12h, 0A3h, 0E2h, 0FCh, 83h, 6
		db 0E2h, 0FCh, 77h, 0C7h, 6, 0E6h, 0FCh, 65h, 0, 83h, 7Ch
		db 1Ah,	0, 79h,	6, 0C7h, 6, 0E6h, 0FCh,	0F5h, 0, 8Bh, 44h
		db 16h,	1, 6, 0E6h, 0FCh, 56h, 0E8h, 3Eh, 39h, 0BFh, 4Ah
		db 90h,	0E8h, 0A4h, 30h, 8Bh, 0FEh, 5Eh, 0C7h, 5, 0ECh
		db 0, 0C7h, 45h, 2, 98h, 0D7h, 0C7h, 45h, 4, 53h, 8, 0C7h
		db 45h,	6, 0A7h, 3Ah, 0A1h, 0E2h, 0FCh,	89h, 45h, 12h
		db 0A1h, 0E6h, 0FCh, 89h, 45h, 16h, 0C7h, 45h, 1Ch, 2 dup(0)
		db 0BBh, 38h, 0D0h, 2Eh, 8Bh, 7, 89h, 45h, 0Ch,	2Eh, 8Bh
		db 47h,	2, 89h,	45h, 0Eh, 83h, 0C3h, 4,	89h, 5Dh, 10h
		db 2Eh,	0A1h, 70h, 0CCh, 89h, 45h, 24h,	0C6h, 45h, 27h
		db 0, 0C7h, 45h, 34h, 96h, 0, 0C7h, 45h, 1Ah, 1, 0, 0C7h
		db 45h,	36h, 2 dup(0), 0C7h, 45h, 28h, 0E8h, 3,	0C7h, 45h
		db 2Ch,	0E8h, 3, 0C3h, 0BAh, 55h, 0, 8Bh, 5Ch, 1Ah, 85h
		db 0DBh, 74h, 41h, 79h,	5, 0BAh, 0E5h, 0, 0F7h,	0DBh, 83h
		db 0E3h, 0FCh, 8Bh, 4Ch, 12h, 83h, 0C1h, 69h, 3, 54h, 16h
		db 56h,	53h, 51h, 52h, 0D1h, 0EBh, 2Eh,	8Bh, 0B7h, 0D4h
		db 2 dup(0E8h),	0FEh, 30h, 5Ah,	59h, 5Bh, 5Eh, 83h, 0FBh
		db 14h,	7Ch, 17h, 83h, 0FBh, 28h, 7Dh, 12h, 83h, 0C1h
		db 0Eh,	83h, 0C2h, 10h,	56h, 0D1h, 0EBh, 2Eh, 8Bh, 0B7h
		db 0C0h, 2 dup(0E8h), 0DFh, 30h, 5Eh, 0C3h, 0E8h, 16h
		db 6Ah,	0FFh, 44h, 1Ah,	8Bh, 44h, 1Ah, 25h, 7, 0, 75h
		db 47h,	0A1h, 12h, 9Fh,	8Bh, 1Eh, 16h, 9Fh, 2Bh, 44h, 12h
		db 2Bh,	5Ch, 16h, 0E8h,	0DAh, 43h, 2Bh,	44h, 1Ch, 74h
		db 32h,	79h, 3,	5, 8, 0, 0FFh, 44h, 1Ch, 3Dh, 4, 0, 7Ch
		db 4, 83h, 6Ch,	1Ch, 2,	83h, 64h, 1Ch, 7, 8Bh, 5Ch, 1Ch
		db 0D1h, 0E3h, 2Eh, 8Bh, 9Fh, 0F2h, 0E8h, 2Eh, 8Bh, 7
		db 89h,	44h, 0Ch, 2Eh, 8Bh, 47h, 2, 89h, 44h, 0Eh, 83h
		db 0C3h, 4, 89h, 5Ch, 10h, 8Bh,	5Ch, 1Ch, 0D1h,	0E3h, 8Bh
		db 87h,	70h, 33h, 8Bh, 9Fh, 80h, 33h, 83h, 3Eh,	1Ah, 92h
		db 0, 75h, 4, 0D1h, 0E0h, 0D1h,	0E3h, 1, 44h, 12h, 1, 5Ch
		db 16h,	0E8h, 7Bh, 5Dh,	0E8h, 9Dh, 6Ah,	74h, 16h, 83h
		db 3Eh,	88h, 91h, 0, 75h, 0Ch, 0C7h, 6,	4, 9Fh,	0B9h, 8
		db 0B8h, 4, 0, 0E8h, 29h, 64h, 0E8h, 97h, 2Fh, 0C3h, 0E8h
		db 84h,	69h, 0E8h, 0DDh, 1, 81h, 7Ch, 0Ch, 23h,	9Bh, 75h
		db 41h,	83h, 7Ch, 0Eh, 1, 75h, 3Bh, 56h, 0E8h, 0E1h, 37h
		db 0BFh, 96h, 90h, 0E8h, 35h, 2Fh, 8Bh,	0FEh, 5Eh, 0C7h
		db 5, 10h, 1, 0C7h, 45h, 2, 0F5h, 0DCh,	0C7h, 45h, 4, 3Dh
		db 0Dh,	8Bh, 44h, 12h, 2Dh, 2, 0, 89h, 45h, 12h, 8Bh, 44h
		db 16h,	2Dh, 18h, 0, 89h, 45h, 16h, 0C7h, 45h, 1Ah, 2 dup(0)
		db 2Eh,	0A1h, 7Ah, 0CCh, 0F7h
		db 0D8h, 89h, 45h, 1Ch,	83h, 7Ch, 0Eh, 0, 75h, 1Ch, 83h
		db 7Ch,	16h, 0,	78h, 16h, 2Eh, 0A0h, 72h, 0CCh,	0, 44h
		db 48h,	73h, 0Dh, 0E8h,	1, 69h,	24h, 3Fh, 88h, 44h, 48h
		db 0C7h, 44h, 0Eh, 1, 0, 0E9h, 0ECh, 5Ch, 0C7h,	45h, 4
		db 0B9h, 8, 29h, 45h, 24h, 76h,	1, 0C3h, 0FFh, 0Eh, 1Ah
		db 92h,	81h, 6,	52h, 91h, 0C8h,	0, 83h,	16h, 54h, 91h
		db 0, 56h, 57h,	8Bh, 0F7h, 0E8h, 37h, 36h, 0BDh, 30h, 12h
		db 80h,	7Dh, 27h, 0, 74h, 3, 0BDh, 4Ch,	12h, 0BAh, 53h
		db 8, 0E8h, 56h, 5Ah, 5Fh, 5Eh,	81h, 3Dh, 14h, 1, 74h
		db 8, 56h, 8Bh,	0F7h, 0E8h, 0E2h, 2Eh, 5Eh, 0C3h, 0C7h
		db 45h,	2, 6Fh,	0DBh, 0C7h, 45h, 28h, 0E8h, 3, 0C7h, 45h
		db 2Ch,	0E8h, 3, 0C7h, 45h, 6, 61h, 7, 0C3h, 8Bh, 5Dh
		db 44h,	0C7h, 45h, 4, 0B9h, 8, 0C7h, 47h, 4, 0DDh, 0D5h
		db 29h,	47h, 24h, 76h, 1Ch, 0B8h, 0Bh, 0, 0F7h,	67h, 24h
		db 33h,	0C9h, 2Eh, 8Ah,	0Eh, 78h, 0E7h,	0F7h, 0F1h, 8Bh
		db 0D8h, 0D1h, 0E3h, 2Eh, 8Bh, 87h, 2, 0E9h, 89h, 45h
		db 0Ch,	0C3h, 57h, 56h,	0BFh, 0E0h, 1, 33h, 0C0h, 0B9h
		db 68h,	1, 0F3h, 0ABh, 8Bh, 36h, 54h, 90h, 0E8h, 2Ah, 5Eh
		db 0B9h, 9, 0, 0E8h, 0A8h, 3Ch,	0B9h, 27h, 0, 0B8h, 2 dup(0)
		db 0BBh, 2 dup(0), 0BAh, 40h, 1, 0BFh, 0C0h, 0,	0BDh, 4Ch
		db 12h,	0E8h, 37h, 3Ch,	0C6h, 6, 61h, 8Fh, 0FFh, 0BFh
		db 2 dup(0), 33h, 0C0h,	0B9h, 0Ch, 3, 0F3h, 0ABh, 5Eh
		db 5Fh,	0C3h, 80h, 3Eh,	39h, 92h, 0, 74h, 3, 0E9h, 9Fh
		db 0, 0C6h, 6, 39h, 92h, 0FFh, 8Bh, 45h, 0Ah, 0A3h, 0E6h
		db 0FCh, 83h, 2Eh, 0E6h, 0FCh, 8, 0A1h,	90h, 91h, 29h
		db 6, 0E6h, 0FCh, 0BFh,	1Ah, 0E9h, 0B9h, 0Ah, 0, 0E8h
		db 95h,	36h, 89h, 36h, 0DEh, 0FCh, 0EBh, 3, 0E8h, 8Ch
		db 36h,	57h, 0BFh, 4Ah,	90h, 0E8h, 0F1h, 2Dh, 5Fh, 2Eh
		db 8Bh,	5, 89h,	4, 2Eh,	8Bh, 45h, 2, 89h, 44h, 2, 2Eh
		db 8Bh,	45h, 4,	89h, 44h, 4, 2Eh, 8Bh, 45h, 6, 89h, 44h
		db 6, 2Eh, 8Bh,	45h, 8,	89h, 44h, 0Ch, 0C7h, 44h, 0Eh
		db 2 dup(0), 0C6h, 44h,	4Ah, 0FFh, 0C7h, 44h, 12h, 70h
		db 0, 0A1h, 0E6h, 0FCh,	89h, 44h, 16h, 2Eh, 8Bh, 45h, 0Ah
		db 89h,	44h, 30h, 2Eh, 8Bh, 45h, 0Ch, 89h, 44h,	32h, 0C7h
		db 44h,	1Ah, 2 dup(0), 0C7h, 44h, 1Ch, 4, 0, 2Eh, 8Bh
		db 45h,	0Eh, 89h, 44h, 24h, 83h, 0C7h, 10h, 0C7h, 44h
		db 28h,	0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 0A1h,	0DEh, 0FCh
		db 89h,	2 dup(44h), 0C7h, 44h, 36h, 2 dup(0), 0E2h, 87h
		db 0C3h, 8Bh, 7Ch, 44h,	8Bh, 45h, 12h, 3, 44h, 30h, 89h
		db 44h,	12h, 8Bh, 45h, 16h, 3, 44h, 32h, 89h, 44h, 16h
		db 0C3h, 0E8h, 0E7h, 0FFh, 0BBh, 0, 1, 2Bh, 5Ch, 24h, 3
		db 5Ch,	1Ah, 81h, 0FBh,	0, 6, 7Ch, 4, 81h, 0EBh, 0, 6
		db 89h,	5Ch, 1Ah, 0D1h,	0EBh, 0D1h, 0EBh, 0D1h,	0EBh, 0D1h
		db 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 0D1h, 0EBh, 83h, 0E3h
		db 0FEh, 2Eh, 8Bh, 87h,	0BAh, 0E9h, 89h, 44h, 0Ch, 0E9h
		db 31h,	5Bh, 8Bh, 5Dh, 44h, 0C7h, 47h, 4, 88h, 0DCh, 29h
		db 45h,	24h, 76h, 1, 0C3h, 57h,	56h, 8Bh, 36h, 54h, 90h
		db 0E8h, 0F1h, 5Ch, 0B9h, 13h, 0, 0B8h,	70h, 0,	0BBh, 0D0h
		db 8, 2Bh, 1Eh,	90h
		db 91h,	0BAh, 60h, 0, 0BFh, 0A0h, 0, 0BDh, 4Ch,	12h, 0E8h
		db 0, 3Bh, 0B9h, 4, 0, 0E8h, 56h, 3Bh, 0BFh, 14h, 16h
		db 0B9h, 0Ah, 0, 33h, 0C0h, 51h, 0B9h, 8, 0, 0F3h, 0ABh
		db 59h,	83h, 0C7h, 18h,	0E2h, 0F4h, 5Eh, 5Fh, 81h, 6, 52h
		db 91h,	0DCh, 5, 83h, 16h, 54h,	91h, 0,	0C3h, 0E8h, 5Ah
		db 0FFh, 8Bh, 5Ch, 16h,	3, 1Eh,	90h, 91h, 83h, 0E3h, 3
		db 0D1h, 0E3h, 0BFh, 0C6h, 0E9h, 81h, 3Ch, 18h,	1, 74h
		db 3, 0BFh, 0CEh, 0E9h,	2Eh, 8Bh, 1, 89h, 44h, 0Ch, 0C3h
		db 0E8h, 38h, 0FFh, 0A1h, 12h, 9Fh, 2Bh, 44h, 12h, 8Bh
		db 1Eh,	16h, 9Fh, 2Bh, 5Ch, 16h, 0E8h, 0ABh, 40h, 89h
		db 44h,	1Ch, 8Bh, 0D8h,	0D1h, 0E3h, 2Eh, 8Bh, 87h, 0D6h
		db 0E9h, 89h, 44h, 0Ch,	2Eh, 0A0h, 74h,	0CCh, 0, 44h, 48h
		db 73h,	2Bh, 0E8h, 91h,	66h, 24h, 3Fh, 88h, 44h, 48h, 8Bh
		db 44h,	12h, 5,	8, 0, 8Bh, 5Ch,	16h, 83h, 0C3h,	8, 8Bh
		db 4Ch,	1Ch, 2Eh, 8Bh, 2Eh, 8Ch, 0CCh, 0D1h, 0E5h, 2Eh
		db 8Bh,	0AEh, 0BCh, 0EBh, 2Eh, 8Bh, 16h, 76h, 0CCh, 0E8h
		db 0ABh, 43h, 0E9h, 5Eh, 5Ah, 0C7h, 45h, 4, 0B9h, 8, 29h
		db 45h,	24h, 76h, 1, 0C3h, 0C7h, 45h, 2, 6Fh, 0DBh, 0C7h
		db 45h,	28h, 0E8h, 3, 0C7h, 45h, 2Ch, 0E8h, 3, 0C7h, 45h
		db 6, 61h, 7, 81h, 6, 52h, 91h,	0C8h, 0, 83h, 16h, 54h
		db 91h,	0, 56h,	57h, 8Bh, 45h, 12h, 5, 8, 0, 8Bh, 5Dh
		db 16h,	83h, 0C3h, 8, 0BDh, 30h, 12h, 0BAh, 53h, 8, 0E8h
		db 0BAh, 57h, 5Fh, 5Eh,	0C3h, 0E8h, 9Bh, 0FEh, 0C7h, 44h
		db 0Ch,	15h, 67h, 0C7h,	44h, 28h, 0E8h,	3, 0C7h, 44h, 2Ch
		db 0E8h, 3, 0C3h, 81h, 3Eh, 0AAh, 91h, 20h, 9, 7Dh, 6
		db 0C7h, 6, 0AAh, 91h, 20h, 9, 0A1h, 98h, 91h, 1, 44h
		db 16h,	83h, 7Ch, 1Ch, 0, 74h, 1Eh, 78h, 0Eh, 0C7h, 6
		db 88h,	8Eh, 2 dup(0), 0FFh, 44h, 16h, 0FFh, 4Ch, 1Ch
		db 0EBh, 44h, 0C7h, 6, 88h, 8Eh, 2 dup(0), 0FFh, 4Ch, 16h
		db 0FFh, 44h, 1Ch, 0EBh, 36h, 0E8h, 0D4h, 65h, 3Ch, 0Fh
		db 73h,	2Fh, 0A9h, 1, 0, 74h, 15h, 0B8h, 10h, 9, 2Bh, 44h
		db 16h,	2Bh, 6,	90h, 91h, 74h, 1Eh, 0E8h, 0CCh,	65h, 40h
		db 89h,	44h, 1Ch, 0EBh,	15h, 8Bh, 44h, 16h, 3, 6, 90h
		db 91h,	2Dh, 0D0h, 8, 74h, 9, 0E8h, 0B7h, 65h, 40h, 0F7h
		db 0D8h, 89h, 44h, 1Ch,	83h, 7Ch, 1Ah, 0, 75h, 11h, 2Eh
		db 0A0h, 78h, 0CCh, 0, 44h, 48h, 73h, 59h, 0E8h, 8Fh, 65h
		db 24h,	3Fh, 88h, 44h, 48h, 0FFh, 44h, 1Ah, 83h, 7Ch, 1Ah
		db 9, 74h, 43h,	83h, 7Ch, 1Ah, 3, 75h, 42h, 56h, 0C7h
		db 6, 88h, 8Eh,	2 dup(0), 0E8h,	2, 34h,	0BFh, 96h, 90h
		db 0E8h, 56h, 2Bh, 8Bh,	0FEh, 5Eh, 0C7h, 5, 10h, 1, 0C7h
		db 45h,	2, 0F5h, 0DCh, 0C7h, 45h, 4, 3Dh, 0Dh, 0C7h, 45h
		db 12h,	96h, 0,	8Bh, 44h, 16h, 5, 30h, 0, 89h, 45h, 16h
		db 0C7h, 45h, 1Ah, 2 dup(0), 2Eh, 0A1h,	7Ah, 0CCh, 89h
		db 45h,	1Ch, 0EBh, 5, 0C7h, 44h, 1Ah, 2	dup(0),	2Eh, 0A0h
		db 9Ch,	0CCh, 0, 44h, 49h, 73h,	26h, 0E8h, 2Dh,	65h, 24h
		db 3Fh,	88h, 44h, 49h, 0B8h, 6Eh, 0, 8Bh, 5Ch, 16h, 83h
		db 0C3h, 30h, 0B9h, 6, 0, 0E8h,	14h, 0F7h, 0B8h, 0D2h
		db 0, 8Bh, 5Ch,	16h, 83h, 0C3h
		db 30h,	0B9h, 2, 0, 0E8h, 5, 0F7h, 0C3h, 0C7h, 44h, 4
		db 0A2h, 0DCh, 0B8h, 6,	0, 0BBh, 6, 0, 8Bh, 54h, 16h, 0B9h
		db 38h,	0, 56h,	0BEh, 52h, 0EAh, 0E8h, 0C3h, 2Ch, 5Eh
		db 0C3h, 0B8h, 0Ch, 0, 0F7h, 64h, 1Ah, 8Bh, 0D8h, 2Eh
		db 8Bh,	87h, 0E6h, 0E9h, 2Eh, 0A3h, 62h, 0EAh, 2Eh, 8Bh
		db 87h,	0E8h, 0E9h, 2Eh, 0A3h, 64h, 0EAh, 2Eh, 8Bh, 87h
		db 0EAh, 0E9h, 2Eh, 0A3h, 6Eh, 0EAh, 2Eh, 8Bh, 87h, 0ECh
		db 0E9h, 2Eh, 0A3h, 70h, 0EAh, 2Eh, 8Bh, 87h, 0EEh, 0E9h
		db 2Eh,	0A3h, 7Ah, 0EAh, 2Eh, 8Bh, 87h,	0F0h, 0E9h, 2Eh
		db 0A3h, 7Ch, 0EAh, 0B8h, 6, 0,	0BBh, 6, 0, 8Bh, 54h, 16h
		db 0B9h, 38h, 0, 56h, 0BEh, 52h, 0EAh, 0E8h, 4Eh, 2Ch
		db 5Eh,	0C3h, 8Bh, 44h,	12h, 89h, 44h, 28h, 5, 0Bh, 0
		db 89h,	44h, 2Ch, 83h, 7Ch, 1Ah, 30h, 74h, 33h,	2Eh, 0A1h
		db 7Ah,	0CCh, 1, 44h, 1Ah, 83h,	7Ch, 1Ah, 30h, 7Eh, 5
		db 0C7h, 44h, 1Ah, 30h,	0, 0A1h, 98h, 91h, 1, 44h, 16h
		db 83h,	7Ch, 1Ch, 0, 79h, 7, 2Eh, 0A1h,	7Ah, 0CCh, 29h
		db 44h,	16h, 8Bh, 44h, 16h, 89h, 44h, 2Ah, 3, 44h, 1Ah
		db 89h,	44h, 2Eh, 0EBh,	27h, 8Bh, 44h, 1Ch, 1, 44h, 16h
		db 8Bh,	44h, 16h, 83h, 7Ch, 1Ch, 0, 78h, 7, 3Dh, 0C0h
		db 0, 7Dh, 2Dh,	0EBh, 5, 3, 44h, 1Ah, 78h, 26h,	8Bh, 44h
		db 16h,	89h, 44h, 2Ah, 3, 44h, 1Ah, 89h, 44h, 2Eh, 0E8h
		db 4Ah,	65h, 74h, 18h, 83h, 3Eh, 88h, 91h, 0, 75h, 0Eh
		db 0B8h, 6, 0, 56h, 0E8h, 0DBh,	2 dup(5Eh), 0C7h, 6, 4
		db 9Fh,	0B9h, 8, 0E8h, 42h, 2Ah, 0C3h, 8Bh, 45h, 8, 2Dh
		db 8, 0, 0A3h, 0E2h, 0FCh, 0D1h, 0E8h, 0D1h, 0E8h, 0D1h
		db 0E8h, 25h, 0FEh, 0, 0A3h, 0EAh, 0FCh, 8Bh, 45h, 0Ah
		db 2Dh,	8, 0, 0A3h, 0E6h, 0FCh,	0D1h, 0E8h, 0D1h, 0E8h
		db 0D1h, 0E8h, 0D1h, 0E8h, 0BAh, 28h, 0, 0F7h, 0E2h, 0A3h
		db 0EEh, 0FCh, 0BBh, 2 dup(0), 3, 1Eh, 0EAh, 0FCh, 3, 1Eh
		db 0EEh, 0FCh, 0C7h, 7,	81h, 4Eh, 0C7h,	47h, 2,	2 dup(0)
		db 0C7h, 47h, 4, 2 dup(0), 0C7h, 47h, 6, 0C1h, 4Eh, 0BFh
		db 9Ah,	0EAh, 0B9h, 3, 0, 0E8h,	4Eh, 32h, 57h, 0BFh, 4Ah
		db 90h,	0E8h, 0B3h, 29h, 5Fh, 2Eh, 8Bh,	5, 89h,	4, 2Eh
		db 8Bh,	45h, 2,	89h, 44h, 2, 0C7h, 44h,	4, 61h,	7, 2Eh
		db 8Bh,	45h, 4,	89h, 44h, 6, 0A1h, 0E2h, 0FCh, 89h, 44h
		db 12h,	0A1h, 0E6h, 0FCh, 89h, 44h, 16h, 0C7h, 44h, 1Ah
		db 2 dup(0), 2Eh, 0A1h,	7Ch, 0CCh, 89h,	44h, 24h, 0C7h
		db 44h,	28h, 0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 89h, 5Ch
		db 38h,	2Eh, 8Bh, 45h, 6, 83h, 0C7h, 8,	3, 0D8h, 0D1h
		db 0E0h, 0D1h, 0E0h, 0D1h, 0E0h, 1, 6, 0E2h, 0FCh, 0E2h
		db 0A3h, 0C3h, 8Bh, 5Ch, 1Ah, 83h, 0C3h, 4, 83h, 0FBh
		db 10h,	7Ch, 2,	33h, 0DBh, 89h,	5Ch, 1Ah, 8Bh, 7Ch, 38h
		db 2Eh,	8Bh, 87h, 0B2h,	0EAh, 89h, 5, 2Eh, 8Bh,	87h, 0B4h
		db 0EAh, 89h, 45h, 2, 8Bh, 44h,	12h, 89h, 44h, 28h, 5
		db 20h,	0, 89h,	44h, 2Ch, 8Bh, 44h, 16h, 2Bh, 6, 90h, 91h
		db 5, 2, 0, 89h, 44h, 2Ah, 5, 0Ch, 0, 89h, 44h,	2Eh, 0C3h
		db 0FFh, 44h, 1Ah, 83h,	64h, 1Ah, 3, 8Bh, 44h, 1Ah, 0D1h
		db 0E0h, 8Bh, 7Ch, 38h,	0BBh, 0C2h, 0EAh, 81h, 3Ch
		db 28h,	1, 74h,	3, 0BBh, 0CAh, 0EAh, 3,	0D8h, 2Eh, 8Bh
		db 7, 89h, 5, 8Bh, 44h,	12h, 5,	3, 0, 89h, 44h,	28h, 5
		db 0Ah,	0, 89h,	44h, 2Ch, 8Bh, 44h, 16h, 2Bh, 6, 90h, 91h
		db 5, 3, 0, 89h, 44h, 2Ah, 5, 0Ah, 0, 89h, 44h,	2Eh, 0C3h
		db 0C7h, 45h, 4, 70h, 0DFh, 29h, 45h, 24h, 76h,	1, 0C3h
		db 8Bh,	45h, 12h, 5, 8,	0, 8Bh,	5Dh, 16h, 2Bh, 1Eh, 90h
		db 91h,	83h, 0C3h, 8, 0BDh, 30h, 12h, 0BAh, 53h, 8, 0E8h
		db 4Ch,	54h, 8Bh, 5Dh, 38h, 0C7h, 7, 81h, 37h, 0C7h, 47h
		db 2, 2	dup(0),	0C7h, 47h, 4, 2	dup(0),	0C7h, 47h, 6, 41h
		db 37h,	8Bh, 5Dh, 0Ah, 56h, 8Bh, 0F7h, 0E8h, 0C7h, 28h
		db 8Bh,	6Fh, 0Ah, 8Bh, 0F3h, 0E8h, 0BFh, 28h, 8Bh, 0F5h
		db 0E8h, 0BAh, 28h, 5Eh, 81h, 6, 52h, 91h, 0C8h, 0, 83h
		db 16h,	54h, 91h, 0, 0C3h, 0C7h, 45h, 4, 75h, 0DFh, 29h
		db 45h,	24h, 76h, 1, 0C3h, 8Bh,	45h, 12h, 5, 8,	0, 8Bh
		db 5Dh,	16h, 2Bh, 1Eh, 90h, 91h, 83h, 0C3h, 8, 0BDh, 30h
		db 12h,	0BAh, 53h, 8, 0E8h, 0EFh, 53h, 8Bh, 5Dh, 38h, 0C7h
		db 7, 41h, 37h,	0C7h, 47h, 0FCh, 2 dup(0), 0C7h, 47h, 0FEh
		db 2 dup(0), 0C7h, 47h,	0FAh, 81h, 37h,	8Bh, 5Dh, 8, 56h
		db 8Bh,	0F7h, 0E8h, 6Ah, 28h, 8Bh, 6Fh,	8, 8Bh,	0F3h, 0E8h
		db 62h,	28h, 8Bh, 0F5h,	0E8h, 5Dh, 28h,	5Eh, 81h, 6, 52h
		db 91h,	0C8h, 0, 83h, 16h, 54h,	91h, 0,	0C3h, 0BFh, 0D2h
		db 0EAh, 0EBh, 3, 0BFh,	0D4h, 0EAh, 0C7h, 44h, 4, 61h
		db 7, 0B8h, 1, 0, 0BBh,	1, 0, 8Bh, 54h,	16h, 2Bh, 16h
		db 90h,	91h, 8Bh, 4Ch, 12h, 0D1h, 0E9h,	56h, 8Bh, 0F7h
		db 0E8h, 0CEh, 29h, 5Eh, 0C3h, 0B8h, 0F8h, 0, 0BBh, 0E9h
		db 0DFh, 0E8h, 89h, 55h, 0C7h, 44h, 6, 97h, 0E0h, 2Eh
		db 0A1h, 7Eh, 0CCh, 89h, 44h, 24h, 0C7h, 44h, 28h, 0E8h
		db 3, 0C7h, 44h, 2Ch, 0E8h, 3, 8Bh, 7Ch, 38h, 81h, 7Dh
		db 0FEh, 41h, 2Eh, 75h,	0Ah, 0C7h, 45h,	0FEh, 0C0h, 5
		db 0C7h, 45h, 26h, 0C0h, 0Ah, 81h, 7Dh,	4, 81h,	2Eh, 75h
		db 0Ah,	0C7h, 45h, 4, 0C0h, 5, 0C7h, 45h, 2Ch, 0C0h, 0Ah
		db 2Eh,	0A1h, 0D6h, 0EAh, 89h, 5, 2Eh, 0A1h, 0DAh, 0EAh
		db 89h,	45h, 28h, 0C3h,	0A1h, 0AAh, 91h, 5, 0D0h, 0, 3Bh
		db 44h,	16h, 7Dh, 3, 0E9h, 9Ch,	0, 8Bh,	44h, 12h, 5, 4
		db 0, 89h, 44h,	28h, 5,	18h, 0,	89h, 44h, 2Ch, 8Bh, 44h
		db 16h,	2Bh, 6,	90h, 91h, 5, 4,	0, 89h,	44h, 2Ah, 5, 18h
		db 0, 89h, 44h,	2Eh, 0FFh, 44h,	1Ah, 83h, 64h, 1Ah, 0Fh
		db 2Eh,	0A0h, 90h, 0CCh, 0, 44h, 48h, 73h, 3Dh,	0E8h, 65h
		db 61h,	24h, 3Fh, 88h, 44h, 48h, 0B9h, 7, 0, 8Bh, 44h
		db 12h,	5, 10h,	0, 8Bh,	5Ch, 16h, 2Bh, 1Eh, 90h, 91h, 83h
		db 0C3h, 10h, 2Eh, 8Bh,	16h, 92h, 0CCh,	0E8h, 87h, 3Eh
		db 0BDh, 0A8h, 0D0h, 2Eh, 8Bh, 46h, 0, 89h, 45h, 0Ch, 2Eh
		db 8Bh,	46h, 2,	89h, 45h, 0Eh, 83h, 0C5h, 4, 89h, 6Dh
		db 10h,	49h, 79h, 0CEh,	8Bh, 7Ch, 38h, 8Bh, 5Ch, 1Ah, 83h
		db 0E3h, 0Eh, 0D1h, 0E3h, 0D1h,	0E3h, 2Eh, 8Bh,	87h, 0D6h
		db 0EAh, 89h, 5, 2Eh, 8Bh, 87h,	0D8h, 0EAh, 89h, 45h, 2
		db 2Eh,	8Bh, 87h, 0DAh,	0EAh, 89h, 45h
		db 28h,	2Eh, 8Bh, 87h, 0DCh, 0EAh, 89h,	45h, 2Ah, 0C3h
		db 0E8h, 2Ah, 27h, 0C3h, 0C7h, 45h, 4, 6, 0E1h,	29h, 45h
		db 24h,	76h, 1,	0C3h, 8Bh, 45h,	12h, 5,	10h, 0,	8Bh, 5Dh
		db 16h,	2Bh, 1Eh, 90h, 91h, 83h, 0C3h, 10h, 0BDh, 4Ch
		db 12h,	0BAh, 53h, 8, 0E8h, 6Bh, 52h, 8Bh, 5Dh,	38h, 81h
		db 7Fh,	0FEh, 0C0h, 5, 75h, 0Ah, 0C7h, 47h, 0FEh, 41h
		db 2Eh,	0C7h, 47h, 26h,	0C1h, 32h, 81h,	7Fh, 4,	0C0h, 5
		db 75h,	0Ah, 0C7h, 47h,	4, 81h,	2Eh, 0C7h, 47h,	2Ch, 1
		db 33h,	0C7h, 7, 2 dup(0), 0C7h, 47h, 2, 2 dup(0), 0C7h
		db 47h,	28h, 2 dup(0), 0C7h, 47h, 2Ah, 2 dup(0), 81h, 6
		db 52h,	91h, 0F4h, 1, 83h, 16h,	54h, 91h, 0, 56h, 8Bh
		db 0F7h, 0E8h, 0BCh, 26h, 5Eh, 0C3h, 0C7h, 44h,	4, 61h
		db 7, 0B8h, 2, 0, 0BBh,	2, 0, 8Bh, 54h,	16h, 2Bh, 16h
		db 90h,	91h, 8Bh, 4Ch, 12h, 0D1h, 0E9h,	56h, 0BEh, 0D6h
		db 0EAh, 0E8h, 3Fh, 28h, 5Eh, 0C3h, 8Bh, 5Dh, 6, 80h, 0BFh
		db 3Ah,	92h, 0,	75h, 7,	53h, 0E8h, 4, 0, 8Fh, 44h, 22h
		db 0C3h, 0B8h, 0F4h, 0,	0BBh, 0B0h, 0E1h, 2 dup(0E8h)
		db 53h,	8Bh, 45h, 0Ch, 89h, 44h, 1Ch, 0C7h, 44h, 6, 0BFh
		db 0E2h, 2Eh, 0A1h, 80h, 0CCh, 89h, 44h, 24h, 0C7h, 44h
		db 28h,	0E8h, 3, 0C7h, 44h, 2Ch, 0E8h, 3, 8Bh, 7Ch, 38h
		db 8Bh,	5Ch, 1Ch, 0C7h,	44h, 22h, 2 dup(0FFh), 0D1h, 0E3h
		db 0D1h, 0E3h, 0D1h, 0E3h, 81h,	7Dh, 0FEh, 0C1h, 2Eh, 75h
		db 0Ah,	0C7h, 45h, 0FEh, 41h, 6, 0C7h, 45h, 26h, 41h, 0Bh
		db 81h,	7Dh, 4,	1, 2Fh,	75h, 0Ah, 0C7h,	45h, 4,	41h, 12h
		db 0C7h, 45h, 2Ch, 41h,	17h, 2Eh, 8Bh, 87h, 16h, 0EBh
		db 89h,	5, 2Eh,	8Bh, 87h, 18h, 0EBh, 89h, 45h, 2, 2Eh
		db 8Bh,	87h, 1Ah, 0EBh,	89h, 45h, 28h, 2Eh, 8Bh, 87h, 1Ch
		db 0EBh, 89h, 45h, 2Ah,	0C3h, 0A1h, 0AAh, 91h, 5, 0D0h
		db 0, 3Bh, 44h,	16h, 7Dh, 3, 0E9h, 0FDh, 0, 8Bh, 44h, 12h
		db 5, 4, 0, 89h, 44h, 28h, 5, 18h, 0, 89h, 44h,	2Ch, 8Bh
		db 44h,	16h, 2Bh, 6, 90h, 91h, 5, 4, 0,	89h, 44h, 2Ah
		db 5, 18h, 0, 89h, 44h,	2Eh, 83h, 7Ch, 1Ah, 0, 75h, 0Fh
		db 8Bh,	44h, 16h, 2Bh, 6, 90h, 91h, 3Dh, 0F0h, 0FFh, 7Dh
		db 3, 0E9h, 9Ah, 0, 83h, 7Ch, 1Ah, 8, 74h, 0Dh,	0FFh, 44h
		db 1Ah,	0FFh, 44h, 1Ch,	83h, 64h, 1Ch, 7, 0E9h,	87h, 0
		db 0A1h, 12h, 9Fh, 2Bh,	44h, 12h, 2Dh, 10h, 0, 8Bh, 1Eh
		db 16h,	9Fh, 2Bh, 5Ch, 16h, 3, 1Eh, 90h, 91h, 83h, 0EBh
		db 10h,	0E8h, 6Eh, 39h,	2Bh, 44h, 1Ch, 74h, 10h, 25h, 7
		db 0, 3Dh, 4, 0, 7Dh, 5, 0FFh, 44h, 1Ch, 0EBh, 3, 0FFh
		db 4Ch,	1Ch, 83h, 64h, 1Ch, 7, 2Eh, 0A0h, 82h, 0CCh, 0
		db 44h,	48h, 73h, 4Bh, 0E8h, 4Ah, 5Fh, 24h, 3Fh, 88h, 44h
		db 48h,	8Bh, 44h, 12h, 5, 10h, 0, 8Bh, 5Ch, 16h, 2Bh, 1Eh
		db 90h,	91h, 83h, 0C3h,	10h, 8Bh, 4Ch, 1Ch, 8Bh, 0E9h
		db 0D1h, 0E5h, 0D1h, 0E5h, 83h,	0E5h, 1Ch, 2Eh,	3, 86h
		db 56h,	0EBh, 2Eh, 3, 9Eh, 58h,	0EBh, 83h, 0E5h, 0Ch, 0F7h
		db 6, 9Ch, 91h,	1, 0, 75h, 3, 83h, 0C5h, 10h, 0D1h, 0EDh
		db 2Eh,	8Bh, 0AEh, 76h,	0EBh, 2Eh, 8Bh,	16h, 84h, 0CCh
		db 0E8h, 44h, 3Ch
		db 8Bh,	7Ch, 38h, 8Bh, 5Ch, 1Ch, 0D1h, 0E3h, 0D1h, 0E3h
		db 0D1h, 0E3h, 2Eh, 8Bh, 87h, 16h, 0EBh, 89h, 5, 2Eh, 8Bh
		db 87h,	18h, 0EBh, 89h,	45h, 2,	2Eh, 8Bh, 87h, 1Ah, 0EBh
		db 89h,	45h, 28h, 2Eh, 8Bh, 87h, 1Ch, 0EBh, 89h, 45h, 2Ah
		db 0C3h, 0E8h, 2, 25h, 0C3h, 0C7h, 45h,	4, 3Ah,	0E3h, 29h
		db 45h,	24h, 76h, 1, 0C3h, 8Bh,	5Dh, 22h, 85h, 0DBh, 78h
		db 5, 0C6h, 87h, 3Ah, 92h, 0FFh, 8Bh, 45h, 12h,	5, 10h
		db 0, 8Bh, 5Dh,	16h, 2Bh, 1Eh, 90h, 91h, 83h, 0C3h, 10h
		db 0BDh, 4Ch, 12h, 0BAh, 53h, 8, 0E8h, 37h, 50h, 8Bh, 5Dh
		db 38h,	81h, 7Fh, 0FEh,	41h, 6,	75h, 0Ah, 0C7h,	47h, 0FEh
		db 0C1h, 2Eh, 0C7h, 47h, 26h, 41h, 33h,	81h, 7Fh, 4, 41h
		db 12h,	75h, 0Ah, 0C7h,	47h, 4,	1, 2Fh,	0C7h, 47h, 2Ch
		db 81h,	33h, 0C7h, 7, 2	dup(0),	0C7h, 47h, 2, 2	dup(0)
		db 0C7h, 47h, 28h, 2 dup(0), 0C7h, 47h,	2Ah, 2 dup(0)
		db 81h,	6, 52h,	91h, 90h, 1, 83h, 16h, 54h, 91h, 0, 56h
		db 8Bh,	0F7h, 0E8h, 88h, 24h, 5Eh, 0C3h, 0C7h, 44h, 4
		db 61h,	7, 0B8h, 2, 0, 0BBh, 2,	0, 8Bh,	54h, 16h, 2Bh
		db 16h,	90h, 91h, 8Bh, 4Ch, 12h, 0D1h, 0E9h, 56h, 0BEh
		db 16h,	0EBh, 0E8h, 0Bh, 26h, 5Eh, 0C3h, 0B8h, 8, 1, 83h
		db 7Dh,	0Ch, 0,	74h, 3,	0B8h, 0Ch, 1, 0BBh, 0B3h, 0E3h
		db 0E8h, 0BDh, 51h, 0C7h, 44h, 6, 76h, 3Bh, 2Eh, 0A1h
		db 86h,	0CCh, 89h, 44h,	24h, 0C7h, 44h,	28h, 0E8h, 3, 0C7h
		db 44h,	2Ch, 0E8h, 3, 8Bh, 5Ch,	38h, 0BDh, 96h,	0EBh, 0BAh
		db 0A6h, 0EBh, 83h, 7Dh, 0Ch, 0, 74h, 6, 0BDh, 86h, 0EBh
		db 0BAh, 0A8h, 0EBh, 89h, 6Ch, 0Ch, 89h, 54h, 10h, 2Eh
		db 8Bh,	46h, 0,	89h, 7,	0C7h, 44h, 34h,	64h, 0,	0C7h, 44h
		db 30h,	2 dup(0), 0C7h,	44h, 32h, 2 dup(0), 0C3h, 0A1h
		db 0AAh, 91h, 5, 0D0h, 0, 3Bh, 44h, 16h, 7Dh, 3, 0E9h
		db 0B0h, 0, 8Bh, 44h, 12h, 5, 2, 0, 89h, 44h, 28h, 5, 0Ch
		db 0, 89h, 44h,	2Ch, 8Bh, 44h, 16h, 2Bh, 6, 90h, 91h, 5
		db 2, 0, 89h, 44h, 2Ah,	5, 0Ch,	0, 89h,	44h, 2Eh, 83h
		db 7Ch,	1Ah, 0,	75h, 11h, 2Eh, 0A0h, 88h, 0CCh,	0, 44h
		db 48h,	73h, 37h, 0E8h,	9Ch, 5Dh, 24h, 3Fh, 88h, 44h, 48h
		db 0FFh, 44h, 1Ah, 8Bh,	44h, 1Ah, 0D1h,	0E0h, 0BBh, 96h
		db 0EBh, 81h, 3Ch, 8, 1, 74h, 3, 0BBh, 86h, 0EBh, 3, 0D8h
		db 8Bh,	7Ch, 38h, 2Eh, 8Bh, 7, 89h, 5, 83h, 7Ch, 1Ah, 3
		db 74h,	0Ch, 83h, 7Ch, 1Ah, 7, 75h, 5, 0C7h, 44h, 1Ah
		db 2 dup(0), 0C3h, 8Bh,	44h, 12h, 8Bh, 5Ch, 16h, 2Bh, 1Eh
		db 90h,	91h, 5,	18h, 0,	83h, 0C3h, 8, 0B9h, 2, 0, 81h
		db 3Ch,	8, 1, 74h, 6, 0B9h, 6, 0, 2Dh, 18h, 0, 2Eh, 8Bh
		db 16h,	8Ah, 0CCh, 0E8h, 82h, 3Ah, 0BBh, 0BEh, 0D0h, 81h
		db 3Ch,	8, 1, 74h, 3, 0BBh, 0CCh, 0D0h,	2Eh, 8Bh, 7, 89h
		db 45h,	0Ch, 2Eh, 8Bh, 47h, 2, 89h, 45h, 0Eh, 83h, 0C3h
		db 4, 89h, 5Dh,	10h, 0C3h, 0E8h, 4Ch, 23h, 0C3h, 0D1h
		db 0E3h, 2Eh, 0FFh, 0A7h, 0AAh,	0EBh, 0BBh, 9Eh, 0CCh
		db 0E9h, 7, 4Fh, 0BBh, 0B0h, 0CCh, 0E9h, 1, 4Fh, 0BBh
		db 0C2h, 0CCh, 0E9h, 0FBh, 4Eh,	0BBh, 0D4h, 0CCh, 0E9h
		db 0F5h, 4Eh, 0BBh, 0E6h
		db 0CCh, 0E9h, 0EFh, 4Eh, 0BBh,	0F8h, 0CCh, 2 dup(0E9h)
		db 4Eh,	0BBh, 0Ah, 0CDh, 0E9h, 0E3h, 4Eh, 0BBh,	1Ch, 0CDh
		db 0E9h, 0DDh, 4Eh, 33h, 0C0h, 0C3h, 0C7h, 6, 0A8h, 91h
		db 2 dup(0), 0C7h, 6, 0AAh, 91h, 0FFh, 11h, 0C7h, 6, 0ACh
		db 8Eh,	70h, 17h, 0C7h,	6, 0AEh, 8Eh, 70h, 17h,	0C6h, 6
		db 38h,	92h, 0,	0C6h, 6, 39h, 92h, 0, 0C7h, 6, 16h, 92h
		db 0, 12h, 0C7h, 6, 18h, 92h, 0A0h, 11h, 2Eh, 0A0h, 8Eh
		db 0CCh, 2Eh, 0A2h, 78h, 0E7h, 2Eh, 0A1h, 94h, 0CCh, 2Eh
		db 0A3h, 78h, 0E9h, 0C6h, 6, 3Ah, 92h, 0, 0C6h,	6, 3Bh
		db 92h,	0, 0B8h, 0Ch, 0, 0F7h, 26h, 1Ah, 99h, 0A3h, 76h
		db 8Eh,	0B8h, 0Eh, 0, 0F7h, 26h, 1Ah, 99h, 0A3h, 78h, 8Eh
		db 0C7h, 6, 72h, 8Eh, 0F5h, 98h, 0C3h, 0Ah dup(0), 1, 50h
		db 41h,	50h, 81h, 50h, 0C1h, 50h, 1, 51h, 10h dup(0), 41h
		db 51h,	81h, 51h, 0C1h,	51h, 0,	52h, 41h, 52h, 80h, 52h
		db 0C1h, 52h, 1, 53h, 41h, 53h,	6 dup(0), 81h, 53h, 4 dup(0)
		db 0C1h, 53h, 1, 54h, 40h, 54h,	80h, 54h, 0C0h,	54h, 0
		db 55h,	40h, 55h, 81h, 55h, 0C1h, 55h, 4 dup(0), 1, 56h
		db 41h,	56h, 6 dup(0), 81h, 56h, 0C0h, 56h, 0, 57h, 40h
		db 57h,	80h, 57h, 0C0h,	57h, 1,	58h, 6 dup(0), 41h, 58h
		db 81h,	58h, 2 dup(0), 0C1h, 58h, 1, 59h, 41h, 59h, 80h
		db 59h,	0C0h, 59h, 0, 5Ah, 40h,	5Ah, 80h, 5Ah, 0C1h, 5Ah
		db 1, 5Bh, 41h,	5Bh, 2 dup(0), 81h, 5Bh, 0C1h, 5Bh, 1
		db 5Ch,	41h, 5Ch, 81h, 5Ch, 0C1h, 5Ch, 0, 5Dh, 40h, 5Dh
		db 80h,	5Dh, 0C0h, 5Dh,	0, 5Eh,	41h, 5Eh, 81h, 5Eh, 0C1h
		db 5Eh,	1, 5Fh,	41h, 5Fh, 81h, 5Fh, 0C0h, 5Fh, 0, 60h
		db 40h,	60h, 80h, 60h, 0C0h, 60h, 0, 61h, 40h, 61h, 80h
		db 61h,	0C0h, 61h, 0, 62h, 40h,	62h, 80h, 62h, 0C0h, 62h
		db 1, 63h, 41h,	63h, 81h, 63h, 0C1h, 63h, 1, 64h, 40h
		db 64h,	80h, 64h, 0, 67h, 40h, 67h, 80h, 67h, 0C0h, 67h
		db 0C0h, 65h, 1, 66h, 41h, 66h,	81h, 66h, 0C1h,	66h, 6 dup(0)
		db 1, 68h, 41h,	68h, 81h, 68h, 80h, 6Ah, 0C0h, 6Ah, 0
		db 6Bh,	41h, 6Bh, 0C1h,	69h, 1,	6Ah, 10h dup(0), 81h, 6Bh
		db 0C0h, 6Bh, 0, 6Ch, 40h, 6Ch,	81h, 6Ch, 10h dup(0), 41h
		db 51h,	0C1h, 6Ch, 1, 6Dh, 40h,	6Dh, 80h, 6Dh, 0C0h, 6Dh
		db 1, 6Eh, 41h,	6Eh, 41h, 53h, 6 dup(0), 81h, 53h, 4 dup(0)
		db 0C1h, 53h, 81h, 6Eh,	0C0h, 6Eh, 0, 6Fh, 40h,	6Fh, 80h
		db 6Fh,	0C0h, 6Fh, 1, 70h, 0C1h, 55h, 4	dup(0),	1, 56h
		db 41h,	56h, 6 dup(0), 81h, 56h, 0C0h, 56h, 0, 57h, 40h
		db 57h,	80h, 57h, 0C0h,	57h, 1,	58h, 6 dup(0), 41h, 58h
		db 81h,	58h, 2 dup(0), 0C1h, 58h, 1, 59h, 41h, 59h, 80h
		db 59h,	0C0h, 59h, 0, 5Ah, 40h,	5Ah, 80h, 5Ah, 0C1h, 5Ah
		db 1, 5Bh, 41h,	5Bh, 2 dup(0), 81h, 5Bh, 0C1h, 5Bh, 1
		db 5Ch,	41h, 5Ch, 81h, 5Ch, 0C1h, 5Ch, 0, 5Dh, 40h, 5Dh
		db 80h,	5Dh, 0C0h, 5Dh,	0, 5Eh,	41h, 5Eh, 81h, 5Eh, 0C1h
		db 5Eh,	1, 5Fh,	41h, 5Fh, 81h, 5Fh, 0C0h, 5Fh, 0, 60h
		db 40h,	60h, 80h, 60h, 0C0h, 60h, 0, 61h, 40h, 61h, 80h
		db 61h,	0C0h, 61h, 0, 62h, 40h,	62h, 80h, 62h, 0C0h, 62h
		db 1, 63h, 41h,	63h, 81h, 63h, 0C1h, 63h, 1, 64h, 40h
		db 64h,	80h, 64h, 0C1h,	64h, 0
		db 65h,	41h, 65h, 80h, 65h, 0C0h, 65h, 1, 66h, 41h, 66h
		db 81h,	66h, 0C1h, 66h,	6 dup(0), 1, 68h, 41h, 68h, 81h
		db 68h,	0C1h, 68h, 1, 69h, 41h,	69h, 81h, 69h, 0C1h, 69h
		db 1, 6Ah, 6 dup(0), 0CEh, 35h,	7Fh, 0DDh, 5Ah,	0E3h, 38h
		db 0E1h, 97h, 0DFh, 63h, 0D9h, 0A8h, 0D4h, 0F1h, 0D0h
		db 86h,	0D2h, 26h, 0E1h, 0BAh, 0CEh, 0C8h, 0CEh, 0D6h
		db 0CEh, 0E4h, 0CEh, 0F2h, 0CEh, 0, 0CFh, 9Eh, 0CEh, 0ACh
		db 0CEh, 82h, 0CEh, 90h, 0CEh, 82h, 0CEh, 74h, 0CEh, 66h
		db 0CFh, 74h, 0CFh, 82h, 0CFh, 90h, 0CFh, 9Eh, 0CFh, 0ACh
		db 0CFh, 0BAh, 0CFh, 0C8h, 0CFh, 34h, 1, 2Ch, 0D6h, 4Ch
		db 0D7h, 61h, 7, 0D6h, 0CFh, 4 dup(0), 14h, 0, 44h, 1
		db 0F9h, 0D5h, 61h, 7, 99h, 3Ah, 0D6h, 0CFh, 2 dup(0)
		db 0E0h, 0, 0F0h, 10h, 44h, 1, 0F9h, 0D5h, 61h,	7, 99h
		db 3Ah,	0D6h, 0CFh, 2 dup(0), 50h, 0, 0F0h, 10h, 14h, 1
		db 0D2h, 0DAh, 53h, 8, 9Dh, 0D8h, 0DAh,	0CFh, 48h, 0, 35h
		db 0, 1Eh, 0, 14h, 1, 0D2h, 0DAh, 53h, 8, 9Dh, 0D8h, 0DAh
		db 0CFh, 9Ah, 0, 3Ah, 0, 1Eh, 0, 14h, 1, 0D2h, 0DAh, 53h
		db 8, 9Dh, 0D8h, 0DAh, 0CFh, 3Fh, 0, 6Ch, 0, 1Eh, 0, 14h
		db 1, 0D2h, 0DAh, 53h, 8, 9Dh, 0D8h, 0DAh, 0CFh, 0A2h
		db 0, 6Ch, 0, 1Eh, 0, 14h, 1, 0D2h, 0DAh, 53h, 8, 9Dh
		db 0D8h, 0DAh, 0CFh, 48h, 0, 0C5h, 0, 1Eh, 0, 14h, 1, 0D2h
		db 0DAh, 53h, 8, 9Dh, 0D8h, 0DAh, 0CFh,	9Ah, 0,	0CAh, 0
		db 1Eh,	0, 14h,	1, 0D2h, 0DAh, 53h, 8, 9Dh, 0D8h, 0DAh
		db 0CFh, 3Fh, 0, 0FCh, 0, 1Eh, 0, 14h, 1, 0D2h,	0DAh, 53h
		db 8, 9Dh, 0D8h, 0DAh, 0CFh, 0A2h, 0, 0FCh, 0, 1Eh, 0
		db 3Ch,	1, 2Ah,	0D8h, 53h, 8, 9Dh, 0D8h, 0E2h, 0CFh, 2Bh
		db 0, 4Dh, 0, 0Ah, 0FFh, 3Ch, 1, 2Ah, 0D8h, 53h, 8, 9Dh
		db 0D8h, 0E2h, 0CFh, 0BCh, 0, 4Dh, 0, 0Ah, 0FFh, 3Ch, 1
		db 2Ah,	0D8h, 53h, 8, 9Dh, 0D8h, 0E2h, 0CFh, 2Bh, 0, 0DDh
		db 0, 0Ah, 0FFh, 3Ch, 1, 2Ah, 0D8h, 53h, 8, 9Dh, 0D8h
		db 0E2h, 0CFh, 0BDh, 0,	0DDh, 0, 0Ah, 0FFh, 40h, 1, 15h
		db 0D6h, 53h, 8, 9Dh, 0D8h, 0FCh, 0CFh,	3Eh, 0,	12h, 0
		db 5, 0, 40h, 1, 15h, 0D6h, 53h, 8, 9Dh, 0D8h, 0FCh, 0CFh
		db 0AEh, 0, 12h, 0, 5, 0, 40h, 1, 15h, 0D6h, 53h, 8, 9Dh
		db 0D8h, 0FCh, 0CFh, 3Eh, 0, 0A2h, 0, 5, 0, 40h, 1, 15h
		db 0D6h, 53h, 8, 9Dh, 0D8h, 0FCh, 0CFh,	0AEh, 0, 0A2h
		db 0, 5, 0, 38h, 1, 15h, 0D6h, 53h, 8, 9Dh, 0D8h, 22h
		db 0D0h, 50h, 0, 19h, 1, 28h, 0FFh, 38h, 1, 15h, 0D6h
		db 53h,	8, 9Dh,	0D8h, 22h, 0D0h, 8Ah, 0, 19h, 1, 28h, 0FFh
		db 50h,	0, 1Eh,	0D6h, 53h, 8, 0F5h, 0D8h, 0DEh,	0CFh, 70h
		db 0, 0Fh, 1, 14h, 0FFh, 8Dh, 92h, 15h,	93h, 9Dh, 93h
		db 25h,	94h, 0ADh, 94h,	0C5h, 67h, 55h,	6Ah, 0E5h, 6Ch
		db 75h,	6Fh, 5,	72h, 5,	72h, 5,	72h, 5,	72h, 5,	72h, 5
		db 72h,	5, 72h,	75h, 6Fh, 0E5h,	6Ch, 55h, 6Ah, 0C5h, 67h
		db 38h,	0D0h, 46h, 0D0h, 54h, 0D0h, 62h, 0D0h, 70h, 0D0h
		db 7Eh,	0D0h, 8Ch, 0D0h, 9Ah, 0D0h, 41h, 0B1h, 91h, 0B0h
		db 0E1h, 0AFh, 31h, 0AFh, 81h, 0AEh, 0D1h, 0ADh, 21h, 0ADh
		db 71h,	0ACh, 0C1h, 0ABh, 11h, 0ABh, 61h, 0AAh,	61h, 0AAh
		db 0FCh, 0, 82h, 0DBh, 0A2h, 0DCh, 61h,	7, 8 dup(0), 14h
		db 1, 0D2h, 0DAh, 53h, 8, 2Bh, 0DBh, 55h, 64h, 2 dup(0)
		db 28h,	0, 28h,	0, 14h,	1, 0D2h, 0DAh, 53h, 8, 2Bh, 0DBh
		db 55h,	64h, 10h, 0, 38h, 0, 28h, 0, 14h, 1, 0D2h, 0DAh
		db 53h,	8, 2Bh,	0DBh, 55h, 64h,	38h, 0,	38h, 0,	28h, 0
		db 14h,	1, 0D2h, 0DAh, 53h, 8, 2Bh, 0DBh, 55h, 64h, 48h
		db 0, 28h, 0, 28h, 0, 20h, 1, 23h, 0DAh, 53h, 8, 58h, 0DAh
		db 0FDh, 78h, 28h, 0, 3Bh, 0, 0C8h, 0, 1Ch, 1, 0B0h, 0DAh
		db 53h,	8, 61h,	7, 55h,	77h, 1,	5 dup(0), 1Ch, 1, 0B0h
		db 0DAh, 53h, 8, 61h, 7, 55h, 77h, 48h,	5 dup(0), 18h
		db 1, 0B0h, 0DAh, 53h, 8, 61h, 7, 95h, 74h, 1, 0, 48h
		db 3 dup(0), 18h, 1, 0B0h, 0DAh, 53h, 8, 61h, 7, 95h, 74h
		db 48h,	0, 48h,	3 dup(0), 0FDh,	78h, 35h, 79h, 6Dh, 79h
		db 0A5h, 79h, 6Dh, 79h,	35h, 79h, 95h, 74h, 45h, 75h, 0F5h
		db 75h,	0A5h, 76h, 93h,	78h, 29h, 78h, 0BFh, 77h, 55h
		db 77h,	95h, 61h, 45h, 62h, 0F5h, 62h, 0A5h, 63h, 55h
		db 64h,	5, 65h,	0B5h, 2	dup(65h), 66h, 0C0h, 23h, 0, 24h
		db 0C0h, 27h, 0, 28h, 40h, 2Bh,	80h, 2Bh, 40h, 2Ch, 80h
		db 2Ch,	0C0h, 30h, 0, 31h, 40h,	35h, 80h, 35h, 40h, 2Ch
		db 80h,	2Ch, 0C0h, 30h,	0, 31h,	40h, 35h, 80h, 35h, 0C0h
		db 2Ch,	0, 2Dh,	40h, 31h, 80h, 31h, 0C0h, 35h, 0, 36h
		db 0C0h, 2Ch, 0, 2Dh, 40h, 31h,	80h, 31h, 0C0h,	35h, 0
		db 36h,	40h, 2Dh, 80h, 2Dh, 0C0h, 31h, 0, 32h, 40h, 36h
		db 80h,	36h, 40h, 2Dh, 80h, 2Dh, 0C0h, 31h, 0, 32h, 40h
		db 36h,	80h, 36h, 0C0h,	2Dh, 0,	2Eh, 40h, 32h, 80h, 32h
		db 0C0h, 36h, 0, 37h, 0C0h, 2Dh, 0, 2Eh, 40h, 32h, 80h
		db 32h,	0C0h, 36h, 0, 37h, 41h,	1Eh, 81h, 1Eh, 0C1h, 1Eh
		db 1, 1Fh, 41h,	1Fh, 81h, 1Fh, 40h, 23h, 80h, 23h, 0C0h
		db 23h,	0, 24h,	40h, 24h, 80h, 24h, 40h, 27h, 80h, 27h
		db 0C0h, 27h, 0, 28h, 40h, 28h,	80h, 28h, 0C0h,	2Ah, 0
		db 2Bh,	40h, 2Bh, 80h, 2Bh, 0C0h, 2Bh, 0, 2Ch, 41h, 2Fh
		db 80h,	2Fh, 0C1h, 2Fh,	1, 30h,	40h, 30h, 80h, 30h, 0C1h
		db 33h,	1, 34h,	41h, 34h, 81h, 34h, 0C1h, 34h, 1, 35h
		db 28h,	1, 71h,	0DEh, 0B6h, 0DEh, 2, 0,	30h, 1,	2Fh, 0DEh
		db 61h,	7, 4, 0, 2Ch, 1, 71h, 0DEh, 13h, 0DFh, 6 dup(0)
		db 1, 4Dh, 1, 4Dh, 41h,	4Dh, 41h, 4Dh, 1, 4Dh, 1, 4Dh
		db 1, 4Ch, 41h,	4Ch, 81h, 4Ch, 0C1h, 4Ch, 81h, 4Dh, 0C1h
		db 4Dh,	1, 4Eh,	41h, 4Eh, 1, 4Ch, 81h, 4Dh, 2 dup(40h)
		db 80h,	2 dup(40h), 44h, 80h, 44h, 0C0h, 40h, 0, 41h, 0C0h
		db 44h,	0, 45h,	40h, 41h, 80h, 41h, 40h, 45h, 80h, 45h
		db 0C0h, 41h, 0, 42h, 0C0h, 45h, 0, 46h, 40h, 42h, 80h
		db 42h,	40h, 46h, 80h, 46h, 0C0h, 42h, 0, 43h, 0C0h, 46h
		db 0, 47h, 40h,	43h, 80h, 43h, 40h, 47h, 80h, 47h, 0C0h
		db 43h,	0, 44h,	0C0h, 47h, 0, 48h, 40h,	38h, 80h, 38h
		db 41h,	3Ch, 80h, 3Ch, 0C0h, 38h, 0, 39h, 0C0h,	3Ch, 0
		db 3Dh,	40h, 39h, 80h, 39h, 40h, 3Dh
		db 80h,	3Dh, 0C0h, 39h,	0, 3Ah,	0C0h, 3Dh, 0, 3Eh, 40h
		db 3Ah,	80h, 3Ah, 40h, 3Eh, 80h, 3Eh, 0C0h, 3Ah, 0, 3Bh
		db 0C0h, 3Eh, 0, 3Fh, 40h, 3Bh,	80h, 3Bh, 40h, 3Fh, 80h
		db 3Fh,	0C0h, 3Bh, 1, 3Ch, 0C0h, 3Fh, 1, 40h, 2	dup(0)
		db 0F5h, 0FFh, 7, 0, 0F9h, 0FFh, 0Eh, 0, 0FEh, 0FFh, 7
		db 0, 6, 3 dup(0), 0Bh,	0, 0F9h, 0FFh, 7, 0, 0F3h, 0FFh
		db 2 dup(0), 0F9h, 0FFh, 0F9h, 0FFh, 35h, 3 dup(95h), 27h
		db 96h,	69h, 96h, 0FBh,	96h, 5Bh, 97h, 0EDh, 97h, 2Fh
		db 98h,	81h, 48h, 0C1h,	48h, 1,	49h, 41h, 49h, 81h, 49h
		db 0C1h, 49h, 1, 4Ah, 81h, 48h,	41h, 4Ah, 81h, 4Ah, 0C1h
		db 4Ah,	1, 4Bh,	41h, 4Bh, 81h, 4Bh, 0C1h, 4Bh, 41h, 4Ah
		db 1, 38h, 0C1h, 37h, 60h, 33h,	7Ch, 0E4h, 82h,	0E4h, 88h
		db 0E4h, 8Eh, 0E4h, 94h, 0E4h, 9Ah, 0E4h, 0A0h,	0E4h, 0A6h
		db 0E4h, 0C1h, 98h, 0F5h, 98h, 36h, 68h, 5Ah, 68h, 0Ch dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_1EBD0	proc far		; CODE XREF: seg000:0949P
					; sub_1FEDE+5AP
					; DATA XREF: ...
		mov	byte_31482, 0
		jmp	short loc_1EBDC
; ---------------------------------------------------------------------------

loc_1EBD7:				; CODE XREF: sub_10963+8P
					; DATA XREF: seg000:off_10971o	...
		mov	byte_31482, 0FFh

loc_1EBDC:				; CODE XREF: sub_1EBD0+5j
		mov	bp, 0A000h
		mov	es, bp
		assume es:nothing

loc_1EBE1:				; CODE XREF: sub_1EBD0+1Ej
		cmp	dx, 0FFF0h
		jg	short loc_1EBF2
		add	si, ax
		add	si, ax
		add	dx, 10h
		dec	bx
		jnz	short loc_1EBE1
		jmp	short loc_1EC6A
; ---------------------------------------------------------------------------

loc_1EBF2:				; CODE XREF: sub_1EBD0+14j
		mov	di, word_2C78B
		mov	bp, di
		add	bp, 1BA8h
		shr	cx, 1
		shr	cx, 1
		add	di, cx
		mov	cx, ax
		test	dx, dx
		jns	short loc_1EC21
		push	di
		push	cx

loc_1EC0A:				; CODE XREF: sub_1EBD0+47j
		push	cx
		mov	cx, 10h
		add	cx, dx
		call	sub_1EC6F
		add	di, 2
		pop	cx
		loop	loc_1EC0A
		pop	cx
		pop	di
		add	dx, 10h
		dec	bx
		jz	short loc_1EC6A

loc_1EC21:				; CODE XREF: sub_1EBD0+36j
		mov	ax, 28h	; '('
		mul	dx
		add	di, ax

loc_1EC28:				; CODE XREF: sub_1EBD0+74j
		cmp	di, bp
		jge	short loc_1EC48
		push	di
		push	cx

loc_1EC2E:				; CODE XREF: sub_1EBD0+6Bj
		push	cx
		mov	cx, 10h
		xor	dx, dx
		call	sub_1EC6F
		add	di, 2
		pop	cx
		loop	loc_1EC2E
		pop	cx
		pop	di
		add	di, 280h
		dec	bx
		jnz	short loc_1EC28
		jmp	short loc_1EC6A
; ---------------------------------------------------------------------------

loc_1EC48:				; CODE XREF: sub_1EBD0+5Aj
		push	di
		sub	di, bp
		mov	ax, di
		pop	di
		xor	dx, dx
		mov	bp, 28h	; '('
		div	bp
		sub	ax, 0Fh
		neg	ax
		jle	short loc_1EC6A

loc_1EC5C:				; CODE XREF: sub_1EBD0+98j
		push	cx
		mov	cx, ax
		xor	dx, dx
		call	sub_1EC6F
		add	di, 2
		pop	cx
		loop	loc_1EC5C

loc_1EC6A:				; CODE XREF: sub_1EBD0+20j
					; sub_1EBD0+4Fj ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_1EBD0	endp


; =============== S U B	R O U T	I N E =======================================


sub_1EC6F	proc near		; CODE XREF: sub_1EBD0+40p
					; sub_1EBD0+64p ...
		push	ax
		mov	ax, cs:[si]
		add	si, 2
		shr	ax, 1
		jnz	short loc_1EC7D
		jmp	loc_1EDCF
; ---------------------------------------------------------------------------

loc_1EC7D:				; CODE XREF: sub_1EC6F+9j
		jb	short loc_1ECD8
		cmp	byte_31482, 0
		jz	short loc_1ECAE
		push	dx
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		push	cx

loc_1EC94:				; CODE XREF: sub_1EC6F+2Fj
		mov	es:[di], al
		mov	es:[di+1], al
		add	di, 28h	; '('
		loop	loc_1EC94
		pop	cx
		pop	di
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		pop	dx
		jmp	loc_1EDCF
; ---------------------------------------------------------------------------

loc_1ECAE:				; CODE XREF: sub_1EC6F+15j
		push	si
		push	di
		push	cx
		push	dx
		push	ds
		mov	si, ax
		sub	si, dx
		sub	si, dx
		mov	ax, 0A400h
		mov	ds, ax
		assume ds:nothing
		mov	dx, 3CEh
		mov	ax, 105h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register

loc_1ECC5:				; CODE XREF: sub_1EC6F+5Bj
		movsb
		movsb
		add	di, 26h	; '&'
		loop	loc_1ECC5
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		pop	ds
		assume ds:dseg
		pop	dx
		pop	cx
		pop	di
		pop	si
		jmp	loc_1EDCF
; ---------------------------------------------------------------------------

loc_1ECD8:				; CODE XREF: sub_1EC6F:loc_1EC7Dj
		cmp	byte_31482, 0
		jz	short loc_1ED27
		push	dx
		push	si
		mov	si, ax
		sub	si, dx
		sub	si, dx
		add	si, 5538h
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		push	di
		push	cx

loc_1ECFC:				; CODE XREF: sub_1EC6F+A2j
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		mov	ah, es:[di]
		mov	es:[di], al
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		mov	ah, es:[di+1]
		mov	es:[di+1], al
		add	di, 28h	; '('
		loop	loc_1ECFC
		pop	cx
		pop	di
		dec	dx
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		pop	si
		pop	dx
		jmp	loc_1EDCF
; ---------------------------------------------------------------------------

loc_1ED27:				; CODE XREF: sub_1EC6F+6Ej
		push	cx
		push	dx
		push	si
		push	di
		mov	si, ax
		sub	si, dx
		sub	si, dx
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		push	si
		push	di
		push	cx
		add	si, 5538h

loc_1ED43:				; CODE XREF: sub_1EC6F+E2j
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		and	es:[di], al
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		and	es:[di+1], al
		add	di, 28h	; '('
		loop	loc_1ED43
		dec	dx
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 1003h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		pop	cx
		pop	di
		pop	si
		push	ds
		mov	ax, 0A400h
		mov	ds, ax
		assume ds:nothing
		mov	ss:byte_447B0, 0
		mov	ss:byte_447B0+1, 1

loc_1ED75:				; CODE XREF: sub_1EC6F+147j
		mov	dx, 3C4h
		mov	ah, ss:byte_447B0+1
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		mov	ah, ss:byte_447B0
		mov	al, 4
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		push	si
		push	di
		push	cx

loc_1ED8E:				; CODE XREF: sub_1EC6F+132j
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		lodsb
		mov	ah, es:[di+1]
		mov	es:[di+1], al
		add	di, 28h	; '('
		loop	loc_1ED8E
		pop	cx
		pop	di
		pop	si
		inc	ss:byte_447B0
		shl	ss:byte_447B0+1, 1
		cmp	ss:byte_447B0, 4
		jl	short loc_1ED75
		mov	dx, 3C4h
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 3
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; data rotate and function select for write mode 00. Bits:
					; 0-2: set rotate count	for write mode 00
					; 3-4: fn for write modes 00 and 02
					;      00=no change; 01=AND; 10=OR; 11=XOR
		mov	ax, 4
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; read map select.
					; Data bits 0-2	select map # for read mode 00.
		pop	ds
		assume ds:dseg
		pop	di
		pop	si
		pop	dx
		pop	cx

loc_1EDCF:				; CODE XREF: sub_1EC6F+Bj
					; sub_1EC6F+3Cj ...
		pop	ax
		retn
sub_1EC6F	endp

; ---------------------------------------------------------------------------
word_1EDD1	dw 0			; DATA XREF: sub_1FEDE+4Cw
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1EDE0	proc far		; CODE XREF: seg000:0949P
					; sub_21CDF+5AP
					; DATA XREF: ...
		mov	byte_31482, 0
		jmp	short loc_1EDEC
; ---------------------------------------------------------------------------

loc_1EDE7:				; CODE XREF: sub_10963+8P
					; DATA XREF: seg000:0979o ...
		mov	byte_31482, 0FFh

loc_1EDEC:				; CODE XREF: sub_1EDE0+5j
		mov	bp, seg_2C785
		mov	es, bp
		assume es:nothing

loc_1EDF2:				; CODE XREF: sub_1EDE0+1Fj
		cmp	dx, 0FFF0h
		jg	short loc_1EE03
		add	si, ax
		add	si, ax
		add	dx, 10h
		dec	bx
		jnz	short loc_1EDF2
		jmp	short loc_1EE73
; ---------------------------------------------------------------------------

loc_1EE03:				; CODE XREF: sub_1EDE0+15j
		shr	cx, 1
		mov	di, cx
		mov	cx, ax
		test	dx, dx
		jns	short loc_1EE26
		push	di
		push	cx

loc_1EE0F:				; CODE XREF: sub_1EDE0+3Cj
		push	cx
		mov	cx, 10h
		add	cx, dx
		call	sub_1EE78
		add	di, 4
		pop	cx
		loop	loc_1EE0F
		pop	cx
		pop	di
		add	dx, 10h
		dec	bx
		jz	short loc_1EE73

loc_1EE26:				; CODE XREF: sub_1EDE0+2Bj
		mov	ax, dx
		xchg	di, dx
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, dx
		mov	dx, ax

loc_1EE34:				; CODE XREF: sub_1EDE0+77j
		cmp	dx, 0B1h ; '
		jge	short loc_1EE5B
		push	dx
		push	di
		push	cx

loc_1EE3D:				; CODE XREF: sub_1EDE0+6Aj
		push	cx
		mov	cx, 10h
		xor	dx, dx
		call	sub_1EE78
		add	di, 4
		pop	cx
		loop	loc_1EE3D
		pop	cx
		pop	di
		pop	dx
		add	di, 500h
		add	dx, 10h
		dec	bx
		jnz	short loc_1EE34
		jmp	short loc_1EE73
; ---------------------------------------------------------------------------

loc_1EE5B:				; CODE XREF: sub_1EDE0+58j
		sub	dx, 0C0h ; '
		neg	dx
		jle	short loc_1EE73
		mov	ax, dx

loc_1EE65:				; CODE XREF: sub_1EDE0+91j
		push	cx
		mov	cx, ax
		xor	dx, dx
		call	sub_1EE78
		add	di, 4
		pop	cx
		loop	loc_1EE65

loc_1EE73:				; CODE XREF: sub_1EDE0+21j
					; sub_1EDE0+44j ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_1EDE0	endp


; =============== S U B	R O U T	I N E =======================================


sub_1EE78	proc near		; CODE XREF: sub_1EDE0+35p
					; sub_1EDE0+63p ...
		push	ax
		mov	ax, cs:[si]
		add	si, 2
		shr	ax, 1
		jnz	short loc_1EE86
		jmp	loc_1EFDE
; ---------------------------------------------------------------------------

loc_1EE86:				; CODE XREF: sub_1EE78+9j
		jb	short loc_1EEC1
		cmp	byte_31482, 0
		jz	short loc_1EEA0
		push	di
		push	cx
		mov	ax, 0FFFFh

loc_1EE94:				; CODE XREF: sub_1EE78+21j
		stosw
		stosw
		add	di, 4Ch	; 'L'
		loop	loc_1EE94
		pop	cx
		pop	di
		jmp	loc_1EFDE
; ---------------------------------------------------------------------------

loc_1EEA0:				; CODE XREF: sub_1EE78+15j
		push	si
		push	di
		push	cx
		push	dx
		push	ds
		mov	si, ax
		sub	si, dx
		shl	si, 1
		shl	si, 1
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009

loc_1EEB2:				; CODE XREF: sub_1EE78+3Fj
		movsw
		movsw
		add	di, 4Ch	; 'L'
		loop	loc_1EEB2
		pop	ds
		assume ds:dseg
		pop	dx
		pop	cx
		pop	di
		pop	si
		jmp	loc_1EFDE
; ---------------------------------------------------------------------------

loc_1EEC1:				; CODE XREF: sub_1EE78:loc_1EE86j
		cmp	byte_31482, 0
		jz	short loc_1EF38
		push	dx
		push	si
		mov	si, ax
		sub	si, dx
		sub	si, dx
		add	si, 5538h
		push	di
		push	cx

loc_1EED6:				; CODE XREF: sub_1EE78+B7j
		lodsb
		mov	ah, al
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		lodsb
		mov	ah, al
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		add	di, 4Ch	; 'L'
		loop	loc_1EED6
		pop	cx
		pop	di
		pop	si
		pop	dx
		jmp	loc_1EFDE
; ---------------------------------------------------------------------------

loc_1EF38:				; CODE XREF: sub_1EE78+4Ej
		push	cx
		push	dx
		push	si
		push	di
		mov	si, ax
		sub	si, dx
		mov	bp, si
		shl	bp, 1
		shl	bp, 1
		sub	si, dx
		add	si, 5538h

loc_1EF4C:				; CODE XREF: sub_1EE78:loc_1EFD7j
		lodsb
		mov	ah, al
		push	ds
		mov	dx, seg	seg009
		xchg	si, bp
		mov	ds, dx
		assume ds:seg009
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		not	al
		and	es:[di], al
		lodsb
		or	es:[di], al
		inc	di
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		not	al
		and	es:[di], al
		lodsb
		or	es:[di], al
		inc	di
		pop	ds
		assume ds:dseg
		xchg	si, bp
		lodsb
		mov	ah, al
		push	ds
		mov	dx, seg	seg009
		xchg	si, bp
		mov	ds, dx
		assume ds:seg009
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		not	al
		and	es:[di], al
		lodsb
		or	es:[di], al
		inc	di
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		not	al
		and	es:[di], al
		lodsb
		or	es:[di], al
		inc	di
		pop	ds
		assume ds:dseg
		xchg	si, bp
		add	di, 4Ch	; 'L'
		loop	loc_1EFD7
		jmp	short loc_1EFDA
; ---------------------------------------------------------------------------

loc_1EFD7:				; CODE XREF: sub_1EE78+15Bj
		jmp	loc_1EF4C
; ---------------------------------------------------------------------------

loc_1EFDA:				; CODE XREF: sub_1EE78+15Dj
		pop	di
		pop	si
		pop	dx
		pop	cx

loc_1EFDE:				; CODE XREF: sub_1EE78+Bj
					; sub_1EE78+25j ...
		pop	ax
		retn
sub_1EE78	endp

; ---------------------------------------------------------------------------
word_1EFE0	dw 0			; DATA XREF: sub_21CDF+4Cw
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1EFF0	proc far		; CODE XREF: seg000:0949P
					; sub_23CB2+5AP
					; DATA XREF: ...
		mov	byte_31482, 0
		jmp	short loc_1EFFC
; ---------------------------------------------------------------------------

loc_1EFF7:				; CODE XREF: sub_10963+8P
					; DATA XREF: seg000:0975o
		mov	byte_31482, 0FFh

loc_1EFFC:				; CODE XREF: sub_1EFF0+5j
		mov	bp, 0B800h
		mov	es, bp
		assume es:nothing

loc_1F001:				; CODE XREF: sub_1EFF0+1Ej
		cmp	dx, 0FFF0h
		jg	short loc_1F012
		add	si, ax
		add	si, ax
		add	dx, 10h
		dec	bx
		jnz	short loc_1F001
		jmp	short loc_1F080
; ---------------------------------------------------------------------------

loc_1F012:				; CODE XREF: sub_1EFF0+14j
		mov	di, cx
		mov	cx, ax
		test	dx, dx
		jns	short loc_1F033
		push	di
		push	cx

loc_1F01C:				; CODE XREF: sub_1EFF0+39j
		push	cx
		mov	cx, 10h
		add	cx, dx
		call	sub_1F085
		add	di, 8
		pop	cx
		loop	loc_1F01C
		pop	cx
		pop	di
		add	dx, 10h
		dec	bx
		jz	short loc_1F080

loc_1F033:				; CODE XREF: sub_1EFF0+28j
		mov	ax, dx
		xchg	di, dx
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, dx
		mov	dx, ax

loc_1F041:				; CODE XREF: sub_1EFF0+74j
		cmp	dx, 0B1h ; '
		jge	short loc_1F068
		push	dx
		push	di
		push	cx

loc_1F04A:				; CODE XREF: sub_1EFF0+67j
		push	cx
		mov	cx, 10h
		xor	dx, dx
		call	sub_1F085
		add	di, 8
		pop	cx
		loop	loc_1F04A
		pop	cx
		pop	di
		pop	dx
		add	di, 280h
		add	dx, 10h
		dec	bx
		jnz	short loc_1F041
		jmp	short loc_1F080
; ---------------------------------------------------------------------------

loc_1F068:				; CODE XREF: sub_1EFF0+55j
		sub	dx, 0C0h ; '
		neg	dx
		jle	short loc_1F080
		mov	ax, dx

loc_1F072:				; CODE XREF: sub_1EFF0+8Ej
		push	cx
		mov	cx, ax
		xor	dx, dx
		call	sub_1F085
		add	di, 8
		pop	cx
		loop	loc_1F072

loc_1F080:				; CODE XREF: sub_1EFF0+20j
					; sub_1EFF0+41j ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_1EFF0	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F085	proc near		; CODE XREF: sub_1EFF0+32p
					; sub_1EFF0+60p ...
		push	ax
		mov	ax, cs:[si]
		add	si, 2
		shr	ax, 1
		jnz	short loc_1F093
		jmp	loc_1F286
; ---------------------------------------------------------------------------

loc_1F093:				; CODE XREF: sub_1F085+9j
		jb	short loc_1F0E2
		cmp	byte_31482, 0
		jz	short loc_1F0B6
		push	di
		push	cx
		mov	ax, 7777h

loc_1F0A1:				; CODE XREF: sub_1F085:loc_1F0AFj
		stosw
		stosw
		stosw
		stosw
		add	di, 1FF8h
		jns	short loc_1F0AF
		sub	di, 7F60h

loc_1F0AF:				; CODE XREF: sub_1F085+24j
		loop	loc_1F0A1
		pop	cx
		pop	di
		jmp	loc_1F286
; ---------------------------------------------------------------------------

loc_1F0B6:				; CODE XREF: sub_1F085+15j
		push	si
		push	di
		push	cx
		push	dx
		push	ds
		mov	si, ax
		sub	si, dx
		sub	si, dx
		shl	si, 1
		shl	si, 1
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009

loc_1F0CA:				; CODE XREF: sub_1F085:loc_1F0D8j
		movsw
		movsw
		movsw
		movsw
		add	di, 1FF8h
		jns	short loc_1F0D8
		sub	di, 7F60h

loc_1F0D8:				; CODE XREF: sub_1F085+4Dj
		loop	loc_1F0CA
		pop	ds
		assume ds:dseg
		pop	dx
		pop	cx
		pop	di
		pop	si
		jmp	loc_1F286
; ---------------------------------------------------------------------------

loc_1F0E2:				; CODE XREF: sub_1F085:loc_1F093j
		cmp	byte_31482, 0
		jnz	short loc_1F0EC
		jmp	loc_1F1FF
; ---------------------------------------------------------------------------

loc_1F0EC:				; CODE XREF: sub_1F085+62j
		push	dx
		push	si
		mov	si, ax
		sub	si, dx
		sub	si, dx
		add	si, 5538h
		push	di
		push	cx

loc_1F0FA:				; CODE XREF: sub_1F085:loc_1F1F5j
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_1F10B
		shl	ah, 1
		jnb	short loc_1F115
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F119
; ---------------------------------------------------------------------------

loc_1F10B:				; CODE XREF: sub_1F085+7Aj
		shl	ah, 1
		jnb	short loc_1F119
		or	byte ptr es:[di], 7
		jmp	short loc_1F119
; ---------------------------------------------------------------------------

loc_1F115:				; CODE XREF: sub_1F085+7Ej
		or	byte ptr es:[di], 70h

loc_1F119:				; CODE XREF: sub_1F085+84j
					; sub_1F085+88j ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F128
		shl	ah, 1
		jnb	short loc_1F132
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F136
; ---------------------------------------------------------------------------

loc_1F128:				; CODE XREF: sub_1F085+97j
		shl	ah, 1
		jnb	short loc_1F136
		or	byte ptr es:[di], 7
		jmp	short loc_1F136
; ---------------------------------------------------------------------------

loc_1F132:				; CODE XREF: sub_1F085+9Bj
		or	byte ptr es:[di], 70h

loc_1F136:				; CODE XREF: sub_1F085+A1j
					; sub_1F085+A5j ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F145
		shl	ah, 1
		jnb	short loc_1F14F
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F153
; ---------------------------------------------------------------------------

loc_1F145:				; CODE XREF: sub_1F085+B4j
		shl	ah, 1
		jnb	short loc_1F153
		or	byte ptr es:[di], 7
		jmp	short loc_1F153
; ---------------------------------------------------------------------------

loc_1F14F:				; CODE XREF: sub_1F085+B8j
		or	byte ptr es:[di], 70h

loc_1F153:				; CODE XREF: sub_1F085+BEj
					; sub_1F085+C2j ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F162
		shl	ah, 1
		jnb	short loc_1F16C
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F170
; ---------------------------------------------------------------------------

loc_1F162:				; CODE XREF: sub_1F085+D1j
		shl	ah, 1
		jnb	short loc_1F170
		or	byte ptr es:[di], 7
		jmp	short loc_1F170
; ---------------------------------------------------------------------------

loc_1F16C:				; CODE XREF: sub_1F085+D5j
		or	byte ptr es:[di], 70h

loc_1F170:				; CODE XREF: sub_1F085+DBj
					; sub_1F085+DFj ...
		inc	di
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_1F182
		shl	ah, 1
		jnb	short loc_1F18C
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F190
; ---------------------------------------------------------------------------

loc_1F182:				; CODE XREF: sub_1F085+F1j
		shl	ah, 1
		jnb	short loc_1F190
		or	byte ptr es:[di], 7
		jmp	short loc_1F190
; ---------------------------------------------------------------------------

loc_1F18C:				; CODE XREF: sub_1F085+F5j
		or	byte ptr es:[di], 70h

loc_1F190:				; CODE XREF: sub_1F085+FBj
					; sub_1F085+FFj ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F19F
		shl	ah, 1
		jnb	short loc_1F1A9
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F1AD
; ---------------------------------------------------------------------------

loc_1F19F:				; CODE XREF: sub_1F085+10Ej
		shl	ah, 1
		jnb	short loc_1F1AD
		or	byte ptr es:[di], 7
		jmp	short loc_1F1AD
; ---------------------------------------------------------------------------

loc_1F1A9:				; CODE XREF: sub_1F085+112j
		or	byte ptr es:[di], 70h

loc_1F1AD:				; CODE XREF: sub_1F085+118j
					; sub_1F085+11Cj ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F1BC
		shl	ah, 1
		jnb	short loc_1F1C6
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F1CA
; ---------------------------------------------------------------------------

loc_1F1BC:				; CODE XREF: sub_1F085+12Bj
		shl	ah, 1
		jnb	short loc_1F1CA
		or	byte ptr es:[di], 7
		jmp	short loc_1F1CA
; ---------------------------------------------------------------------------

loc_1F1C6:				; CODE XREF: sub_1F085+12Fj
		or	byte ptr es:[di], 70h

loc_1F1CA:				; CODE XREF: sub_1F085+135j
					; sub_1F085+139j ...
		inc	di
		shl	ah, 1
		jnb	short loc_1F1D9
		shl	ah, 1
		jnb	short loc_1F1E3
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_1F1E7
; ---------------------------------------------------------------------------

loc_1F1D9:				; CODE XREF: sub_1F085+148j
		shl	ah, 1
		jnb	short loc_1F1E7
		or	byte ptr es:[di], 7
		jmp	short loc_1F1E7
; ---------------------------------------------------------------------------

loc_1F1E3:				; CODE XREF: sub_1F085+14Cj
		or	byte ptr es:[di], 70h

loc_1F1E7:				; CODE XREF: sub_1F085+152j
					; sub_1F085+156j ...
		add	di, 1FF9h
		jns	short loc_1F1F1
		sub	di, 7F60h

loc_1F1F1:				; CODE XREF: sub_1F085+166j
		loop	loc_1F1F5
		jmp	short loc_1F1F8
; ---------------------------------------------------------------------------

loc_1F1F5:				; CODE XREF: sub_1F085:loc_1F1F1j
		jmp	loc_1F0FA
; ---------------------------------------------------------------------------

loc_1F1F8:				; CODE XREF: sub_1F085+16Ej
		pop	cx
		pop	di
		pop	si
		pop	dx
		jmp	loc_1F286
; ---------------------------------------------------------------------------

loc_1F1FF:				; CODE XREF: sub_1F085+64j
		push	cx
		push	dx
		push	si
		push	di
		mov	si, ax
		shl	dx, 1
		sub	si, dx
		mov	bp, si
		shl	bp, 1
		shl	bp, 1
		add	si, 5538h

loc_1F213:				; CODE XREF: sub_1F085:loc_1F280j
		lodsb
		mov	ah, al
		push	ds
		mov	dx, seg	seg009
		xchg	si, bp
		mov	ds, dx
		assume ds:seg009
		lodsb
		test	al, al
		jz	short loc_1F226
		mov	es:[di], al

loc_1F226:				; CODE XREF: sub_1F085+19Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F22F
		mov	es:[di], al

loc_1F22F:				; CODE XREF: sub_1F085+1A5j
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F238
		mov	es:[di], al

loc_1F238:				; CODE XREF: sub_1F085+1AEj
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F241
		mov	es:[di], al

loc_1F241:				; CODE XREF: sub_1F085+1B7j
		inc	di
		pop	ds
		assume ds:dseg
		xchg	si, bp
		lodsb
		mov	ah, al
		push	ds
		xchg	si, bp
		mov	dx, seg	seg009
		mov	ds, dx
		assume ds:seg009
		lodsb
		test	al, al
		jz	short loc_1F258
		mov	es:[di], al

loc_1F258:				; CODE XREF: sub_1F085+1CEj
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F261
		mov	es:[di], al

loc_1F261:				; CODE XREF: sub_1F085+1D7j
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F26A
		mov	es:[di], al

loc_1F26A:				; CODE XREF: sub_1F085+1E0j
		inc	di
		lodsb
		test	al, al
		jz	short loc_1F273
		mov	es:[di], al

loc_1F273:				; CODE XREF: sub_1F085+1E9j
		pop	ds
		assume ds:dseg
		xchg	si, bp
		add	di, 1FF9h
		jns	short loc_1F280
		sub	di, 7F60h

loc_1F280:				; CODE XREF: sub_1F085+1F5j
		loop	loc_1F213
		pop	di
		pop	si
		pop	dx
		pop	cx

loc_1F286:				; CODE XREF: sub_1F085+Bj
					; sub_1F085+2Ej ...
		pop	ax
		retn
sub_1F085	endp

; ---------------------------------------------------------------------------
word_1F288	dw 0			; DATA XREF: sub_23CB2+4Cw
		align 8
seg000		ends

; ===========================================================================

; Segment type:	Pure code
;seg001		segment	byte public 'CODE' use16
;		assume cs:seg001
;		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
byte_1F290	db 0E8h, 42h, 0, 0B8h, 0Dh, 0, 0CDh, 10h, 0B8h,	2, 10h
					; DATA XREF: seg000:07FBo
		db 0BAh, 5Dh, 42h, 0CDh, 10h, 0B8h, 1, 10h, 32h, 0FFh
		db 0CDh, 10h, 0B8h, 40h, 0, 8Eh, 0C0h, 26h, 8Bh, 16h, 63h
		db 0, 89h, 16h,	57h, 42h, 8Ch, 0D8h, 8Eh, 0C0h,	0CBh
byte_1F2BA	db 0E8h, 18h, 0, 0B8h, 0Dh, 0, 0CDh, 10h, 0B8h,	40h, 0
					; DATA XREF: seg000:0807o
		db 8Eh,	0C0h, 26h, 8Bh,	16h, 63h, 0, 89h, 16h, 57h, 42h
		db 8Ch,	0D8h, 8Eh, 0C0h, 0CBh

; =============== S U B	R O U T	I N E =======================================


sub_1F2D5	proc near
		mov	di, 973Eh
		xor	ax, ax
		mov	cx, 0C8h ; '

loc_1F2DD:				; CODE XREF: sub_1F2D5+Cj
		stosw
		add	ax, 28h	; '('
		loop	loc_1F2DD
		retn
sub_1F2D5	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F2E4	proc far		; CODE XREF: sub_10EB3+8P
					; DATA XREF: seg000:off_10EC1o
		xor	bx, bx
		mov	cx, 10h

loc_1F2E9:				; CODE XREF: sub_1F2E4+11j
		mov	ax, 1000h
		push	bx
		push	cx
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		pop	cx
		pop	bx
		xor	bh, 18h
		loop	loc_1F2E9
		mov	ax, 1000h
		xor	bx, bx
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		retf
sub_1F2E4	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F2FF	proc far		; CODE XREF: sub_10EB3+8P
					; DATA XREF: seg000:0ECDo
		mov	cx, 10h
		xor	dh, dh

loc_1F304:				; CODE XREF: sub_1F2FF+17j
		push	cx
		push	dx
		mov	cl, dh
		mov	ch, dh
		mov	ax, 1010h
		xor	bx, bx
		int	10h		; - VIDEO - SET	INDIVIDUAL DAC REGISTER	(EGA, VGA/MCGA)
					; BX = register	number,	CH = new value for green (0-63)
					; CL = new value for blue (0-63), DH = new value for red (0-63)
		pop	dx
		pop	cx
		xor	dh, 3Fh
		loop	loc_1F304
		mov	ax, 1010h
		xor	bx, bx
		xor	cx, cx
		xor	dh, dh
		int	10h		; - VIDEO - SET	INDIVIDUAL DAC REGISTER	(EGA, VGA/MCGA)
					; BX = register	number,	CH = new value for green (0-63)
					; CL = new value for blue (0-63), DH = new value for red (0-63)
		retf
sub_1F2FF	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS KEYPAD CTRL-"+" TO EXPAND]

; =============== S U B	R O U T	I N E =======================================


sub_1F325	proc far		; CODE XREF: sub_10DC5+8P
					; DATA XREF: seg000:off_10DD3o	...
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	di, 4000h
		mov	dx, 3C4h
		mov	ax, 102h
		xor	si, si
		call	sub_1F363
		mov	ah, 2
		mov	si, 2
		call	sub_1F363
		mov	ah, 4
		mov	si, 4
		call	sub_1F363
		mov	ah, 8
		mov	si, 6
		call	sub_1F363
		mov	dx, 3C4h
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retf
sub_1F325	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F363	proc near		; CODE XREF: sub_1F325+16p
					; sub_1F325+1Ep ...
		out	dx, ax
		push	di
		mov	cx, 1C90h

loc_1F368:				; CODE XREF: sub_1F363+Aj
		movsb
		movsb
		add	si, 6
		loop	loc_1F368
		pop	di
		retn
sub_1F363	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F371	proc far		; CODE XREF: sub_10DE7+8P
					; DATA XREF: seg000:off_10DF5o
		mov	ax, 1002h
		mov	dx, 425Dh
		int	10h		; - VIDEO - SET	ALL PALETTE REGISTERS (Jr, PS, TANDY 1000, EGA,	VGA)
					; ES:DX	-> 17-byte palette register list
		retf
sub_1F371	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F37A	proc far		; CODE XREF: sub_10E09+8P
					; DATA XREF: seg000:off_10E17o
		mov	ax, 1002h
		mov	dx, 426Dh
		int	10h		; - VIDEO - SET	ALL PALETTE REGISTERS (Jr, PS, TANDY 1000, EGA,	VGA)
					; ES:DX	-> 17-byte palette register list
		retf
sub_1F37A	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F383	proc far		; CODE XREF: sub_10E2B+8P
					; DATA XREF: seg000:off_10E39o
		mov	ax, 1002h
		mov	dx, 425Dh
		int	10h		; - VIDEO - SET	ALL PALETTE REGISTERS (Jr, PS, TANDY 1000, EGA,	VGA)
					; ES:DX	-> 17-byte palette register list
		retf
sub_1F383	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F38C	proc near		; CODE XREF: sub_1F3A7+3p sub_1F3AE+3p ...
		push	dx
		mov	ax, 1012h
		xor	bx, bx
		mov	cx, 10h
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		pop	dx
		mov	ax, 1012h
		add	dx, 18h
		mov	bx, 10h
		mov	cx, 8
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		retn
sub_1F38C	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F3A7	proc far		; CODE XREF: sub_10DE7+8P
					; DATA XREF: seg000:0E01o
		mov	dx, 427Dh
		call	sub_1F38C
		retf
sub_1F3A7	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F3AE	proc far		; CODE XREF: sub_10E09+8P
					; DATA XREF: seg000:0E23o
		mov	dx, 427Dh
		call	sub_1F38C
		retf
sub_1F3AE	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F3B5	proc far		; CODE XREF: sub_10E2B+8P
					; DATA XREF: seg000:0E45o
		mov	ax, 30h	; '0'
		mul	word_31E4C
		mov	dx, ax
		add	dx, 427Dh
		call	sub_1F38C
		retf
sub_1F3B5	endp

; ---------------------------------------------------------------------------
byte_1F3C6	db 0			; DATA XREF: sub_1F3C7+9w sub_1F3D7r ...

; =============== S U B	R O U T	I N E =======================================


sub_1F3C7	proc far		; CODE XREF: sub_10D5F+8P
					; DATA XREF: seg000:off_10D6Do	...
		mov	ax, 1000h
		mov	bl, 12h
		mov	bh, 0
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		mov	cs:byte_1F3C6, 1
		retf
sub_1F3C7	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F3D7	proc far		; CODE XREF: sub_10D81+8P
					; DATA XREF: seg000:off_10D8Fo	...
		cmp	cs:byte_1F3C6, 0
		jz	short locret_1F3EE
		mov	cs:byte_1F3C6, 0
		mov	ax, 1000h
		mov	bl, 12h
		mov	bh, 0Fh
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store

locret_1F3EE:				; CODE XREF: sub_1F3D7+6j
		retf
sub_1F3D7	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F3EF	proc far		; CODE XREF: sub_1080F+8P
					; DATA XREF: seg000:off_1081Do	...
		mov	ax, word_316C8
		call	sub_10ED5
		push	es
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 1003h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 805h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	si, 9A40h
		mov	cx, 10h
		mov	ax, 400h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 808h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	bl, al
		mov	bp, word_2C78B

loc_1F420:				; CODE XREF: sub_1F3EF+49j
		mov	di, [si]
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, [si+2]
		add	di, bp
		test	es:[di], bl
		jz	short loc_1F435
		mov	es:[di], al

loc_1F435:				; CODE XREF: sub_1F3EF+41j
		add	si, 6
		loop	loc_1F420
		mov	cx, 10h
		mov	ax, 500h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register

loc_1F441:				; CODE XREF: sub_1F3EF+6Aj
		mov	di, [si]
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, [si+2]
		add	di, bp
		test	es:[di], bl
		jz	short loc_1F456
		mov	es:[di], al

loc_1F456:				; CODE XREF: sub_1F3EF+62j
		add	si, 6
		loop	loc_1F441
		mov	cx, 10h
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register

loc_1F462:				; CODE XREF: sub_1F3EF+8Bj
		mov	di, [si]
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, [si+2]
		add	di, bp
		test	es:[di], bl
		jz	short loc_1F477
		mov	es:[di], al

loc_1F477:				; CODE XREF: sub_1F3EF+83j
		add	si, 6
		loop	loc_1F462
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 3
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; data rotate and function select for write mode 00. Bits:
					; 0-2: set rotate count	for write mode 00
					; 3-4: fn for write modes 00 and 02
					;      00=no change; 01=AND; 10=OR; 11=XOR
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		pop	es
		assume es:nothing
		retf
sub_1F3EF	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F492	proc far		; CODE XREF: sub_10831+8P
					; sub_209E9+2Ep
					; DATA XREF: ...
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 805h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	si, 9A40h
		mov	cx, 30h	; '0'

loc_1F4A8:				; CODE XREF: sub_1F492:loc_1F561j
		mov	ax, [si+4]
		and	ax, 7FFFh
		sub	ax, 200h
		cmp	ax, 200h
		jg	short loc_1F4D2

loc_1F4B6:				; CODE XREF: sub_1F492+3Ej
					; sub_1F492+5Fj ...
		call	sub_10ED9
		mov	[si], ax
		call	sub_10ED9
		mov	[si+2],	ax
		call	sub_10ED9
		and	ax, 1FFFh
		cmp	ax, 200h
		jle	short loc_1F4B6

loc_1F4D2:				; CODE XREF: sub_1F492+22j
		mov	[si+4],	ax
		mov	ax, [si]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 0A0h ; '
		cmp	ax, 140h
		jnb	short loc_1F4B6
		mov	bx, ax
		mov	ax, [si+2]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 64h	; 'd'
		cmp	ax, 0C8h ; '
		jnb	short loc_1F4B6
		mov	di, 28h	; '('
		mul	di
		mov	di, ax
		add	di, word_2C78B
		push	cx
		mov	cx, bx
		and	cx, 7
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		add	di, bx
		mov	ah, 80h	; '
		shr	ah, cl
		pop	cx
		test	es:[di], ah
		jz	short loc_1F555
		mov	al, 8
		mov	dx, 3CEh
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	bx, [si+4]
		xchg	bh, bl
		shr	bx, 1
		shr	bx, 1
		and	bx, 7
		mov	ah, [bx+373Dh]
		xor	al, al
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	es:[di], al
		jmp	short loc_1F55A
; ---------------------------------------------------------------------------

loc_1F555:				; CODE XREF: sub_1F492+A3j
		or	word ptr [si+4], 8000h

loc_1F55A:				; CODE XREF: sub_1F492+C1j
		add	si, 6
		loop	loc_1F561
		jmp	short loc_1F564
; ---------------------------------------------------------------------------

loc_1F561:				; CODE XREF: sub_1F492+CBj
		jmp	loc_1F4A8
; ---------------------------------------------------------------------------

loc_1F564:				; CODE XREF: sub_1F492+CDj
		mov	dx, 3CEh
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_1F492	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F57C	proc near		; CODE XREF: seg000:085BP sub_1FEA1+2p
					; DATA XREF: ...
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
sub_1F57C	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1F585	proc far		; CODE XREF: sub_10875+8P
					; sub_20721+5Bp ...

; FUNCTION CHUNK AT 04AC SIZE 0000004B BYTES
; FUNCTION CHUNK AT 0530 SIZE 00000056 BYTES
; FUNCTION CHUNK AT 05C1 SIZE 00000040 BYTES
; FUNCTION CHUNK AT 0631 SIZE 00000048 BYTES
; FUNCTION CHUNK AT 06AB SIZE 00000035 BYTES
; FUNCTION CHUNK AT 0707 SIZE 0000003D BYTES
; FUNCTION CHUNK AT 076D SIZE 0000002A BYTES
; FUNCTION CHUNK AT 07B6 SIZE 00000095 BYTES
; FUNCTION CHUNK AT 088B SIZE 00000049 BYTES
; FUNCTION CHUNK AT 090B SIZE 0000003D BYTES
; FUNCTION CHUNK AT 0976 SIZE 00000031 BYTES
; FUNCTION CHUNK AT 09CC SIZE 000000A9 BYTES
; FUNCTION CHUNK AT 0AAE SIZE 00000046 BYTES
; FUNCTION CHUNK AT 0B28 SIZE 0000003A BYTES
; FUNCTION CHUNK AT 0B8D SIZE 00000030 BYTES
; FUNCTION CHUNK AT 0BF5 SIZE 0000001C BYTES

		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_1F592
		dec	si
		mov	ax, seg	seg008

loc_1F592:				; CODE XREF: sub_1F585+7j
		mov	di, word_2C78B
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_1F5AE
		jmp	loc_1FE9B
; ---------------------------------------------------------------------------

loc_1F5AE:				; CODE XREF: sub_1F585+24j
		cmp	dx, ss:10h
		jl	short loc_1F5B8
		jmp	loc_1FE9B
; ---------------------------------------------------------------------------

loc_1F5B8:				; CODE XREF: sub_1F585+2Ej
		mov	ax, cx
		add	ax, bp
		jg	short loc_1F5C1
		jmp	loc_1FE9B
; ---------------------------------------------------------------------------

loc_1F5C1:				; CODE XREF: sub_1F585+37j
		mov	ax, dx
		add	ax, bx
		jns	short loc_1F5CA
		jmp	loc_1FE9B
; ---------------------------------------------------------------------------

loc_1F5CA:				; CODE XREF: sub_1F585+40j
		mov	word ptr unk_54890, 0
		mov	word ptr ds:2, 0
		cmp	ax, ss:10h
		jle	short loc_1F5E7
		sub	ax, ss:10h
		sub	bx, ax
		mov	ds:2, ax

loc_1F5E7:				; CODE XREF: sub_1F585+56j
		test	dx, dx
		jns	short loc_1F5F9
		add	bx, dx
		neg	dx
		mov	word ptr unk_54890, dx
		mov	ds:2, dx
		xor	dx, dx

loc_1F5F9:				; CODE XREF: sub_1F585+64j
		cmp	bp, 8
		jle	short loc_1F63F
		mov	ax, word ptr unk_54890
		or	ax, ds:2
		jz	short loc_1F63F
		cmp	bp, 10h
		jg	short loc_1F616
		shl	word ptr unk_54890, 1
		shl	word ptr ds:2, 1
		jmp	short loc_1F63F
; ---------------------------------------------------------------------------

loc_1F616:				; CODE XREF: sub_1F585+85j
		cmp	bp, 18h
		jg	short loc_1F62F
		mov	ax, word ptr unk_54890
		shl	ax, 1
		add	word ptr unk_54890, ax
		mov	ax, ds:2
		shl	ax, 1
		add	ds:2, ax
		jmp	short loc_1F63F
; ---------------------------------------------------------------------------

loc_1F62F:				; CODE XREF: sub_1F585+94j
		shl	word ptr unk_54890, 1
		shl	word ptr unk_54890, 1
		shl	word ptr ds:2, 1
		shl	word ptr ds:2, 1

loc_1F63F:				; CODE XREF: sub_1F585+77j
					; sub_1F585+80j ...
		mov	ax, 28h	; '('
		mul	dx
		add	di, ax
		test	cx, cx
		jns	short loc_1F64D
		jmp	loc_1FA46
; ---------------------------------------------------------------------------

loc_1F64D:				; CODE XREF: sub_1F585+C3j
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jle	short loc_1F659
		jmp	loc_1FC5C
; ---------------------------------------------------------------------------

loc_1F659:				; CODE XREF: sub_1F585+CFj
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		xor	ch, ch
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_1F687
		jmp	loc_1F997
; ---------------------------------------------------------------------------

loc_1F687:				; CODE XREF: sub_1F585+FDj
		cmp	bp, 10h
		jg	short loc_1F68F
		jmp	loc_1F8C1
; ---------------------------------------------------------------------------

loc_1F68F:				; CODE XREF: sub_1F585+105j
		cmp	bp, 18h
		jg	short loc_1F697
		jmp	loc_1F7C0
; ---------------------------------------------------------------------------

loc_1F697:				; CODE XREF: sub_1F585+10Dj
		add	bp, cx
		cmp	bp, 20h	; ' '
		jg	short loc_1F6A1
		jmp	loc_1F73C
; ---------------------------------------------------------------------------

loc_1F6A1:				; CODE XREF: sub_1F585+117j
					; sub_1F585+155j
		lodsb
		shr	al, cl
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di+1], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di+2], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di+3], al
		mov	ah, [si-1]
		xor	al, al
		ror	ax, cl
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di+4], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F6A1
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F6F8
		mov	ah, 2
		call	sub_1F6F8
		mov	ah, 4
		call	sub_1F6F8
		mov	ah, 8
		call	sub_1F6F8
		jmp	loc_1FE85
sub_1F585	endp


; =============== S U B	R O U T	I N E =======================================


sub_1F6F8	proc near		; CODE XREF: sub_1F585+15Ep
					; sub_1F585+163p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1F708:				; CODE XREF: sub_1F6F8+40j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+2], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+3], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+4], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F708
		pop	di
		retn
sub_1F6F8	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F73C:				; CODE XREF: sub_1F585+119j
					; sub_1F585+1E4j
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+2], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F73C
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F787
		mov	ah, 2
		call	sub_1F787
		mov	ah, 4
		call	sub_1F787
		mov	ah, 8
		call	sub_1F787
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F787	proc near		; CODE XREF: sub_1F585+1EDp
					; sub_1F585+1F2p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1F797:				; CODE XREF: sub_1F787+35j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+2], ah
		lodsw
		ror	ax, cl
		and	es:[di+3], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F797
		pop	di
		retn
sub_1F787	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F7C0:				; CODE XREF: sub_1F585+10Fj
		add	bp, cx
		cmp	bp, 18h
		jg	short loc_1F7CA
		jmp	loc_1F851
; ---------------------------------------------------------------------------

loc_1F7CA:				; CODE XREF: sub_1F585+240j
					; sub_1F585+273j
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+2], al
		mov	ah, [si-1]
		xor	al, al
		ror	ax, cl
		out	dx, al
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F7CA
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F816
		mov	ah, 2
		call	sub_1F816
		mov	ah, 4
		call	sub_1F816
		mov	ah, 8
		call	sub_1F816
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F816	proc near		; CODE XREF: sub_1F585+27Cp
					; sub_1F585+281p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1F826:				; CODE XREF: sub_1F816+37j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+2], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+3], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F826
		pop	di
		retn
sub_1F816	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F851:				; CODE XREF: sub_1F585+242j
					; sub_1F585+2EEj
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F851
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F891
		mov	ah, 2
		call	sub_1F891
		mov	ah, 4
		call	sub_1F891
		mov	ah, 8
		call	sub_1F891
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F891	proc near		; CODE XREF: sub_1F585+2F7p
					; sub_1F585+2FCp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1F8A1:				; CODE XREF: sub_1F891+2Cj
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsw
		ror	ax, cl
		and	es:[di+2], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F8A1
		pop	di
		retn
sub_1F891	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F8C1:				; CODE XREF: sub_1F585+107j
		add	bp, cx
		cmp	bp, 10h
		jle	short loc_1F93B

loc_1F8C8:				; CODE XREF: sub_1F585+366j
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		mov	ah, [si-1]
		xor	al, al
		ror	ax, cl
		out	dx, al
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F8C8
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F909
		mov	ah, 2
		call	sub_1F909
		mov	ah, 4
		call	sub_1F909
		mov	ah, 8
		call	sub_1F909
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F909	proc near		; CODE XREF: sub_1F585+36Fp
					; sub_1F585+374p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1F919:				; CODE XREF: sub_1F909+2Ej
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+2], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F919
		pop	di
		retn
sub_1F909	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F93B:				; CODE XREF: sub_1F585+341j
					; sub_1F585+3CDj
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		lodsb
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F93B
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F970
		mov	ah, 2
		call	sub_1F970
		mov	ah, 4
		call	sub_1F970
		mov	ah, 8
		call	sub_1F970
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F970	proc near		; CODE XREF: sub_1F585+3D6p
					; sub_1F585+3DBp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1F980:				; CODE XREF: sub_1F970+23j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsw
		ror	ax, cl
		and	es:[di+1], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F980
		pop	di
		retn
sub_1F970	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F997:				; CODE XREF: sub_1F585+FFj
		add	bp, cx
		cmp	bp, 8
		jle	short loc_1F9FD

loc_1F99E:				; CODE XREF: sub_1F585+431j
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		mov	ah, [si-1]
		xor	al, al
		ror	ax, cl
		out	dx, al
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F99E
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1F9D4
		mov	ah, 2
		call	sub_1F9D4
		mov	ah, 4
		call	sub_1F9D4
		mov	ah, 8
		call	sub_1F9D4
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1F9D4	proc near		; CODE XREF: sub_1F585+43Ap
					; sub_1F585+43Fp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1F9E4:				; CODE XREF: sub_1F9D4+25j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+1], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F9E4
		pop	di
		retn
sub_1F9D4	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1F9FD:				; CODE XREF: sub_1F585+417j
					; sub_1F585+484j
		lodsb
		shr	al, cl
		out	dx, al
		or	es:[di], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1F9FD
		pop	di
		dec	dx
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FA27
		mov	ah, 2
		call	sub_1FA27
		mov	ah, 4
		call	sub_1FA27
		mov	ah, 8
		call	sub_1FA27
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FA27	proc near		; CODE XREF: sub_1F585+48Dp
					; sub_1F585+492p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1FA37:				; CODE XREF: sub_1FA27+1Bj
		lodsb
		shr	al, cl
		and	es:[di], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FA37
		pop	di
		retn
sub_1FA27	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FA46:				; CODE XREF: sub_1F585+C5j
		mov	dx, cx
		neg	dx
		dec	dx
		and	dx, 0FFF8h
		sub	bp, dx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		mov	ds:4, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	ch, 8
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_1FA7A
		jmp	loc_1FC06
; ---------------------------------------------------------------------------

loc_1FA7A:				; CODE XREF: sub_1F585+4F0j
		cmp	bp, 10h
		jg	short loc_1FA82
		jmp	loc_1FB9B
; ---------------------------------------------------------------------------

loc_1FA82:				; CODE XREF: sub_1F585+4F8j
		cmp	bp, 18h
		jg	short loc_1FA8A
		jmp	loc_1FB1B
; ---------------------------------------------------------------------------

loc_1FA8A:				; CODE XREF: sub_1F585+500j
					; sub_1F585+539j
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FA8A
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FADB
		mov	ah, 2
		call	sub_1FADB
		mov	ah, 4
		call	sub_1FADB
		mov	ah, 8
		call	sub_1FADB
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FADB	proc near		; CODE XREF: sub_1F585+541p
					; sub_1F585+546p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1FAEB:				; CODE XREF: sub_1FADB+3Cj
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+2], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+3], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FAEB
		pop	di
		retn
sub_1FADB	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FB1B:				; CODE XREF: sub_1F585+502j
					; sub_1F585+5C2j
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+1], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FB1B
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FB64
		mov	ah, 2
		call	sub_1FB64
		mov	ah, 4
		call	sub_1FB64
		mov	ah, 8
		call	sub_1FB64
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FB64	proc near		; CODE XREF: sub_1F585+5CAp
					; sub_1F585+5CFp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FB74:				; CODE XREF: sub_1FB64+33j
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+2], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FB74
		pop	di
		retn
sub_1FB64	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FB9B:				; CODE XREF: sub_1F585+4FAj
					; sub_1F585+636j
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FB9B
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FBD8
		mov	ah, 2
		call	sub_1FBD8
		mov	ah, 4
		call	sub_1FBD8
		mov	ah, 8
		call	sub_1FBD8
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FBD8	proc near		; CODE XREF: sub_1F585+63Ep
					; sub_1F585+643p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FBE8:				; CODE XREF: sub_1FBD8+2Aj
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di], ah
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di+1], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FBE8
		pop	di
		retn
sub_1FBD8	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FC06:				; CODE XREF: sub_1F585+4F2j
					; sub_1F585+695j
		add	si, ds:4
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FC06
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FC37
		mov	ah, 2
		call	sub_1FC37
		mov	ah, 4
		call	sub_1FC37
		mov	ah, 8
		call	sub_1FC37
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FC37	proc near		; CODE XREF: sub_1F585+69Dp
					; sub_1F585+6A2p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FC47:				; CODE XREF: sub_1FC37+21j
		add	si, ds:4
		lodsb
		xor	ah, ah
		ror	ax, cl
		and	es:[di], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FC47
		pop	di
		retn
sub_1FC37	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FC5C:				; CODE XREF: sub_1F585+D1j
		mov	dx, bp
		mov	bp, 140h
		sub	bp, cx
		mov	ax, bp
		add	ax, 7
		add	dx, 7
		and	dx, 0FFF8h
		and	ax, 0FFF8h
		sub	dx, ax
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		mov	ds:4, dx
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	ch, 8
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_1FCA7
		jmp	loc_1FE1D
; ---------------------------------------------------------------------------

loc_1FCA7:				; CODE XREF: sub_1F585+71Dj
		cmp	bp, 10h
		jg	short loc_1FCAF
		jmp	loc_1FDB8
; ---------------------------------------------------------------------------

loc_1FCAF:				; CODE XREF: sub_1F585+725j
		cmp	bp, 18h
		jg	short loc_1FCB7
		jmp	loc_1FD3E
; ---------------------------------------------------------------------------

loc_1FCB7:				; CODE XREF: sub_1F585+72Dj
					; sub_1F585+763j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FCB7
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FD05
		mov	ah, 2
		call	sub_1FD05
		mov	ah, 4
		call	sub_1FD05
		mov	ah, 8
		call	sub_1FD05
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FD05	proc near		; CODE XREF: sub_1F585+76Bp
					; sub_1F585+770p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		mov	bl, bh
		add	si, ds:2

loc_1FD15:				; CODE XREF: sub_1FD05+35j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+2], ah
		lodsw
		ror	ax, cl
		and	es:[di+3], ah
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FD15
		pop	di
		retn
sub_1FD05	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FD3E:				; CODE XREF: sub_1F585+72Fj
					; sub_1F585+7E2j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+1], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+2], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FD3E
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FD84
		mov	ah, 2
		call	sub_1FD84
		mov	ah, 4
		call	sub_1FD84
		mov	ah, 8
		call	sub_1FD84
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FD84	proc near		; CODE XREF: sub_1F585+7EAp
					; sub_1F585+7EFp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FD94:				; CODE XREF: sub_1FD84+30j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		and	es:[di+1], ah
		lodsw
		ror	ax, cl
		and	es:[di+2], ah
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FD94
		pop	di
		retn
sub_1FD84	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FDB8:				; CODE XREF: sub_1F585+727j
					; sub_1F585+850j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax
		or	es:[di+1], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FDB8
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FDF2
		mov	ah, 2
		call	sub_1FDF2
		mov	ah, 4
		call	sub_1FDF2
		mov	ah, 8
		call	sub_1FDF2
		jmp	loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FDF2	proc near		; CODE XREF: sub_1F585+858p
					; sub_1F585+85Dp ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FE02:				; CODE XREF: sub_1FDF2+27j
		mov	al, [si]
		shr	al, cl
		and	es:[di], al
		lodsw
		ror	ax, cl
		and	es:[di+1], ah
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FE02
		pop	di
		retn
sub_1FDF2	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FE1D:				; CODE XREF: sub_1F585+71Fj
					; sub_1F585+8ACj
		lodsb
		mov	ah, al
		shr	ah, cl
		mov	al, ch
		out	dx, ax
		or	es:[di], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FE1D
		pop	di
		call	sub_1FE70
		mov	ah, 1
		call	sub_1FE4D
		mov	ah, 2
		call	sub_1FE4D
		mov	ah, 4
		call	sub_1FE4D
		mov	ah, 8
		call	sub_1FE4D
		jmp	short loc_1FE85
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FE4D	proc near		; CODE XREF: sub_1F585+8B4p
					; sub_1F585+8B9p ...
		mov	dx, 3C4h
		mov	al, 2
		out	dx, ax		; EGA: sequencer address reg
					; sequencer reset.
					; Bits of data 0-1 indicate asynchronous/synchronous reset.
		mov	dx, 3CEh
		push	di
		add	si, ds:2
		mov	bl, bh

loc_1FE5D:				; CODE XREF: sub_1FE4D+1Fj
		lodsb
		shr	al, cl
		and	es:[di], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_1FE5D
		pop	di
		retn
sub_1FE4D	endp


; =============== S U B	R O U T	I N E =======================================


sub_1FE70	proc near		; CODE XREF: sub_1F585+159p
					; sub_1F585+1E8p ...
		mov	ax, 1
		out	dx, ax
		mov	ax, 1003h
		out	dx, ax
		mov	ax, 805h
		out	dx, ax
		mov	ax, 7
		out	dx, ax
		mov	ax, 0FF08h
		out	dx, ax
		retn
sub_1FE70	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1F585

loc_1FE85:				; CODE XREF: sub_1F585+170j
					; sub_1F585+1FFj ...
		mov	dx, 3CEh
		mov	ax, 3
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; data rotate and function select for write mode 00. Bits:
					; 0-2: set rotate count	for write mode 00
					; 3-4: fn for write modes 00 and 02
					;      00=no change; 01=AND; 10=OR; 11=XOR
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, 0F07h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	dx, 3C4h
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register

loc_1FE9B:				; CODE XREF: sub_1F585+26j
					; sub_1F585+30j ...
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retf
; END OF FUNCTION CHUNK	FOR sub_1F585

; =============== S U B	R O U T	I N E =======================================


sub_1FEA1	proc far		; CODE XREF: seg000:089FP
					; DATA XREF: seg000:off_108A5o	...
		push	si
		push	cs
		call	sub_1F57C
		pop	si
		mov	ax, [si+12h]
		mov	bx, [si+16h]
		mov	di, [si+0Ch]
		mov	cx, seg	seg007
		test	di, 1
		jz	short loc_1FEBD
		dec	di
		mov	cx, seg	seg008

loc_1FEBD:				; CODE XREF: sub_1FEA1+16j
		push	es
		mov	es, cx
		assume es:seg008
		sub	ax, es:[di]
		sub	bx, es:[di+2]
		pop	es
		assume es:nothing
		call	sub_1FEDE
		add	ax, 10h
		call	sub_1FEDE
		add	bx, 10h
		call	sub_1FEDE
		sub	ax, 10h
		call	sub_1FEDE
		retf
sub_1FEA1	endp


; =============== S U B	R O U T	I N E =======================================


sub_1FEDE	proc near		; CODE XREF: sub_1FEA1+27p
					; sub_1FEA1+2Dp ...
		push	si
		push	ax
		push	bx
		mov	si, 0
		add	si, word_316BE
		mov	cx, ax
		and	cx, 0FFF0h
		shr	cx, 1
		cmp	cx, 0A0h ; '
		jnb	short loc_1FF3D
		mov	dx, bx
		add	dx, word_316C6
		and	dx, 0FFF0h
		sub	dx, word_316C6
		add	bx, word_316C6
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FEh
		add	si, ax
		mov	ax, 28h	; '('
		push	dx
		mul	bx
		pop	dx
		add	si, ax
		push	es
		mov	ax, seg	seg000
		mov	es, ax
		assume es:seg000
		mov	ax, [si]
		mov	es:word_1EDD1, ax
		pop	es
		assume es:nothing
		mov	ax, 1
		mov	bx, 1
		mov	si, 0EDD1h
		call	sub_1EBD0

loc_1FF3D:				; CODE XREF: sub_1FEDE+15j
		pop	bx
		pop	ax
		pop	si
		retn
sub_1FEDE	endp


; =============== S U B	R O U T	I N E =======================================


sub_1FF41	proc far		; CODE XREF: seg000:08C1P
					; DATA XREF: seg000:off_108C7o	...
		mov	word ptr [si+4], 853h

loc_1FF46:				; CODE XREF: seg000:08E3P
					; DATA XREF: seg000:off_108E9o	...
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]

loc_1FF4F:				; CODE XREF: seg000:0905P
					; DATA XREF: seg000:off_1090Bo	...
		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_1FF5C
		dec	si
		mov	ax, seg	seg008

loc_1FF5C:				; CODE XREF: sub_1FF41+15j
		mov	di, word_2C78B
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_1FF78
		jmp	loc_203D4
; ---------------------------------------------------------------------------

loc_1FF78:				; CODE XREF: sub_1FF41+32j
		cmp	dx, ss:10h
		jl	short loc_1FF82
		jmp	loc_203D4
; ---------------------------------------------------------------------------

loc_1FF82:				; CODE XREF: sub_1FF41+3Cj
		mov	ax, cx
		add	ax, bp
		jg	short loc_1FF8B
		jmp	loc_203D4
; ---------------------------------------------------------------------------

loc_1FF8B:				; CODE XREF: sub_1FF41+45j
		mov	ax, dx
		add	ax, bx
		jns	short loc_1FF94
		jmp	loc_203D4
; ---------------------------------------------------------------------------

loc_1FF94:				; CODE XREF: sub_1FF41+4Ej
		mov	word ptr unk_54890, 0
		mov	word ptr ds:2, 0
		cmp	ax, ss:10h
		jle	short loc_1FFB1
		sub	ax, ss:10h
		sub	bx, ax
		mov	ds:2, ax

loc_1FFB1:				; CODE XREF: sub_1FF41+64j
		test	dx, dx
		jns	short loc_1FFC3
		add	bx, dx
		neg	dx
		mov	word ptr unk_54890, dx
		mov	ds:2, dx
		xor	dx, dx

loc_1FFC3:				; CODE XREF: sub_1FF41+72j
		cmp	bp, 8
		jle	short loc_20009
		mov	ax, word ptr unk_54890
		or	ax, ds:2
		jz	short loc_20009
		cmp	bp, 10h
		jg	short loc_1FFE0
		shl	word ptr unk_54890, 1
		shl	word ptr ds:2, 1
		jmp	short loc_20009
; ---------------------------------------------------------------------------

loc_1FFE0:				; CODE XREF: sub_1FF41+93j
		cmp	bp, 18h
		jg	short loc_1FFF9
		mov	ax, word ptr unk_54890
		shl	ax, 1
		add	word ptr unk_54890, ax
		mov	ax, ds:2
		shl	ax, 1
		add	ds:2, ax
		jmp	short loc_20009
; ---------------------------------------------------------------------------

loc_1FFF9:				; CODE XREF: sub_1FF41+A2j
		shl	word ptr unk_54890, 1
		shl	word ptr unk_54890, 1
		shl	word ptr ds:2, 1
		shl	word ptr ds:2, 1

loc_20009:				; CODE XREF: sub_1FF41+85j
					; sub_1FF41+8Ej ...
		mov	ax, 28h	; '('
		mul	dx
		add	di, ax
		test	cx, cx
		jns	short loc_20017
		jmp	loc_201E0
; ---------------------------------------------------------------------------

loc_20017:				; CODE XREF: sub_1FF41+D1j
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jle	short loc_20023
		jmp	loc_202CE
; ---------------------------------------------------------------------------

loc_20023:				; CODE XREF: sub_1FF41+DDj
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	ch, 8
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_20051
		jmp	loc_201A2
; ---------------------------------------------------------------------------

loc_20051:				; CODE XREF: sub_1FF41+10Bj
		cmp	bp, 10h
		jg	short loc_20059
		jmp	loc_2014F
; ---------------------------------------------------------------------------

loc_20059:				; CODE XREF: sub_1FF41+113j
		cmp	bp, 18h
		jg	short loc_20061
		jmp	loc_200E4
; ---------------------------------------------------------------------------

loc_20061:				; CODE XREF: sub_1FF41+11Bj
		add	bp, cx
		cmp	bp, 20h	; ' '
		jle	short loc_200AD

loc_20068:				; CODE XREF: sub_1FF41+166j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+4], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20068
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_200AD:				; CODE XREF: sub_1FF41+125j
					; sub_1FF41+19Dj
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_200AD
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_200E4:				; CODE XREF: sub_1FF41+11Dj
		add	bp, cx
		cmp	bp, 18h
		jle	short loc_20124

loc_200EB:				; CODE XREF: sub_1FF41+1DDj
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_200EB
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_20124:				; CODE XREF: sub_1FF41+1A8j
					; sub_1FF41+208j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20124
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_2014F:				; CODE XREF: sub_1FF41+115j
		add	bp, cx
		cmp	bp, 10h
		jle	short loc_20183

loc_20156:				; CODE XREF: sub_1FF41+23Cj
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20156
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_20183:				; CODE XREF: sub_1FF41+213j
					; sub_1FF41+25Bj
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20183
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_201A2:				; CODE XREF: sub_1FF41+10Dj
		add	bp, cx
		cmp	bp, 8
		jle	short loc_201CA

loc_201A9:				; CODE XREF: sub_1FF41+283j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_201A9
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_201CA:				; CODE XREF: sub_1FF41+266j
					; sub_1FF41+299j
		lodsb
		mov	ah, al
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_201CA
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_201E0:				; CODE XREF: sub_1FF41+D3j
		mov	dx, cx
		neg	dx
		dec	dx
		and	dx, 0FFF8h
		sub	bp, dx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		mov	ds:4, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	ch, 8
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_20218
		jmp	loc_202B4
; ---------------------------------------------------------------------------

loc_20218:				; CODE XREF: sub_1FF41+2D2j
		cmp	bp, 10h
		jle	short loc_2028E
		cmp	bp, 18h
		jle	short loc_2025C

loc_20222:				; CODE XREF: sub_1FF41+315j
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20222
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_2025C:				; CODE XREF: sub_1FF41+2DFj
					; sub_1FF41+347j
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_2025C
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_2028E:				; CODE XREF: sub_1FF41+2DAj
					; sub_1FF41+36Dj
		add	si, ds:4
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_2028E
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_202B4:				; CODE XREF: sub_1FF41+2D4j
					; sub_1FF41+387j
		add	si, ds:4
		lodsb
		xor	ah, ah
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_202B4
		pop	di
		jmp	loc_203C6
; ---------------------------------------------------------------------------

loc_202CE:				; CODE XREF: sub_1FF41+DFj
		mov	dx, bp
		mov	bp, 140h
		sub	bp, cx
		mov	ax, bp
		add	ax, 7
		add	dx, 7
		and	dx, 0FFF8h
		and	ax, 0FFF8h
		sub	dx, ax
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		mov	ds:4, dx
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 7
		mov	ax, 0A000h
		mov	es, ax
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	di
		mov	bh, bl
		mov	ch, 8
		add	si, word ptr unk_54890
		cmp	bp, 8
		jg	short loc_2031D
		jmp	loc_203AD
; ---------------------------------------------------------------------------

loc_2031D:				; CODE XREF: sub_1FF41+3D7j
		cmp	bp, 10h
		jle	short loc_2038B
		cmp	bp, 18h
		jle	short loc_2035D

loc_20327:				; CODE XREF: sub_1FF41+417j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+3], al
		add	di, 28h	; '('
		dec	bl
		jns	short loc_20327
		pop	di
		jmp	short loc_203C6
; ---------------------------------------------------------------------------

loc_2035D:				; CODE XREF: sub_1FF41+3E4j
					; sub_1FF41+445j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsb
		mov	ah, [si]
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+2], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_2035D
		pop	di
		jmp	short loc_203C6
; ---------------------------------------------------------------------------

loc_2038B:				; CODE XREF: sub_1FF41+3DFj
					; sub_1FF41+467j
		mov	ah, [si]
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		lodsw
		ror	ax, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di+1], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_2038B
		pop	di
		jmp	short loc_203C6
; ---------------------------------------------------------------------------

loc_203AD:				; CODE XREF: sub_1FF41+3D9j
					; sub_1FF41+480j
		lodsb
		mov	ah, al
		shr	ah, cl
		mov	al, ch
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		or	es:[di], al
		add	si, ds:4
		add	di, 28h	; '('
		dec	bl
		jns	short loc_203AD
		pop	di
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_203C6:				; CODE XREF: sub_1FF41+169j
					; sub_1FF41+1A0j ...
		mov	dx, 3CEh
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		dec	al
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register

loc_203D4:				; CODE XREF: sub_1FF41+34j
					; sub_1FF41+3Ej ...
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retf
sub_1FF41	endp


; =============== S U B	R O U T	I N E =======================================


sub_203DA	proc far		; CODE XREF: seg000:0927P
					; DATA XREF: seg000:off_1092Do	...
		mov	bx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
		sub	bx, [si]
		cmp	bx, 140h
		jb	short loc_203EE
		jmp	locret_20481
; ---------------------------------------------------------------------------

loc_203EE:				; CODE XREF: sub_203DA+Fj
		sub	dx, [si+2]
		cmp	dx, 0C0h ; '
		jl	short loc_203FA
		jmp	locret_20481
; ---------------------------------------------------------------------------

loc_203FA:				; CODE XREF: sub_203DA+1Bj
		mov	cx, [si+4]
		mov	ax, bx
		and	bx, 7
		xor	ax, bx
		shl	bx, 1
		mov	si, [bx+si+6]
		test	dx, dx
		jns	short loc_20417
		sub	si, dx
		sub	si, dx
		add	cx, dx
		jle	short locret_20481
		xor	dx, dx

loc_20417:				; CODE XREF: sub_203DA+31j
		mov	bx, dx
		add	bx, cx
		sub	bx, 0C0h ; '
		jle	short loc_20425
		sub	cx, bx
		jle	short locret_20481

loc_20425:				; CODE XREF: sub_203DA+45j
		mov	bx, ax
		mov	ax, 28h	; '('
		mul	dx
		mov	di, word_2C78B
		add	di, ax
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		add	di, bx
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		cmp	bx, 138h
		jge	short loc_20466

loc_20454:				; CODE XREF: sub_203DA+88j
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di], al
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di+1], al
		add	di, 28h	; '('
		loop	loc_20454
		jmp	short loc_20471
; ---------------------------------------------------------------------------

loc_20466:				; CODE XREF: sub_203DA+78j
					; sub_203DA+95j
		lodsb
		out	dx, al		; EGA port: graphics controller	data register
		or	es:[di], al
		inc	si
		add	di, 28h	; '('
		loop	loc_20466

loc_20471:				; CODE XREF: sub_203DA+8Aj
		dec	dx
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		dec	al
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_20481:				; CODE XREF: sub_203DA+11j
					; sub_203DA+1Dj ...
		retf
sub_203DA	endp


; =============== S U B	R O U T	I N E =======================================


sub_20482	proc far		; CODE XREF: sub_10985+8P
					; DATA XREF: seg000:off_10993o	...
		mov	dx, 3CEh
		mov	ax, 105h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	di, word_2C78B
		mov	si, 0
		add	si, word_316BE
		mov	dx, word_316C6
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	cx, 10h
		sub	cx, dx
		mov	bl, 14h

loc_204A4:				; CODE XREF: sub_20482+46j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		add	si, dx
		add	si, dx
		push	ds
		mov	ax, 0A400h
		mov	ds, ax
		assume ds:nothing
		push	di
		push	cx

loc_204B6:				; CODE XREF: sub_20482+39j
		movsb
		movsb
		add	di, 26h	; '&'
		loop	loc_204B6
		mov	bp, di
		pop	cx
		pop	di
		add	di, 2
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_204A4
		mov	di, bp
		sub	di, 26h	; '&'
		mov	bx, 0B14h
		mov	bp, 26h	; '&'

loc_204D5:				; CODE XREF: sub_20482+A9j
					; sub_20482+B3j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		mov	cx, ds
		mov	ax, 0A400h
		mov	ds, ax
		assume ds:nothing
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		movsb
		movsb
		add	di, bp
		sub	di, 27Eh
		mov	ds, cx
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_204D5
		mov	bl, 14h
		add	di, 258h
		dec	bh
		jnz	short loc_204D5
		test	dx, dx
		jz	short loc_2055C
		mov	bl, 14h

loc_2053D:				; CODE XREF: sub_20482+D8j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		push	ds
		mov	ax, 0A400h
		mov	ds, ax
		assume ds:nothing
		push	di
		mov	cx, dx

loc_2054C:				; CODE XREF: sub_20482+CEj
		movsb
		movsb
		add	di, bp
		loop	loc_2054C
		pop	di
		add	di, 2
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_2053D

loc_2055C:				; CODE XREF: sub_20482+B7j
		mov	dx, 3CEh
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_20482	endp


; =============== S U B	R O U T	I N E =======================================


sub_20568	proc far		; CODE XREF: sub_109A7+8P
					; DATA XREF: seg000:off_109B5o	...
		push	cs
		call	near ptr sub_2058D
		mov	ax, word_2C78B
		mov	bx, word_2C789
		mov	word_2C78B, bx
		mov	word_2C789, ax
		push	cs
		call	near ptr sub_2058D
		mov	ax, word_2C78B
		mov	bx, word_2C789
		mov	word_2C78B, bx
		mov	word_2C789, ax
		retf
sub_20568	endp


; =============== S U B	R O U T	I N E =======================================


sub_2058D	proc far		; CODE XREF: seg000:09D1P sub_109EB+8P ...
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	di, word_2C78B
		mov	cx, 1F40h
		rep stosb
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		pop	es
		assume es:nothing
		retf
sub_2058D	endp


; =============== S U B	R O U T	I N E =======================================


sub_205A9	proc far		; CODE XREF: sub_10A0D+8P
					; DATA XREF: seg000:off_10A1Bo	...
		push	cs
		call	near ptr sub_2058D
		retf
sub_205A9	endp


; =============== S U B	R O U T	I N E =======================================


sub_205AE	proc far		; CODE XREF: sub_10A2F+8P sub_10A51+8P ...
		call	sub_10EF1

loc_205B3:				; CODE XREF: sub_205AE+Aj
		cmp	word_2B576, 0
		jz	short loc_205B3
		mov	word_2B576, 0
		mov	bx, word_2C78B
		mov	ax, word_2C789
		mov	word_2C78B, ax
		mov	word_2C789, bx
		mov	dx, word_2C787
		add	dl, 6

loc_205D5:				; CODE XREF: sub_205AE+2Aj
		in	al, dx		; DMA controller, 8237A-5.
					; channel 3 current address
		test	al, 8
		jnz	short loc_205D5
		sub	dl, 6
		cli
		mov	ah, bh
		mov	al, 0Ch
		out	dx, ax
		sti
		add	dl, 6

loc_205E7:				; CODE XREF: sub_205AE+3Cj
		in	al, dx		; DMA controller, 8237A-5.
					; channel 3 current address
		test	al, 8
		jz	short loc_205E7
		retf
sub_205AE	endp


; =============== S U B	R O U T	I N E =======================================


sub_205ED	proc far		; CODE XREF: sub_10A73+8P
					; DATA XREF: seg000:off_10A81o	...
		push	ds
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	si, 0
		mov	di, word_2C789
		add	di, 1E00h
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 140h
		call	sub_20627
		pop	ds
		assume ds:dseg
		push	ds
		mov	si, 0
		mov	di, word_2C78B
		add	di, 1E00h
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 140h
		call	sub_20627
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retf
sub_205ED	endp


; =============== S U B	R O U T	I N E =======================================


sub_20627	proc near		; CODE XREF: sub_205ED+19p
					; sub_205ED+31p
		mov	dx, 3C4h
		push	cx
		push	di
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		rep movsb
		pop	di
		pop	cx
		push	cx
		push	di
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		rep movsb
		pop	di
		pop	cx
		push	cx
		push	di
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		rep movsb
		pop	di
		pop	cx
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		rep movsb
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		retn
sub_20627	endp


; =============== S U B	R O U T	I N E =======================================


sub_20653	proc far		; CODE XREF: sub_10A95+8P
					; DATA XREF: seg000:off_10AA3o	...
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		mov	si, 9C80h
		mov	cx, 50h	; 'P'

loc_2066C:				; CODE XREF: sub_20653:loc_206F1j
		lodsw
		test	ax, ax
		js	short loc_206EA
		mov	bx, ax
		lodsw
		mov	dx, ax
		lodsw
		add	bx, ax
		lodsw
		add	dx, ax
		cmp	bx, 13Ch
		jnb	short loc_206E3
		cmp	dx, 0BCh ; '
		jnb	short loc_206E3
		mov	[si-8],	bx
		mov	[si-6],	dx
		push	bx
		push	dx
		push	cx
		mov	ax, bx
		mov	bx, dx
		call	sub_10EDD
		jz	short loc_206B3
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ax, es:word_2C2D8
		push	si
		call	sub_10EE1
		pop	si
		pop	es
		assume es:nothing
		pop	cx
		add	sp, 4
		jmp	short loc_206E3
; ---------------------------------------------------------------------------

loc_206B3:				; CODE XREF: sub_20653+47j
		pop	cx
		pop	dx
		mov	di, word_2C78B
		mov	ax, 28h	; '('
		mul	dx
		add	di, ax
		pop	ax
		push	cx
		mov	cx, ax
		and	cx, 7
		xor	ax, cx
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	di, ax
		mov	al, 0C0h ; '
		shr	al, cl
		pop	cx
		mov	dx, 3CFh
		out	dx, al		; EGA port: graphics controller	data register
		and	es:[di], al
		and	es:[di+28h], al
		jmp	short loc_206ED
; ---------------------------------------------------------------------------

loc_206E3:				; CODE XREF: sub_20653+2Dj
					; sub_20653+33j ...
		mov	word ptr [si-8], 0FFFFh
		jmp	short loc_206ED
; ---------------------------------------------------------------------------

loc_206EA:				; CODE XREF: sub_20653+1Cj
		add	si, 6

loc_206ED:				; CODE XREF: sub_20653+8Ej
					; sub_20653+95j
		loop	loc_206F1
		jmp	short loc_206F4
; ---------------------------------------------------------------------------

loc_206F1:				; CODE XREF: sub_20653:loc_206EDj
		jmp	loc_2066C
; ---------------------------------------------------------------------------

loc_206F4:				; CODE XREF: sub_20653+9Cj
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	dx, 3CEh
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		retf
sub_20653	endp


; =============== S U B	R O U T	I N E =======================================


sub_20708	proc far		; CODE XREF: seg000:0ABFP
					; DATA XREF: seg000:off_10AC5o	...
		mov	ax, [si+34h]
		mov	word_3822E, ax
		mov	ax, [si+12h]
		mov	word_38212, ax
		mov	ax, [si+16h]
		mov	word_38216, ax
		push	si
		push	cs
		call	near ptr sub_20721
		pop	si
		retf
sub_20708	endp


; =============== S U B	R O U T	I N E =======================================


sub_20721	proc far		; CODE XREF: sub_20708+14p
		add	word_38212, 4
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_38212
		mov	word_2B7EA, ax
		mov	ax, word_38216
		mov	word_2B7EC, ax
		mov	ax, word_3822E
		mov	word_2B7F0, ax
		mov	ax, [si+1Ah]
		mov	word_2B7EE, ax
		cmp	word_38212, 0FFF0h
		jg	short loc_20756
		jmp	loc_20815
; ---------------------------------------------------------------------------

loc_20756:				; CODE XREF: sub_20721+30j
		cmp	word_38212, 140h
		jl	short loc_20761
		jmp	loc_20815
; ---------------------------------------------------------------------------

loc_20761:				; CODE XREF: sub_20721+3Bj
		cmp	word_2B7EE, 41h	; 'A'
		jl	short loc_2078B
		mov	bx, word_3822E
		shl	bx, 1
		mov	si, [bx+32C2h]
		mov	cx, word_38212
		mov	dx, word_38216
		inc	dx
		push	cs
		call	near ptr sub_1F585
		mov	ax, word_2B7EA
		mov	word_38212, ax
		mov	ax, word_2B7EC
		mov	word_38216, ax

loc_2078B:				; CODE XREF: sub_20721+45j
		mov	ax, word_2B7EE
		sub	word_38216, ax
		mov	si, 32C8h
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	si, [bx+32C8h]
		mov	cx, word_38212
		mov	dx, word_38216
		push	cs
		call	near ptr sub_1F585
		cmp	word_2B7EC, 0
		js	short loc_20815
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, 28h	; '('
		mul	word_2B7EC
		mov	di, word_2C78B
		mov	bp, di
		add	di, ax
		mov	ax, word_2B7EA
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		add	di, ax
		mov	dx, word_2B7EA
		and	dx, 0FFF8h
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	cx, word_2B7EA
		and	cx, 7
		mov	ah, [bx+33BEh]
		shr	ah, cl
		call	sub_20829
		inc	di
		add	dx, 8
		mov	ax, [bx+33BEh]
		ror	ax, cl
		call	sub_20829
		inc	di
		add	dx, 8
		xor	ah, ah
		mov	al, [bx+33BFh]
		ror	ax, cl
		call	sub_20829

loc_20815:				; CODE XREF: sub_20721+32j
					; sub_20721+3Dj ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	dx, 3CEh
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		retf
sub_20721	endp


; =============== S U B	R O U T	I N E =======================================


sub_20829	proc near		; CODE XREF: sub_20721+D5p
					; sub_20721+E2p ...
		cmp	dx, 140h
		jnb	short locret_20853
		test	ah, ah
		jz	short locret_20853
		push	bx
		push	cx
		push	di
		push	dx
		mov	al, 8
		mov	dx, 3CEh
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	cx, word_2B7EE
		jcxz	short loc_2084F

loc_20843:				; CODE XREF: sub_20829+24j
		and	es:[di], al
		sub	di, 28h	; '('
		cmp	di, bp
		jl	short loc_2084F
		loop	loc_20843

loc_2084F:				; CODE XREF: sub_20829+18j
					; sub_20829+22j
		pop	dx
		pop	di
		pop	cx
		pop	bx

locret_20853:				; CODE XREF: sub_20829+4j sub_20829+8j
		retn
sub_20829	endp


; =============== S U B	R O U T	I N E =======================================


sub_20854	proc far		; CODE XREF: sub_10E4D+8P
					; DATA XREF: seg000:off_10E5Bo	...
		mov	ax, word_31682
		mov	dx, word_31684
		sub	ax, word_31686
		sbb	dx, word_31688
		js	short loc_208CF
		jnz	short loc_2086B
		test	ax, ax
		jz	short locret_208CE

loc_2086B:				; CODE XREF: sub_20854+11j
		test	dx, dx
		jnz	short loc_20879
		cmp	ax, 0C8h ; '
		jl	short loc_20894
		cmp	ax, 7D0h
		jl	short loc_20887

loc_20879:				; CODE XREF: sub_20854+19j
		mov	bx, 921Fh
		mov	di, 1E06h
		add	word_31686, 3E8h
		jmp	short loc_2089F
; ---------------------------------------------------------------------------

loc_20887:				; CODE XREF: sub_20854+23j
		mov	bx, 9220h
		mov	di, 1E07h
		add	word_31686, 64h	; 'd'
		jmp	short loc_2089F
; ---------------------------------------------------------------------------

loc_20894:				; CODE XREF: sub_20854+1Ej
		mov	bx, 9221h
		mov	di, 1E08h
		add	word_31686, 0Ah

loc_2089F:				; CODE XREF: sub_20854+31j
					; sub_20854+3Ej
		adc	word_31688, 0
		cmp	word_313AA, 0
		jz	short loc_208AE
		add	di, 1Bh

loc_208AE:				; CODE XREF: sub_20854+55j
		mov	si, 500h

loc_208B1:				; CODE XREF: sub_20854+78j
		inc	byte ptr [bx]
		cmp	byte ptr [bx], 0Ah
		jl	short loc_208BB
		mov	byte ptr [bx], 0

loc_208BB:				; CODE XREF: sub_20854+62j
		mov	al, [bx]
		push	cs
		call	near ptr sub_20919
		cmp	byte ptr [bx], 0
		jnz	short locret_208CE
		dec	di
		dec	bx
		cmp	bx, 921Ch
		jge	short loc_208B1

locret_208CE:				; CODE XREF: sub_20854+15j
					; sub_20854+70j
		retf
; ---------------------------------------------------------------------------

loc_208CF:				; CODE XREF: sub_20854+Fj
		mov	ax, word_31686
		mov	word_31682, ax
		mov	ax, word_31688
		mov	word_31684, ax
		retf
sub_20854	endp


; =============== S U B	R O U T	I N E =======================================


sub_208DC	proc far		; CODE XREF: sub_10E6F+8P
					; DATA XREF: seg000:off_10E7Do	...
		mov	di, 1E03h
		cmp	word_313AA, 0
		jz	short loc_208E9
		mov	di, 1E1Eh

loc_208E9:				; CODE XREF: sub_208DC+8j
		mov	si, 500h
		mov	cx, 7

loc_208EF:				; CODE XREF: sub_208DC+1Aj
		xor	al, al
		push	cs
		call	near ptr sub_20919
		inc	di
		loop	loc_208EF
		retf
sub_208DC	endp


; =============== S U B	R O U T	I N E =======================================


sub_208F9	proc far		; CODE XREF: sub_10E91+8P
					; DATA XREF: seg000:off_10E9Fo	...
		mov	ax, word_316BA
		cmp	ax, 9
		jle	short loc_20904
		mov	ax, 9

loc_20904:				; CODE XREF: sub_208F9+6j
		mov	si, 640h
		mov	di, 1E39h
		cmp	word_313AA, 0
		jz	short loc_20914
		mov	di, 1E3Eh

loc_20914:				; CODE XREF: sub_208F9+16j
		push	cs
		call	near ptr sub_20919
		retf
sub_208F9	endp


; =============== S U B	R O U T	I N E =======================================


sub_20919	proc far		; CODE XREF: sub_20854+6Ap
					; sub_208DC+16p ...
		push	si
		push	cx
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3C4h
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_2095F
		mov	ax, 202h
		out	dx, ax
		call	sub_2095F
		mov	ax, 402h
		out	dx, ax
		call	sub_2095F
		mov	ax, 802h
		out	dx, ax
		call	sub_2095F
		mov	ax, 0F02h
		out	dx, ax
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		pop	cx
		pop	si
		retf
sub_20919	endp


; =============== S U B	R O U T	I N E =======================================


sub_2095F	proc near		; CODE XREF: sub_20919+22p
					; sub_20919+29p ...
		push	di
		mov	cx, 8

loc_20963:				; CODE XREF: sub_2095F+10j
		lodsb
		mov	es:[di], al
		mov	es:[di+2000h], al
		add	di, 28h	; '('
		loop	loc_20963
		pop	di
		retn
sub_2095F	endp


; =============== S U B	R O U T	I N E =======================================


sub_20973	proc far		; CODE XREF: seg000:0AE1P sub_209E9+Ep
					; DATA XREF: ...
		push	si
		push	ax
		push	cs
		call	near ptr sub_2098C
		pop	ax
		pop	si
		xor	word_2C78B, 2000h
		push	cs
		call	near ptr sub_2098C
		xor	word_2C78B, 2000h
		retf
sub_20973	endp


; =============== S U B	R O U T	I N E =======================================


sub_2098C	proc far		; CODE XREF: sub_10AFB+8P sub_20973+3p ...
		mov	ax, 28h	; '('
		mul	word_2BC82
		mov	di, ax
		push	word ptr [si+14h]
		push	si
		mov	byte ptr [si+14h], 0
		push	cs
		call	near ptr sub_20A2E
		pop	si
		pop	word ptr [si+14h]
		retf
sub_2098C	endp


; =============== S U B	R O U T	I N E =======================================


sub_209A6	proc far		; CODE XREF: sub_1577D-4C58P
					; DATA XREF: seg000:off_10B2Bo	...
		mov	di, 1AF1h
		mov	word_38212, ax
		mov	word_38214, dx
		mov	bx, 3756h
		mov	si, 500h

loc_209B6:				; CODE XREF: sub_209A6+40j
		cmp	word ptr [bx], 0
		jz	short locret_209E8
		xor	dx, dx

loc_209BD:				; CODE XREF: sub_209A6+27j
		mov	ax, [bx]
		sub	word_38212, ax
		mov	ax, [bx+2]
		sbb	word_38214, ax
		js	short loc_209CF
		inc	dx
		jmp	short loc_209BD
; ---------------------------------------------------------------------------

loc_209CF:				; CODE XREF: sub_209A6+24j
		mov	ax, [bx]
		add	word_38212, ax
		mov	ax, [bx+2]
		adc	word_38214, ax
		add	bx, 4
		mov	al, dl
		push	cs
		call	near ptr sub_20919
		inc	di
		jmp	short loc_209B6
; ---------------------------------------------------------------------------

locret_209E8:				; CODE XREF: sub_209A6+13j
		retf
sub_209A6	endp


; =============== S U B	R O U T	I N E =======================================


sub_209E9	proc far		; CODE XREF: sub_10B3F+8P
					; DATA XREF: seg000:off_10B4Do	...
		push	cs
		call	near ptr sub_2058D
		mov	word_2BC82, 0Ch
		mov	si, 352Bh
		push	cs
		call	near ptr sub_20973
		mov	si, 358Fh
		mov	di, 5F4h
		mov	cx, 0Ah

loc_20A03:				; CODE XREF: sub_209E9+2Bj
		push	si
		push	di
		push	cx
		push	cs
		call	near ptr sub_20A1D
		pop	cx
		pop	di
		pop	si
		add	si, 0Fh
		add	di, 280h
		loop	loc_20A03
		push	cs
		call	near ptr sub_1F492
		jmp	near ptr sub_205AE
sub_209E9	endp


; =============== S U B	R O U T	I N E =======================================


sub_20A1D	proc far		; CODE XREF: sub_209E9+1Ep
		push	word ptr [si+0Fh]
		push	si
		mov	byte ptr [si+0Fh], 0
		push	cs
		call	near ptr sub_20A3C
		pop	si
		pop	word ptr [si+0Fh]
		retf
sub_20A1D	endp


; =============== S U B	R O U T	I N E =======================================


sub_20A2E	proc far		; CODE XREF: seg000:0B69P
					; sub_2098C+12p
					; DATA XREF: ...
		mov	bp, 780h
		mov	cx, 16h
		push	cs
		call	near ptr sub_20A47
		retf
sub_20A2E	endp


; =============== S U B	R O U T	I N E =======================================


sub_20A39	proc near		; CODE XREF: sub_10B83+8P
					; DATA XREF: seg000:off_10B91o	...
		mov	di, 1CD6h
sub_20A39	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_20A3C	proc far		; CODE XREF: sub_20A1D+9p
		mov	bp, 2300h
		mov	cx, 0Eh
		push	cs
		call	near ptr sub_20A47
		retf
sub_20A3C	endp


; =============== S U B	R O U T	I N E =======================================


sub_20A47	proc far		; CODE XREF: sub_20A2E+7p sub_20A3C+7p ...
		lodsb
		test	al, al
		jz	short locret_20A5B
		xchg	si, bp
		push	si
		push	cs
		call	near ptr sub_20A5C
		pop	si
		xchg	si, bp
		add	di, 2
		jmp	short near ptr sub_20A47
; ---------------------------------------------------------------------------

locret_20A5B:				; CODE XREF: sub_20A47+3j
		retf
sub_20A47	endp


; =============== S U B	R O U T	I N E =======================================


sub_20A5C	proc far		; CODE XREF: sub_20A47+9p
		push	di
		push	cx
		push	di
		mov	byte_2B922, al
		mov	di, 33CAh
		mov	cx, 33F2h
		sub	cx, 33CAh
		inc	cx
		repne scasb
		mov	ax, di
		sub	ax, 33CBh
		pop	di
		cmp	ax, 28h	; '('
		jz	short loc_20ABD
		add	di, word_2C78B
		pop	cx
		mul	cx
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	cx
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3C4h
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_20AC0
		mov	ax, 202h
		out	dx, ax
		call	sub_20AC0
		mov	ax, 402h
		out	dx, ax
		call	sub_20AC0
		mov	ax, 802h
		out	dx, ax
		call	sub_20AC0
		mov	ax, 0F02h
		out	dx, ax
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

loc_20ABD:				; CODE XREF: sub_20A5C+1Cj
		pop	cx
		pop	di
		retf
sub_20A5C	endp


; =============== S U B	R O U T	I N E =======================================


sub_20AC0	proc near		; CODE XREF: sub_20A5C+40p
					; sub_20A5C+47p ...
		push	di
		push	cx

loc_20AC2:				; CODE XREF: sub_20AC0+Bj
		lodsb
		stosb
		lodsb
		mov	es:[di], al
		add	di, 27h	; '''
		loop	loc_20AC2
		pop	cx
		pop	di
		retn
sub_20AC0	endp


; =============== S U B	R O U T	I N E =======================================


sub_20AD0	proc far		; CODE XREF: sub_10BA5+8P
					; DATA XREF: seg000:off_10BB3o	...
		cmp	byte_314DF, 0
		jnz	short loc_20ADA
		jmp	locret_20B5A
; ---------------------------------------------------------------------------

loc_20ADA:				; CODE XREF: sub_20AD0+5j
		mov	byte_314DF, 0
		mov	dx, 3CEh
		mov	ax, 0E00h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	bx, word_316B6
		cmp	bx, 27h	; '''
		jle	short loc_20AFF
		mov	bx, 27h	; '''

loc_20AFF:				; CODE XREF: sub_20AD0+2Aj
		sub	bx, 27h	; '''
		neg	bx
		mov	di, 1E83h
		mov	al, 10h
		cmp	word_313AA, 0
		jz	short loc_20B15
		mov	di, 1E8Fh
		mov	al, 2

loc_20B15:				; CODE XREF: sub_20AD0+3Ej
		mov	cx, 27h	; '''

loc_20B18:				; CODE XREF: sub_20AD0:loc_20B47j
		cmp	cx, bx
		jnz	short loc_20B27
		push	ax
		dec	dx
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	al, 8
		out	dx, al		; EGA: graph 1 and 2 addr reg:
					; bit mask
					; Bits 0-7 select bits to be masked in all planes
		inc	dx
		pop	ax

loc_20B27:				; CODE XREF: sub_20AD0+4Aj
		out	dx, al		; EGA port: graphics controller	data register
		and	es:[di], al
		and	es:[di+28h], al
		and	es:[di+50h], al
		and	es:[di+2000h], al
		and	es:[di+2028h], al
		and	es:[di+2050h], al
		ror	al, 1
		jnb	short loc_20B47
		inc	di

loc_20B47:				; CODE XREF: sub_20AD0+74j
		loop	loc_20B18
		dec	dx
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_20B5A:				; CODE XREF: sub_20AD0+7j
		retf
sub_20AD0	endp


; =============== S U B	R O U T	I N E =======================================


sub_20B5B	proc far		; CODE XREF: sub_10BC7+8P
					; DATA XREF: seg000:off_10BD5o	...
		cmp	word_2B8EC, 0
		jnz	short loc_20B85
		push	ds
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 105h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	si, 1E00h
		mov	di, 0FEC0h
		mov	cx, 140h
		rep movsb
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

loc_20B85:				; CODE XREF: sub_20B5B+5j
		inc	byte ptr word_2B8EC
		retf
sub_20B5B	endp


; =============== S U B	R O U T	I N E =======================================


sub_20B8A	proc far		; CODE XREF: sub_10BE9+8P
					; DATA XREF: seg000:off_10BF7o	...
		dec	byte ptr word_2B8EC
		jnz	short locret_20BBE
		push	ds
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 105h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	di, 1E00h
		mov	si, 0FEC0h
		mov	cx, 140h
		rep movsb
		mov	di, 3E00h
		mov	si, 0FEC0h
		mov	cx, 140h
		rep movsb
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

locret_20BBE:				; CODE XREF: sub_20B8A+4j
		retf
sub_20B8A	endp


; =============== S U B	R O U T	I N E =======================================


sub_20BBF	proc far		; CODE XREF: sub_20BE5+75p
		mov	dx, 3CEh
		mov	ax, 105h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	si, word_2C78B
		mov	di, word_2C789
		push	ds
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	es, ax
		assume es:nothing
		mov	cx, 1F40h
		rep movsb
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		mov	ax, 5
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; mode register.Data bits:
					; 0-1: Write mode 0-2
					; 2: test condition
					; 3: read mode:	1=color	compare, 0=direct
					; 4: 1=use odd/even RAM	addressing
					; 5: 1=use CGA mid-res map (2-bits/pixel)
		retf
sub_20BBF	endp


; =============== S U B	R O U T	I N E =======================================


sub_20BE5	proc far		; CODE XREF: sub_10C0B+8P
					; DATA XREF: seg000:off_10C19o	...
		push	cs
		call	near ptr sub_2058D
		mov	si, 1F4Ch

loc_20BEC:				; CODE XREF: sub_20BE5+32j
		mov	ax, cs:[si]
		add	si, 2
		test	ax, ax
		jz	short loc_20C19
		mov	bp, ax
		mov	ax, cs:[si]
		add	si, 2
		mov	di, ax
		mov	ax, cs:[si]
		add	si, 2
		mov	dx, ax
		mov	ax, cs:[si]
		add	si, 2
		mov	cx, ax
		push	si
		mov	si, bp
		call	sub_20CBB
		pop	si
		jmp	short loc_20BEC
; ---------------------------------------------------------------------------

loc_20C19:				; CODE XREF: sub_20BE5+Fj
		xor	dx, dx

loc_20C1B:				; CODE XREF: sub_20BE5+5Ej
		xor	cx, cx

loc_20C1D:				; CODE XREF: sub_20BE5+55j
		push	cx
		push	dx
		mov	si, 0EC90h
		push	cs
		call	near ptr sub_1F585
		pop	dx
		pop	cx
		push	cx
		push	dx
		mov	si, 0EFC0h
		push	cs
		call	near ptr sub_1F585
		pop	dx
		pop	cx
		add	cx, 29h	; ')'
		cmp	cx, 0CDh ; '
		jl	short loc_20C1D
		add	dx, 29h	; ')'
		cmp	dx, 0A4h ; '
		jl	short loc_20C1B
		cmp	word_313AA, 0
		jz	short loc_20C59
		mov	si, 0FC20h
		mov	cx, 0C1h ; '
		mov	dx, 0BCh ; '
		push	cs
		call	near ptr sub_1F585

loc_20C59:				; CODE XREF: sub_20BE5+65j
		push	cs
		call	near ptr sub_20BBF
		retf
sub_20BE5	endp


; =============== S U B	R O U T	I N E =======================================


sub_20C5E	proc far		; CODE XREF: sub_10C2D+8P
					; DATA XREF: seg000:off_10C3Bo	...
		push	cx
		push	dx
		push	si
		push	cs
		call	near ptr sub_1F585
		pop	si
		pop	dx
		pop	cx
		push	word_2C78B
		mov	ax, word_2C789
		mov	word_2C78B, ax
		push	cs
		call	near ptr sub_1F585
		pop	word_2C78B
		retf
sub_20C5E	endp


; =============== S U B	R O U T	I N E =======================================


sub_20C7B	proc far		; CODE XREF: sub_10C4F+8P
					; DATA XREF: seg000:off_10C5Do	...
		push	cs
		call	near ptr sub_2058D
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	di, word_2C78B
		add	di, 0FB4h
		mov	ax, 608h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		and	es:[di], al
		and	es:[di+50h], al
		mov	ax, 0F08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		and	es:[di+28h], al
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_20C7B	endp


; =============== S U B	R O U T	I N E =======================================


sub_20CBB	proc near		; CODE XREF: sub_20BE5+2Ep
					; sub_211CC+Cp
		add	di, word_2C78B
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	bp, dx
		mov	dx, 3C4h
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_20CFE
		add	si, 2
		mov	ax, 202h
		out	dx, ax
		call	sub_20CFE
		add	si, 2
		mov	ax, 402h
		out	dx, ax
		call	sub_20CFE
		add	si, 2
		mov	ax, 802h
		out	dx, ax
		call	sub_20CFE
		mov	ax, 0F02h
		out	dx, ax
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_20CBB	endp


; =============== S U B	R O U T	I N E =======================================


sub_20CFE	proc near		; CODE XREF: sub_20CBB+18p
					; sub_20CBB+22p ...
		push	si
		push	di
		push	cx
		push	bp

loc_20D02:				; CODE XREF: sub_20CFE+13j
		push	di
		push	bp

loc_20D04:				; CODE XREF: sub_20CFE+Cj
		movsb
		movsb
		add	si, 6
		dec	bp
		jnz	short loc_20D04
		pop	bp
		pop	di
		add	di, 28h	; '('
		loop	loc_20D02
		pop	bp
		pop	cx
		pop	di
		pop	si
		retn
sub_20CFE	endp


; =============== S U B	R O U T	I N E =======================================


sub_20D18	proc far		; CODE XREF: sub_10C71+8P
					; DATA XREF: seg000:off_10C7Fo	...
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	di, 11EAh
		mov	cx, 45h	; 'E'
		push	cs
		call	near ptr sub_20D87
		mov	di, 31EAh
		mov	cx, 45h	; 'E'
		push	cs
		call	near ptr sub_20D87
		mov	ax, 1
		out	dx, ax
		mov	ax, 0FF08h
		out	dx, ax
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_20D18	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_20D87

loc_20D45:				; CODE XREF: sub_20D87j
		mov	ax, 108h
		out	dx, ax
		and	es:[di], al
		inc	di
		mov	ax, 0FF08h
		out	dx, ax
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		and	es:[di], al
		inc	di
		mov	ax, 0FE08h
		out	dx, ax
		and	es:[di], al
		add	di, 1Ch
; END OF FUNCTION CHUNK	FOR sub_20D87

; =============== S U B	R O U T	I N E =======================================


sub_20D87	proc far		; CODE XREF: sub_20D18+13p
					; sub_20D18+1Dp ...

; FUNCTION CHUNK AT 1AB5 SIZE 00000042 BYTES

		loop	loc_20D45
		retf
sub_20D87	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_20D8A	proc far		; CODE XREF: sub_10C93+8P
					; DATA XREF: seg000:off_10CA1o	...
		mov	si, 8430h
		mov	di, word_2C78B
		add	di, 182h
		mov	cx, 34h	; '4'
		call	sub_20F91
		mov	si, 8F90h
		mov	di, word_2C78B
		add	di, 0EF2h
		mov	cx, 0Ah
		call	sub_20F91
		mov	si, 91C0h
		cmp	byte ptr word_31470, 0
		jz	short loc_20DCA
		call	sub_10ED9
		mov	cx, 4
		jmp	short loc_20DC4
; ---------------------------------------------------------------------------

loc_20DC0:				; CODE XREF: sub_20D8A+3Ej
		add	si, 770h

loc_20DC4:				; CODE XREF: sub_20D8A+34j
		shr	ax, 1
		jb	short loc_20DCA
		loop	loc_20DC0

loc_20DCA:				; CODE XREF: sub_20D8A+2Aj
					; sub_20D8A+3Cj
		mov	di, word_2C78B
		add	di, 9A2h
		mov	cx, 22h	; '"'
		call	sub_20F91
		call	sub_10EE5
		call	sub_10EE9
		cmp	word_3146C, 0
		jnz	short loc_20DEC
		jmp	locret_20F53
; ---------------------------------------------------------------------------

loc_20DEC:				; CODE XREF: sub_20D8A+5Dj
		cmp	word_3146C, 8
		jle	short loc_20E34
		mov	di, word_2C78B
		add	di, 182h
		mov	si, 5C18h
		mov	ax, 30h	; '0'
		sub	ax, word_3146C
		mov	dx, 38h	; '8'
		mul	dx
		add	si, ax
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_20F91
		mov	di, word_2C78B
		add	di, 11C2h
		mov	ax, 28h	; '('
		mul	word_3146C
		sub	di, ax
		mov	si, 64D8h
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_20F91

loc_20E34:				; CODE XREF: sub_20D8A+67j
		mov	cx, 0D7h ; '
		mov	dx, word_3146C
		inc	dx
		push	dx
		mov	si, 0ABE4h
		push	cs
		call	near ptr sub_1F585
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0ACE4h
		push	cs
		call	near ptr sub_1F585
		mov	cx, 117h
		pop	dx
		mov	si, 0AD94h
		push	cs
		call	near ptr sub_1F585
		mov	cx, 0D7h ; '
		mov	dx, 70h	; 'p'
		sub	dx, word_3146C
		push	dx
		mov	si, 0AE94h
		push	cs
		call	near ptr sub_1F585
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0AF94h
		push	cs
		call	near ptr sub_1F585
		mov	cx, 117h
		pop	dx
		mov	si, 0B044h
		push	cs
		call	near ptr sub_1F585
		cmp	word_3146C, 8
		jl	short loc_20E8E
		jmp	locret_20F53
; ---------------------------------------------------------------------------

loc_20E8E:				; CODE XREF: sub_20D8A+FFj
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3C4h
		mov	di, word_2C78B
		add	di, 1Ah
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4750h
		mov	cx, 9

loc_20EA9:				; CODE XREF: sub_20D8A+163j
		push	cx
		mov	cx, 7

loc_20EAD:				; CODE XREF: sub_20D8A+15Aj
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		add	di, 2
		loop	loc_20EAD
		pop	cx
		add	di, 1Ah
		add	si, 8
		loop	loc_20EA9
		pop	ds
		assume ds:dseg
		mov	di, word_2C78B
		add	di, 1082h
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4990h
		mov	cx, 9

loc_20F04:				; CODE XREF: sub_20D8A+1BEj
		push	cx
		mov	cx, 7

loc_20F08:				; CODE XREF: sub_20D8A+1B5j
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		add	di, 2
		loop	loc_20F08
		pop	cx
		add	di, 1Ah
		add	si, 8
		loop	loc_20F04
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

locret_20F53:				; CODE XREF: sub_20D8A+5Fj
					; sub_20D8A+101j
		retf
sub_20D8A	endp


; =============== S U B	R O U T	I N E =======================================


sub_20F54	proc far		; CODE XREF: sub_10CB5+8P
					; DATA XREF: seg000:off_10CC3o	...
		cmp	word_3146E, 0
		jz	short locret_20F90
		mov	di, word_2C78B
		add	di, 11EAh
		mov	cx, 45h	; 'E'
		sub	cx, word_3146E
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		push	cs
		call	near ptr sub_20D87
		mov	ax, 1
		out	dx, ax
		mov	ax, 0FF08h
		out	dx, ax
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	si, 6D98h
		mov	cx, word_3146E
		call	sub_20F91

locret_20F90:				; CODE XREF: sub_20F54+5j
		retf
sub_20F54	endp


; =============== S U B	R O U T	I N E =======================================


sub_20F91	proc near		; CODE XREF: sub_20D8A+Ep
					; sub_20D8A+1Fp ...
		push	ds
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	dx, 3C4h

loc_20F9F:				; CODE XREF: sub_20F91:loc_21083j
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 108h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	es:[di+1], al
		mov	dx, 3C4h
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 108h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	es:[di+1], al
		mov	dx, 3C4h
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 108h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	es:[di+1], al
		mov	dx, 3C4h
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		mov	dx, 3CEh
		mov	ax, 108h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		lodsb
		mov	es:[di+1], al
		mov	dx, 3C4h
		add	di, 2
		push	cx
		mov	cx, 5

loc_2101E:				; CODE XREF: sub_20F91+C4j
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	es:[di+1], al
		add	di, 2
		loop	loc_2101E
		pop	cx
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	ax, 202h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	ax, 402h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		mov	ax, 802h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		lodsb
		mov	es:[di], al
		lodsb
		add	di, 1Ch
		loop	loc_21083
		jmp	short loc_21086
; ---------------------------------------------------------------------------

loc_21083:				; CODE XREF: sub_20F91+EEj
		jmp	loc_20F9F
; ---------------------------------------------------------------------------

loc_21086:				; CODE XREF: sub_20F91+F0j
		mov	ax, 0F02h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_20F91	endp


; =============== S U B	R O U T	I N E =======================================


sub_21090	proc far		; CODE XREF: sub_10CD7+8P
					; DATA XREF: seg000:off_10CE5o	...
		mov	dx, 3CEh
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	si, word_2C78B
		mov	ax, 28h	; '('
		mul	word ptr [di+4]
		add	si, ax
		mov	ax, [di+2]
		mov	cx, ax
		and	cx, 7
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	si, ax
		mov	bl, 1Ch
		mov	dx, 3CEh

loc_210BD:				; CODE XREF: sub_21090+93j
		call	sub_10ED9
		mov	bh, ah
		mov	ax, 700h
		out	dx, ax
		mov	al, 8
		mov	ah, bh
		shr	ah, cl
		out	dx, ax
		and	es:[si], al
		mov	ah, bh
		ror	ah, cl
		out	dx, ax
		and	es:[si+1], al
		and	es:[si+2], al
		and	es:[si+3], al
		mov	al, bh
		xor	ah, ah
		ror	ax, cl
		mov	al, 8
		out	dx, ax
		and	es:[si+4], al
		mov	ax, 0
		out	dx, ax
		not	bh
		mov	al, 8
		mov	ah, bh
		shr	ah, cl
		out	dx, ax
		and	es:[si], al
		mov	ah, bh
		ror	ah, cl
		out	dx, ax
		and	es:[si+1], al
		and	es:[si+2], al
		and	es:[si+3], al
		mov	al, bh
		xor	ah, ah
		ror	ax, cl
		mov	al, 8
		out	dx, ax
		and	es:[si+4], al
		add	si, 28h	; '('
		dec	bl
		jnz	short loc_210BD
		mov	ax, 1
		out	dx, ax
		mov	ax, 0FF08h
		out	dx, ax
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_21090	endp


; =============== S U B	R O U T	I N E =======================================


sub_21132	proc far		; CODE XREF: sub_10CF9+8P
					; DATA XREF: seg000:off_10D07o	...

; FUNCTION CHUNK AT 0EED SIZE 00000004 BYTES

		cmp	al, 0Dh
		jnz	short loc_2113B
		jmp	loc_10EED
; ---------------------------------------------------------------------------

loc_2113B:				; CODE XREF: sub_21132+2j
		push	ax
		mov	ax, 28h	; '('
		mul	word_31478
		mov	di, ax
		mov	ax, word_31476
		shr	ax, 1
		add	di, ax
		pop	ax
		sub	al, 20h	; ' '
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	si, 7CB0h
		add	si, ax
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 3CEh
		mov	ax, 0F008h
		test	word_31476, 1
		jz	short loc_21175
		mov	ah, 0Fh

loc_21175:				; CODE XREF: sub_21132+3Fj
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	dx, 3C4h
		mov	ax, 102h
		out	dx, ax		; EGA: sequencer address reg
					; unknown register
		call	sub_211B0
		mov	ax, 202h
		out	dx, ax
		call	sub_211B0
		mov	ax, 402h
		out	dx, ax
		call	sub_211B0
		mov	ax, 802h
		out	dx, ax
		call	sub_211B0
		mov	ax, 0F02h
		out	dx, ax
		mov	dx, 3CEh
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		inc	word_31476
		retf
sub_21132	endp


; =============== S U B	R O U T	I N E =======================================


sub_211B0	proc near		; CODE XREF: sub_21132+51p
					; sub_21132+58p ...
		push	di
		mov	cx, 8

loc_211B4:				; CODE XREF: sub_211B0+18j
		lodsb
		mov	ah, es:[di]
		mov	es:[di], al
		mov	ah, es:[di+2000h]
		mov	es:[di+2000h], al
		add	di, 28h	; '('
		loop	loc_211B4
		pop	di
		retn
sub_211B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_211CC	proc far		; CODE XREF: sub_10D1B+8P
					; DATA XREF: seg000:off_10D29o	...
		mov	si, 0AF80h
		mov	di, 786h
		mov	dx, 0Dh
		mov	cx, 36h	; '6'
		call	sub_20CBB
		retf
sub_211CC	endp

; ---------------------------------------------------------------------------
		db 60h,	35h, 80h, 1, 2,	0, 0BFh, 0, 50h, 41h, 8Eh, 2 dup(1)
		db 0, 0BFh, 0, 48h, 47h, 18h, 0, 8, 0, 9, 0, 88h, 49h
		db 80h,	10h, 8,	0, 9, 0, 0C8h, 4Bh, 8Ch, 1Ch, 5, 0, 12h
		db 0, 98h, 4Eh,	0A0h, 19h, 0Ch,	0, 24h,	3 dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_2120E	proc far		; CODE XREF: seg000:0D45P
					; DATA XREF: seg000:off_10D4Bo	...
		cmp	word ptr [si+1Ch], 0
		js	short loc_2121A
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_2122A

loc_2121A:				; CODE XREF: sub_2120E+4j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		push	si
		mov	si, word_2B7FA
		push	cs
		call	near ptr sub_1F585
		pop	si

loc_2122A:				; CODE XREF: sub_2120E+Aj
		cmp	word ptr [si+1Ch], 0
		jns	short loc_21236
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_2124A

loc_21236:				; CODE XREF: sub_2120E+20j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		add	dx, [si+1Ah]
		dec	dx
		push	si
		mov	si, word_2B7F4
		push	cs
		call	near ptr sub_1F585
		pop	si

loc_2124A:				; CODE XREF: sub_2120E+26j
		mov	ax, [si+12h]
		mov	word_2B7EA, ax
		mov	ax, [si+1Ah]
		add	ax, [si+16h]
		dec	ax
		jg	short loc_2125C
		jmp	locret_212E5
; ---------------------------------------------------------------------------

loc_2125C:				; CODE XREF: sub_2120E+49j
		mov	word_2B7EC, ax
		mov	ax, [si+1Ah]
		dec	ax
		mov	dx, word_2B7EC
		sub	dx, 0BFh ; '
		jle	short loc_21277
		sub	ax, dx
		jle	short locret_212E5
		mov	word_2B7EC, 0BFh ; '

loc_21277:				; CODE XREF: sub_2120E+5Dj
		mov	word_2B7EE, ax
		mov	dx, 3CEh
		mov	ax, 700h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0F01h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, 28h	; '('
		mul	word_2B7EC
		mov	di, word_2C78B
		mov	bp, di
		add	di, ax
		mov	ax, word_2B7EA
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		add	di, ax
		mov	dx, word_2B7EA
		and	dx, 0FFF8h
		mov	cx, word_2B7EA
		and	cx, 7
		mov	ah, 0FFh
		shr	ah, cl
		call	sub_20829
		inc	di
		add	dx, 8
		mov	ax, 0F0FFh
		ror	ax, cl
		call	sub_20829
		inc	di
		add	dx, 8
		xor	ah, ah
		mov	al, 0F0h ; '
		ror	ax, cl
		call	sub_20829
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	dx, 3CEh
		mov	ax, 0
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; set/reset.
					; Data bits 0-3	select planes for write	mode 00
		mov	ax, 1
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; enable set/reset
		mov	ax, 0FF08h
		out	dx, ax		; EGA: graph 1 and 2 addr reg:
					; unknown register

locret_212E5:				; CODE XREF: sub_2120E+4Bj
					; sub_2120E+61j
		retf
sub_2120E	endp

; ---------------------------------------------------------------------------
		align 10h
byte_212F0	db 0E8h, 4Bh, 0, 0B8h, 6, 0, 0CDh, 10h,	0B8h, 40h, 0, 8Eh
					; DATA XREF: seg000:0803o
		db 0C0h, 26h, 8Bh, 16h,	63h, 0,	89h, 16h, 57h, 42h, 8Ch
		db 0D8h, 8Eh, 0C0h, 0CBh
; ---------------------------------------------------------------------------

loc_2130B:				; DATA XREF: seg000:080Bo
		call	sub_2133E
		mov	dx, 3BFh
		mov	al, 3
		out	dx, al		; Printer Status Bits:
					; 3: 0=printer signals an error
					; 4: 1=printer is selected
					; 5: 1=out of paper
					; 6: 0=ready for next character
					; 7: 0=busy or offline or error
		mov	dx, 3B8h
		xor	al, al
		out	dx, al
		sub	dl, 4
		mov	si, 4243h
		mov	cx, 9

loc_21323:				; CODE XREF: seg001:2095j
		lodsw
		out	dx, ax		; Video: CRT cntrlr addr
					; horizontal total
		loop	loc_21323
		push	es
		mov	ax, 0B000h
		mov	es, ax
		assume es:nothing
		xor	ax, ax
		xor	di, di
		mov	cx, 4000h
		rep stosw
		pop	es
		assume es:nothing
		add	dl, 4
		mov	al, 0Ah
		out	dx, al
		retf

; =============== S U B	R O U T	I N E =======================================


sub_2133E	proc near		; CODE XREF: seg001:loc_2130Bp
		mov	di, 973Eh
		xor	ax, ax
		mov	cx, 0C8h ; '

loc_21346:				; CODE XREF: sub_2133E+Cj
		stosw
		add	ax, 50h	; 'P'
		loop	loc_21346
		retn
sub_2133E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2134D	proc far		; CODE XREF: sub_10EB3+8P
					; DATA XREF: seg000:0EC9o
		mov	cx, 0Ah

loc_21350:				; CODE XREF: sub_2134D+18j
		push	cx
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	cx, 2000h
		xor	si, si

loc_2135B:				; CODE XREF: sub_2134D+15j
		xor	word ptr es:[si], 0FFFFh
		add	si, 2
		loop	loc_2135B
		pop	cx
		loop	loc_21350
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2134D	endp


; =============== S U B	R O U T	I N E =======================================


sub_2136C	proc far		; CODE XREF: sub_10EB3+8P
					; DATA XREF: seg000:0ED1o
		mov	cx, 0Ah

loc_2136F:				; CODE XREF: sub_2136C+18j
		push	cx
		mov	ax, 0B000h
		mov	es, ax
		assume es:nothing
		mov	cx, 4000h
		xor	si, si

loc_2137A:				; CODE XREF: sub_2136C+15j
		xor	word ptr es:[si], 0FFFFh
		add	si, 2
		loop	loc_2137A
		pop	cx
		loop	loc_2136F
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2136C	endp


; =============== S U B	R O U T	I N E =======================================


sub_2138B	proc far		; CODE XREF: sub_10DA3+8P
					; DATA XREF: seg000:0DB9o ...
		mov	cs:word_22B35, 38ADh
		mov	dx, seg	seg007
		xor	si, si
		mov	cx, 6BE6h
		call	sub_214E6
		mov	dx, seg	seg007
		mov	si, 6BE6h
		mov	cx, 3FD6h
		call	sub_214E6
		mov	cs:word_22B35, 396Dh
		mov	dx, seg	seg007
		mov	si, 0ABBCh
		mov	cx, 5324h
		call	sub_214E6
		mov	cs:word_22B35, 38ADh
		mov	si, 0
		mov	cx, 140h
		call	sub_2162C
		mov	cs:word_22B35, 398Dh
		mov	si, 500h
		mov	cx, 0Ah
		call	sub_21696
		mov	cs:word_22B35, 39ADh
		mov	si, 640h
		mov	cx, 0Ah
		call	sub_21696
		mov	cs:word_22B35, 394Dh
		mov	si, 780h
		mov	cx, 28h	; '('
		mov	dx, 16h
		call	sub_216E8
		mov	si, 2300h
		mov	cx, 2Ah	; '*'
		mov	dx, 0Eh
		call	sub_216E8
		mov	si, 0AF80h
		mov	cx, 2BEh
		mov	cs:word_22B3B, 17h
		call	sub_215BB
		mov	cs:word_22B35, 398Dh
		mov	si, 7CB0h
		mov	cx, 3Ch	; '<'
		call	sub_21696
		mov	cs:word_22B35, 396Dh
		mov	cs:word_22B3B, 7
		mov	si, 5C18h
		mov	cx, 118h
		call	sub_215BB
		mov	si, 64D8h
		mov	cx, 118h
		call	sub_215BB
		mov	si, 6D98h
		mov	cx, 1E3h
		call	sub_215BB
		mov	si, 8430h
		mov	cx, 16Ch
		call	sub_215BB
		mov	si, 8F90h
		mov	cx, 46h	; 'F'
		call	sub_215BB
		mov	si, 91C0h
		mov	cx, 3B8h
		call	sub_215BB
		mov	cs:word_22B3B, 2
		mov	si, 3560h
		mov	cx, 17Eh
		call	sub_215BB
		mov	cs:word_22B3B, 1
		mov	si, 4150h
		mov	cx, 0BFh ; '
		call	sub_215BB
		mov	cs:word_22B3B, 8
		mov	si, 4748h
		mov	cx, 48h	; 'H'
		call	sub_215BB
		mov	si, 4988h
		mov	cx, 48h	; 'H'
		call	sub_215BB
		mov	si, 4BC8h
		mov	cx, 5Ah	; 'Z'
		call	sub_215BB
		mov	cs:word_22B3B, 0Ch
		mov	si, 4E98h
		mov	cx, 1B0h
		call	sub_215BB
		retf
sub_2138B	endp


; =============== S U B	R O U T	I N E =======================================


sub_214C2	proc far		; CODE XREF: sub_10DC5+8P
					; DATA XREF: seg000:0DDBo ...
		mov	ax, word_31E4C
		dec	ax
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	ax, 38ADh
		mov	cs:word_22B35, ax
		mov	dx, seg	seg008
		xor	si, si
		mov	cx, 0F468h
		call	sub_214E6
		call	sub_2154D
		retf
sub_214C2	endp


; =============== S U B	R O U T	I N E =======================================


sub_214E6	proc near		; CODE XREF: sub_2138B+Fp
					; sub_2138B+1Bp ...
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	ds, dx
		mov	bp, si
		add	bp, cx
		add	si, 20h	; ' '

loc_214F5:				; CODE XREF: sub_214E6+5Fj
		add	si, 0Ch
		lodsw
		test	ax, ax
		jz	short loc_21547
		mov	bx, ax
		lodsw
		push	si
		mov	cx, ax
		inc	cx
		mov	dx, cx
		cmp	bx, 8
		jle	short loc_2151B
		add	dx, cx
		cmp	bx, 10h
		jle	short loc_2151B
		add	dx, cx
		cmp	bx, 18h
		jle	short loc_2151B
		add	dx, cx

loc_2151B:				; CODE XREF: sub_214E6+23j
					; sub_214E6+2Aj ...
		push	bp
		mov	bp, si
		push	si
		xor	di, di
		call	sub_21765
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	bp
		pop	si
		add	si, dx
		add	si, dx
		add	si, dx
		add	si, dx
		add	si, dx
		inc	si
		and	si, 0FFFEh
		cmp	si, bp
		jb	short loc_214F5

loc_21547:				; CODE XREF: sub_214E6+15j
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_214E6	endp


; =============== S U B	R O U T	I N E =======================================


sub_2154D	proc near		; CODE XREF: sub_214C2+20p
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		mov	cx, 1C9h
		xor	si, si

loc_2155D:				; CODE XREF: sub_2154D+2Dj
		push	si
		push	cx
		push	si
		xor	di, di
		call	sub_21582
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	cx
		pop	si
		add	si, 80h	; '
		loop	loc_2155D
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_2154D	endp


; =============== S U B	R O U T	I N E =======================================


sub_21582	proc near		; CODE XREF: sub_2154D+15p
		mov	cx, 10h
		mov	cs:word_22B37, 0

loc_2158C:				; CODE XREF: sub_21582+18j
		call	sub_2159D
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		loop	loc_2158C
		retn
sub_21582	endp


; =============== S U B	R O U T	I N E =======================================


sub_2159D	proc near		; CODE XREF: sub_21582:loc_2158Cp
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_217DB
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_217DB
		add	si, 6
		retn
sub_2159D	endp


; =============== S U B	R O U T	I N E =======================================


sub_215BB	proc near		; CODE XREF: sub_2138B+8Dp
					; sub_2138B+B4p ...
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		xor	di, di
		mov	cs:word_22B37, 0
		mov	ax, cs:word_22B3B
		mov	cs:word_22B39, ax
		push	si

loc_215D8:				; CODE XREF: sub_215BB:loc_215F5j
		call	sub_2160E
		dec	cs:word_22B39
		jnz	short loc_215F5
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		mov	ax, cs:word_22B3B
		mov	cs:word_22B39, ax

loc_215F5:				; CODE XREF: sub_215BB+25j
		loop	loc_215D8
		mov	cx, di
		pop	di
		push	si
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	si
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_215BB	endp


; =============== S U B	R O U T	I N E =======================================


sub_2160E	proc near		; CODE XREF: sub_215BB:loc_215D8p
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_217DB
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_217DB
		add	si, 6
		retn
sub_2160E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2162C	proc near		; CODE XREF: sub_2138B+3Ep
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		xor	di, di
		mov	dx, cx
		mov	cs:word_22B37, 0
		mov	cs:word_22B39, 28h ; '('
		push	si

loc_2164A:				; CODE XREF: sub_2162C:loc_21666j
		call	sub_2167F
		dec	cs:word_22B39
		jnz	short loc_21666
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		mov	cs:word_22B39, 28h ; '('

loc_21666:				; CODE XREF: sub_2162C+26j
		loop	loc_2164A
		mov	cx, di
		pop	di
		push	si
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	si
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_2162C	endp


; =============== S U B	R O U T	I N E =======================================


sub_2167F	proc near		; CODE XREF: sub_2162C:loc_2164Ap
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_217DB
		retn
sub_2167F	endp


; =============== S U B	R O U T	I N E =======================================


sub_21696	proc near		; CODE XREF: sub_2138B+4Ep
					; sub_2138B+5Ep ...
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		xor	di, di
		push	si

loc_216A4:				; CODE XREF: sub_21696+13j
		push	cx
		call	sub_216C0
		pop	cx
		loop	loc_216A4
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_21696	endp


; =============== S U B	R O U T	I N E =======================================


sub_216C0	proc near		; CODE XREF: sub_21696+Fp
		mov	cx, 8
		mov	cs:word_22B37, 0

loc_216CA:				; CODE XREF: sub_216C0+22j
		mov	ah, [si+8]
		mov	bl, [si+10h]
		mov	bh, [si+18h]
		lodsb
		call	sub_217DB
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		loop	loc_216CA
		add	si, 18h
		retn
sub_216C0	endp


; =============== S U B	R O U T	I N E =======================================


sub_216E8	proc near		; CODE XREF: sub_2138B+71p
					; sub_2138B+7Dp
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		xor	di, di
		push	si

loc_216F6:				; CODE XREF: sub_216E8+13j
		push	cx
		call	sub_21712
		pop	cx
		loop	loc_216F6
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		rep movsb
		push	ds
		push	es
		pop	ds
		pop	es
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_216E8	endp


; =============== S U B	R O U T	I N E =======================================


sub_21712	proc near		; CODE XREF: sub_216E8+Fp
		push	si
		mov	cx, dx
		shl	dx, 1
		mov	cs:word_22B37, 0

loc_2171E:				; CODE XREF: sub_21712+43j
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_217DB
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_217DB
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		loop	loc_2171E
		shr	dx, 1
		pop	si
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		retn
sub_21712	endp


; =============== S U B	R O U T	I N E =======================================


sub_21765	proc near		; CODE XREF: sub_214E6+3Bp
		mov	cs:word_22B37, 0
		push	cx

loc_2176D:				; CODE XREF: sub_21765+18j
		push	cx
		call	sub_21781
		inc	cs:word_22B37
		and	cs:word_22B37, 7
		pop	cx
		loop	loc_2176D
		pop	cx
		retn
sub_21765	endp


; =============== S U B	R O U T	I N E =======================================


sub_21781	proc near		; CODE XREF: sub_21765+9p
		push	bx

loc_21782:				; CODE XREF: sub_21781+56j
		push	bx
		mov	ah, [si]
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		stosb
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		stosb
		add	si, dx
		mov	al, [si]
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		sub	si, dx
		inc	si
		call	sub_217DB
		mov	al, es:[di-3]
		mov	ah, es:[di-2]
		mov	es:[di-2], al
		mov	es:[di-3], ah
		pop	bx
		sub	bx, 8
		jg	short loc_21782
		pop	bx
		retn
sub_21781	endp


; =============== S U B	R O U T	I N E =======================================


sub_217DB	proc near		; CODE XREF: sub_2159D+Ap
					; sub_2159D+17p ...
		push	bp
		push	dx
		push	cx
		mov	cx, 2

loc_217E1:				; CODE XREF: sub_217DB+51j
		push	cx
		mov	cx, 0
		xor	dh, dh

loc_217E7:				; CODE XREF: sub_217DB+4Aj
		xor	dl, dl
		shl	bh, 1
		rcl	dl, 1
		shl	bl, 1
		rcl	dl, 1
		shl	ah, 1
		rcl	dl, 1
		shl	al, 1
		rcl	dl, 1
		mov	bp, dx
		and	bp, 0Fh
		shl	bp, 1
		add	bp, cs:word_22B35
		mov	bp, cs:[bp+0]
		shl	bp, 1
		shl	bp, 1
		shl	bp, 1
		add	bp, cs:word_22B37
		mov	dl, cs:[bp+382Dh]
		shl	dl, cl
		shl	dx, 1
		shl	dx, 1
		add	cx, 2
		cmp	cx, 8
		jl	short loc_217E7
		mov	es:[di], dh
		inc	di
		pop	cx
		loop	loc_217E1
		pop	cx
		pop	dx
		pop	bp
		retn
sub_217DB	endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_3. PRESS KEYPAD CTRL-"+" TO EXPAND]
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_4. PRESS KEYPAD CTRL-"+" TO EXPAND]
byte_21835	db 0			; DATA XREF: sub_21836w sub_2183Dw

; =============== S U B	R O U T	I N E =======================================


sub_21836	proc far		; CODE XREF: sub_10D5F+8P
					; DATA XREF: seg000:0D75o ...
		mov	cs:byte_21835, 1
		retf
sub_21836	endp


; =============== S U B	R O U T	I N E =======================================


sub_2183D	proc far		; CODE XREF: sub_10D81+8P
					; DATA XREF: seg000:0D97o ...
		mov	cs:byte_21835, 0
		retf
sub_2183D	endp


; =============== S U B	R O U T	I N E =======================================


sub_21844	proc far		; CODE XREF: sub_1080F+8P
					; DATA XREF: seg000:0825o ...
		mov	ax, word_316C8
		call	sub_10ED5
		push	es
		mov	ax, seg_2C785
		mov	es, ax
		mov	si, 9A40h
		mov	cx, 30h	; '0'
		mov	al, 8

loc_2185A:				; CODE XREF: sub_21844+28j
		mov	di, [si]
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, [si+2]
		or	byte ptr es:[di], 18h
		add	si, 6
		loop	loc_2185A
		pop	es
		retf
sub_21844	endp


; =============== S U B	R O U T	I N E =======================================


sub_21870	proc far		; CODE XREF: sub_10831+8P
					; sub_224F5+2Ep
					; DATA XREF: ...
		mov	ax, seg_2C785
		mov	es, ax
		mov	si, 9A40h
		mov	cx, 30h	; '0'

loc_2187B:				; CODE XREF: sub_21870:loc_2190Cj
		mov	ax, [si+4]
		and	ax, 7FFFh
		sub	ax, 200h
		cmp	ax, 200h
		jg	short loc_218A5

loc_21889:				; CODE XREF: sub_21870+33j
					; sub_21870+54j ...
		call	sub_10ED9
		mov	[si], ax
		call	sub_10ED9
		mov	[si+2],	ax
		call	sub_10ED9
		and	ax, 1FFFh
		cmp	ax, 200h
		jle	short loc_21889

loc_218A5:				; CODE XREF: sub_21870+17j
		mov	[si+4],	ax
		mov	ax, [si]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 0A0h ; '
		cmp	ax, 140h
		jnb	short loc_21889
		mov	bx, ax
		mov	ax, [si+2]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 64h	; 'd'
		cmp	ax, 0C8h ; '
		jnb	short loc_21889
		mov	di, ax
		shl	di, 1
		mov	di, [di-68C2h]
		push	cx
		mov	cx, bx
		and	cx, 3
		shl	cx, 1
		shr	bx, 1
		shr	bx, 1
		add	di, bx
		mov	ah, 0C0h ; '
		shr	ah, cl
		pop	cx
		or	es:[di], ah
		add	si, 6
		loop	loc_2190C
		jmp	short loc_2190F
; ---------------------------------------------------------------------------

loc_2190C:				; CODE XREF: sub_21870+98j
		jmp	loc_2187B
; ---------------------------------------------------------------------------

loc_2190F:				; CODE XREF: sub_21870+9Aj
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_21870	endp


; =============== S U B	R O U T	I N E =======================================


sub_21914	proc near		; CODE XREF: seg000:085BP sub_21CA2+2p
					; DATA XREF: ...
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
sub_21914	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_2191D	proc far		; CODE XREF: sub_10875+8P
					; sub_2224B+5Bp ...
		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_2192A
		dec	si
		mov	ax, seg	seg008

loc_2192A:				; CODE XREF: sub_2191D+7j
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_21942
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21942:				; CODE XREF: sub_2191D+20j
		cmp	dx, ss:10h
		jl	short loc_2194C
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_2194C:				; CODE XREF: sub_2191D+2Aj
		mov	ax, cx
		add	ax, bp
		jg	short loc_21955
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21955:				; CODE XREF: sub_2191D+33j
		mov	ax, dx
		add	ax, bx
		jns	short loc_2195E
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_2195E:				; CODE XREF: sub_2191D+3Cj
		mov	word ptr unk_54890, 0
		cmp	ax, ss:10h
		jle	short loc_21972
		sub	ax, ss:10h
		sub	bx, ax

loc_21972:				; CODE XREF: sub_2191D+4Cj
		test	dx, dx
		jns	short loc_219A4
		add	bx, dx
		neg	dx
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		cmp	bp, 8
		jle	short loc_2199F
		cmp	bp, 10h
		jg	short loc_2198E
		shl	ax, 1
		jmp	short loc_2199F
; ---------------------------------------------------------------------------

loc_2198E:				; CODE XREF: sub_2191D+6Bj
		cmp	bp, 18h
		jg	short loc_2199B
		mov	dx, ax
		shl	ax, 1
		add	ax, dx
		jmp	short loc_2199F
; ---------------------------------------------------------------------------

loc_2199B:				; CODE XREF: sub_2191D+74j
		shl	ax, 1
		shl	ax, 1

loc_2199F:				; CODE XREF: sub_2191D+66j
					; sub_2191D+6Fj ...
		mov	word ptr unk_54890, ax
		xor	dx, dx

loc_219A4:				; CODE XREF: sub_2191D+57j
		mov	di, dx
		shl	di, 1
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	di, [di-68C2h]
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		pop	ds
		test	cx, cx
		jns	short loc_219BF
		jmp	loc_21C06
; ---------------------------------------------------------------------------

loc_219BF:				; CODE XREF: sub_2191D+9Dj
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jle	short loc_219CB
		jmp	loc_21C06
; ---------------------------------------------------------------------------

loc_219CB:				; CODE XREF: sub_2191D+A9j
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 3
		shl	cx, 1
		add	si, word_28530
		cmp	bp, 8
		jg	short loc_219E4
		jmp	loc_21BC2
; ---------------------------------------------------------------------------

loc_219E4:				; CODE XREF: sub_2191D+C2j
		cmp	bp, 10h
		jg	short loc_219EC
		jmp	loc_21B54
; ---------------------------------------------------------------------------

loc_219EC:				; CODE XREF: sub_2191D+CAj
		cmp	bp, 18h
		jg	short loc_219F4
		jmp	loc_21AB9
; ---------------------------------------------------------------------------

loc_219F4:				; CODE XREF: sub_2191D+D2j
					; sub_2191D+196j
		lodsw
		mov	dl, ah
		shr	al, cl
		not	al
		and	al, es:[di]
		shr	dl, cl
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		xor	al, al
		xor	dl, dl
		mov	ah, [si-2]
		mov	dh, [si-1]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		add	di, 47h	; 'G'
		dec	bl
		js	short loc_21AB6
		jmp	loc_219F4
; ---------------------------------------------------------------------------

loc_21AB6:				; CODE XREF: sub_2191D+194j
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21AB9:				; CODE XREF: sub_2191D+D4j
					; sub_2191D+231j
		lodsw
		mov	dl, ah
		shr	al, cl
		not	al
		and	al, es:[di]
		shr	dl, cl
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		xor	al, al
		xor	dl, dl
		mov	ah, [si-2]
		mov	dh, [si-1]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		add	di, 49h	; 'I'
		dec	bl
		js	short loc_21B51
		jmp	loc_21AB9
; ---------------------------------------------------------------------------

loc_21B51:				; CODE XREF: sub_2191D+22Fj
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21B54:				; CODE XREF: sub_2191D+CCj
					; sub_2191D+2A0j
		lodsw
		mov	dl, ah
		shr	al, cl
		not	al
		and	al, es:[di]
		shr	dl, cl
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		xor	al, al
		xor	dl, dl
		mov	ah, [si-2]
		mov	dh, [si-1]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		add	di, 4Bh	; 'K'
		dec	bl
		jns	short loc_21B54
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21BC2:				; CODE XREF: sub_2191D+C4j
					; sub_2191D+2E4j
		lodsw
		mov	dl, ah
		shr	al, cl
		not	al
		and	al, es:[di]
		shr	dl, cl
		or	al, dl
		stosb
		lodsw
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		xor	al, al
		xor	dl, dl
		mov	ah, [si-2]
		mov	dh, [si-1]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		stosb
		add	di, 4Dh	; 'M'
		dec	bl
		jns	short loc_21BC2
		jmp	loc_21C9B
; ---------------------------------------------------------------------------

loc_21C06:				; CODE XREF: sub_2191D+9Fj
					; sub_2191D+ABj
		mov	dx, cx
		sar	dx, 1
		sar	dx, 1
		add	di, dx
		mov	dx, cx
		and	cx, 3
		shl	cx, 1
		xchg	dx, bp
		add	si, word_28530
		add	dx, 7
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		shl	dx, 1
		dec	dx
		mov	cs:byte_21CA1, dl

loc_21C2C:				; CODE XREF: sub_2191D+37Cj
		push	bp
		push	di
		lodsw
		cmp	bp, 140h
		jnb	short loc_21C45
		mov	dl, ah
		shr	al, cl
		not	al
		and	al, es:[di]
		shr	dl, cl
		or	al, dl
		mov	es:[di], al

loc_21C45:				; CODE XREF: sub_2191D+316j
		inc	di
		add	bp, 4
		mov	bh, cs:byte_21CA1

loc_21C4E:				; CODE XREF: sub_2191D+354j
		lodsw
		cmp	bp, 140h
		jnb	short loc_21C6B
		mov	dl, ah
		mov	ah, [si-4]
		mov	dh, [si-3]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		mov	es:[di], al

loc_21C6B:				; CODE XREF: sub_2191D+336j
		inc	di
		add	bp, 4
		dec	bh
		jnz	short loc_21C4E
		cmp	bp, 140h
		jnb	short loc_21C91
		xor	al, al
		xor	dl, dl
		mov	ah, [si-2]
		mov	dh, [si-1]
		shr	ax, cl
		shr	dx, cl
		not	al
		and	al, es:[di]
		or	al, dl
		mov	es:[di], al

loc_21C91:				; CODE XREF: sub_2191D+35Aj
		inc	di
		pop	di
		pop	bp
		add	di, 50h	; 'P'
		dec	bl
		jns	short loc_21C2C

loc_21C9B:				; CODE XREF: sub_2191D+22j
					; sub_2191D+2Cj ...
		pop	ax
		mov	ds, ax
		mov	es, ax
		retf
sub_2191D	endp

; ---------------------------------------------------------------------------
byte_21CA1	db 0			; DATA XREF: sub_2191D+30Aw
					; sub_2191D+32Cr

; =============== S U B	R O U T	I N E =======================================


sub_21CA2	proc far		; CODE XREF: seg000:089FP
					; DATA XREF: seg000:08ADo ...
		push	si
		push	cs
		call	sub_21914
		pop	si
		mov	ax, [si+12h]
		mov	bx, [si+16h]
		mov	di, [si+0Ch]
		mov	cx, seg	seg007
		test	di, 1
		jz	short loc_21CBE
		dec	di
		mov	cx, seg	seg008

loc_21CBE:				; CODE XREF: sub_21CA2+16j
		push	es
		mov	es, cx
		assume es:seg008
		sub	ax, es:[di]
		sub	bx, es:[di+2]
		pop	es
		assume es:nothing
		call	sub_21CDF
		add	ax, 10h
		call	sub_21CDF
		add	bx, 10h
		call	sub_21CDF
		sub	ax, 10h
		call	sub_21CDF
		retf
sub_21CA2	endp


; =============== S U B	R O U T	I N E =======================================


sub_21CDF	proc near		; CODE XREF: sub_21CA2+27p
					; sub_21CA2+2Dp ...
		push	si
		push	ax
		push	bx
		mov	si, 0
		add	si, word_316BE
		mov	cx, ax
		and	cx, 0FFF0h
		shr	cx, 1
		cmp	cx, 0A0h ; '
		jnb	short loc_21D3E
		mov	dx, bx
		add	dx, word_316C6
		and	dx, 0FFF0h
		sub	dx, word_316C6
		add	bx, word_316C6
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FEh
		add	si, ax
		mov	ax, 28h	; '('
		push	dx
		mul	bx
		pop	dx
		add	si, ax
		push	es
		mov	ax, seg	seg000
		mov	es, ax
		assume es:seg000
		mov	ax, [si]
		mov	es:word_1EFE0, ax
		pop	es
		assume es:nothing
		mov	ax, 1
		mov	bx, 1
		mov	si, 0EFE0h
		call	sub_1EDE0

loc_21D3E:				; CODE XREF: sub_21CDF+15j
		pop	bx
		pop	ax
		pop	si
		retn
sub_21CDF	endp


; =============== S U B	R O U T	I N E =======================================


sub_21D42	proc far		; CODE XREF: seg000:08C1P
					; DATA XREF: seg000:08CFo ...
		mov	word ptr [si+4], 853h

loc_21D47:				; CODE XREF: seg000:08E3P
					; DATA XREF: seg000:08F1o ...
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]

loc_21D50:				; CODE XREF: seg000:0905P
					; DATA XREF: seg000:0913o ...
		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_21D5D
		dec	si
		mov	ax, seg	seg008

loc_21D5D:				; CODE XREF: sub_21D42+15j
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_21D75
		jmp	loc_21F45
; ---------------------------------------------------------------------------

loc_21D75:				; CODE XREF: sub_21D42+2Ej
		cmp	dx, ss:10h
		jl	short loc_21D7F
		jmp	loc_21F45
; ---------------------------------------------------------------------------

loc_21D7F:				; CODE XREF: sub_21D42+38j
		mov	ax, cx
		add	ax, bp
		jg	short loc_21D88
		jmp	loc_21F45
; ---------------------------------------------------------------------------

loc_21D88:				; CODE XREF: sub_21D42+41j
		mov	ax, dx
		add	ax, bx
		jns	short loc_21D91
		jmp	loc_21F45
; ---------------------------------------------------------------------------

loc_21D91:				; CODE XREF: sub_21D42+4Aj
		mov	word ptr unk_54890, 0
		cmp	ax, ss:10h
		jle	short loc_21DA5
		sub	ax, ss:10h
		sub	bx, ax

loc_21DA5:				; CODE XREF: sub_21D42+5Aj
		test	dx, dx
		jns	short loc_21DD7
		add	bx, dx
		neg	dx
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		cmp	bp, 8
		jle	short loc_21DD2
		cmp	bp, 10h
		jg	short loc_21DC1
		shl	ax, 1
		jmp	short loc_21DD2
; ---------------------------------------------------------------------------

loc_21DC1:				; CODE XREF: sub_21D42+79j
		cmp	bp, 18h
		jg	short loc_21DCE
		mov	dx, ax
		shl	ax, 1
		add	ax, dx
		jmp	short loc_21DD2
; ---------------------------------------------------------------------------

loc_21DCE:				; CODE XREF: sub_21D42+82j
		shl	ax, 1
		shl	ax, 1

loc_21DD2:				; CODE XREF: sub_21D42+74j
					; sub_21D42+7Dj ...
		mov	word ptr unk_54890, ax
		xor	dx, dx

loc_21DD7:				; CODE XREF: sub_21D42+65j
		mov	di, dx
		shl	di, 1
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	di, [di-68C2h]
		mov	ax, seg_2C785
		mov	es, ax
		pop	ds
		test	cx, cx
		jns	short loc_21DF2
		jmp	loc_21F41
; ---------------------------------------------------------------------------

loc_21DF2:				; CODE XREF: sub_21D42+ABj
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jle	short loc_21DFE
		jmp	loc_21F43
; ---------------------------------------------------------------------------

loc_21DFE:				; CODE XREF: sub_21D42+B7j
		mov	dx, cx
		shr	dx, 1
		shr	dx, 1
		add	di, dx
		and	cx, 3
		shl	cx, 1
		add	si, word_28530
		cmp	bp, 8
		jg	short loc_21E17
		jmp	loc_21F1B
; ---------------------------------------------------------------------------

loc_21E17:				; CODE XREF: sub_21D42+D0j
		cmp	bp, 10h
		jg	short loc_21E1F
		jmp	loc_21EDF
; ---------------------------------------------------------------------------

loc_21E1F:				; CODE XREF: sub_21D42+D8j
		cmp	bp, 18h
		jle	short loc_21E8D

loc_21E24:				; CODE XREF: sub_21D42+146j
		lodsb
		inc	si
		shr	al, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-1]
		xor	al, al
		shr	ax, cl
		or	es:[di], al
		add	di, 48h	; 'H'
		dec	bl
		jns	short loc_21E24
		jmp	loc_21F45
; ---------------------------------------------------------------------------

loc_21E8D:				; CODE XREF: sub_21D42+E0j
					; sub_21D42+199j
		lodsb
		inc	si
		shr	al, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		xor	al, al
		shr	ax, cl
		or	es:[di], al
		add	di, 4Ah	; 'J'
		dec	bl
		jns	short loc_21E8D
		jmp	short loc_21F45
; ---------------------------------------------------------------------------

loc_21EDF:				; CODE XREF: sub_21D42+DAj
					; sub_21D42+1D5j
		lodsb
		inc	si
		shr	al, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		xor	al, al
		shr	ax, cl
		or	es:[di], al
		add	di, 4Ch	; 'L'
		dec	bl
		jns	short loc_21EDF
		jmp	short loc_21F45
; ---------------------------------------------------------------------------

loc_21F1B:				; CODE XREF: sub_21D42+D2j
					; sub_21D42+1FBj
		lodsb
		inc	si
		shr	al, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		lodsb
		inc	si
		shr	ax, cl
		or	es:[di], al
		inc	di
		mov	ah, [si-2]
		xor	al, al
		shr	ax, cl
		or	es:[di], al
		add	di, 4Eh	; 'N'
		dec	bl
		jns	short loc_21F1B
		jmp	short loc_21F45
; ---------------------------------------------------------------------------

loc_21F41:				; CODE XREF: sub_21D42+ADj
		jmp	short loc_21F45
; ---------------------------------------------------------------------------

loc_21F43:				; CODE XREF: sub_21D42+B9j
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_21F45:				; CODE XREF: sub_21D42+30j
					; sub_21D42+3Aj ...
		pop	ax
		mov	ds, ax
		mov	es, ax
		retf
sub_21D42	endp


; =============== S U B	R O U T	I N E =======================================


sub_21F4B	proc far		; CODE XREF: seg000:0927P
					; DATA XREF: seg000:0935o ...
		mov	bx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
		sub	bx, [si]
		cmp	bx, 140h
		jnb	short locret_21FC8
		sub	dx, [si+2]
		cmp	dx, 0C0h ; '
		jge	short locret_21FC8
		mov	cx, [si+4]
		mov	ax, bx
		and	bx, 3
		xor	ax, bx
		shl	bx, 1
		mov	si, [bx+si+6]
		test	dx, dx
		jns	short loc_21F82
		sub	si, dx
		sub	si, dx
		add	cx, dx
		jle	short locret_21FC8
		xor	dx, dx

loc_21F82:				; CODE XREF: sub_21F4B+2Bj
		mov	bx, dx
		add	bx, cx
		sub	bx, 0C0h ; '
		jle	short loc_21F90
		sub	cx, bx
		jle	short locret_21FC8

loc_21F90:				; CODE XREF: sub_21F4B+3Fj
		mov	bx, ax
		mov	di, dx
		shl	di, 1
		mov	di, [di-68C2h]
		shr	bx, 1
		shr	bx, 1
		add	di, bx
		mov	ax, seg_2C785
		mov	es, ax
		cmp	bx, 138h
		jge	short loc_21FBA

loc_21FAB:				; CODE XREF: sub_21F4B+6Bj
		lodsb
		call	sub_21FC9
		lodsb
		call	sub_21FC9
		add	di, 4Ch	; 'L'
		loop	loc_21FAB
		jmp	short loc_21FC4
; ---------------------------------------------------------------------------

loc_21FBA:				; CODE XREF: sub_21F4B+5Ej
					; sub_21F4B+77j
		lodsb
		call	sub_21FC9
		inc	si
		add	di, 4Eh	; 'N'
		loop	loc_21FBA

loc_21FC4:				; CODE XREF: sub_21F4B+6Dj
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_21FC8:				; CODE XREF: sub_21F4B+Fj
					; sub_21F4B+18j ...
		retf
sub_21F4B	endp


; =============== S U B	R O U T	I N E =======================================


sub_21FC9	proc near		; CODE XREF: sub_21F4B+61p
					; sub_21F4B+65p ...
		mov	ah, al
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		rol	ax, 1
		rcl	al, 1
		or	es:[di], al
		inc	di
		retn
sub_21FC9	endp


; =============== S U B	R O U T	I N E =======================================


sub_21FF4	proc far		; CODE XREF: sub_10985+8P
					; DATA XREF: seg000:099Bo ...
		xor	di, di
		mov	si, 0
		add	si, word_316BE
		mov	dx, word_316C6
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	cx, 10h
		sub	cx, dx
		mov	bl, 14h

loc_2200D:				; CODE XREF: sub_21FF4+3Fj
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		add	si, dx
		shl	si, 1
		shl	si, 1
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		push	di
		push	cx

loc_22021:				; CODE XREF: sub_21FF4+32j
		movsw
		movsw
		add	di, 4Ch	; 'L'
		loop	loc_22021
		mov	bp, di
		pop	cx
		pop	di
		add	di, 4
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_2200D
		mov	di, bp
		sub	di, 4Ch	; 'L'
		mov	bx, 0B14h
		mov	bp, 4Ch	; 'L'

loc_22040:				; CODE XREF: sub_21FF4+A6j
					; sub_21FF4+B0j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		shl	si, 1
		shl	si, 1
		mov	cx, ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		movsw
		movsw
		add	di, bp
		sub	di, 4FCh
		mov	ds, cx
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_22040
		mov	bl, 14h
		add	di, 4B0h
		dec	bh
		jnz	short loc_22040
		test	dx, dx
		jz	short loc_220CF
		mov	bl, 14h

loc_220AC:				; CODE XREF: sub_21FF4+D9j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		shl	si, 1
		shl	si, 1
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		push	di
		mov	cx, dx

loc_220BF:				; CODE XREF: sub_21FF4+CFj
		movsw
		movsw
		add	di, bp
		loop	loc_220BF
		pop	di
		add	di, 4
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_220AC

loc_220CF:				; CODE XREF: sub_21FF4+B4j
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_21FF4	endp


; =============== S U B	R O U T	I N E =======================================


sub_220D4	proc far		; CODE XREF: sub_109A7+8P
					; DATA XREF: seg000:09BDo ...
		push	cs
		call	near ptr sub_22152
		call	sub_220DC
		retf
sub_220D4	endp


; =============== S U B	R O U T	I N E =======================================


sub_220DC	proc near		; CODE XREF: sub_220D4+4p
					; sub_22168+12p ...
		push	ds
		cmp	word_2B574, 4
		jz	short loc_22111
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	ax, seg_2C785
		mov	ds, ax
		xor	si, si
		xor	di, di
		mov	cx, 64h	; 'd'

loc_220F5:				; CODE XREF: sub_220DC+2Dj
		push	cx
		mov	cx, 28h	; '('
		rep movsw
		add	di, 1FB0h
		mov	cx, 28h	; '('
		rep movsw
		sub	di, 2000h
		pop	cx
		loop	loc_220F5
		pop	ax
		mov	ds, ax
		mov	es, ax
		assume es:nothing
		retn
; ---------------------------------------------------------------------------

loc_22111:				; CODE XREF: sub_220DC+6j
		mov	ax, 0B000h
		mov	es, ax
		assume es:nothing
		mov	ax, seg_2C785
		mov	ds, ax
		xor	si, si
		xor	di, di
		mov	cx, 15Ch
		mov	ax, 0AEh ; '

loc_22125:				; CODE XREF: sub_220DC+6Ej
		push	cx
		mov	cx, 28h	; '('
		add	di, 5
		rep movsw
		add	di, 5
		add	di, 1FA6h
		jns	short loc_2213B
		sub	di, 7FA6h

loc_2213B:				; CODE XREF: sub_220DC+59j
		add	ax, 94h	; '
		cmp	ax, 15Ch
		jl	short loc_22149
		sub	si, 50h	; 'P'
		sub	ax, 15Ch

loc_22149:				; CODE XREF: sub_220DC+65j
		pop	cx
		loop	loc_22125
		pop	ax
		mov	ds, ax
		mov	es, ax
		assume es:nothing
		retn
sub_220DC	endp


; =============== S U B	R O U T	I N E =======================================


sub_22152	proc far		; CODE XREF: seg000:09D1P sub_109EB+8P ...
		push	es
		mov	ax, seg_2C785
		mov	es, ax
		xor	ax, ax
		xor	di, di
		mov	cx, 1F40h
		rep stosw
		pop	es
		retf
sub_22152	endp


; =============== S U B	R O U T	I N E =======================================


sub_22163	proc far		; CODE XREF: sub_10A0D+8P
					; DATA XREF: seg000:0A23o ...
		push	cs
		call	near ptr sub_22152
		retf
sub_22163	endp


; =============== S U B	R O U T	I N E =======================================


sub_22168	proc far		; CODE XREF: sub_10A2F+8P sub_10A51+8P ...
		call	sub_10EF1

loc_2216D:				; CODE XREF: sub_22168+Aj
		cmp	word_2B576, 0
		jz	short loc_2216D
		mov	word_2B576, 0
		call	sub_220DC
		retf
sub_22168	endp


; =============== S U B	R O U T	I N E =======================================


sub_2217E	proc far		; CODE XREF: sub_10A73+8P
					; DATA XREF: seg000:0A89o ...
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	si, 0
		mov	di, 3C00h
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 140h
		rep movsw
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		retf
sub_2217E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2219A	proc far		; CODE XREF: sub_10A95+8P
					; DATA XREF: seg000:0AABo ...
		mov	ax, seg_2C785
		mov	es, ax
		mov	si, 9C80h
		mov	cx, 50h	; 'P'

loc_221A5:				; CODE XREF: sub_2219A:loc_2222Aj
		lodsw
		test	ax, ax
		js	short loc_22223
		mov	bx, ax
		lodsw
		mov	dx, ax
		lodsw
		add	bx, ax
		lodsw
		add	dx, ax
		cmp	bx, 13Ch
		jnb	short loc_2221C
		cmp	dx, 0BCh ; '
		jnb	short loc_2221C
		mov	[si-8],	bx
		mov	[si-6],	dx
		push	bx
		push	dx
		push	cx
		mov	ax, bx
		mov	bx, dx
		call	sub_10EDD
		jz	short loc_221EC
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ax, cs:word_23038
		push	si
		call	sub_10EE1
		pop	si
		pop	es
		assume es:nothing
		pop	cx
		add	sp, 4
		jmp	short loc_2221C
; ---------------------------------------------------------------------------

loc_221EC:				; CODE XREF: sub_2219A+39j
		pop	cx
		pop	dx
		mov	di, dx
		shl	di, 1
		mov	di, [di-68C2h]
		pop	ax
		push	cx
		mov	cx, ax
		and	cx, 3
		shl	cx, 1
		shr	ax, 1
		shr	ax, 1
		add	di, ax
		mov	ax, 0F000h
		shr	ax, cl
		pop	cx
		or	es:[di], ah
		or	es:[di+50h], ah
		or	es:[di+1], al
		or	es:[di+51h], al
		jmp	short loc_22226
; ---------------------------------------------------------------------------

loc_2221C:				; CODE XREF: sub_2219A+1Fj
					; sub_2219A+25j ...
		mov	word ptr [si-8], 0FFFFh
		jmp	short loc_22226
; ---------------------------------------------------------------------------

loc_22223:				; CODE XREF: sub_2219A+Ej
		add	si, 6

loc_22226:				; CODE XREF: sub_2219A+80j
					; sub_2219A+87j
		loop	loc_2222A
		jmp	short loc_2222D
; ---------------------------------------------------------------------------

loc_2222A:				; CODE XREF: sub_2219A:loc_22226j
		jmp	loc_221A5
; ---------------------------------------------------------------------------

loc_2222D:				; CODE XREF: sub_2219A+8Ej
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2219A	endp


; =============== S U B	R O U T	I N E =======================================


sub_22232	proc far		; CODE XREF: seg000:0ABFP
					; DATA XREF: seg000:0ACDo ...
		mov	ax, [si+34h]
		mov	word_3822E, ax
		mov	ax, [si+12h]
		mov	word_38212, ax
		mov	ax, [si+16h]
		mov	word_38216, ax
		push	si
		push	cs
		call	near ptr sub_2224B
		pop	si
		retf
sub_22232	endp


; =============== S U B	R O U T	I N E =======================================


sub_2224B	proc far		; CODE XREF: sub_22232+14p
		add	word_38212, 4
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_38212
		mov	word_2B7EA, ax
		mov	ax, word_38216
		mov	word_2B7EC, ax
		mov	ax, word_3822E
		mov	word_2B7F0, ax
		mov	ax, [si+1Ah]
		mov	word_2B7EE, ax
		cmp	word_38212, 0FFF0h
		jg	short loc_22280
		jmp	loc_22349
; ---------------------------------------------------------------------------

loc_22280:				; CODE XREF: sub_2224B+30j
		cmp	word_38212, 140h
		jl	short loc_2228B
		jmp	loc_22349
; ---------------------------------------------------------------------------

loc_2228B:				; CODE XREF: sub_2224B+3Bj
		cmp	word_2B7EE, 41h	; 'A'
		jl	short loc_222B5
		mov	bx, word_3822E
		shl	bx, 1
		mov	si, [bx+32C2h]
		mov	cx, word_38212
		mov	dx, word_38216
		inc	dx
		push	cs
		call	near ptr sub_2191D
		mov	ax, word_2B7EA
		mov	word_38212, ax
		mov	ax, word_2B7EC
		mov	word_38216, ax

loc_222B5:				; CODE XREF: sub_2224B+45j
		mov	ax, word_2B7EE
		sub	word_38216, ax
		mov	si, 32C8h
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	si, [bx+32C8h]
		mov	cx, word_38212
		mov	dx, word_38216
		push	cs
		call	near ptr sub_2191D
		cmp	word_2B7EC, 0
		js	short loc_22349
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	di, word_2B7EC
		shl	di, 1
		mov	di, [di-68C2h]
		mov	ax, word_2B7EA
		sar	ax, 1
		sar	ax, 1
		add	di, ax
		mov	bp, word_2B7EA
		and	bp, 0FFFCh
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	cx, word_2B7EA
		and	cx, 3
		shl	cx, 1
		mov	al, 0FFh
		shr	al, cl
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	al, 0FFh
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	ah, 0FFh
		mov	al, [bx+423Dh]
		shr	ax, cl
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	ah, [bx+423Dh]
		mov	al, [bx+423Eh]
		shr	ax, cl
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	ah, [bx+423Eh]
		xor	al, al
		shr	ax, cl
		call	sub_2234E

loc_22349:				; CODE XREF: sub_2224B+32j
					; sub_2224B+3Dj ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2224B	endp


; =============== S U B	R O U T	I N E =======================================


sub_2234E	proc near		; CODE XREF: sub_2224B+C3p
					; sub_2224B+CCp ...
		cmp	bp, 140h
		jnb	short locret_22385
		test	al, al
		jz	short locret_22385
		cmp	al, 0FFh
		jz	short loc_22371
		push	cx
		push	di
		mov	cx, word_2B7EE
		jcxz	short loc_2236E

loc_22364:				; CODE XREF: sub_2234E+1Ej
		or	es:[di], al
		sub	di, 50h	; 'P'
		js	short loc_2236E
		loop	loc_22364

loc_2236E:				; CODE XREF: sub_2234E+14j
					; sub_2234E+1Cj ...
		pop	di
		pop	cx
		retn
; ---------------------------------------------------------------------------

loc_22371:				; CODE XREF: sub_2234E+Cj
		push	cx
		push	di
		mov	cx, word_2B7EE
		jcxz	short loc_2236E

loc_22379:				; CODE XREF: sub_2234E+33j
		mov	es:[di], al
		sub	di, 50h	; 'P'
		js	short loc_2236E
		loop	loc_22379
		pop	di
		pop	cx

locret_22385:				; CODE XREF: sub_2234E+4j sub_2234E+8j
		retn
sub_2234E	endp


; =============== S U B	R O U T	I N E =======================================


sub_22386	proc far		; CODE XREF: sub_10E4D+8P
					; DATA XREF: seg000:0E63o ...
		mov	ax, word_31682
		mov	dx, word_31684
		sub	ax, word_31686
		sbb	dx, word_31688
		js	short loc_22403
		jnz	short loc_2239D
		test	ax, ax
		jz	short locret_22402

loc_2239D:				; CODE XREF: sub_22386+11j
		test	dx, dx
		jnz	short loc_223AB
		cmp	ax, 0C8h ; '
		jl	short loc_223C6
		cmp	ax, 7D0h
		jl	short loc_223B9

loc_223AB:				; CODE XREF: sub_22386+19j
		mov	bx, 921Fh
		mov	di, 3C0Ch
		add	word_31686, 3E8h
		jmp	short loc_223D1
; ---------------------------------------------------------------------------

loc_223B9:				; CODE XREF: sub_22386+23j
		mov	bx, 9220h
		mov	di, 3C0Eh
		add	word_31686, 64h	; 'd'
		jmp	short loc_223D1
; ---------------------------------------------------------------------------

loc_223C6:				; CODE XREF: sub_22386+1Ej
		mov	bx, 9221h
		mov	di, 3C10h
		add	word_31686, 0Ah

loc_223D1:				; CODE XREF: sub_22386+31j
					; sub_22386+3Ej
		adc	word_31688, 0
		cmp	word_313AA, 0
		jz	short loc_223E0
		add	di, 36h	; '6'

loc_223E0:				; CODE XREF: sub_22386+55j
		mov	si, 500h

loc_223E3:				; CODE XREF: sub_22386+7Aj
		inc	byte ptr [bx]
		cmp	byte ptr [bx], 0Ah
		jl	short loc_223ED
		mov	byte ptr [bx], 0

loc_223ED:				; CODE XREF: sub_22386+62j
		mov	al, [bx]
		push	cs
		call	near ptr sub_2244F
		cmp	byte ptr [bx], 0
		jnz	short locret_22402
		sub	di, 2
		dec	bx
		cmp	bx, 921Ch
		jge	short loc_223E3

locret_22402:				; CODE XREF: sub_22386+15j
					; sub_22386+70j
		retf
; ---------------------------------------------------------------------------

loc_22403:				; CODE XREF: sub_22386+Fj
		mov	ax, word_31686
		mov	word_31682, ax
		mov	ax, word_31688
		mov	word_31684, ax
		retf
sub_22386	endp


; =============== S U B	R O U T	I N E =======================================


sub_22410	proc far		; CODE XREF: sub_10E6F+8P
					; DATA XREF: seg000:0E85o ...
		mov	di, 3C06h
		cmp	word_313AA, 0
		jz	short loc_2241D
		mov	di, 3C3Ch

loc_2241D:				; CODE XREF: sub_22410+8j
		mov	si, 500h
		mov	cx, 7

loc_22423:				; CODE XREF: sub_22410+1Cj
		xor	al, al
		push	cs
		call	near ptr sub_2244F
		add	di, 2
		loop	loc_22423
		retf
sub_22410	endp


; =============== S U B	R O U T	I N E =======================================


sub_2242F	proc far		; CODE XREF: sub_10E91+8P
					; DATA XREF: seg000:0EA7o ...
		mov	ax, word_316BA
		cmp	ax, 9
		jle	short loc_2243A
		mov	ax, 9

loc_2243A:				; CODE XREF: sub_2242F+6j
		mov	si, 640h
		mov	di, 3C72h
		cmp	word_313AA, 0
		jz	short loc_2244A
		mov	di, 3C7Ch

loc_2244A:				; CODE XREF: sub_2242F+16j
		push	cs
		call	near ptr sub_2244F
		retf
sub_2242F	endp


; =============== S U B	R O U T	I N E =======================================


sub_2244F	proc far		; CODE XREF: sub_22386+6Ap
					; sub_22410+16p ...
		push	di
		push	si
		push	cx
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 8
		mov	ax, 4Eh	; 'N'
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		movsw
		add	di, ax
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		pop	cx
		pop	si
		pop	di
		retf
sub_2244F	endp


; =============== S U B	R O U T	I N E =======================================


sub_22490	proc far		; CODE XREF: seg000:0AE1P sub_224F5+Ep
					; DATA XREF: ...
		push	cs
		call	near ptr sub_22495
		retf
sub_22490	endp


; =============== S U B	R O U T	I N E =======================================


sub_22495	proc far		; CODE XREF: sub_10AFB+8P sub_22490+1p
					; DATA XREF: ...
		mov	di, word_2BC82
		shl	di, 1
		mov	di, [di-68C2h]
		push	word ptr [si+14h]
		push	si
		mov	byte ptr [si+14h], 0
		push	cs
		call	near ptr sub_2253A
		pop	si
		pop	word ptr [si+14h]
		retf
sub_22495	endp


; =============== S U B	R O U T	I N E =======================================


sub_224B0	proc far		; CODE XREF: sub_1577D-4C58P
					; DATA XREF: seg000:0B33o ...
		mov	di, 35E2h
		mov	word_38212, ax
		mov	word_38214, dx
		mov	bx, 3756h
		mov	si, 500h

loc_224C0:				; CODE XREF: sub_224B0+42j
		cmp	word ptr [bx], 0
		jz	short locret_224F4
		xor	dx, dx

loc_224C7:				; CODE XREF: sub_224B0+27j
		mov	ax, [bx]
		sub	word_38212, ax
		mov	ax, [bx+2]
		sbb	word_38214, ax
		js	short loc_224D9
		inc	dx
		jmp	short loc_224C7
; ---------------------------------------------------------------------------

loc_224D9:				; CODE XREF: sub_224B0+24j
		mov	ax, [bx]
		add	word_38212, ax
		mov	ax, [bx+2]
		adc	word_38214, ax
		add	bx, 4
		mov	al, dl
		push	cs
		call	near ptr sub_2244F
		add	di, 2
		jmp	short loc_224C0
; ---------------------------------------------------------------------------

locret_224F4:				; CODE XREF: sub_224B0+13j
		retf
sub_224B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_224F5	proc far		; CODE XREF: sub_10B3F+8P
					; DATA XREF: seg000:0B55o ...
		push	cs
		call	near ptr sub_22152
		mov	word_2BC82, 0Ch
		mov	si, 352Bh
		push	cs
		call	near ptr sub_22490
		mov	si, 358Fh
		mov	di, 0BE8h
		mov	cx, 0Ah

loc_2250F:				; CODE XREF: sub_224F5+2Bj
		push	si
		push	di
		push	cx
		push	cs
		call	near ptr sub_22529
		pop	cx
		pop	di
		pop	si
		add	si, 0Fh
		add	di, 500h
		loop	loc_2250F
		push	cs
		call	near ptr sub_21870
		jmp	near ptr sub_22168
sub_224F5	endp


; =============== S U B	R O U T	I N E =======================================


sub_22529	proc far		; CODE XREF: sub_224F5+1Ep
		push	word ptr [si+0Fh]
		push	si
		mov	byte ptr [si+0Fh], 0
		push	cs
		call	near ptr sub_22548
		pop	si
		pop	word ptr [si+0Fh]
		retf
sub_22529	endp


; =============== S U B	R O U T	I N E =======================================


sub_2253A	proc far		; CODE XREF: seg000:0B69P
					; sub_22495+13p
					; DATA XREF: ...
		mov	bp, 780h
		mov	cx, 16h
		push	cs
		call	near ptr sub_22553
		retf
sub_2253A	endp


; =============== S U B	R O U T	I N E =======================================


sub_22545	proc near		; CODE XREF: sub_10B83+8P
					; DATA XREF: seg000:0B99o ...
		mov	di, 39ACh
sub_22545	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_22548	proc far		; CODE XREF: sub_22529+9p
		mov	bp, 2300h
		mov	cx, 0Eh
		push	cs
		call	near ptr sub_22553
		retf
sub_22548	endp


; =============== S U B	R O U T	I N E =======================================


sub_22553	proc far		; CODE XREF: sub_2253A+7p sub_22548+7p ...
		lodsb
		test	al, al
		jz	short locret_22567
		xchg	si, bp
		push	si
		push	cs
		call	near ptr sub_22568
		pop	si
		xchg	si, bp
		add	di, 4
		jmp	short near ptr sub_22553
; ---------------------------------------------------------------------------

locret_22567:				; CODE XREF: sub_22553+3j
		retf
sub_22553	endp


; =============== S U B	R O U T	I N E =======================================


sub_22568	proc far		; CODE XREF: sub_22553+9p
		push	di
		push	cx
		push	di
		mov	byte_2B922, al
		mov	di, 33CAh
		mov	cx, 33F2h
		sub	cx, 33CAh
		inc	cx
		repne scasb
		mov	ax, di
		sub	ax, 33CBh
		pop	di
		cmp	ax, 28h	; '('
		jz	short loc_225A9
		pop	cx
		mul	cx
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	cx
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 4Ch	; 'L'

loc_2259E:				; CODE XREF: sub_22568+3Aj
		movsw
		movsw
		add	di, ax
		loop	loc_2259E
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax

loc_225A9:				; CODE XREF: sub_22568+1Cj
		pop	cx
		pop	di
		retf
sub_22568	endp


; =============== S U B	R O U T	I N E =======================================


sub_225AC	proc far		; CODE XREF: sub_10BA5+8P
					; DATA XREF: seg000:0BBBo ...
		cmp	byte_314DF, 0
		jz	short locret_22615
		mov	byte_314DF, 0
		mov	ax, seg_2C785
		mov	es, ax
		mov	bx, word_316B6
		cmp	bx, 27h	; '''
		jle	short loc_225C9
		mov	bx, 27h	; '''

loc_225C9:				; CODE XREF: sub_225AC+18j
		sub	bx, 27h	; '''
		neg	bx
		mov	di, 3D06h
		mov	al, 3
		cmp	word_313AA, 0
		jz	short loc_225DF
		mov	di, 3D1Fh
		mov	al, 0Ch

loc_225DF:				; CODE XREF: sub_225AC+2Cj
		mov	cx, 27h	; '''
		mov	ah, al
		not	ah

loc_225E6:				; CODE XREF: sub_225AC:loc_2260Fj
		cmp	cx, bx
		jnz	short loc_225EC
		xor	al, al

loc_225EC:				; CODE XREF: sub_225AC+3Cj
		and	es:[di], ah
		and	es:[di+50h], ah
		and	es:[di+0A0h], ah
		or	es:[di], al
		or	es:[di+50h], al
		or	es:[di+0A0h], al
		ror	al, 1
		ror	al, 1
		ror	ah, 1
		ror	ah, 1
		jb	short loc_2260F
		inc	di

loc_2260F:				; CODE XREF: sub_225AC+60j
		loop	loc_225E6
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_22615:				; CODE XREF: sub_225AC+5j
		retf
sub_225AC	endp


; =============== S U B	R O U T	I N E =======================================


sub_22616	proc far		; CODE XREF: sub_10BC7+8P
					; DATA XREF: seg000:0BDDo ...
		cmp	word_2B8EC, 0
		jnz	short loc_2262F
		push	ds
		mov	ax, seg_2C785
		mov	ds, ax
		mov	si, 3C00h
		mov	di, 923Eh
		mov	cx, 140h
		rep movsw
		pop	ds

loc_2262F:				; CODE XREF: sub_22616+5j
		inc	byte ptr word_2B8EC
		retf
sub_22616	endp


; =============== S U B	R O U T	I N E =======================================


sub_22634	proc far		; CODE XREF: sub_10BE9+8P
					; DATA XREF: seg000:0BFFo ...
		dec	byte ptr word_2B8EC
		jnz	short locret_2264C
		push	es
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	si, 923Eh
		mov	di, 3C00h
		mov	cx, 140h
		rep movsw
		pop	es

locret_2264C:				; CODE XREF: sub_22634+4j
		retf
sub_22634	endp


; =============== S U B	R O U T	I N E =======================================


sub_2264D	proc far		; CODE XREF: sub_22651+89p
		call	sub_220DC
		retf
sub_2264D	endp


; =============== S U B	R O U T	I N E =======================================


sub_22651	proc far		; CODE XREF: sub_10C0B+8P
					; DATA XREF: seg000:0C21o ...
		push	cs
		call	near ptr sub_22152
		mov	si, 3740h

loc_22658:				; CODE XREF: sub_22651+2Cj
		mov	ax, cs:[si]
		add	si, 2
		test	ax, ax
		jz	short loc_2267F
		mov	bp, ax
		mov	di, cs:[si]
		add	si, 2
		mov	dx, cs:[si]
		add	si, 2
		mov	cx, cs:[si]
		add	si, 2
		push	si
		mov	si, bp
		call	sub_2273E
		pop	si
		jmp	short loc_22658
; ---------------------------------------------------------------------------

loc_2267F:				; CODE XREF: sub_22651+Fj
		xor	dx, dx

loc_22681:				; CODE XREF: sub_22651+58j
		xor	cx, cx

loc_22683:				; CODE XREF: sub_22651+4Fj
		push	cx
		push	dx
		mov	si, 0EC90h
		push	cs
		call	near ptr sub_2191D
		pop	dx
		pop	cx
		push	cx
		push	dx
		mov	si, 0EFC0h
		push	cs
		call	near ptr sub_2191D
		pop	dx
		pop	cx
		add	cx, 29h	; ')'
		cmp	cx, 0CDh ; '
		jl	short loc_22683
		add	dx, 29h	; ')'
		cmp	dx, 0A4h ; '
		jl	short loc_22681
		cmp	word_313AA, 0
		jz	short loc_226BF
		mov	si, 0FC4Ah
		mov	cx, 0C1h ; '
		mov	dx, 0BCh ; '
		push	cs
		call	near ptr sub_2191D

loc_226BF:				; CODE XREF: sub_22651+5Fj
		mov	si, 0FE00h
		mov	cx, 59h	; 'Y'
		mov	dx, 0AAh ; '
		push	cs
		call	near ptr sub_2191D
		mov	si, 0FE74h
		mov	cx, 0A5h ; '
		mov	dx, 0BCh ; '
		push	cs
		call	near ptr sub_2191D
		push	cs
		call	near ptr sub_2264D
		retf
sub_22651	endp


; =============== S U B	R O U T	I N E =======================================


sub_226DE	proc far		; CODE XREF: sub_10C2D+8P
					; DATA XREF: seg000:0C43o ...
		push	si
		push	cx
		push	dx
		push	cs
		call	near ptr sub_2191D
		pop	dx
		pop	cx
		pop	ax
		mov	si, 0FD3Ah
		cmp	ax, 0E3ECh
		jz	short loc_22719
		mov	si, 0FD7Ch
		cmp	ax, 0E5F0h
		jz	short loc_22719
		mov	si, 0FDBEh
		cmp	ax, 0E7F4h
		jz	short loc_22719
		mov	si, 0FC74h
		cmp	ax, 0DDE0h
		jz	short loc_22719
		mov	si, 0FCB6h
		cmp	ax, 0DFE4h
		jz	short loc_22719
		mov	si, 0FCF8h
		cmp	ax, 0E1E8h
		jz	short loc_22719
		retf
; ---------------------------------------------------------------------------

loc_22719:				; CODE XREF: sub_226DE+10j
					; sub_226DE+18j ...
		push	cs
		call	near ptr sub_2191D
		retf
sub_226DE	endp


; =============== S U B	R O U T	I N E =======================================


sub_2271E	proc far		; CODE XREF: sub_10C4F+8P
					; DATA XREF: seg000:0C65o ...
		push	cs
		call	near ptr sub_22152
		mov	ax, seg_2C785
		mov	es, ax
		mov	di, 1F68h
		or	byte ptr es:[di], 3Ch
		or	byte ptr es:[di+50h], 0FFh
		or	byte ptr es:[di+0A0h], 3Ch
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2271E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2273E	proc near		; CODE XREF: sub_22651+28p
					; sub_229C0+Cp
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005

loc_22749:				; CODE XREF: sub_2273E+16j
		push	di
		push	cx
		mov	cx, dx
		rep movsw
		pop	cx
		pop	di
		add	di, 50h	; 'P'
		loop	loc_22749
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		retn
sub_2273E	endp


; =============== S U B	R O U T	I N E =======================================


sub_2275C	proc far		; CODE XREF: sub_10C71+8P
					; DATA XREF: seg000:0C87o ...
		mov	ax, seg_2C785
		mov	es, ax
		mov	di, 23D4h
		mov	cx, 45h	; 'E'
		call	sub_2276F
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2275C	endp


; =============== S U B	R O U T	I N E =======================================


sub_2276F	proc near		; CODE XREF: sub_2275C+Bp
					; sub_228BD+16p
		jmp	short loc_2278A
; ---------------------------------------------------------------------------

loc_22771:				; CODE XREF: sub_2276F:loc_2278Aj
		and	byte ptr es:[di+1], 0FCh
		add	di, 2
		xor	ax, ax
		push	cx
		mov	cx, 0Bh
		rep stosw
		pop	cx
		stosb
		and	byte ptr es:[di], 3Fh
		add	di, 37h	; '7'

loc_2278A:				; CODE XREF: sub_2276Fj
		loop	loc_22771
		retn
sub_2276F	endp


; =============== S U B	R O U T	I N E =======================================


sub_2278D	proc far		; CODE XREF: sub_10C93+8P
					; DATA XREF: seg000:0CA9o ...
		mov	si, 8430h
		mov	di, 304h
		mov	cx, 34h	; '4'
		call	sub_228E5
		mov	si, 8F90h
		mov	di, 1DE4h
		mov	cx, 0Ah
		call	sub_228E5
		mov	si, 91C0h
		cmp	byte ptr word_31470, 0
		jz	short loc_227C3
		call	sub_10ED9
		mov	cx, 4
		jmp	short loc_227BD
; ---------------------------------------------------------------------------

loc_227B9:				; CODE XREF: sub_2278D+34j
		add	si, 3B8h

loc_227BD:				; CODE XREF: sub_2278D+2Aj
		shr	ax, 1
		jb	short loc_227C3
		loop	loc_227B9

loc_227C3:				; CODE XREF: sub_2278D+20j
					; sub_2278D+32j
		mov	di, 1344h
		mov	cx, 22h	; '"'
		call	sub_228E5
		call	sub_10EE5
		call	sub_10EE9
		cmp	word_3146C, 0
		jnz	short loc_227E0
		jmp	locret_228BC
; ---------------------------------------------------------------------------

loc_227E0:				; CODE XREF: sub_2278D+4Ej
		cmp	word_3146C, 8
		jle	short loc_2281E
		mov	di, 304h
		mov	si, 5C18h
		mov	ax, 30h	; '0'
		sub	ax, word_3146C
		mov	dx, 1Ch
		mul	dx
		add	si, ax
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_228E5
		mov	di, 2384h
		mov	ax, 50h	; 'P'
		mul	word_3146C
		sub	di, ax
		mov	si, 64D8h
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_228E5

loc_2281E:				; CODE XREF: sub_2278D+58j
		mov	cx, 0D7h ; '
		mov	dx, word_3146C
		inc	dx
		push	dx
		mov	si, 0ABE4h
		push	cs
		call	near ptr sub_2191D
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0ACE4h
		push	cs
		call	near ptr sub_2191D
		mov	cx, 117h
		pop	dx
		mov	si, 0AD94h
		push	cs
		call	near ptr sub_2191D
		mov	cx, 0D7h ; '
		mov	dx, 70h	; 'p'
		sub	dx, word_3146C
		push	dx
		mov	si, 0AE94h
		push	cs
		call	near ptr sub_2191D
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0AF94h
		push	cs
		call	near ptr sub_2191D
		mov	cx, 117h
		pop	dx
		mov	si, 0B044h
		push	cs
		call	near ptr sub_2191D
		cmp	word_3146C, 8
		jge	short locret_228BC
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	di, 34h	; '4'
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4758h
		mov	cx, 9

loc_22889:				; CODE XREF: sub_2278D+109j
		push	cx
		mov	cx, 0Eh
		rep movsw
		pop	cx
		add	di, 34h	; '4'
		add	si, 10h
		loop	loc_22889
		pop	ds
		assume ds:dseg
		mov	di, 2104h
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4998h
		mov	cx, 9

loc_228A8:				; CODE XREF: sub_2278D+128j
		push	cx
		mov	cx, 0Eh
		rep movsw
		pop	cx
		add	di, 34h	; '4'
		add	si, 10h
		loop	loc_228A8
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax

locret_228BC:				; CODE XREF: sub_2278D+50j
					; sub_2278D+E6j
		retf
sub_2278D	endp


; =============== S U B	R O U T	I N E =======================================


sub_228BD	proc far		; CODE XREF: sub_10CB5+8P
					; DATA XREF: seg000:0CCBo ...
		cmp	word_3146E, 0
		jz	short locret_228E4
		mov	di, 23D4h
		mov	cx, 45h	; 'E'
		sub	cx, word_3146E
		mov	ax, seg_2C785
		mov	es, ax
		call	sub_2276F
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	si, 6D98h
		mov	cx, word_3146E
		call	sub_228E5

locret_228E4:				; CODE XREF: sub_228BD+5j
		retf
sub_228BD	endp


; =============== S U B	R O U T	I N E =======================================


sub_228E5	proc near		; CODE XREF: sub_2278D+9p
					; sub_2278D+15p ...
		push	ds
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005

loc_228F0:				; CODE XREF: sub_228E5+24j
		inc	si
		lodsb
		and	al, 3
		or	es:[di+1], al
		add	di, 2
		movsw
		push	cx
		mov	cx, 0Bh
		rep movsw
		add	si, 2
		pop	cx
		add	di, 36h	; '6'
		loop	loc_228F0
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		retn
sub_228E5	endp


; =============== S U B	R O U T	I N E =======================================


sub_22911	proc far		; CODE XREF: sub_10CD7+8P
					; DATA XREF: seg000:0CEDo ...
		mov	ax, seg_2C785
		mov	es, ax
		mov	si, [di+4]
		shl	si, 1
		mov	si, [si-68C2h]
		mov	ax, [di+2]
		mov	cx, ax
		and	cx, 3
		shl	cx, 1
		shr	ax, 1
		shr	ax, 1
		add	si, ax
		mov	bl, 1Ch

loc_22931:				; CODE XREF: sub_22911+61j
		mov	ax, 0FF00h
		shr	ax, cl
		not	ax
		and	es:[si], ah
		and	es:[si+8], al
		call	sub_10ED9
		mov	al, ah
		shr	ax, cl
		or	es:[si], ah
		mov	es:[si+1], al
		mov	es:[si+2], al
		mov	es:[si+3], al
		mov	es:[si+4], al
		mov	es:[si+5], al
		mov	es:[si+6], al
		mov	es:[si+7], al
		xor	al, ah
		or	es:[si+8], al
		add	si, 50h	; 'P'
		dec	bl
		jnz	short loc_22931
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_22911	endp


; =============== S U B	R O U T	I N E =======================================


sub_22979	proc far		; CODE XREF: sub_10CF9+8P
					; DATA XREF: seg000:0D0Fo ...
		cmp	al, 0Dh
		jnz	short loc_22982
		jmp	loc_10EED
; ---------------------------------------------------------------------------

loc_22982:				; CODE XREF: sub_22979+2j
		mov	di, word_31478
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, word_31476
		sub	al, 20h	; ' '
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	si, 7CB0h
		add	si, ax
		mov	ax, seg_2C785
		mov	es, ax
		assume es:nothing
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 8

loc_229AF:				; CODE XREF: sub_22979+3Bj
		movsb
		inc	si
		add	di, 4Fh	; 'O'
		loop	loc_229AF
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		inc	word_31476
		retf
sub_22979	endp


; =============== S U B	R O U T	I N E =======================================


sub_229C0	proc far		; CODE XREF: sub_10D1B+8P
					; DATA XREF: seg000:0D31o ...
		mov	si, 0AF80h
		mov	di, 0F0Ch
		mov	dx, 1Ah
		mov	cx, 36h	; '6'
		call	sub_2273E
		retf
sub_229C0	endp

; ---------------------------------------------------------------------------
		db 60h,	35h, 0,	3, 4, 0, 0BFh, 0, 50h, 41h, 1Ch, 3, 2
		db 0, 0BFh, 0, 48h, 47h, 30h, 0, 10h, 0, 9, 0, 88h, 49h
		db 0, 21h, 10h,	0, 9, 0, 0C8h, 4Bh, 18h, 39h, 0Ah, 0, 12h
		db 0, 98h, 4Eh,	40h, 33h, 18h, 0, 24h, 3 dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_22A02	proc far		; CODE XREF: seg000:0D45P
					; DATA XREF: seg000:0D53o ...
		cmp	word ptr [si+1Ch], 0
		js	short loc_22A0E
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_22A1E

loc_22A0E:				; CODE XREF: sub_22A02+4j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		push	si
		mov	si, word_2B7FA
		push	cs
		call	near ptr sub_2191D
		pop	si

loc_22A1E:				; CODE XREF: sub_22A02+Aj
		cmp	word ptr [si+1Ch], 0
		jns	short loc_22A2A
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_22A3E

loc_22A2A:				; CODE XREF: sub_22A02+20j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		add	dx, [si+1Ah]
		dec	dx
		push	si
		mov	si, word_2B7F4
		push	cs
		call	near ptr sub_2191D
		pop	si

loc_22A3E:				; CODE XREF: sub_22A02+26j
		mov	ax, [si+12h]
		mov	word_2B7EA, ax
		mov	ax, [si+1Ah]
		add	ax, [si+16h]
		dec	ax
		jle	short locret_22ABC
		mov	word_2B7EC, ax
		mov	ax, [si+1Ah]
		dec	ax
		mov	dx, word_2B7EC
		sub	dx, 0BFh ; '
		jle	short loc_22A68
		sub	ax, dx
		jle	short locret_22ABC
		mov	word_2B7EC, 0BFh ; '

loc_22A68:				; CODE XREF: sub_22A02+5Aj
		mov	word_2B7EE, ax
		mov	ax, seg_2C785
		mov	es, ax
		mov	di, word_2B7EC
		shl	di, 1
		mov	di, [di-68C2h]
		mov	ax, word_2B7EA
		sar	ax, 1
		sar	ax, 1
		add	di, ax
		mov	bp, word_2B7EA
		and	bp, 0FFFCh
		mov	cx, word_2B7EA
		and	cx, 3
		shl	cx, 1
		mov	al, 0FFh
		shr	al, cl
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	al, 0FFh
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	al, 0FFh
		call	sub_2234E
		inc	di
		add	bp, 4
		mov	ax, 0FF00h
		shr	ax, cl
		call	sub_2234E
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_22ABC:				; CODE XREF: sub_22A02+49j
					; sub_22A02+5Ej
		retf
sub_22A02	endp

; ---------------------------------------------------------------------------
		db 8 dup(0), 40h, 0, 4,	0, 40h,	0, 4, 0, 80h, 8, 80h, 8
		db 80h,	8, 80h,	8, 81h,	10h, 81h, 10h, 81h, 10h, 81h, 10h
		db 82h,	10h, 82h, 10h, 82h, 10h, 82h, 10h, 84h,	21h, 84h
		db 21h,	84h, 21h, 84h, 21h, 88h, 22h, 88h, 22h,	88h, 22h
		db 88h,	22h, 49h, 92h, 24h, 49h, 92h, 24h, 49h,	92h, 55h
		db 0AAh, 55h, 0AAh, 55h, 0AAh, 55h, 0AAh, 36h, 0EDh, 0DBh
		db 0B6h, 6Dh, 0DBh, 0B6h, 6Dh, 3Bh, 0EEh, 0BBh,	6Eh, 0BBh
		db 0EEh, 3Bh, 0EEh, 7Bh, 0DEh, 7Bh, 0DEh, 7Bh, 0DEh, 7Bh
		db 0DEh, 0BEh, 0F7h, 0BEh, 0F7h, 0BEh, 0F7h, 0BEh, 0F7h
		db 0BFh, 0FBh, 0BFh, 0FBh, 0BFh, 0FBh, 0BFh, 0FBh, 8 dup(0FFh)
word_22B35	dw 0			; DATA XREF: sub_2138Bw sub_2138B+1Ew	...
word_22B37	dw 0			; DATA XREF: sub_21582+3w sub_21582+Dw ...
word_22B39	dw 0			; DATA XREF: sub_215BB+18w
					; sub_215BB+20w ...
word_22B3B	dw 0			; DATA XREF: sub_2138B+86w
					; sub_2138B+A7w ...
		db 4 dup(0), 6,	0, 8, 0, 6, 0, 9, 0, 0Ah, 0, 0Eh, 0, 0Ch
		db 0, 2, 5 dup(0), 1, 0, 6, 0, 0Ah, 0, 7, 5 dup(0), 6
		db 0, 8, 0, 6, 0, 9, 0,	0Ah, 0,	0Eh, 0,	0Ch, 0,	2, 5 dup(0)
		db 1, 0, 6, 0, 0Ah, 0, 7, 5 dup(0), 6, 0, 8, 0,	6, 0, 9
		db 0, 0Ah, 0, 0Eh, 0, 0Ch, 0, 2, 5 dup(0), 1, 0, 6, 0
		db 0Ah,	0, 7, 5	dup(0),	6, 0, 8, 0, 7, 0, 9, 0,	8, 0, 0Eh
		db 0, 0Ch, 0, 2, 5 dup(0), 1, 0, 6, 0, 0Ah, 0, 7, 7 dup(0)
		db 3, 0, 6, 0, 9, 0, 0Ah, 0, 0Eh, 0, 0Ch, 0, 2,	5 dup(0)
		db 1, 0, 6, 0, 0Ah, 0, 7, 3 dup(0), 0Ch, 0, 0Ah, 0, 8
		db 0, 6, 0, 9, 0, 0Ah, 0, 0Eh, 0, 0Eh, 9 dup(0), 1, 0
		db 0Ah,	0, 7, 3	dup(0),	0Ch, 0,	0Ah, 0,	8, 0, 6, 0, 9
		db 0, 0Ah, 0, 0Eh, 0, 0Eh, 9 dup(0), 1,	0, 0Ah,	0, 7, 3	dup(0)
		db 0Eh,	0, 0Eh,	0, 0Eh,	0, 0Eh,	0, 0Eh,	0, 0Eh,	0, 0Eh
		db 0, 0Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh, 0, 0Eh
		db 0, 0Eh, 11h dup(0), 0Eh, 0Fh	dup(0)
;aC32		db '
		db 0ABh, 5, 0, 20h, 0ABh, 5, 0,	20h, 0ABh, 5, 0, 20h, 0ABh
		db 2Dh,	60h, 5Fh, 0E2h,	0EEh, 0B8h, 9, 0, 0CDh,	10h, 0B8h
		db 83h,	5, 0BBh, 4, 6, 0CDh, 10h, 0Eh, 0E8h, 92h, 14h
		db 0B8h, 83h, 5, 0BBh, 6, 4, 0CDh, 10h,	0Eh, 0E8h, 86h
		db 14h,	0C7h, 6, 55h, 42h, 6, 4, 0BEh, 9Fh, 43h, 0E8h
		db 8, 0, 0B8h, 1, 10h, 32h, 0FFh, 0CDh,	10h, 0CBh

; =============== S U B	R O U T	I N E =======================================


sub_22CA8	proc near		; CODE XREF: sub_2300D+3p sub_23014+3p ...
		mov	word_2C8CD, si
sub_22CA8	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_22CAC	proc near		; CODE XREF: sub_23023+3p
		xor	bl, bl

loc_22CAE:				; CODE XREF: sub_22CAC+Fj
		lodsb
		mov	bh, al
		mov	ax, 1000h
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		inc	bl
		cmp	bl, 10h
		jl	short loc_22CAE
		retn
sub_22CAC	endp


; =============== S U B	R O U T	I N E =======================================


sub_22CBE	proc far		; CODE XREF: sub_10EB3+8P
					; DATA XREF: seg000:0EC5o
		xor	bx, bx
		mov	cx, 10h

loc_22CC3:				; CODE XREF: sub_22CBE+11j
		mov	ax, 1000h
		push	bx
		push	cx
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		pop	cx
		pop	bx
		xor	bh, 0Fh
		loop	loc_22CC3
		mov	ax, 1000h
		xor	bx, bx
		int	10h		; - VIDEO - SET	PALETTE	REGISTER (Jr, PS, TANDY	1000, EGA, VGA)
					; BL = palette register	to set
					; BH = color value to store
		retf
sub_22CBE	endp


; =============== S U B	R O U T	I N E =======================================


sub_22CD9	proc far		; CODE XREF: sub_10DA3+8P
					; DATA XREF: seg000:0DB5o
		mov	dx, seg	seg007
		xor	si, si
		mov	cx, 6BE6h
		call	sub_22F4F
		mov	dx, seg	seg007
		mov	si, 6BE6h
		mov	cx, 3FD6h
		call	sub_22F4F
		mov	dx, seg	seg007
		mov	si, 0ABBCh
		mov	cx, 5324h
		call	sub_22F4F
		mov	si, 0
		mov	cx, 140h
		call	sub_22E5D
		mov	si, 500h
		mov	cx, 0Ah
		call	sub_22DAE
		mov	si, 640h
		mov	cx, 0Ah
		call	sub_22DAE
		mov	si, 780h
		mov	cx, 28h	; '('
		mov	dx, 16h
		call	sub_22DF0
		mov	si, 2300h
		mov	cx, 2Ah	; '*'
		mov	dx, 0Eh
		call	sub_22DF0
		mov	si, 0AF80h
		mov	cx, 2BEh
		call	sub_22EA0
		mov	si, 7CB0h
		mov	cx, 3Ch	; '<'
		call	sub_22DAE
		mov	si, 5C18h
		mov	cx, 118h
		call	sub_22EA0
		mov	si, 64D8h
		mov	cx, 118h
		call	sub_22EA0
		mov	si, 6D98h
		mov	cx, 1E3h
		call	sub_22EA0
		mov	si, 8430h
		mov	cx, 16Ch
		call	sub_22EA0
		mov	si, 8F90h
		mov	cx, 46h	; 'F'
		call	sub_22EA0
		mov	si, 91C0h
		mov	cx, 3B8h
		call	sub_22EA0
		mov	si, 3560h
		mov	cx, 17Eh
		call	sub_22EA0
		mov	si, 4150h
		mov	cx, 0BFh ; '
		call	sub_22EA0
		mov	si, 4748h
		mov	cx, 48h	; 'H'
		call	sub_22EA0
		mov	si, 4988h
		mov	cx, 48h	; 'H'
		call	sub_22EA0
		mov	si, 4BC8h
		mov	cx, 5Ah	; 'Z'
		call	sub_22EA0
		mov	si, 4E98h
		mov	cx, 1B0h
		call	sub_22EA0
		retf
sub_22CD9	endp


; =============== S U B	R O U T	I N E =======================================


sub_22DAE	proc near		; CODE XREF: sub_22CD9+32p
					; sub_22CD9+3Bp ...
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		push	si

loc_22DBC:				; CODE XREF: sub_22DAE+13j
		push	cx
		call	sub_22DDA
		pop	cx
		loop	loc_22DBC
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22DAE	endp


; =============== S U B	R O U T	I N E =======================================


sub_22DDA	proc near		; CODE XREF: sub_22DAE+Fp
		mov	cx, 8

loc_22DDD:				; CODE XREF: sub_22DDA+10j
		mov	ah, [si+8]
		mov	bl, [si+10h]
		mov	bh, [si+18h]
		lodsb
		call	sub_22FDF
		loop	loc_22DDD
		add	si, 18h
		retn
sub_22DDA	endp


; =============== S U B	R O U T	I N E =======================================


sub_22DF0	proc near		; CODE XREF: sub_22CD9+47p
					; sub_22CD9+53p
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		push	si

loc_22DFE:				; CODE XREF: sub_22DF0+13j
		push	cx
		call	sub_22E1C
		pop	cx
		loop	loc_22DFE
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22DF0	endp


; =============== S U B	R O U T	I N E =======================================


sub_22E1C	proc near		; CODE XREF: sub_22DF0+Fp
		push	si
		mov	cx, dx
		shl	dx, 1

loc_22E21:				; CODE XREF: sub_22E1C+31j
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_22FDF
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_22FDF
		loop	loc_22E21
		shr	dx, 1
		pop	si
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		retn
sub_22E1C	endp


; =============== S U B	R O U T	I N E =======================================


sub_22E5D	proc near		; CODE XREF: sub_22CD9+29p
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		mov	dx, cx
		push	si

loc_22E6D:				; CODE XREF: sub_22E5D+13j
		call	sub_22E89
		loop	loc_22E6D
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22E5D	endp


; =============== S U B	R O U T	I N E =======================================


sub_22E89	proc near		; CODE XREF: sub_22E5D:loc_22E6Dp
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_22FDF
		retn
sub_22E89	endp


; =============== S U B	R O U T	I N E =======================================


sub_22EA0	proc near		; CODE XREF: sub_22CD9+5Cp
					; sub_22CD9+6Ep ...
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		push	si

loc_22EAE:				; CODE XREF: sub_22EA0+11j
		call	sub_22ECA
		loop	loc_22EAE
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22EA0	endp


; =============== S U B	R O U T	I N E =======================================


sub_22ECA	proc near		; CODE XREF: sub_22EA0:loc_22EAEp
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_22FDF
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_22FDF
		add	si, 6
		retn
sub_22ECA	endp


; =============== S U B	R O U T	I N E =======================================


sub_22EE8	proc far		; CODE XREF: sub_10DC5+8P
					; DATA XREF: seg000:0DD7o
		mov	dx, seg	seg008
		xor	si, si
		mov	cx, 0F468h
		call	sub_22F4F
		call	sub_22EF7
		retf
sub_22EE8	endp


; =============== S U B	R O U T	I N E =======================================


sub_22EF7	proc near		; CODE XREF: sub_22EE8+Bp
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	cx, 1C9h
		xor	si, si

loc_22F07:				; CODE XREF: sub_22EF7+29j
		push	cx
		push	si
		xor	di, di
		call	sub_22F28
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		pop	cx
		loop	loc_22F07
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22EF7	endp


; =============== S U B	R O U T	I N E =======================================


sub_22F28	proc near		; CODE XREF: sub_22EF7+14p
		mov	cx, 10h

loc_22F2B:				; CODE XREF: sub_22F28+6j
		call	sub_22F31
		loop	loc_22F2B
		retn
sub_22F28	endp


; =============== S U B	R O U T	I N E =======================================


sub_22F31	proc near		; CODE XREF: sub_22F28:loc_22F2Bp
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_22FDF
		mov	ah, [si+2]
		mov	bl, [si+4]
		mov	bh, [si+6]
		lodsb
		call	sub_22FDF
		add	si, 6
		retn
sub_22F31	endp


; =============== S U B	R O U T	I N E =======================================


sub_22F4F	proc near		; CODE XREF: sub_22CD9+8p
					; sub_22CD9+14p ...
		push	ds
		mov	ds, dx
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	bp, si
		add	bp, cx
		add	si, 20h	; ' '

loc_22F5E:				; CODE XREF: sub_22F4F+57j
		add	si, 0Ch
		lodsw
		test	ax, ax
		jz	short loc_22FA8
		mov	bx, ax
		lodsw
		mov	cx, ax
		inc	cx
		mov	dx, cx
		cmp	bx, 8
		jle	short loc_22F83
		add	dx, cx
		cmp	bx, 10h
		jle	short loc_22F83
		add	dx, cx
		cmp	bx, 18h
		jle	short loc_22F83
		add	dx, cx

loc_22F83:				; CODE XREF: sub_22F4F+22j
					; sub_22F4F+29j ...
		push	bp
		mov	bp, si
		push	si
		add	si, dx
		xor	di, di
		call	sub_22FAE
		mov	cx, di
		pop	di
		xor	si, si
		push	ds
		push	es
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		rep movsb
		push	ds
		push	es
		pop	ds
		assume ds:dseg
		pop	es
		mov	si, di
		inc	si
		and	si, 0FFFEh
		pop	bp
		cmp	si, bp
		jb	short loc_22F5E

loc_22FA8:				; CODE XREF: sub_22F4F+15j
		pop	ax
		mov	ds, ax
		mov	es, ax
		retn
sub_22F4F	endp


; =============== S U B	R O U T	I N E =======================================


sub_22FAE	proc near		; CODE XREF: sub_22F4F+3Cp
		push	cx

loc_22FAF:				; CODE XREF: sub_22FAE+4j
		call	sub_22FB6
		loop	loc_22FAF
		pop	cx
		retn
sub_22FAE	endp


; =============== S U B	R O U T	I N E =======================================


sub_22FB6	proc near		; CODE XREF: sub_22FAE:loc_22FAFp
		push	bx

loc_22FB7:				; CODE XREF: sub_22FB6+25j
		push	bx
		mov	al, ds:[bp+0]
		inc	bp
		mov	es:[di], al
		inc	di
		add	si, dx
		mov	ah, [si]
		add	si, dx
		mov	bl, [si]
		add	si, dx
		mov	bh, [si]
		sub	si, dx
		sub	si, dx
		sub	si, dx
		lodsb
		call	sub_22FDF
		pop	bx
		sub	bx, 8
		jg	short loc_22FB7
		pop	bx
		retn
sub_22FB6	endp


; =============== S U B	R O U T	I N E =======================================


sub_22FDF	proc near		; CODE XREF: sub_22DDA+Dp
					; sub_22E1C+18p ...
		push	dx
		push	cx
		mov	cx, 4

loc_22FE4:				; CODE XREF: sub_22FDF+29j
		shl	bh, 1
		rcl	dl, 1
		shl	bl, 1
		rcl	dl, 1
		shl	ah, 1
		rcl	dl, 1
		shl	al, 1
		rcl	dl, 1
		shl	bh, 1
		rcl	dl, 1
		shl	bl, 1
		rcl	dl, 1
		shl	ah, 1
		rcl	dl, 1
		shl	al, 1
		rcl	dl, 1
		mov	es:[di], dl
		inc	di
		loop	loc_22FE4
		pop	cx
		pop	dx
		retn
sub_22FDF	endp


; =============== S U B	R O U T	I N E =======================================


sub_2300D	proc far		; CODE XREF: sub_10DE7+8P
					; DATA XREF: seg000:0DF9o
		mov	si, 439Fh
		call	sub_22CA8
		retf
sub_2300D	endp


; =============== S U B	R O U T	I N E =======================================


sub_23014	proc far		; CODE XREF: sub_10E09+8P
					; DATA XREF: seg000:0E1Bo
		mov	si, 43AFh
		call	sub_22CA8
		retf
sub_23014	endp


; =============== S U B	R O U T	I N E =======================================


sub_2301B	proc far		; CODE XREF: sub_10E2B+8P
					; DATA XREF: seg000:0E3Do
		mov	si, 439Fh
		call	sub_22CA8
		retf
sub_2301B	endp

; ---------------------------------------------------------------------------
byte_23022	db 0			; DATA XREF: sub_23023+6w
					; seg001:loc_23030r

; =============== S U B	R O U T	I N E =======================================


sub_23023	proc far		; CODE XREF: sub_10D5F+8P
					; DATA XREF: seg000:0D71o
		mov	si, 43BFh
		call	sub_22CAC
		mov	cs:byte_23022, 1
		retf
sub_23023	endp

; ---------------------------------------------------------------------------

loc_23030:				; CODE XREF: sub_10D81+8P
					; DATA XREF: seg000:0D93o
		cmp	cs:byte_23022, 0
		jz	short locret_23045
; ---------------------------------------------------------------------------
word_23038	dw 0C62Eh		; DATA XREF: sub_2219A+40r
; ---------------------------------------------------------------------------
		push	es
		xchg	ax, dx
		cmp	ax, 8B00h
		db	36h
		popf
		inc	bx
		call	sub_22CA8

locret_23045:				; CODE XREF: seg001:3DA6j
		retf

; =============== S U B	R O U T	I N E =======================================


sub_23046	proc far		; CODE XREF: sub_1080F+8P
					; DATA XREF: seg000:0821o
		mov	ax, word_316C8
		call	sub_10ED5
		push	es
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 9A40h
		mov	cx, 30h	; '0'
		mov	ah, 7

loc_2305C:				; CODE XREF: sub_23046+2Dj
		mov	di, [si]
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, [si+2]
		cmp	byte ptr es:[di], 0
		jnz	short loc_23070
		mov	es:[di], ah

loc_23070:				; CODE XREF: sub_23046+25j
		add	si, 6
		loop	loc_2305C
		pop	es
		assume es:nothing
		retf
sub_23046	endp


; =============== S U B	R O U T	I N E =======================================


sub_23077	proc far		; CODE XREF: sub_10831+8P
					; sub_244EC+32p
					; DATA XREF: ...
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 9A40h
		mov	cx, 30h	; '0'

loc_23082:				; CODE XREF: sub_23077:loc_23122j
		mov	ax, [si+4]
		and	ax, 7FFFh
		sub	ax, 200h
		cmp	ax, 200h
		jg	short loc_230AC

loc_23090:				; CODE XREF: sub_23077+33j
					; sub_23077+54j ...
		call	sub_10ED9
		mov	[si], ax
		call	sub_10ED9
		mov	[si+2],	ax
		call	sub_10ED9
		and	ax, 1FFFh
		cmp	ax, 200h
		jle	short loc_23090

loc_230AC:				; CODE XREF: sub_23077+17j
		mov	[si+4],	ax
		mov	ax, [si]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 0A0h ; '
		cmp	ax, 140h
		jnb	short loc_23090
		mov	bx, ax
		mov	ax, [si+2]
		cwd
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	dx, 1
		idiv	word ptr [si+4]
		add	ax, 64h	; 'd'
		cmp	ax, 0C8h ; '
		jnb	short loc_23090
		mov	di, ax
		shl	di, 1
		mov	di, [di-68C2h]
		push	cx
		mov	cx, bx
		and	cx, 1
		shl	cx, 1
		shl	cx, 1
		shr	bx, 1
		add	di, bx
		mov	ah, 0F0h ; '
		shr	ah, cl
		pop	cx
		test	es:[di], ah
		jnz	short loc_23116
		and	ah, 77h
		or	es:[di], ah
		jmp	short loc_2311B
; ---------------------------------------------------------------------------

loc_23116:				; CODE XREF: sub_23077+95j
		or	word ptr [si+4], 8000h

loc_2311B:				; CODE XREF: sub_23077+9Dj
		add	si, 6
		loop	loc_23122
		jmp	short loc_23125
; ---------------------------------------------------------------------------

loc_23122:				; CODE XREF: sub_23077+A7j
		jmp	loc_23082
; ---------------------------------------------------------------------------

loc_23125:				; CODE XREF: sub_23077+A9j
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_23077	endp


; =============== S U B	R O U T	I N E =======================================


sub_2312A	proc near		; CODE XREF: sub_23D15:loc_23DEFp
					; sub_23D15+DDp ...
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_2313B
		shl	ah, 1
		jnb	short loc_23145
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23149
; ---------------------------------------------------------------------------

loc_2313B:				; CODE XREF: sub_2312A+5j
		shl	ah, 1
		jnb	short loc_23149
		or	byte ptr es:[di], 7
		jmp	short loc_23149
; ---------------------------------------------------------------------------

loc_23145:				; CODE XREF: sub_2312A+9j
		or	byte ptr es:[di], 70h

loc_23149:				; CODE XREF: sub_2312A+Fj
					; sub_2312A+13j ...
		inc	di
		shl	ah, 1
		jnb	short loc_23158
		shl	ah, 1
		jnb	short loc_23162
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23166
; ---------------------------------------------------------------------------

loc_23158:				; CODE XREF: sub_2312A+22j
		shl	ah, 1
		jnb	short loc_23166
		or	byte ptr es:[di], 7
		jmp	short loc_23166
; ---------------------------------------------------------------------------

loc_23162:				; CODE XREF: sub_2312A+26j
		or	byte ptr es:[di], 70h

loc_23166:				; CODE XREF: sub_2312A+2Cj
					; sub_2312A+30j ...
		inc	di
		shl	ah, 1
		jnb	short loc_23175
		shl	ah, 1
		jnb	short loc_2317F
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23183
; ---------------------------------------------------------------------------

loc_23175:				; CODE XREF: sub_2312A+3Fj
		shl	ah, 1
		jnb	short loc_23183
		or	byte ptr es:[di], 7
		jmp	short loc_23183
; ---------------------------------------------------------------------------

loc_2317F:				; CODE XREF: sub_2312A+43j
		or	byte ptr es:[di], 70h

loc_23183:				; CODE XREF: sub_2312A+49j
					; sub_2312A+4Dj ...
		inc	di
		shl	ah, 1
		jnb	short loc_23192
		shl	ah, 1
		jnb	short loc_2319C
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_231A0
; ---------------------------------------------------------------------------

loc_23192:				; CODE XREF: sub_2312A+5Cj
		shl	ah, 1
		jnb	short loc_231A0
		or	byte ptr es:[di], 7
		jmp	short loc_231A0
; ---------------------------------------------------------------------------

loc_2319C:				; CODE XREF: sub_2312A+60j
		or	byte ptr es:[di], 70h

loc_231A0:				; CODE XREF: sub_2312A+66j
					; sub_2312A+6Aj ...
		inc	di
		add	si, 4
		retn
sub_2312A	endp


; =============== S U B	R O U T	I N E =======================================


sub_231A5	proc near		; CODE XREF: sub_23E4F:loc_23EADp
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_231B6
		shl	ah, 1
		jnb	short loc_231C0
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_231C4
; ---------------------------------------------------------------------------

loc_231B6:				; CODE XREF: sub_231A5+5j
		shl	ah, 1
		jnb	short loc_231C4
		or	byte ptr es:[di], 7
		jmp	short loc_231C4
; ---------------------------------------------------------------------------

loc_231C0:				; CODE XREF: sub_231A5+9j
		or	byte ptr es:[di], 70h

loc_231C4:				; CODE XREF: sub_231A5+Fj
					; sub_231A5+13j ...
		inc	di
		shl	ah, 1
		jnb	short loc_231D3
		shl	ah, 1
		jnb	short loc_231DD
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_231E1
; ---------------------------------------------------------------------------

loc_231D3:				; CODE XREF: sub_231A5+22j
		shl	ah, 1
		jnb	short loc_231E1
		or	byte ptr es:[di], 7
		jmp	short loc_231E1
; ---------------------------------------------------------------------------

loc_231DD:				; CODE XREF: sub_231A5+26j
		or	byte ptr es:[di], 70h

loc_231E1:				; CODE XREF: sub_231A5+2Cj
					; sub_231A5+30j ...
		inc	di
		shl	ah, 1
		jnb	short loc_231F0
		shl	ah, 1
		jnb	short loc_231FA
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_231FE
; ---------------------------------------------------------------------------

loc_231F0:				; CODE XREF: sub_231A5+3Fj
		shl	ah, 1
		jnb	short loc_231FE
		or	byte ptr es:[di], 7
		jmp	short loc_231FE
; ---------------------------------------------------------------------------

loc_231FA:				; CODE XREF: sub_231A5+43j
		or	byte ptr es:[di], 70h

loc_231FE:				; CODE XREF: sub_231A5+49j
					; sub_231A5+4Dj ...
		inc	di
		shl	ah, 1
		jnb	short loc_2320D
		shl	ah, 1
		jnb	short loc_23217
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_2321B
; ---------------------------------------------------------------------------

loc_2320D:				; CODE XREF: sub_231A5+5Cj
		shl	ah, 1
		jnb	short loc_2321B
		or	byte ptr es:[di], 7
		jmp	short loc_2321B
; ---------------------------------------------------------------------------

loc_23217:				; CODE XREF: sub_231A5+60j
		or	byte ptr es:[di], 70h

loc_2321B:				; CODE XREF: sub_231A5+66j
					; sub_231A5+6Aj ...
		inc	di
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_2322D
		shl	ah, 1
		jnb	short loc_23237
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_2323B
; ---------------------------------------------------------------------------

loc_2322D:				; CODE XREF: sub_231A5+7Cj
		shl	ah, 1
		jnb	short loc_2323B
		or	byte ptr es:[di], 7
		jmp	short loc_2323B
; ---------------------------------------------------------------------------

loc_23237:				; CODE XREF: sub_231A5+80j
		or	byte ptr es:[di], 70h

loc_2323B:				; CODE XREF: sub_231A5+86j
					; sub_231A5+8Aj ...
		inc	di
		shl	ah, 1
		jnb	short loc_2324A
		shl	ah, 1
		jnb	short loc_23254
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23258
; ---------------------------------------------------------------------------

loc_2324A:				; CODE XREF: sub_231A5+99j
		shl	ah, 1
		jnb	short loc_23258
		or	byte ptr es:[di], 7
		jmp	short loc_23258
; ---------------------------------------------------------------------------

loc_23254:				; CODE XREF: sub_231A5+9Dj
		or	byte ptr es:[di], 70h

loc_23258:				; CODE XREF: sub_231A5+A3j
					; sub_231A5+A7j ...
		inc	di
		shl	ah, 1
		jnb	short loc_23267
		shl	ah, 1
		jnb	short loc_23271
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23275
; ---------------------------------------------------------------------------

loc_23267:				; CODE XREF: sub_231A5+B6j
		shl	ah, 1
		jnb	short loc_23275
		or	byte ptr es:[di], 7
		jmp	short loc_23275
; ---------------------------------------------------------------------------

loc_23271:				; CODE XREF: sub_231A5+BAj
		or	byte ptr es:[di], 70h

loc_23275:				; CODE XREF: sub_231A5+C0j
					; sub_231A5+C4j ...
		inc	di
		shl	ah, 1
		jnb	short loc_23284
		shl	ah, 1
		jnb	short loc_2328E
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_23292
; ---------------------------------------------------------------------------

loc_23284:				; CODE XREF: sub_231A5+D3j
		shl	ah, 1
		jnb	short loc_23292
		or	byte ptr es:[di], 7
		jmp	short loc_23292
; ---------------------------------------------------------------------------

loc_2328E:				; CODE XREF: sub_231A5+D7j
		or	byte ptr es:[di], 70h

loc_23292:				; CODE XREF: sub_231A5+DDj
					; sub_231A5+E1j ...
		inc	di
		retn
sub_231A5	endp


; =============== S U B	R O U T	I N E =======================================


sub_23294	proc near		; CODE XREF: sub_23E4F:loc_23EBEp
		lodsb
		mov	ah, al
		shl	ah, 1
		jnb	short loc_232A5
		shl	ah, 1
		jnb	short loc_232AF
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_232B3
; ---------------------------------------------------------------------------

loc_232A5:				; CODE XREF: sub_23294+5j
		shl	ah, 1
		jnb	short loc_232B3
		or	byte ptr es:[di], 7
		jmp	short loc_232B3
; ---------------------------------------------------------------------------

loc_232AF:				; CODE XREF: sub_23294+9j
		or	byte ptr es:[di], 70h

loc_232B3:				; CODE XREF: sub_23294+Fj
					; sub_23294+13j ...
		inc	di
		shl	ah, 1
		jnb	short loc_232C2
		shl	ah, 1
		jnb	short loc_232CC
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_232D0
; ---------------------------------------------------------------------------

loc_232C2:				; CODE XREF: sub_23294+22j
		shl	ah, 1
		jnb	short loc_232D0
		or	byte ptr es:[di], 7
		jmp	short loc_232D0
; ---------------------------------------------------------------------------

loc_232CC:				; CODE XREF: sub_23294+26j
		or	byte ptr es:[di], 70h

loc_232D0:				; CODE XREF: sub_23294+2Cj
					; sub_23294+30j ...
		inc	di
		shl	ah, 1
		jnb	short loc_232DF
		shl	ah, 1
		jnb	short loc_232E9
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_232ED
; ---------------------------------------------------------------------------

loc_232DF:				; CODE XREF: sub_23294+3Fj
		shl	ah, 1
		jnb	short loc_232ED
		or	byte ptr es:[di], 7
		jmp	short loc_232ED
; ---------------------------------------------------------------------------

loc_232E9:				; CODE XREF: sub_23294+43j
		or	byte ptr es:[di], 70h

loc_232ED:				; CODE XREF: sub_23294+49j
					; sub_23294+4Dj ...
		inc	di
		shl	ah, 1
		jnb	short loc_232FC
		shl	ah, 1
		jnb	short loc_23306
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_2330A
; ---------------------------------------------------------------------------

loc_232FC:				; CODE XREF: sub_23294+5Cj
		shl	ah, 1
		jnb	short loc_2330A
		or	byte ptr es:[di], 7
		jmp	short loc_2330A
; ---------------------------------------------------------------------------

loc_23306:				; CODE XREF: sub_23294+60j
		or	byte ptr es:[di], 70h

loc_2330A:				; CODE XREF: sub_23294+66j
					; sub_23294+6Aj ...
		inc	di
		inc	si
		retn
sub_23294	endp


; =============== S U B	R O U T	I N E =======================================


sub_2330D	proc near		; CODE XREF: seg000:085BP sub_23C75+2p
					; DATA XREF: ...
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
sub_2330D	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_23316	proc far		; CODE XREF: sub_10875+8P
					; sub_24250+5Bp ...
		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_23323
		dec	si
		mov	ax, seg	seg008

loc_23323:				; CODE XREF: sub_23316+7j
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		and	cx, 0FFFEh
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_2333E
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_2333E:				; CODE XREF: sub_23316+23j
		cmp	dx, ss:10h
		jl	short loc_23348
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23348:				; CODE XREF: sub_23316+2Dj
		mov	ax, cx
		add	ax, bp
		jg	short loc_23351
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23351:				; CODE XREF: sub_23316+36j
		mov	ax, dx
		add	ax, bx
		jns	short loc_2335A
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_2335A:				; CODE XREF: sub_23316+3Fj
		mov	word ptr unk_54890, 0
		cmp	ax, ss:10h
		jle	short loc_2336E
		sub	ax, ss:10h
		sub	bx, ax

loc_2336E:				; CODE XREF: sub_23316+4Fj
		test	dx, dx
		jns	short loc_233A2
		add	bx, dx
		neg	dx
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		add	ax, dx
		cmp	bp, 8
		jle	short loc_2339D
		cmp	bp, 10h
		jg	short loc_2338C
		shl	ax, 1
		jmp	short loc_2339D
; ---------------------------------------------------------------------------

loc_2338C:				; CODE XREF: sub_23316+70j
		cmp	bp, 18h
		jg	short loc_23399
		mov	dx, ax
		shl	ax, 1
		add	ax, dx
		jmp	short loc_2339D
; ---------------------------------------------------------------------------

loc_23399:				; CODE XREF: sub_23316+79j
		shl	ax, 1
		shl	ax, 1

loc_2339D:				; CODE XREF: sub_23316+6Bj
					; sub_23316+74j ...
		mov	word ptr unk_54890, ax
		xor	dx, dx

loc_233A2:				; CODE XREF: sub_23316+5Aj
		mov	di, dx
		shl	di, 1
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	ax, [di-68C0h]
		sub	ax, [di-68C2h]
		mov	ss:20h,	ax
		mov	ax, [di-68BEh]
		sub	ax, [di-68C0h]
		mov	ss:22h,	ax
		mov	ax, [di-68BCh]
		sub	ax, [di-68BEh]
		mov	ss:24h,	ax
		mov	ax, [di-68BAh]
		sub	ax, [di-68BCh]
		mov	ss:26h,	ax
		mov	di, [di-68C2h]
		pop	ds
		test	cx, cx
		jns	short loc_233E8
		jmp	loc_23AFA
; ---------------------------------------------------------------------------

loc_233E8:				; CODE XREF: sub_23316+CDj
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jle	short loc_233F4
		jmp	loc_23AFA
; ---------------------------------------------------------------------------

loc_233F4:				; CODE XREF: sub_23316+D9j
		shr	cx, 1
		add	di, cx
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	cl, bl
		xor	ch, ch
		inc	cx
		add	si, word_28530
		cmp	bp, 8
		jg	short loc_2340E
		jmp	loc_23A21
; ---------------------------------------------------------------------------

loc_2340E:				; CODE XREF: sub_23316+F3j
		cmp	bp, 10h
		jg	short loc_23416
		jmp	loc_238B4
; ---------------------------------------------------------------------------

loc_23416:				; CODE XREF: sub_23316+FBj
		cmp	bp, 18h
		jg	short loc_2341E
		jmp	loc_236B3
; ---------------------------------------------------------------------------

loc_2341E:				; CODE XREF: sub_23316+103j
		sub	word ptr ss:20h, 10h
		sub	word ptr ss:22h, 10h
		sub	word ptr ss:24h, 10h
		sub	word ptr ss:26h, 10h

loc_23436:				; CODE XREF: sub_23316:loc_236ADj
		inc	si
		lodsb
		test	al, al
		jz	short loc_2343F
		mov	es:[di], al

loc_2343F:				; CODE XREF: sub_23316+124j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23448
		mov	es:[di], al

loc_23448:				; CODE XREF: sub_23316+12Dj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23451
		mov	es:[di], al

loc_23451:				; CODE XREF: sub_23316+136j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2345A
		mov	es:[di], al

loc_2345A:				; CODE XREF: sub_23316+13Fj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23464
		mov	es:[di], al

loc_23464:				; CODE XREF: sub_23316+149j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2346D
		mov	es:[di], al

loc_2346D:				; CODE XREF: sub_23316+152j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23476
		mov	es:[di], al

loc_23476:				; CODE XREF: sub_23316+15Bj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2347F
		mov	es:[di], al

loc_2347F:				; CODE XREF: sub_23316+164j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23489
		mov	es:[di], al

loc_23489:				; CODE XREF: sub_23316+16Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_23492
		mov	es:[di], al

loc_23492:				; CODE XREF: sub_23316+177j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2349B
		mov	es:[di], al

loc_2349B:				; CODE XREF: sub_23316+180j
		inc	di
		lodsb
		test	al, al
		jz	short loc_234A4
		mov	es:[di], al

loc_234A4:				; CODE XREF: sub_23316+189j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_234AE
		mov	es:[di], al

loc_234AE:				; CODE XREF: sub_23316+193j
		inc	di
		lodsb
		test	al, al
		jz	short loc_234B7
		mov	es:[di], al

loc_234B7:				; CODE XREF: sub_23316+19Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_234C0
		mov	es:[di], al

loc_234C0:				; CODE XREF: sub_23316+1A5j
		inc	di
		lodsb
		test	al, al
		jz	short loc_234C9
		mov	es:[di], al

loc_234C9:				; CODE XREF: sub_23316+1AEj
		inc	di
		add	di, ss:20h
		loop	loc_234D4
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_234D4:				; CODE XREF: sub_23316+1B9j
		inc	si
		lodsb
		test	al, al
		jz	short loc_234DD
		mov	es:[di], al

loc_234DD:				; CODE XREF: sub_23316+1C2j
		inc	di
		lodsb
		test	al, al
		jz	short loc_234E6
		mov	es:[di], al

loc_234E6:				; CODE XREF: sub_23316+1CBj
		inc	di
		lodsb
		test	al, al
		jz	short loc_234EF
		mov	es:[di], al

loc_234EF:				; CODE XREF: sub_23316+1D4j
		inc	di
		lodsb
		test	al, al
		jz	short loc_234F8
		mov	es:[di], al

loc_234F8:				; CODE XREF: sub_23316+1DDj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23502
		mov	es:[di], al

loc_23502:				; CODE XREF: sub_23316+1E7j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2350B
		mov	es:[di], al

loc_2350B:				; CODE XREF: sub_23316+1F0j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23514
		mov	es:[di], al

loc_23514:				; CODE XREF: sub_23316+1F9j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2351D
		mov	es:[di], al

loc_2351D:				; CODE XREF: sub_23316+202j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23527
		mov	es:[di], al

loc_23527:				; CODE XREF: sub_23316+20Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23530
		mov	es:[di], al

loc_23530:				; CODE XREF: sub_23316+215j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23539
		mov	es:[di], al

loc_23539:				; CODE XREF: sub_23316+21Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_23542
		mov	es:[di], al

loc_23542:				; CODE XREF: sub_23316+227j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_2354C
		mov	es:[di], al

loc_2354C:				; CODE XREF: sub_23316+231j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23555
		mov	es:[di], al

loc_23555:				; CODE XREF: sub_23316+23Aj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2355E
		mov	es:[di], al

loc_2355E:				; CODE XREF: sub_23316+243j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23567
		mov	es:[di], al

loc_23567:				; CODE XREF: sub_23316+24Cj
		inc	di
		add	di, ss:22h
		loop	loc_23572
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23572:				; CODE XREF: sub_23316+257j
		inc	si
		lodsb
		test	al, al
		jz	short loc_2357B
		mov	es:[di], al

loc_2357B:				; CODE XREF: sub_23316+260j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23584
		mov	es:[di], al

loc_23584:				; CODE XREF: sub_23316+269j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2358D
		mov	es:[di], al

loc_2358D:				; CODE XREF: sub_23316+272j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23596
		mov	es:[di], al

loc_23596:				; CODE XREF: sub_23316+27Bj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_235A0
		mov	es:[di], al

loc_235A0:				; CODE XREF: sub_23316+285j
		inc	di
		lodsb
		test	al, al
		jz	short loc_235A9
		mov	es:[di], al

loc_235A9:				; CODE XREF: sub_23316+28Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_235B2
		mov	es:[di], al

loc_235B2:				; CODE XREF: sub_23316+297j
		inc	di
		lodsb
		test	al, al
		jz	short loc_235BB
		mov	es:[di], al

loc_235BB:				; CODE XREF: sub_23316+2A0j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_235C5
		mov	es:[di], al

loc_235C5:				; CODE XREF: sub_23316+2AAj
		inc	di
		lodsb
		test	al, al
		jz	short loc_235CE
		mov	es:[di], al

loc_235CE:				; CODE XREF: sub_23316+2B3j
		inc	di
		lodsb
		test	al, al
		jz	short loc_235D7
		mov	es:[di], al

loc_235D7:				; CODE XREF: sub_23316+2BCj
		inc	di
		lodsb
		test	al, al
		jz	short loc_235E0
		mov	es:[di], al

loc_235E0:				; CODE XREF: sub_23316+2C5j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_235EA
		mov	es:[di], al

loc_235EA:				; CODE XREF: sub_23316+2CFj
		inc	di
		lodsb
		test	al, al
		jz	short loc_235F3
		mov	es:[di], al

loc_235F3:				; CODE XREF: sub_23316+2D8j
		inc	di
		lodsb
		test	al, al
		jz	short loc_235FC
		mov	es:[di], al

loc_235FC:				; CODE XREF: sub_23316+2E1j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23605
		mov	es:[di], al

loc_23605:				; CODE XREF: sub_23316+2EAj
		inc	di
		add	di, ss:24h
		loop	loc_23610
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23610:				; CODE XREF: sub_23316+2F5j
		inc	si
		lodsb
		test	al, al
		jz	short loc_23619
		mov	es:[di], al

loc_23619:				; CODE XREF: sub_23316+2FEj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23622
		mov	es:[di], al

loc_23622:				; CODE XREF: sub_23316+307j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2362B
		mov	es:[di], al

loc_2362B:				; CODE XREF: sub_23316+310j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23634
		mov	es:[di], al

loc_23634:				; CODE XREF: sub_23316+319j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_2363E
		mov	es:[di], al

loc_2363E:				; CODE XREF: sub_23316+323j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23647
		mov	es:[di], al

loc_23647:				; CODE XREF: sub_23316+32Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23650
		mov	es:[di], al

loc_23650:				; CODE XREF: sub_23316+335j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23659
		mov	es:[di], al

loc_23659:				; CODE XREF: sub_23316+33Ej
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23663
		mov	es:[di], al

loc_23663:				; CODE XREF: sub_23316+348j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2366C
		mov	es:[di], al

loc_2366C:				; CODE XREF: sub_23316+351j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23675
		mov	es:[di], al

loc_23675:				; CODE XREF: sub_23316+35Aj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2367E
		mov	es:[di], al

loc_2367E:				; CODE XREF: sub_23316+363j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23688
		mov	es:[di], al

loc_23688:				; CODE XREF: sub_23316+36Dj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23691
		mov	es:[di], al

loc_23691:				; CODE XREF: sub_23316+376j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2369A
		mov	es:[di], al

loc_2369A:				; CODE XREF: sub_23316+37Fj
		inc	di
		lodsb
		test	al, al
		jz	short loc_236A3
		mov	es:[di], al

loc_236A3:				; CODE XREF: sub_23316+388j
		inc	di
		add	di, ss:26h
		loop	loc_236AD
		jmp	short loc_236B0
; ---------------------------------------------------------------------------

loc_236AD:				; CODE XREF: sub_23316+393j
		jmp	loc_23436
; ---------------------------------------------------------------------------

loc_236B0:				; CODE XREF: sub_23316+395j
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_236B3:				; CODE XREF: sub_23316+105j
		sub	word ptr ss:20h, 0Ch
		sub	word ptr ss:22h, 0Ch
		sub	word ptr ss:24h, 0Ch
		sub	word ptr ss:26h, 0Ch

loc_236CB:				; CODE XREF: sub_23316:loc_238AEj
		inc	si
		lodsb
		test	al, al
		jz	short loc_236D4
		mov	es:[di], al

loc_236D4:				; CODE XREF: sub_23316+3B9j
		inc	di
		lodsb
		test	al, al
		jz	short loc_236DD
		mov	es:[di], al

loc_236DD:				; CODE XREF: sub_23316+3C2j
		inc	di
		lodsb
		test	al, al
		jz	short loc_236E6
		mov	es:[di], al

loc_236E6:				; CODE XREF: sub_23316+3CBj
		inc	di
		lodsb
		test	al, al
		jz	short loc_236EF
		mov	es:[di], al

loc_236EF:				; CODE XREF: sub_23316+3D4j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_236F9
		mov	es:[di], al

loc_236F9:				; CODE XREF: sub_23316+3DEj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23702
		mov	es:[di], al

loc_23702:				; CODE XREF: sub_23316+3E7j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2370B
		mov	es:[di], al

loc_2370B:				; CODE XREF: sub_23316+3F0j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23714
		mov	es:[di], al

loc_23714:				; CODE XREF: sub_23316+3F9j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_2371E
		mov	es:[di], al

loc_2371E:				; CODE XREF: sub_23316+403j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23727
		mov	es:[di], al

loc_23727:				; CODE XREF: sub_23316+40Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23730
		mov	es:[di], al

loc_23730:				; CODE XREF: sub_23316+415j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23739
		mov	es:[di], al

loc_23739:				; CODE XREF: sub_23316+41Ej
		inc	di
		add	di, ss:20h
		loop	loc_23744
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23744:				; CODE XREF: sub_23316+429j
		inc	si
		lodsb
		test	al, al
		jz	short loc_2374D
		mov	es:[di], al

loc_2374D:				; CODE XREF: sub_23316+432j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23756
		mov	es:[di], al

loc_23756:				; CODE XREF: sub_23316+43Bj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2375F
		mov	es:[di], al

loc_2375F:				; CODE XREF: sub_23316+444j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23768
		mov	es:[di], al

loc_23768:				; CODE XREF: sub_23316+44Dj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23772
		mov	es:[di], al

loc_23772:				; CODE XREF: sub_23316+457j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2377B
		mov	es:[di], al

loc_2377B:				; CODE XREF: sub_23316+460j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23784
		mov	es:[di], al

loc_23784:				; CODE XREF: sub_23316+469j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2378D
		mov	es:[di], al

loc_2378D:				; CODE XREF: sub_23316+472j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23797
		mov	es:[di], al

loc_23797:				; CODE XREF: sub_23316+47Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_237A0
		mov	es:[di], al

loc_237A0:				; CODE XREF: sub_23316+485j
		inc	di
		lodsb
		test	al, al
		jz	short loc_237A9
		mov	es:[di], al

loc_237A9:				; CODE XREF: sub_23316+48Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_237B2
		mov	es:[di], al

loc_237B2:				; CODE XREF: sub_23316+497j
		inc	di
		add	di, ss:22h
		loop	loc_237BD
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_237BD:				; CODE XREF: sub_23316+4A2j
		inc	si
		lodsb
		test	al, al
		jz	short loc_237C6
		mov	es:[di], al

loc_237C6:				; CODE XREF: sub_23316+4ABj
		inc	di
		lodsb
		test	al, al
		jz	short loc_237CF
		mov	es:[di], al

loc_237CF:				; CODE XREF: sub_23316+4B4j
		inc	di
		lodsb
		test	al, al
		jz	short loc_237D8
		mov	es:[di], al

loc_237D8:				; CODE XREF: sub_23316+4BDj
		inc	di
		lodsb
		test	al, al
		jz	short loc_237E1
		mov	es:[di], al

loc_237E1:				; CODE XREF: sub_23316+4C6j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_237EB
		mov	es:[di], al

loc_237EB:				; CODE XREF: sub_23316+4D0j
		inc	di
		lodsb
		test	al, al
		jz	short loc_237F4
		mov	es:[di], al

loc_237F4:				; CODE XREF: sub_23316+4D9j
		inc	di
		lodsb
		test	al, al
		jz	short loc_237FD
		mov	es:[di], al

loc_237FD:				; CODE XREF: sub_23316+4E2j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23806
		mov	es:[di], al

loc_23806:				; CODE XREF: sub_23316+4EBj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23810
		mov	es:[di], al

loc_23810:				; CODE XREF: sub_23316+4F5j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23819
		mov	es:[di], al

loc_23819:				; CODE XREF: sub_23316+4FEj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23822
		mov	es:[di], al

loc_23822:				; CODE XREF: sub_23316+507j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2382B
		mov	es:[di], al

loc_2382B:				; CODE XREF: sub_23316+510j
		inc	di
		add	di, ss:24h
		loop	loc_23836
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23836:				; CODE XREF: sub_23316+51Bj
		inc	si
		lodsb
		test	al, al
		jz	short loc_2383F
		mov	es:[di], al

loc_2383F:				; CODE XREF: sub_23316+524j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23848
		mov	es:[di], al

loc_23848:				; CODE XREF: sub_23316+52Dj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23851
		mov	es:[di], al

loc_23851:				; CODE XREF: sub_23316+536j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2385A
		mov	es:[di], al

loc_2385A:				; CODE XREF: sub_23316+53Fj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23864
		mov	es:[di], al

loc_23864:				; CODE XREF: sub_23316+549j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2386D
		mov	es:[di], al

loc_2386D:				; CODE XREF: sub_23316+552j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23876
		mov	es:[di], al

loc_23876:				; CODE XREF: sub_23316+55Bj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2387F
		mov	es:[di], al

loc_2387F:				; CODE XREF: sub_23316+564j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_23889
		mov	es:[di], al

loc_23889:				; CODE XREF: sub_23316+56Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_23892
		mov	es:[di], al

loc_23892:				; CODE XREF: sub_23316+577j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2389B
		mov	es:[di], al

loc_2389B:				; CODE XREF: sub_23316+580j
		inc	di
		lodsb
		test	al, al
		jz	short loc_238A4
		mov	es:[di], al

loc_238A4:				; CODE XREF: sub_23316+589j
		inc	di
		add	di, ss:26h
		loop	loc_238AE
		jmp	short loc_238B1
; ---------------------------------------------------------------------------

loc_238AE:				; CODE XREF: sub_23316+594j
		jmp	loc_236CB
; ---------------------------------------------------------------------------

loc_238B1:				; CODE XREF: sub_23316+596j
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_238B4:				; CODE XREF: sub_23316+FDj
		sub	word ptr ss:20h, 8
		sub	word ptr ss:22h, 8
		sub	word ptr ss:24h, 8
		sub	word ptr ss:26h, 8

loc_238CC:				; CODE XREF: sub_23316:loc_23A1Bj
		inc	si
		lodsb
		test	al, al
		jz	short loc_238D5
		mov	es:[di], al

loc_238D5:				; CODE XREF: sub_23316+5BAj
		inc	di
		lodsb
		test	al, al
		jz	short loc_238DE
		mov	es:[di], al

loc_238DE:				; CODE XREF: sub_23316+5C3j
		inc	di
		lodsb
		test	al, al
		jz	short loc_238E7
		mov	es:[di], al

loc_238E7:				; CODE XREF: sub_23316+5CCj
		inc	di
		lodsb
		test	al, al
		jz	short loc_238F0
		mov	es:[di], al

loc_238F0:				; CODE XREF: sub_23316+5D5j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_238FA
		mov	es:[di], al

loc_238FA:				; CODE XREF: sub_23316+5DFj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23903
		mov	es:[di], al

loc_23903:				; CODE XREF: sub_23316+5E8j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2390C
		mov	es:[di], al

loc_2390C:				; CODE XREF: sub_23316+5F1j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23915
		mov	es:[di], al

loc_23915:				; CODE XREF: sub_23316+5FAj
		inc	di
		add	di, ss:20h
		loop	loc_23920
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23920:				; CODE XREF: sub_23316+605j
		inc	si
		lodsb
		test	al, al
		jz	short loc_23929
		mov	es:[di], al

loc_23929:				; CODE XREF: sub_23316+60Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_23932
		mov	es:[di], al

loc_23932:				; CODE XREF: sub_23316+617j
		inc	di
		lodsb
		test	al, al
		jz	short loc_2393B
		mov	es:[di], al

loc_2393B:				; CODE XREF: sub_23316+620j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23944
		mov	es:[di], al

loc_23944:				; CODE XREF: sub_23316+629j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_2394E
		mov	es:[di], al

loc_2394E:				; CODE XREF: sub_23316+633j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23957
		mov	es:[di], al

loc_23957:				; CODE XREF: sub_23316+63Cj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23960
		mov	es:[di], al

loc_23960:				; CODE XREF: sub_23316+645j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23969
		mov	es:[di], al

loc_23969:				; CODE XREF: sub_23316+64Ej
		inc	di
		add	di, ss:22h
		loop	loc_23974
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23974:				; CODE XREF: sub_23316+659j
		inc	si
		lodsb
		test	al, al
		jz	short loc_2397D
		mov	es:[di], al

loc_2397D:				; CODE XREF: sub_23316+662j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23986
		mov	es:[di], al

loc_23986:				; CODE XREF: sub_23316+66Bj
		inc	di
		lodsb
		test	al, al
		jz	short loc_2398F
		mov	es:[di], al

loc_2398F:				; CODE XREF: sub_23316+674j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23998
		mov	es:[di], al

loc_23998:				; CODE XREF: sub_23316+67Dj
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_239A2
		mov	es:[di], al

loc_239A2:				; CODE XREF: sub_23316+687j
		inc	di
		lodsb
		test	al, al
		jz	short loc_239AB
		mov	es:[di], al

loc_239AB:				; CODE XREF: sub_23316+690j
		inc	di
		lodsb
		test	al, al
		jz	short loc_239B4
		mov	es:[di], al

loc_239B4:				; CODE XREF: sub_23316+699j
		inc	di
		lodsb
		test	al, al
		jz	short loc_239BD
		mov	es:[di], al

loc_239BD:				; CODE XREF: sub_23316+6A2j
		inc	di
		add	di, ss:24h
		loop	loc_239C8
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_239C8:				; CODE XREF: sub_23316+6ADj
		inc	si
		lodsb
		test	al, al
		jz	short loc_239D1
		mov	es:[di], al

loc_239D1:				; CODE XREF: sub_23316+6B6j
		inc	di
		lodsb
		test	al, al
		jz	short loc_239DA
		mov	es:[di], al

loc_239DA:				; CODE XREF: sub_23316+6BFj
		inc	di
		lodsb
		test	al, al
		jz	short loc_239E3
		mov	es:[di], al

loc_239E3:				; CODE XREF: sub_23316+6C8j
		inc	di
		lodsb
		test	al, al
		jz	short loc_239EC
		mov	es:[di], al

loc_239EC:				; CODE XREF: sub_23316+6D1j
		inc	di
		inc	si
		lodsb
		test	al, al
		jz	short loc_239F6
		mov	es:[di], al

loc_239F6:				; CODE XREF: sub_23316+6DBj
		inc	di
		lodsb
		test	al, al
		jz	short loc_239FF
		mov	es:[di], al

loc_239FF:				; CODE XREF: sub_23316+6E4j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A08
		mov	es:[di], al

loc_23A08:				; CODE XREF: sub_23316+6EDj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A11
		mov	es:[di], al

loc_23A11:				; CODE XREF: sub_23316+6F6j
		inc	di
		add	di, ss:26h
		loop	loc_23A1B
		jmp	short loc_23A1E
; ---------------------------------------------------------------------------

loc_23A1B:				; CODE XREF: sub_23316+701j
		jmp	loc_238CC
; ---------------------------------------------------------------------------

loc_23A1E:				; CODE XREF: sub_23316+703j
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23A21:				; CODE XREF: sub_23316+F5j
		sub	word ptr ss:20h, 4
		sub	word ptr ss:22h, 4
		sub	word ptr ss:24h, 4
		sub	word ptr ss:26h, 4

loc_23A39:				; CODE XREF: sub_23316:loc_23AF4j
		inc	si
		lodsb
		test	al, al
		jz	short loc_23A42
		mov	es:[di], al

loc_23A42:				; CODE XREF: sub_23316+727j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A4B
		mov	es:[di], al

loc_23A4B:				; CODE XREF: sub_23316+730j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A54
		mov	es:[di], al

loc_23A54:				; CODE XREF: sub_23316+739j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A5D
		mov	es:[di], al

loc_23A5D:				; CODE XREF: sub_23316+742j
		inc	di
		add	di, ss:20h
		loop	loc_23A68
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23A68:				; CODE XREF: sub_23316+74Dj
		inc	si
		lodsb
		test	al, al
		jz	short loc_23A71
		mov	es:[di], al

loc_23A71:				; CODE XREF: sub_23316+756j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A7A
		mov	es:[di], al

loc_23A7A:				; CODE XREF: sub_23316+75Fj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A83
		mov	es:[di], al

loc_23A83:				; CODE XREF: sub_23316+768j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23A8C
		mov	es:[di], al

loc_23A8C:				; CODE XREF: sub_23316+771j
		inc	di
		add	di, ss:22h
		loop	loc_23A97
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23A97:				; CODE XREF: sub_23316+77Cj
		inc	si
		lodsb
		test	al, al
		jz	short loc_23AA0
		mov	es:[di], al

loc_23AA0:				; CODE XREF: sub_23316+785j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23AA9
		mov	es:[di], al

loc_23AA9:				; CODE XREF: sub_23316+78Ej
		inc	di
		lodsb
		test	al, al
		jz	short loc_23AB2
		mov	es:[di], al

loc_23AB2:				; CODE XREF: sub_23316+797j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23ABB
		mov	es:[di], al

loc_23ABB:				; CODE XREF: sub_23316+7A0j
		inc	di
		add	di, ss:24h
		loop	loc_23AC6
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23AC6:				; CODE XREF: sub_23316+7ABj
		inc	si
		lodsb
		test	al, al
		jz	short loc_23ACF
		mov	es:[di], al

loc_23ACF:				; CODE XREF: sub_23316+7B4j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23AD8
		mov	es:[di], al

loc_23AD8:				; CODE XREF: sub_23316+7BDj
		inc	di
		lodsb
		test	al, al
		jz	short loc_23AE1
		mov	es:[di], al

loc_23AE1:				; CODE XREF: sub_23316+7C6j
		inc	di
		lodsb
		test	al, al
		jz	short loc_23AEA
		mov	es:[di], al

loc_23AEA:				; CODE XREF: sub_23316+7CFj
		inc	di
		add	di, ss:26h
		loop	loc_23AF4
		jmp	short loc_23AF7
; ---------------------------------------------------------------------------

loc_23AF4:				; CODE XREF: sub_23316+7DAj
		jmp	loc_23A39
; ---------------------------------------------------------------------------

loc_23AF7:				; CODE XREF: sub_23316+7DCj
		jmp	loc_23C6E
; ---------------------------------------------------------------------------

loc_23AFA:				; CODE XREF: sub_23316+CFj
					; sub_23316+DBj
		mov	dx, cx
		sar	cx, 1
		add	di, cx
		mov	ax, 0B800h
		mov	es, ax
		mov	cl, bl
		xor	ch, ch
		inc	cx
		xchg	bp, dx
		add	dx, 7
		shr	dx, 1
		shr	dx, 1
		shr	dx, 1
		add	si, word_28530
		mov	cs:byte_23C74, dl

loc_23B1E:				; CODE XREF: sub_23316:loc_23C6Bj
		push	bp
		push	di
		mov	bh, cs:byte_23C74
		inc	si
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B34
		test	al, al
		jz	short loc_23B34
		mov	es:[di], al

loc_23B34:				; CODE XREF: sub_23316+815j
					; sub_23316+819j
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B46
		test	al, al
		jz	short loc_23B46
		mov	es:[di], al

loc_23B46:				; CODE XREF: sub_23316+827j
					; sub_23316+82Bj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B58
		test	al, al
		jz	short loc_23B58
		mov	es:[di], al

loc_23B58:				; CODE XREF: sub_23316+839j
					; sub_23316+83Dj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B6A
		test	al, al
		jz	short loc_23B6A
		mov	es:[di], al

loc_23B6A:				; CODE XREF: sub_23316+84Bj
					; sub_23316+84Fj
		add	bp, 2
		inc	di
		dec	bh
		jnz	short loc_23B75
		jmp	loc_23C5B
; ---------------------------------------------------------------------------

loc_23B75:				; CODE XREF: sub_23316+85Aj
		inc	si
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B84
		test	al, al
		jz	short loc_23B84
		mov	es:[di], al

loc_23B84:				; CODE XREF: sub_23316+865j
					; sub_23316+869j
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23B96
		test	al, al
		jz	short loc_23B96
		mov	es:[di], al

loc_23B96:				; CODE XREF: sub_23316+877j
					; sub_23316+87Bj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23BA8
		test	al, al
		jz	short loc_23BA8
		mov	es:[di], al

loc_23BA8:				; CODE XREF: sub_23316+889j
					; sub_23316+88Dj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23BBA
		test	al, al
		jz	short loc_23BBA
		mov	es:[di], al

loc_23BBA:				; CODE XREF: sub_23316+89Bj
					; sub_23316+89Fj
		add	bp, 2
		inc	di
		dec	bh
		jnz	short loc_23BC5
		jmp	loc_23C5B
; ---------------------------------------------------------------------------

loc_23BC5:				; CODE XREF: sub_23316+8AAj
		inc	si
		lodsb
		cmp	bp, 140h
		jnb	short loc_23BD4
		test	al, al
		jz	short loc_23BD4
		mov	es:[di], al

loc_23BD4:				; CODE XREF: sub_23316+8B5j
					; sub_23316+8B9j
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23BE6
		test	al, al
		jz	short loc_23BE6
		mov	es:[di], al

loc_23BE6:				; CODE XREF: sub_23316+8C7j
					; sub_23316+8CBj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23BF8
		test	al, al
		jz	short loc_23BF8
		mov	es:[di], al

loc_23BF8:				; CODE XREF: sub_23316+8D9j
					; sub_23316+8DDj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23C0A
		test	al, al
		jz	short loc_23C0A
		mov	es:[di], al

loc_23C0A:				; CODE XREF: sub_23316+8EBj
					; sub_23316+8EFj
		add	bp, 2
		inc	di
		dec	bh
		jz	short loc_23C5B
		inc	si
		lodsb
		cmp	bp, 140h
		jnb	short loc_23C21
		test	al, al
		jz	short loc_23C21
		mov	es:[di], al

loc_23C21:				; CODE XREF: sub_23316+902j
					; sub_23316+906j
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23C33
		test	al, al
		jz	short loc_23C33
		mov	es:[di], al

loc_23C33:				; CODE XREF: sub_23316+914j
					; sub_23316+918j
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23C45
		test	al, al
		jz	short loc_23C45
		mov	es:[di], al

loc_23C45:				; CODE XREF: sub_23316+926j
					; sub_23316+92Aj
		add	bp, 2
		inc	di
		lodsb
		cmp	bp, 140h
		jnb	short loc_23C57
		test	al, al
		jz	short loc_23C57
		mov	es:[di], al

loc_23C57:				; CODE XREF: sub_23316+938j
					; sub_23316+93Cj
		add	bp, 2
		inc	di

loc_23C5B:				; CODE XREF: sub_23316+85Cj
					; sub_23316+8ACj ...
		pop	di
		pop	bp
		add	di, 2000h
		jns	short loc_23C67
		sub	di, 7F60h

loc_23C67:				; CODE XREF: sub_23316+94Bj
		loop	loc_23C6B
		jmp	short loc_23C6E
; ---------------------------------------------------------------------------

loc_23C6B:				; CODE XREF: sub_23316:loc_23C67j
		jmp	loc_23B1E
; ---------------------------------------------------------------------------

loc_23C6E:				; CODE XREF: sub_23316+25j
					; sub_23316+2Fj ...
		pop	ax
		mov	ds, ax
		mov	es, ax
		assume es:nothing
		retf
sub_23316	endp

; ---------------------------------------------------------------------------
byte_23C74	db 0			; DATA XREF: sub_23316+803w
					; sub_23316+80Ar

; =============== S U B	R O U T	I N E =======================================


sub_23C75	proc far		; CODE XREF: seg000:089FP
					; DATA XREF: seg000:08A9o
		push	si
		push	cs
		call	sub_2330D
		pop	si
		mov	ax, [si+12h]
		mov	bx, [si+16h]
		mov	di, [si+0Ch]
		mov	cx, seg	seg007
		test	di, 1
		jz	short loc_23C91
		dec	di
		mov	cx, seg	seg008

loc_23C91:				; CODE XREF: sub_23C75+16j
		push	es
		mov	es, cx
		assume es:seg008
		sub	ax, es:[di]
		sub	bx, es:[di+2]
		pop	es
		assume es:nothing
		call	sub_23CB2
		add	ax, 10h
		call	sub_23CB2
		add	bx, 10h
		call	sub_23CB2
		sub	ax, 10h
		call	sub_23CB2
		retf
sub_23C75	endp


; =============== S U B	R O U T	I N E =======================================


sub_23CB2	proc near		; CODE XREF: sub_23C75+27p
					; sub_23C75+2Dp ...
		push	si
		push	ax
		push	bx
		mov	si, 0
		add	si, word_316BE
		mov	cx, ax
		and	cx, 0FFF0h
		shr	cx, 1
		cmp	cx, 0A0h ; '
		jnb	short loc_23D11
		mov	dx, bx
		add	dx, word_316C6
		and	dx, 0FFF0h
		sub	dx, word_316C6
		add	bx, word_316C6
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	bx, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 0FEh
		add	si, ax
		mov	ax, 28h	; '('
		push	dx
		mul	bx
		pop	dx
		add	si, ax
		push	es
		mov	ax, seg	seg000
		mov	es, ax
		assume es:seg000
		mov	ax, [si]
		mov	es:word_1F288, ax
		pop	es
		assume es:nothing
		mov	ax, 1
		mov	bx, 1
		mov	si, 0F288h
		call	sub_1EFF0

loc_23D11:				; CODE XREF: sub_23CB2+15j
		pop	bx
		pop	ax
		pop	si
		retn
sub_23CB2	endp


; =============== S U B	R O U T	I N E =======================================


sub_23D15	proc far		; CODE XREF: seg000:08C1P
					; DATA XREF: seg000:08CBo
		mov	word ptr [si+4], 853h

loc_23D1A:				; CODE XREF: seg000:08E3P
					; DATA XREF: seg000:08EDo
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]

loc_23D23:				; CODE XREF: seg000:0905P
					; DATA XREF: seg000:090Fo
		mov	ax, seg	seg007
		test	si, 1
		jz	short loc_23D30
		dec	si
		mov	ax, seg	seg008

loc_23D30:				; CODE XREF: sub_23D15+15j
		push	ds
		mov	ds, ax
		assume ds:seg008
		lodsw
		sub	cx, ax
		and	cx, 0FFFEh
		lodsw
		sub	dx, ax
		lodsw
		mov	bp, ax
		lodsw
		mov	bx, ax
		cmp	cx, 140h
		jl	short loc_23D4B
		jmp	loc_23E49
; ---------------------------------------------------------------------------

loc_23D4B:				; CODE XREF: sub_23D15+31j
		cmp	dx, ss:10h
		jl	short loc_23D55
		jmp	loc_23E49
; ---------------------------------------------------------------------------

loc_23D55:				; CODE XREF: sub_23D15+3Bj
		mov	ax, cx
		add	ax, bp
		jg	short loc_23D5E
		jmp	loc_23E49
; ---------------------------------------------------------------------------

loc_23D5E:				; CODE XREF: sub_23D15+44j
		mov	ax, dx
		add	ax, bx
		jns	short loc_23D67
		jmp	loc_23E49
; ---------------------------------------------------------------------------

loc_23D67:				; CODE XREF: sub_23D15+4Dj
		mov	word ptr unk_54890, 0
		cmp	ax, ss:10h
		jle	short loc_23D7B
		sub	ax, ss:10h
		sub	bx, ax

loc_23D7B:				; CODE XREF: sub_23D15+5Dj
		test	dx, dx
		jns	short loc_23DAF
		add	bx, dx
		neg	dx
		mov	ax, dx
		shl	ax, 1
		shl	ax, 1
		add	ax, dx
		cmp	bp, 8
		jle	short loc_23DAA
		cmp	bp, 10h
		jg	short loc_23D99
		shl	ax, 1
		jmp	short loc_23DAA
; ---------------------------------------------------------------------------

loc_23D99:				; CODE XREF: sub_23D15+7Ej
		cmp	bp, 18h
		jg	short loc_23DA6
		mov	dx, ax
		shl	ax, 1
		add	ax, dx
		jmp	short loc_23DAA
; ---------------------------------------------------------------------------

loc_23DA6:				; CODE XREF: sub_23D15+87j
		shl	ax, 1
		shl	ax, 1

loc_23DAA:				; CODE XREF: sub_23D15+79j
					; sub_23D15+82j ...
		mov	word ptr unk_54890, ax
		xor	dx, dx

loc_23DAF:				; CODE XREF: sub_23D15+68j
		mov	di, dx
		shl	di, 1
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		assume ds:dseg
		mov	di, [di-68C2h]
		pop	ds
		test	cx, cx
		jns	short loc_23DC5
		jmp	loc_23E45
; ---------------------------------------------------------------------------

loc_23DC5:				; CODE XREF: sub_23D15+ABj
		mov	ax, cx
		add	ax, bp
		cmp	ax, 140h
		jg	short loc_23E47
		shr	cx, 1
		add	di, cx
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	cl, bl
		xor	ch, ch
		inc	cx
		add	si, word_28530
		cmp	bp, 8
		jle	short loc_23E34
		cmp	bp, 10h
		jle	short loc_23E20
		cmp	bp, 18h
		jle	short loc_23E09

loc_23DEF:				; CODE XREF: sub_23D15:loc_23E05j
		call	sub_2312A
		call	sub_2312A
		call	sub_2312A
		call	sub_2312A
		add	di, 1FF0h
		jns	short loc_23E05
		sub	di, 7F60h

loc_23E05:				; CODE XREF: sub_23D15+EAj
		loop	loc_23DEF
		jmp	short loc_23E49
; ---------------------------------------------------------------------------

loc_23E09:				; CODE XREF: sub_23D15+D8j
					; sub_23D15:loc_23E1Cj
		call	sub_2312A
		call	sub_2312A
		call	sub_2312A
		add	di, 1FF4h
		jns	short loc_23E1C
		sub	di, 7F60h

loc_23E1C:				; CODE XREF: sub_23D15+101j
		loop	loc_23E09
		jmp	short loc_23E49
; ---------------------------------------------------------------------------

loc_23E20:				; CODE XREF: sub_23D15+D3j
					; sub_23D15:loc_23E30j
		call	sub_2312A
		call	sub_2312A
		add	di, 1FF8h
		jns	short loc_23E30
		sub	di, 7F60h

loc_23E30:				; CODE XREF: sub_23D15+115j
		loop	loc_23E20
		jmp	short loc_23E49
; ---------------------------------------------------------------------------

loc_23E34:				; CODE XREF: sub_23D15+CEj
					; sub_23D15:loc_23E41j
		call	sub_2312A
		add	di, 1FFCh
		jns	short loc_23E41
		sub	di, 7F60h

loc_23E41:				; CODE XREF: sub_23D15+126j
		loop	loc_23E34
		jmp	short loc_23E49
; ---------------------------------------------------------------------------

loc_23E45:				; CODE XREF: sub_23D15+ADj
		jmp	short loc_23E49
; ---------------------------------------------------------------------------

loc_23E47:				; CODE XREF: sub_23D15+B7j
		jmp	short $+2
; ---------------------------------------------------------------------------

loc_23E49:				; CODE XREF: sub_23D15+33j
					; sub_23D15+3Dj ...
		pop	ax
		mov	ds, ax
		mov	es, ax
		assume es:nothing
		retf
sub_23D15	endp


; =============== S U B	R O U T	I N E =======================================


sub_23E4F	proc far		; CODE XREF: seg000:0927P
					; DATA XREF: seg000:0931o
		mov	bx, [si+12h]
		mov	dx, [si+16h]
		mov	si, [si+0Ch]
		sub	bx, [si]
		and	bx, 0FFFEh
		cmp	bx, 140h
		jnb	short locret_23ED1
		sub	dx, [si+2]
		cmp	dx, 0C0h ; '
		jge	short locret_23ED1
		mov	cx, [si+4]
		mov	ax, bx
		and	bx, 1
		xor	ax, bx
		shl	bx, 1
		mov	si, [bx+si+6]
		test	dx, dx
		jns	short loc_23E89
		sub	si, dx
		sub	si, dx
		add	cx, dx
		jle	short locret_23ED1
		xor	dx, dx

loc_23E89:				; CODE XREF: sub_23E4F+2Ej
		mov	bx, dx
		add	bx, cx
		sub	bx, 0C0h ; '
		jle	short loc_23E97
		sub	cx, bx
		jle	short locret_23ED1

loc_23E97:				; CODE XREF: sub_23E4F+42j
		mov	di, dx
		shl	di, 1
		mov	di, [di-68C2h]
		shr	ax, 1
		add	di, ax
		mov	bx, 0B800h
		mov	es, bx
		assume es:nothing
		cmp	ax, 138h
		jge	short loc_23EBE

loc_23EAD:				; CODE XREF: sub_23E4F:loc_23EBAj
		call	sub_231A5
		add	di, 1FF8h
		jns	short loc_23EBA
		sub	di, 7F60h

loc_23EBA:				; CODE XREF: sub_23E4F+65j
		loop	loc_23EAD
		jmp	short loc_23ECD
; ---------------------------------------------------------------------------

loc_23EBE:				; CODE XREF: sub_23E4F+5Cj
					; sub_23E4F:loc_23ECBj
		call	sub_23294
		add	di, 1FFCh
		jns	short loc_23ECB
		sub	di, 7F60h

loc_23ECB:				; CODE XREF: sub_23E4F+76j
		loop	loc_23EBE

loc_23ECD:				; CODE XREF: sub_23E4F+6Dj
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_23ED1:				; CODE XREF: sub_23E4F+12j
					; sub_23E4F+1Bj ...
		retf
sub_23E4F	endp


; =============== S U B	R O U T	I N E =======================================


sub_23ED2	proc far		; CODE XREF: sub_10985+8P
					; DATA XREF: seg000:0997o
		xor	di, di
		mov	si, 0
		add	si, word_316BE
		mov	dx, word_316C6
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	cx, 10h
		sub	cx, dx
		mov	bl, 14h

loc_23EEB:				; CODE XREF: sub_23ED2+4Aj
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		add	si, dx
		add	si, dx
		shl	si, 1
		shl	si, 1
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		push	di
		push	cx

loc_23F01:				; CODE XREF: sub_23ED2:loc_23F0Fj
		movsw
		movsw
		movsw
		movsw
		add	di, 1FF8h
		jns	short loc_23F0F
		sub	di, 7F60h

loc_23F0F:				; CODE XREF: sub_23ED2+37j
		loop	loc_23F01
		mov	bp, di
		pop	cx
		pop	di
		add	di, 8
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_23EEB
		mov	di, bp
		sub	di, 98h	; '
		mov	bx, 10h
		sub	bx, word_316C6
		shl	bx, 1
		mov	ax, [bx-68C0h]
		sub	ax, [bx-68C2h]
		sub	ax, 8
		mov	ss:20h,	ax
		mov	ax, [bx-68BEh]
		sub	ax, [bx-68C0h]
		sub	ax, 8
		mov	ss:22h,	ax
		mov	ax, [bx-68BCh]
		sub	ax, [bx-68BEh]
		sub	ax, 8
		mov	ss:24h,	ax
		mov	ax, [bx-68BAh]
		sub	ax, [bx-68BCh]
		sub	ax, 8
		mov	ss:26h,	ax
		mov	bx, 0B14h

loc_23F6C:				; CODE XREF: sub_23ED2+1EBj
					; sub_23ED2+1FAj
		lodsw
		push	si
		shr	ax, 1
		jnz	short loc_23F75
		jmp	loc_24016
; ---------------------------------------------------------------------------

loc_23F75:				; CODE XREF: sub_23ED2+9Ej
		mov	si, ax
		shl	si, 1
		shl	si, 1
		mov	cx, ds
		mov	ax, seg	seg009
		mov	ds, ax
		assume ds:seg009
		push	di
		movsw
		movsw
		movsw
		movsw
		add	di, ss:20h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:22h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:24h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:26h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:20h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:22h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:24h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:26h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:20h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:22h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:24h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:26h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:20h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:22h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:24h
		movsw
		movsw
		movsw
		movsw
		add	di, ss:26h
		jmp	loc_240B0
; ---------------------------------------------------------------------------

loc_24016:				; CODE XREF: sub_23ED2+A0j
		mov	cx, ds
		mov	ax, seg	seg009
		mov	ds, ax
		push	di
		xor	ax, ax
		stosw
		stosw
		stosw
		stosw
		add	di, ss:20h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:22h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:24h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:26h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:20h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:22h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:24h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:26h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:20h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:22h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:24h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:26h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:20h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:22h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:24h
		stosw
		stosw
		stosw
		stosw
		add	di, ss:26h

loc_240B0:				; CODE XREF: sub_23ED2+141j
		mov	bp, di
		pop	di
		add	di, 8
		mov	ds, cx
		pop	si
		dec	bl
		jz	short loc_240C0
		jmp	loc_23F6C
; ---------------------------------------------------------------------------

loc_240C0:				; CODE XREF: sub_23ED2+1E9j
		mov	bl, 14h
		mov	di, bp
		sub	di, 98h	; '
		dec	bh
		jz	short loc_240CF
		jmp	loc_23F6C
; ---------------------------------------------------------------------------

loc_240CF:				; CODE XREF: sub_23ED2+1F8j
		mov	dx, ds:9196h
		test	dx, dx
		jz	short loc_24106
		mov	bl, 14h

loc_240D9:				; CODE XREF: sub_23ED2+232j
		lodsw
		push	si
		shr	ax, 1
		mov	si, ax
		shl	si, 1
		shl	si, 1
		push	ds
		mov	ax, seg	seg009
		mov	ds, ax
		push	di
		mov	cx, dx

loc_240EC:				; CODE XREF: sub_23ED2:loc_240FAj
		movsw
		movsw
		movsw
		movsw
		add	di, 1FF8h
		jns	short loc_240FA
		sub	di, 7F60h

loc_240FA:				; CODE XREF: sub_23ED2+222j
		loop	loc_240EC
		pop	di
		add	di, 8
		pop	ds
		assume ds:dseg
		pop	si
		dec	bl
		jnz	short loc_240D9

loc_24106:				; CODE XREF: sub_23ED2+203j
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_23ED2	endp


; =============== S U B	R O U T	I N E =======================================


sub_2410B	proc far		; CODE XREF: sub_109A7+8P
					; DATA XREF: seg000:09B9o
		push	cs
		call	near ptr sub_2411A
		call	sub_24130
		push	cs
		call	near ptr sub_2411A
		call	sub_24130
		retf
sub_2410B	endp


; =============== S U B	R O U T	I N E =======================================


sub_2411A	proc far		; CODE XREF: seg000:09D1P sub_109EB+8P ...
		push	es
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		xor	di, di
		xor	ax, ax
		mov	cx, 4000h
		rep stosw
		pop	es
		assume es:nothing
		retf
sub_2411A	endp


; =============== S U B	R O U T	I N E =======================================


sub_2412B	proc far		; CODE XREF: sub_10A0D+8P
					; DATA XREF: seg000:0A1Fo
		push	cs
		call	near ptr sub_2411A
		retf
sub_2412B	endp


; =============== S U B	R O U T	I N E =======================================


sub_24130	proc near		; CODE XREF: sub_2410B+4p sub_2410B+Bp ...
		push	ax
		push	bx
		mov	ax, 583h
		mov	bx, seg_2C785
		xchg	bh, bl
		mov	seg_2C785, bx
		int	10h		; - VIDEO - SELECT DISPLAY PAGE
					; AL = display page, 0-7  for modes 0 &	1, 0-3	for modes 2 & 3
		pop	bx
		pop	ax
		retn
sub_24130	endp


; =============== S U B	R O U T	I N E =======================================


sub_24144	proc near		; CODE XREF: sub_2441D+31p
					; sub_24475+6p	...
		push	ax
		push	bx
		mov	ax, 583h
		mov	bx, seg_2C785
		mov	bl, bh
		int	10h		; - VIDEO - SELECT DISPLAY PAGE
					; AL = display page, 0-7  for modes 0 &	1, 0-3	for modes 2 & 3
		pop	bx
		pop	ax
		retn
sub_24144	endp


; =============== S U B	R O U T	I N E =======================================


sub_24154	proc near		; CODE XREF: sub_2441D+54p
					; sub_24475+Fp	...
		push	ax
		push	bx
		mov	ax, 583h
		mov	bx, seg_2C785
		int	10h		; - VIDEO - SELECT DISPLAY PAGE
					; AL = display page, 0-7  for modes 0 &	1, 0-3	for modes 2 & 3
		pop	bx
		pop	ax
		retn
sub_24154	endp


; =============== S U B	R O U T	I N E =======================================


sub_24162	proc far		; CODE XREF: sub_10A2F+8P sub_10A51+8P ...
		call	sub_10EF1

loc_24167:				; CODE XREF: sub_24162+Aj
		cmp	word_2B576, 0
		jz	short loc_24167
		call	sub_24130
		mov	word_2B576, 0
		retf
sub_24162	endp


; =============== S U B	R O U T	I N E =======================================


sub_24178	proc far		; CODE XREF: sub_10A73+8P
					; DATA XREF: seg000:0A85o
		call	sub_24185
		call	sub_24130
		call	sub_24185
		call	sub_24130
		retf
sub_24178	endp


; =============== S U B	R O U T	I N E =======================================


sub_24185	proc near		; CODE XREF: sub_24178p sub_24178+6p
		push	ds
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 0
		mov	di, word_31DEE
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 8

loc_2419A:				; CODE XREF: sub_24185+26j
		push	cx
		mov	cx, 50h	; 'P'
		rep movsw
		add	di, 1F60h
		jns	short loc_241AA
		sub	di, 7F60h

loc_241AA:				; CODE XREF: sub_24185+1Fj
		pop	cx
		loop	loc_2419A
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_24185	endp


; =============== S U B	R O U T	I N E =======================================


sub_241B3	proc far		; CODE XREF: sub_10A95+8P
					; DATA XREF: seg000:0AA7o
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 9C80h
		mov	cx, 50h	; 'P'

loc_241BE:				; CODE XREF: sub_241B3:loc_24230j
		lodsw
		test	ax, ax
		js	short loc_2422D
		mov	bx, ax
		lodsw
		mov	dx, ax
		lodsw
		add	bx, ax
		lodsw
		add	dx, ax
		cmp	bx, 13Ch
		jnb	short loc_24226
		cmp	dx, 0BCh ; '
		jnb	short loc_24226
		mov	[si-8],	bx
		mov	[si-6],	dx
		push	bx
		push	dx
		push	cx
		mov	ax, bx
		mov	bx, dx
		call	sub_10EDD
		jz	short loc_24205
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	ax, es:word_2C2D8
		push	si
		call	sub_10EE1
		pop	si
		pop	es
		assume es:nothing
		pop	cx
		add	sp, 4
		jmp	short loc_24226
; ---------------------------------------------------------------------------

loc_24205:				; CODE XREF: sub_241B3+39j
		pop	cx
		pop	di
		pop	ax
		shl	di, 1
		mov	di, [di-68C2h]
		shr	ax, 1
		add	di, ax
		mov	byte ptr es:[di], 77h ;	'w'
		add	di, 2000h
		jns	short loc_24220
		sub	di, 7F60h

loc_24220:				; CODE XREF: sub_241B3+67j
		mov	byte ptr es:[di], 77h ;	'w'
		jmp	short loc_24230
; ---------------------------------------------------------------------------

loc_24226:				; CODE XREF: sub_241B3+1Fj
					; sub_241B3+25j ...
		mov	word ptr [si-8], 0FFFFh
		jmp	short loc_24230
; ---------------------------------------------------------------------------

loc_2422D:				; CODE XREF: sub_241B3+Ej
		add	si, 6

loc_24230:				; CODE XREF: sub_241B3+71j
					; sub_241B3+78j
		loop	loc_241BE
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_241B3	endp


; =============== S U B	R O U T	I N E =======================================


sub_24237	proc far		; CODE XREF: seg000:0ABFP
					; DATA XREF: seg000:0AC9o
		mov	ax, [si+34h]
		mov	word_3822E, ax
		mov	ax, [si+12h]
		mov	word_38212, ax
		mov	ax, [si+16h]
		mov	word_38216, ax
		push	si
		push	cs
		call	near ptr sub_24250
		pop	si
		retf
sub_24237	endp


; =============== S U B	R O U T	I N E =======================================


sub_24250	proc far		; CODE XREF: sub_24237+14p
		add	word_38212, 4
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_3822E
		sub	word_38212, ax
		mov	ax, word_38212
		mov	word_2B7EA, ax
		mov	ax, word_38216
		mov	word_2B7EC, ax
		mov	ax, word_3822E
		mov	word_2B7F0, ax
		mov	ax, [si+1Ah]
		mov	word_2B7EE, ax
		cmp	word_38212, 0FFF0h
		jg	short loc_24285
		jmp	loc_2431E
; ---------------------------------------------------------------------------

loc_24285:				; CODE XREF: sub_24250+30j
		cmp	word_38212, 140h
		jl	short loc_24290
		jmp	loc_2431E
; ---------------------------------------------------------------------------

loc_24290:				; CODE XREF: sub_24250+3Bj
		cmp	word_2B7EE, 41h	; 'A'
		jl	short loc_242BA
		mov	bx, word_3822E
		shl	bx, 1
		mov	si, [bx+32C2h]
		mov	cx, word_38212
		mov	dx, word_38216
		inc	dx
		push	cs
		call	near ptr sub_23316
		mov	ax, word_2B7EA
		mov	word_38212, ax
		mov	ax, word_2B7EC
		mov	word_38216, ax

loc_242BA:				; CODE XREF: sub_24250+45j
		mov	ax, word_2B7EE
		sub	word_38216, ax
		mov	si, 32C8h
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	si, [bx+32C8h]
		mov	cx, word_38212
		mov	dx, word_38216
		push	cs
		call	near ptr sub_23316
		cmp	word_2B7EC, 0
		js	short loc_2431E
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, word_2B7EC
		shl	di, 1
		mov	di, [di-68C2h]
		mov	bx, word_2B7F0
		shl	bx, 1
		mov	cx, [bx+33C4h]
		mov	ax, word_2B7EA
		sar	ax, 1
		jns	short loc_24307
		add	cx, ax
		jle	short loc_2431E
		xor	ax, ax

loc_24307:				; CODE XREF: sub_24250+AFj
		mov	bx, ax
		add	bx, cx
		cmp	bx, 0A0h ; '
		jle	short loc_24319
		sub	bx, 0A0h ; '
		sub	cx, bx
		jle	short loc_2431E

loc_24319:				; CODE XREF: sub_24250+BFj
		add	di, ax
		call	sub_24323

loc_2431E:				; CODE XREF: sub_24250+32j
					; sub_24250+3Dj ...
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_24250	endp


; =============== S U B	R O U T	I N E =======================================


sub_24323	proc near		; CODE XREF: sub_24250+CBp
					; sub_24AFC+86p
		mov	dx, word_2B7EE
		test	dx, dx
		jz	short locret_24347
		mov	ax, 7777h

loc_2432E:				; CODE XREF: sub_24323+22j
		push	di
		push	cx
		rep stosb
		pop	cx
		pop	di
		cmp	di, 0A0h ; '
		jl	short locret_24347
		sub	di, 2000h
		jns	short loc_24344
		add	di, 7F60h

loc_24344:				; CODE XREF: sub_24323+1Bj
		dec	dx
		jnz	short loc_2432E

locret_24347:				; CODE XREF: sub_24323+6j
					; sub_24323+15j
		retn
sub_24323	endp


; =============== S U B	R O U T	I N E =======================================


sub_24348	proc far		; CODE XREF: sub_10E4D+8P
					; DATA XREF: seg000:0E5Fo
		mov	ax, word_31682
		mov	dx, word_31684
		sub	ax, word_31686
		sbb	dx, word_31688
		js	short loc_243C9
		jnz	short loc_2435F
		test	ax, ax
		jz	short locret_243C8

loc_2435F:				; CODE XREF: sub_24348+11j
		mov	di, word_31DEE
		test	dx, dx
		jnz	short loc_24371
		cmp	ax, 0C8h ; '
		jl	short loc_2438C
		cmp	ax, 7D0h
		jl	short loc_2437F

loc_24371:				; CODE XREF: sub_24348+1Dj
		mov	bx, 921Fh
		add	di, 18h
		add	word_31686, 3E8h
		jmp	short loc_24397
; ---------------------------------------------------------------------------

loc_2437F:				; CODE XREF: sub_24348+27j
		mov	bx, 9220h
		add	di, 1Ch
		add	word_31686, 64h	; 'd'
		jmp	short loc_24397
; ---------------------------------------------------------------------------

loc_2438C:				; CODE XREF: sub_24348+22j
		mov	bx, 9221h
		add	di, 20h	; ' '
		add	word_31686, 0Ah

loc_24397:				; CODE XREF: sub_24348+35j
					; sub_24348+42j
		adc	word_31688, 0
		cmp	word_313AA, 0
		jz	short loc_243A6
		add	di, 6Ch	; 'l'

loc_243A6:				; CODE XREF: sub_24348+59j
		mov	si, 500h

loc_243A9:				; CODE XREF: sub_24348+7Ej
		inc	byte ptr [bx]
		cmp	byte ptr [bx], 0Ah
		jl	short loc_243B3
		mov	byte ptr [bx], 0

loc_243B3:				; CODE XREF: sub_24348+66j
		mov	al, [bx]
		push	cs
		call	near ptr sub_2441D
		cmp	byte ptr [bx], 0
		jnz	short locret_243C8
		sub	di, 4
		dec	bx
		cmp	bx, 921Ch
		jge	short loc_243A9

locret_243C8:				; CODE XREF: sub_24348+15j
					; sub_24348+74j
		retf
; ---------------------------------------------------------------------------

loc_243C9:				; CODE XREF: sub_24348+Fj
		mov	ax, word_31686
		mov	word_31682, ax
		mov	ax, word_31688
		mov	word_31684, ax
		retf
sub_24348	endp


; =============== S U B	R O U T	I N E =======================================


sub_243D6	proc far		; CODE XREF: sub_10E6F+8P
					; DATA XREF: seg000:0E81o
		mov	di, word_31DEE
		add	di, 0Ch
		cmp	word_313AA, 0
		jz	short loc_243E7
		add	di, 6Ch	; 'l'

loc_243E7:				; CODE XREF: sub_243D6+Cj
		mov	si, 500h
		mov	cx, 7

loc_243ED:				; CODE XREF: sub_243D6+20j
		xor	al, al
		push	cs
		call	near ptr sub_2441D
		add	di, 4
		loop	loc_243ED
		retf
sub_243D6	endp


; =============== S U B	R O U T	I N E =======================================


sub_243F9	proc far		; CODE XREF: sub_10E91+8P
					; DATA XREF: seg000:0EA3o
		mov	ax, word_316BA
		cmp	ax, 9
		jle	short loc_24404
		mov	ax, 9

loc_24404:				; CODE XREF: sub_243F9+6j
		mov	si, 640h
		mov	di, word_31DF0
		add	di, 44h	; 'D'
		cmp	word_313AA, 0
		jz	short loc_24418
		add	di, 14h

loc_24418:				; CODE XREF: sub_243F9+1Aj
		push	cs
		call	near ptr sub_2441D
		retf
sub_243F9	endp


; =============== S U B	R O U T	I N E =======================================


sub_2441D	proc far		; CODE XREF: sub_24348+6Ep
					; sub_243D6+1Ap ...
		push	si
		push	cx
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		push	si
		push	di
		mov	cx, 8

loc_2443D:				; CODE XREF: sub_2441D:loc_24449j
		movsw
		movsw
		add	di, 1FFCh
		jns	short loc_24449
		sub	di, 7F60h

loc_24449:				; CODE XREF: sub_2441D+26j
		loop	loc_2443D
		pop	di
		pop	si
		pop	ds
		assume ds:dseg
		call	sub_24144
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		push	di
		mov	cx, 8

loc_2445B:				; CODE XREF: sub_2441D:loc_24467j
		movsw
		movsw
		add	di, 1FFCh
		jns	short loc_24467
		sub	di, 7F60h

loc_24467:				; CODE XREF: sub_2441D+44j
		loop	loc_2445B
		pop	di
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		pop	cx
		pop	si
		call	sub_24154
		retf
sub_2441D	endp


; =============== S U B	R O U T	I N E =======================================


sub_24475	proc far		; CODE XREF: seg000:0AE1P sub_244EC+Ep
					; DATA XREF: ...
		push	si
		push	ax
		push	cs
		call	near ptr sub_24488
		call	sub_24144
		pop	ax
		pop	si
		push	cs
		call	near ptr sub_24488
		call	sub_24154
		retf
sub_24475	endp


; =============== S U B	R O U T	I N E =======================================


sub_24488	proc far		; CODE XREF: sub_10AFB+8P sub_24475+3p ...
		mov	di, word_2BC82
		shl	di, 1
		mov	di, [di-68C2h]
		push	word ptr [si+14h]
		push	si
		mov	byte ptr [si+14h], 0
		push	cs
		call	near ptr sub_24535
		pop	si
		pop	word ptr [si+14h]
		retf
sub_24488	endp


; =============== S U B	R O U T	I N E =======================================


sub_244A3	proc far		; CODE XREF: sub_1577D-4C58P
					; DATA XREF: seg000:0B2Fo
		mov	di, word_31DC6
		add	di, 44h	; 'D'
		mov	word_38212, ax
		mov	word_38214, dx
		mov	bx, 3756h
		mov	si, 500h

loc_244B7:				; CODE XREF: sub_244A3+46j
		cmp	word ptr [bx], 0
		jz	short locret_244EB
		xor	dx, dx

loc_244BE:				; CODE XREF: sub_244A3+2Bj
		mov	ax, [bx]
		sub	word_38212, ax
		mov	ax, [bx+2]
		sbb	word_38214, ax
		js	short loc_244D0
		inc	dx
		jmp	short loc_244BE
; ---------------------------------------------------------------------------

loc_244D0:				; CODE XREF: sub_244A3+28j
		mov	ax, [bx]
		add	word_38212, ax
		mov	ax, [bx+2]
		adc	word_38214, ax
		add	bx, 4
		mov	al, dl
		push	cs
		call	near ptr sub_2441D
		add	di, 4
		jmp	short loc_244B7
; ---------------------------------------------------------------------------

locret_244EB:				; CODE XREF: sub_244A3+17j
		retf
sub_244A3	endp


; =============== S U B	R O U T	I N E =======================================


sub_244EC	proc far		; CODE XREF: sub_10B3F+8P
					; DATA XREF: seg000:0B51o
		push	cs
		call	near ptr sub_2411A
		mov	word_2BC82, 0Ch
		mov	si, 352Bh
		push	cs
		call	near ptr sub_24475
		mov	si, 358Fh
		mov	di, word_31CBA
		add	di, 10h
		mov	cx, 0Ah

loc_2450A:				; CODE XREF: sub_244EC+2Fj
		push	si
		push	di
		push	cx
		push	cs
		call	near ptr sub_24524
		pop	cx
		pop	di
		pop	si
		add	si, 0Fh
		add	di, 280h
		loop	loc_2450A
		push	cs
		call	near ptr sub_23077
		jmp	near ptr sub_24162
sub_244EC	endp


; =============== S U B	R O U T	I N E =======================================


sub_24524	proc far		; CODE XREF: sub_244EC+22p
		push	word ptr [si+0Fh]
		push	si
		mov	byte ptr [si+0Fh], 0
		push	cs
		call	near ptr sub_24547
		pop	si
		pop	word ptr [si+0Fh]
		retf
sub_24524	endp


; =============== S U B	R O U T	I N E =======================================


sub_24535	proc far		; CODE XREF: seg000:0B69P
					; sub_24488+13p
					; DATA XREF: ...
		mov	bp, 780h
		mov	cx, 16h
		push	cs
		call	near ptr sub_24552
		retf
sub_24535	endp


; =============== S U B	R O U T	I N E =======================================


sub_24540	proc near		; CODE XREF: sub_10B83+8P
					; DATA XREF: seg000:0B95o
		mov	di, word_31DDE
		add	di, 58h	; 'X'
sub_24540	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_24547	proc far		; CODE XREF: sub_24524+9p
		mov	bp, 2300h
		mov	cx, 0Eh
		push	cs
		call	near ptr sub_24552
		retf
sub_24547	endp


; =============== S U B	R O U T	I N E =======================================


sub_24552	proc far		; CODE XREF: sub_24535+7p sub_24547+7p ...
		lodsb
		test	al, al
		jz	short locret_24566
		xchg	si, bp
		push	si
		push	cs
		call	near ptr sub_24567
		pop	si
		xchg	si, bp
		add	di, 8
		jmp	short near ptr sub_24552
; ---------------------------------------------------------------------------

locret_24566:				; CODE XREF: sub_24552+3j
		retf
sub_24552	endp


; =============== S U B	R O U T	I N E =======================================


sub_24567	proc far		; CODE XREF: sub_24552+9p
		push	di
		push	cx
		push	di
		mov	byte_2B922, al
		mov	di, 33CAh
		mov	cx, 33F2h
		sub	cx, 33CAh
		inc	cx
		repne scasb
		mov	ax, di
		sub	ax, 33CBh
		pop	di
		cmp	ax, 28h	; '('
		jz	short loc_245B1
		pop	cx
		mul	cx
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	si, ax
		push	cx
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing

loc_2459C:				; CODE XREF: sub_24567:loc_245AAj
		movsw
		movsw
		movsw
		movsw
		add	di, 1FF8h
		jns	short loc_245AA
		sub	di, 7F60h

loc_245AA:				; CODE XREF: sub_24567+3Dj
		loop	loc_2459C
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

loc_245B1:				; CODE XREF: sub_24567+1Cj
		pop	cx
		pop	di
		retf
sub_24567	endp


; =============== S U B	R O U T	I N E =======================================


sub_245B4	proc far		; CODE XREF: sub_10BA5+8P
					; DATA XREF: seg000:0BB7o
		cmp	byte_314DF, 0
		jz	short locret_245CC
		mov	byte_314DF, 0
		call	sub_245CD
		call	sub_24144
		call	sub_245CD
		call	sub_24154

locret_245CC:				; CODE XREF: sub_245B4+5j
		retf
sub_245B4	endp


; =============== S U B	R O U T	I N E =======================================


sub_245CD	proc near		; CODE XREF: sub_245B4+Cp
					; sub_245B4+12p
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	bx, word_316B6
		cmp	bx, 27h	; '''
		jle	short loc_245DE
		mov	bx, 27h	; '''

loc_245DE:				; CODE XREF: sub_245CD+Cj
		sub	bx, 27h	; '''
		neg	bx
		mov	di, word_31DF4
		add	di, 2Dh	; '-'
		mov	ax, 0F0Eh
		cmp	word_313AA, 0
		jz	short loc_245FE
		mov	di, word_31DF4
		add	di, 5Fh	; '_'
		mov	ax, 0F0E0h

loc_245FE:				; CODE XREF: sub_245CD+25j
		mov	cx, 27h	; '''

loc_24601:				; CODE XREF: sub_245CD:loc_24642j
		cmp	cx, bx
		jnz	short loc_24607
		xor	al, al

loc_24607:				; CODE XREF: sub_245CD+36j
		push	di
		not	ah
		and	es:[di], ah
		or	es:[di], al
		add	di, 2000h
		jns	short loc_2461A
		sub	di, 7F60h

loc_2461A:				; CODE XREF: sub_245CD+47j
		and	es:[di], ah
		or	es:[di], al
		add	di, 2000h
		jns	short loc_2462A
		sub	di, 7F60h

loc_2462A:				; CODE XREF: sub_245CD+57j
		and	es:[di], ah
		or	es:[di], al
		not	ah
		pop	di
		ror	ax, 1
		ror	ax, 1
		ror	ax, 1
		ror	ax, 1
		test	al, 0F0h
		jz	short loc_24642
		xchg	al, ah
		inc	di

loc_24642:				; CODE XREF: sub_245CD+70j
		loop	loc_24601
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retn
sub_245CD	endp


; =============== S U B	R O U T	I N E =======================================


sub_24649	proc far		; CODE XREF: sub_10BC7+8P
					; DATA XREF: seg000:0BD9o
		cmp	word_2B8EC, 0
		jnz	short loc_24674
		mov	si, word_31DEE
		push	ds
		mov	ax, 0B800h
		mov	ds, ax
		assume ds:nothing
		mov	di, 923Eh
		mov	cx, 8

loc_24660:				; CODE XREF: sub_24649+28j
		push	cx
		mov	cx, 50h	; 'P'
		rep movsw
		add	si, 1F60h
		jns	short loc_24670
		sub	si, 7F60h

loc_24670:				; CODE XREF: sub_24649+21j
		pop	cx
		loop	loc_24660
		pop	ds
		assume ds:dseg

loc_24674:				; CODE XREF: sub_24649+5j
		inc	byte ptr word_2B8EC
		retf
sub_24649	endp


; =============== S U B	R O U T	I N E =======================================


sub_24679	proc far		; CODE XREF: sub_10BE9+8P
					; DATA XREF: seg000:0BFBo
		dec	byte ptr word_2B8EC
		jnz	short locret_2468B
		call	sub_2468C
		call	sub_24144
		call	sub_2468C
		call	sub_24154

locret_2468B:				; CODE XREF: sub_24679+4j
		retf
sub_24679	endp


; =============== S U B	R O U T	I N E =======================================


sub_2468C	proc near		; CODE XREF: sub_24679+6p sub_24679+Cp
		push	es
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 923Eh
		mov	di, word_31DEE
		mov	cx, 8

loc_2469C:				; CODE XREF: sub_2468C+21j
		push	cx
		mov	cx, 50h	; 'P'
		rep movsw
		add	di, 1F60h
		jns	short loc_246AC
		sub	di, 7F60h

loc_246AC:				; CODE XREF: sub_2468C+1Aj
		pop	cx
		loop	loc_2469C
		pop	es
		assume es:nothing
		retn
sub_2468C	endp


; =============== S U B	R O U T	I N E =======================================


sub_246B1	proc far		; CODE XREF: sub_246E5+7Dp
		mov	cx, 80h	; '
		xor	si, si
		xor	di, di

loc_246B8:				; CODE XREF: sub_246B1+31j
		push	cx
		push	ds
		push	di
		mov	ax, 0B800h
		mov	ds, ax
		assume ds:nothing
		mov	di, 43CFh
		mov	cx, 80h	; '
		rep movsw
		pop	di
		pop	ds
		assume ds:dseg
		call	sub_24144
		push	es
		push	si
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, 43CFh
		mov	cx, 80h	; '
		rep movsw
		pop	si
		pop	es
		assume es:nothing
		call	sub_24154
		pop	cx
		loop	loc_246B8
		retf
sub_246B1	endp


; =============== S U B	R O U T	I N E =======================================


sub_246E5	proc far		; CODE XREF: sub_10C0B+8P
					; DATA XREF: seg000:0C1Do
		push	cs
		call	near ptr sub_2411A
		mov	si, 582Eh

loc_246EC:				; CODE XREF: sub_246E5+3Aj
		mov	ax, cs:[si]
		add	si, 2
		test	ax, ax
		jz	short loc_24721
		mov	bp, ax
		mov	ax, cs:[si]
		add	si, 2
		mov	di, cs:[si]
		add	si, 2
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, ax
		mov	dx, cs:[si]
		add	si, 2
		mov	cx, cs:[si]
		add	si, 2
		push	si
		mov	si, bp
		call	sub_247BF
		pop	si
		jmp	short loc_246EC
; ---------------------------------------------------------------------------

loc_24721:				; CODE XREF: sub_246E5+Fj
		xor	dx, dx

loc_24723:				; CODE XREF: sub_246E5+66j
		xor	cx, cx

loc_24725:				; CODE XREF: sub_246E5+5Dj
		push	cx
		push	dx
		mov	si, 0EC90h
		push	cs
		call	near ptr sub_23316
		pop	dx
		pop	cx
		push	cx
		push	dx
		mov	si, 0EFC0h
		push	cs
		call	near ptr sub_23316
		pop	dx
		pop	cx
		add	cx, 29h	; ')'
		cmp	cx, 0CDh ; '
		jl	short loc_24725
		add	dx, 29h	; ')'
		cmp	dx, 0A4h ; '
		jl	short loc_24723
		cmp	word_313AA, 0
		jz	short loc_24761
		mov	si, 0FC20h
		mov	cx, 0C1h ; '
		mov	dx, 0BCh ; '
		push	cs
		call	near ptr sub_23316

loc_24761:				; CODE XREF: sub_246E5+6Dj
		push	cs
		call	near ptr sub_246B1
		retf
sub_246E5	endp


; =============== S U B	R O U T	I N E =======================================


sub_24766	proc far		; CODE XREF: sub_10C2D+8P
					; DATA XREF: seg000:0C3Fo
		push	cx
		push	dx
		push	si
		push	cs
		call	near ptr sub_23316
		call	sub_24144
		pop	si
		pop	dx
		pop	cx
		push	cs
		call	near ptr sub_23316
		call	sub_24154
		retf
sub_24766	endp


; =============== S U B	R O U T	I N E =======================================


sub_2477B	proc far		; CODE XREF: sub_10C4F+8P
					; DATA XREF: seg000:0C61o
		push	cs
		call	near ptr sub_2411A
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, word_31D36
		add	di, 52h	; 'R'
		mov	byte ptr es:[di], 7
		mov	byte ptr es:[di+1], 70h	; 'p'
		add	di, 2000h
		jns	short loc_2479E
		sub	di, 7F60h

loc_2479E:				; CODE XREF: sub_2477B+1Dj
		mov	byte ptr es:[di], 77h ;	'w'
		mov	byte ptr es:[di+1], 77h	; 'w'
		add	di, 2000h
		jns	short loc_247B1
		sub	di, 7F60h

loc_247B1:				; CODE XREF: sub_2477B+30j
		mov	byte ptr es:[di], 7
		mov	byte ptr es:[di+1], 70h	; 'p'
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_2477B	endp


; =============== S U B	R O U T	I N E =======================================


sub_247BF	proc near		; CODE XREF: sub_246E5+36p
					; sub_24AAA+10p
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing

loc_247CA:				; CODE XREF: sub_247BF+1Dj
		push	cx
		mov	cx, dx
		push	di
		rep movsb
		pop	di
		add	di, 2000h
		jns	short loc_247DB
		sub	di, 7F60h

loc_247DB:				; CODE XREF: sub_247BF+16j
		pop	cx
		loop	loc_247CA
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_247BF	endp


; =============== S U B	R O U T	I N E =======================================


sub_247E4	proc far		; CODE XREF: sub_10C71+8P
					; DATA XREF: seg000:0C83o
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, word_31D52
		add	di, 68h	; 'h'
		mov	cx, 45h	; 'E'
		call	sub_2480E
		call	sub_24144
		mov	di, word_31D52
		add	di, 68h	; 'h'
		mov	cx, 45h	; 'E'
		call	sub_2480E
		call	sub_24154
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_247E4	endp


; =============== S U B	R O U T	I N E =======================================


sub_2480E	proc near		; CODE XREF: sub_247E4+Fp
					; sub_247E4+1Fp ...
		jmp	short loc_24832
; ---------------------------------------------------------------------------

loc_24810:				; CODE XREF: sub_2480E:loc_24832j
		push	di
		add	di, 3
		and	byte ptr es:[di], 0F0h
		inc	di
		xor	ax, ax
		push	cx
		mov	cx, 17h
		rep stosw
		stosb
		pop	cx
		and	byte ptr es:[di], 0Fh
		pop	di
		add	di, 2000h
		jns	short loc_24832
		sub	di, 7F60h

loc_24832:				; CODE XREF: sub_2480Ej sub_2480E+1Ej
		loop	loc_24810
		retn
sub_2480E	endp


; =============== S U B	R O U T	I N E =======================================


sub_24835	proc far		; CODE XREF: sub_10C93+8P
					; DATA XREF: seg000:0CA5o
		mov	si, 8430h
		mov	di, word_31C80
		add	di, 68h	; 'h'
		mov	cx, 34h	; '4'
		call	sub_249C3
		mov	si, 8F90h
		mov	di, word_31D2C
		add	di, 68h	; 'h'
		mov	cx, 0Ah
		call	sub_249C3
		mov	si, 91C0h
		cmp	byte ptr word_31470, 0
		jz	short loc_24873
		call	sub_10ED9
		mov	cx, 4
		jmp	short loc_2486D
; ---------------------------------------------------------------------------

loc_24869:				; CODE XREF: sub_24835+3Cj
		add	si, 770h

loc_2486D:				; CODE XREF: sub_24835+32j
		shr	ax, 1
		jb	short loc_24873
		loop	loc_24869

loc_24873:				; CODE XREF: sub_24835+28j
					; sub_24835+3Aj
		mov	di, word_31CE8
		add	di, 68h	; 'h'
		mov	cx, 22h	; '"'
		call	sub_249C3
		call	sub_10EE5
		call	sub_10EE9
		cmp	word_3146C, 0
		jnz	short loc_24894
		jmp	locret_24996
; ---------------------------------------------------------------------------

loc_24894:				; CODE XREF: sub_24835+5Aj
		cmp	word_3146C, 8
		jle	short loc_248DA
		mov	di, word_31C80
		add	di, 68h	; 'h'
		mov	si, 5C18h
		mov	ax, 30h	; '0'
		sub	ax, word_3146C
		mov	dx, 38h	; '8'
		mul	dx
		add	si, ax
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_249C3
		mov	di, 71h	; 'q'
		sub	di, word_3146C
		shl	di, 1
		mov	di, [di-68C2h]
		add	di, 68h	; 'h'
		mov	si, 64D8h
		mov	cx, word_3146C
		sub	cx, 8
		call	sub_249C3

loc_248DA:				; CODE XREF: sub_24835+64j
		mov	cx, 0D7h ; '
		mov	dx, word_3146C
		inc	dx
		push	dx
		mov	si, 0ABE4h
		push	cs
		call	near ptr sub_23316
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0ACE4h
		push	cs
		call	near ptr sub_23316
		mov	cx, 117h
		pop	dx
		mov	si, 0AD94h
		push	cs
		call	near ptr sub_23316
		mov	cx, 0D7h ; '
		mov	dx, 70h	; 'p'
		sub	dx, word_3146C
		push	dx
		mov	si, 0AE94h
		push	cs
		call	near ptr sub_23316
		mov	cx, 0F7h ; '
		pop	dx
		push	dx
		mov	si, 0AF94h
		push	cs
		call	near ptr sub_23316
		mov	cx, 117h
		pop	dx
		mov	si, 0B044h
		push	cs
		call	near ptr sub_23316
		cmp	word_3146C, 8
		jge	short locret_24996
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, 68h	; 'h'
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4750h
		mov	cx, 9

loc_24945:				; CODE XREF: sub_24835+12Aj
		push	di
		push	cx
		mov	cx, 7

loc_2494A:				; CODE XREF: sub_24835+119j
		movsw
		movsw
		movsw
		movsw
		loop	loc_2494A
		pop	cx
		pop	di
		add	di, 2000h
		jns	short loc_2495C
		sub	di, 7F60h

loc_2495C:				; CODE XREF: sub_24835+121j
		add	si, 8
		loop	loc_24945
		pop	ds
		assume ds:dseg
		mov	di, word_31D40
		add	di, 68h	; 'h'
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	si, 4990h
		mov	cx, 9

loc_24975:				; CODE XREF: sub_24835+15Aj
		push	di
		push	cx
		mov	cx, 7

loc_2497A:				; CODE XREF: sub_24835+149j
		movsw
		movsw
		movsw
		movsw
		loop	loc_2497A
		pop	cx
		pop	di
		add	di, 2000h
		jns	short loc_2498C
		sub	di, 7F60h

loc_2498C:				; CODE XREF: sub_24835+151j
		add	si, 8
		loop	loc_24975
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing

locret_24996:				; CODE XREF: sub_24835+5Cj
					; sub_24835+FAj
		retf
sub_24835	endp


; =============== S U B	R O U T	I N E =======================================


sub_24997	proc far		; CODE XREF: sub_10CB5+8P
					; DATA XREF: seg000:0CC7o
		cmp	word_3146E, 0
		jz	short locret_249C2
		mov	di, word_31D52
		add	di, 68h	; 'h'
		mov	cx, 45h	; 'E'
		sub	cx, word_3146E
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		call	sub_2480E
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		mov	si, 6D98h
		mov	cx, word_3146E
		call	sub_249C3

locret_249C2:				; CODE XREF: sub_24997+5j
		retf
sub_24997	endp


; =============== S U B	R O U T	I N E =======================================


sub_249C3	proc near		; CODE XREF: sub_24835+Dp
					; sub_24835+1Dp ...
		push	ds
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005

loc_249CE:				; CODE XREF: sub_249C3:loc_249ECj
		push	di
		add	di, 3
		add	si, 3
		movsb
		push	cx
		mov	cx, 17h
		rep movsw
		movsb
		pop	cx
		add	si, 5
		pop	di
		add	di, 2000h
		jns	short loc_249EC
		sub	di, 7F60h

loc_249EC:				; CODE XREF: sub_249C3+23j
		loop	loc_249CE
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		retn
sub_249C3	endp


; =============== S U B	R O U T	I N E =======================================


sub_249F4	proc far		; CODE XREF: sub_10CD7+8P
					; DATA XREF: seg000:0CE9o
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	si, [di+4]
		shl	si, 1
		mov	si, [si-68C2h]
		mov	ax, [di+2]
		inc	ax
		shr	ax, 1
		add	si, ax
		xchg	si, di
		mov	bl, 1Ch

loc_24A0E:				; CODE XREF: sub_249F4+32j
		call	sub_10ED9
		push	di
		mov	cx, 0Fh
		rep stosb
		pop	di
		add	di, 2000h
		jns	short loc_24A24
		sub	di, 7F60h

loc_24A24:				; CODE XREF: sub_249F4+2Aj
		dec	bl
		jnz	short loc_24A0E
		mov	di, si
		mov	ax, ds
		mov	es, ax
		assume es:dseg
		retf
sub_249F4	endp


; =============== S U B	R O U T	I N E =======================================


sub_24A2F	proc far		; CODE XREF: sub_10CF9+8P
					; DATA XREF: seg000:0D0Bo
		cmp	al, 0Dh
		jnz	short loc_24A38
		jmp	loc_10EED
; ---------------------------------------------------------------------------

loc_24A38:				; CODE XREF: sub_24A2F+2j
		push	ax
		mov	di, word_31478
		shl	di, 1
		mov	di, [di-68C2h]
		mov	ax, word_31476
		shl	ax, 1
		add	di, ax
		pop	ax
		sub	al, 20h	; ' '
		xor	ah, ah
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	si, 7CB0h
		add	si, ax
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		push	si
		push	di
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 8

loc_24A6E:				; CODE XREF: sub_24A2F:loc_24A7Cj
		movsw
		add	si, 2
		add	di, 1FFEh
		jns	short loc_24A7C
		sub	di, 7F60h

loc_24A7C:				; CODE XREF: sub_24A2F+47j
		loop	loc_24A6E
		pop	ds
		assume ds:dseg
		call	sub_24144
		pop	di
		pop	si
		push	ds
		mov	ax, seg	seg005
		mov	ds, ax
		assume ds:seg005
		mov	cx, 8

loc_24A8D:				; CODE XREF: sub_24A2F:loc_24A9Bj
		movsw
		add	si, 2
		add	di, 1FFEh
		jns	short loc_24A9B
		sub	di, 7F60h

loc_24A9B:				; CODE XREF: sub_24A2F+66j
		loop	loc_24A8D
		pop	ax
		mov	ds, ax
		assume ds:dseg
		mov	es, ax
		assume es:nothing
		call	sub_24154
		inc	word_31476
		retf
sub_24A2F	endp


; =============== S U B	R O U T	I N E =======================================


sub_24AAA	proc far		; CODE XREF: sub_10D1B+8P
					; DATA XREF: seg000:0D2Do
		mov	si, 0AF80h
		mov	di, word_31CCE
		add	di, 18h
		mov	dx, 68h	; 'h'
		mov	cx, 36h	; '6'
		call	sub_247BF
		retf
sub_24AAA	endp

; ---------------------------------------------------------------------------
		db 60h,	35h, 60h, 0, 9,	0, 10h,	0, 0BFh, 0, 50h, 41h, 98h
		db 0, 9, 0, 8, 0, 0BFh,	0, 48h,	47h, 60h, 3 dup(0), 40h
		db 0, 9, 0, 88h, 49h, 60h, 0, 69h, 0, 40h, 0, 9, 0, 0C8h
		db 4Bh,	70h, 0,	0B6h, 0, 28h, 0, 12h, 0, 98h, 4Eh, 2 dup(0)
		db 0A4h, 0, 60h, 0, 24h, 3 dup(0)

; =============== S U B	R O U T	I N E =======================================


sub_24AFC	proc far		; CODE XREF: seg000:0D45P
					; DATA XREF: seg000:0D4Fo
		cmp	word ptr [si+1Ch], 0
		js	short loc_24B08
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_24B18

loc_24B08:				; CODE XREF: sub_24AFC+4j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		push	si
		mov	si, word_2B7FA
		push	cs
		call	near ptr sub_23316
		pop	si

loc_24B18:				; CODE XREF: sub_24AFC+Aj
		cmp	word ptr [si+1Ch], 0
		jns	short loc_24B24
		cmp	word ptr [si+1Ah], 30h ; '0'
		jnz	short loc_24B38

loc_24B24:				; CODE XREF: sub_24AFC+20j
		mov	cx, [si+12h]
		mov	dx, [si+16h]
		add	dx, [si+1Ah]
		dec	dx
		push	si
		mov	si, word_2B7F4
		push	cs
		call	near ptr sub_23316
		pop	si

loc_24B38:				; CODE XREF: sub_24AFC+26j
		mov	ax, [si+12h]
		mov	word_2B7EA, ax
		mov	ax, [si+1Ah]
		add	ax, [si+16h]
		dec	ax
		jle	short locret_24B89
		mov	word_2B7EC, ax
		mov	ax, [si+1Ah]
		dec	ax
		mov	dx, word_2B7EC
		cmp	dx, 0BFh ; '
		jle	short loc_24B66
		sub	dx, 0BFh ; '
		sub	ax, dx
		jle	short locret_24B89
		mov	word_2B7EC, 0BFh ; '

loc_24B66:				; CODE XREF: sub_24AFC+5Aj
		mov	word_2B7EE, ax
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, word_2B7EC
		shl	di, 1
		mov	di, [di-68C2h]
		mov	ax, word_2B7EA
		shr	ax, 1
		add	di, ax
		mov	cx, 6
		call	sub_24323
		mov	ax, ds
		mov	es, ax
		assume es:dseg

locret_24B89:				; CODE XREF: sub_24AFC+49j
					; sub_24AFC+62j
		retf
sub_24AFC	endp

; ---------------------------------------------------------------------------
		align 8
seg001		ends

; ===========================================================================

; Segment type:	Pure code
;seg002		segment	byte public 'CODE' use16
;		assume cs:seg002
;		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

loc_24B90:				; DATA XREF: start+2Ao
		sti
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	ds
		push	cs
		pop	ds
		assume ds:seg002
		xor	bh, bh
		mov	bl, ah
		sub	ah, 10h
		jbe	short loc_24BA5
		jmp	loc_24CC0
; ---------------------------------------------------------------------------

loc_24BA5:				; CODE XREF: seg002:0010j
		shl	bl, 1
		call	off_24BDA[bx]

loc_24BAB:				; CODE XREF: seg002:0139j seg002:0142j
		pop	ds
		assume ds:dseg
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		iret
; ---------------------------------------------------------------------------
		db 3 dup(0), 1,	5 dup(0), 90h, 4 dup(0), 41h, 3, 0EFh
		db 2, 0B9h, 2, 0E7h, 2,	0EAh, 2, 8Dh, 2, 0CCh, 2, 66h
		db 3, 0A9h, 2, 0E2h, 2,	0F3h, 2, 0A4h, 2, 0B1h,	2
off_24BDA	dw offset sub_24D57	; DATA XREF: seg002:0017r
		dw offset sub_24EFC
		dw offset sub_24CD5
		dw offset sub_24D33
		dw offset sub_24F05
		db 10h,	99h, 79h, 90h, 5Dh, 88h, 0B6h, 80h, 7Ch, 79h, 0ABh
		db 72h,	3Bh, 6Ch, 28h, 66h, 6Ch, 60h, 3, 5Bh, 0E7h, 55h
		db 15h,	51h, 88h, 4Ch, 3Ch, 48h, 2Fh, 44h, 5Bh,	40h, 0BEh
		db 3Ch,	55h, 39h, 1Eh, 36h, 14h, 33h, 36h, 30h,	82h, 2Dh
		db 0F4h, 2Ah, 8Bh, 28h,	44h, 26h, 1Eh, 24h, 17h, 22h, 2Dh
		db 20h,	5Fh, 1Eh, 0ABh,	1Ch, 0Fh, 1Bh, 8Ah, 19h, 1Bh, 18h
		db 0C1h, 16h, 7Ah, 15h,	45h, 14h, 22h, 13h, 0Fh, 12h, 0Ch
		db 11h,	17h, 10h, 30h, 0Fh, 55h, 0Eh, 87h, 0Dh,	0C5h, 0Ch
		db 0Eh,	0Ch, 60h, 0Bh, 0BDh, 0Ah, 23h, 0Ah, 91h, 9, 8
		db 9, 86h, 8, 0Bh, 8, 98h, 7, 2Bh, 7, 0C4h, 6, 63h, 6
		db 7, 6, 0B0h, 5, 5Eh, 5, 11h, 5, 0C9h,	4, 84h,	4, 43h
		db 4, 6, 4, 0CCh, 3, 95h, 3, 62h, 3, 31h, 3 dup(3), 0D8h
		db 2, 0AFh, 2, 89h, 2, 64h, 2, 42h, 2, 21h, 2, 3, 2, 0E6h
		db 1, 0CBh, 1, 0B1h, 1,	99h, 1,	82h, 1,	6Ch, 1,	58h, 1
		db 44h,	1, 32h,	1, 21h,	1, 30h dup(0)
; ---------------------------------------------------------------------------

loc_24CC0:				; CODE XREF: seg002:0012j
		sub	bl, 20h	; ' '
		jb	short loc_24CCC
		mov	[bx+22h], al
		jmp	loc_24BAB
; ---------------------------------------------------------------------------

loc_24CCC:				; CODE XREF: seg002:0133j
		mov	bl, ah
		mov	al, [bx+22h]
		jmp	loc_24BAB

; =============== S U B	R O U T	I N E =======================================


sub_24CD5	proc near		; CODE XREF: seg002:0017p
					; DATA XREF: seg002:004Eo
		mov	cl, 9
		imul	cl
		mov	bx, ax
		xor	ax, ax
		mov	byte_28552, al
		mov	byte_28559, al
		mov	byte_28558, al
		mov	cx, 18h
		mov	si, 100h

loc_24CEC:				; CODE XREF: sub_24CD5+1Cj
		mov	[si], ax
		add	si, 2
		loop	loc_24CEC
		mov	al, [bx+5E2h]
		mov	byte_28555, al
		mov	byte_28556, al
		mov	al, 0FFh
		mov	byte_28557, al
		mov	di, 100h
		push	bx
		call	sub_24D1C
		pop	bx
		add	bx, 4
		mov	di, 118h
		call	sub_24D1C
		dec	byte_28552
		dec	byte_28559
		retn
sub_24CD5	endp


; =============== S U B	R O U T	I N E =======================================


sub_24D1C	proc near		; CODE XREF: sub_24CD5+31p
					; sub_24CD5+3Bp
		mov	ax, [bx+5E5h]
		mov	[di+4],	ax
		mov	bx, [bx+5E3h]
		mov	[di], bx
		mov	bx, [bx]
		mov	[di+2],	bx
		mov	byte ptr [di+6], 1
		retn
sub_24D1C	endp


; =============== S U B	R O U T	I N E =======================================


sub_24D33	proc near		; CODE XREF: seg002:0017p
					; DATA XREF: seg002:0050o
		mov	cx, 0Fh
		mov	bx, 420h
		imul	cl
		add	bx, ax
		mov	si, 410h
		mov	byte_28553, ch

loc_24D44:				; CODE XREF: sub_24D33+17j
		mov	al, [bx]
		mov	[si], al
		inc	bx
		inc	si
		loop	loc_24D44
		mov	ax, word_2894D
		mov	word_2893D, ax
		dec	byte_28553
		retn
sub_24D33	endp


; =============== S U B	R O U T	I N E =======================================


sub_24D57	proc near		; CODE XREF: seg002:0017p
					; DATA XREF: seg002:off_24BDAo
		mov	cx, 2
		mov	bh, ch
		mov	al, byte_28554
		add	byte_28558, al
		jb	short loc_24DA8
		cmp	byte_28552, bh
		jz	short loc_24DA8
		mov	al, byte_28555
		add	byte_28557, al
		jnb	short loc_24D80
		mov	di, 100h
		call	sub_24E8B
		mov	di, 118h
		call	sub_24E8B

loc_24D80:				; CODE XREF: sub_24D57+1Bj
		mov	di, 100h
		call	sub_24F12
		mov	word_2855E, cx
		mov	di, 118h
		call	sub_24F12
		mov	ax, 2
		cmp	byte_2863A, bh
		jz	short loc_24DA0
		dec	byte_2863A
		mov	ax, word_2855E

loc_24DA0:				; CODE XREF: sub_24D57+40j
		shr	byte_28652, 1
		jb	short loc_24DA8
		mov	cx, ax

loc_24DA8:				; CODE XREF: sub_24D57+Cj
					; sub_24D57+12j ...
		cmp	byte_28553, bh
		jz	short loc_24E00
		cmp	byte_2894C, bh
		jz	short loc_24DC0
		dec	byte_2894C
		jnz	short loc_24DC0
		mov	byte_28553, bh
		jmp	short loc_24E00
; ---------------------------------------------------------------------------

loc_24DC0:				; CODE XREF: sub_24D57+5Bj
					; sub_24D57+61j
		mov	ax, word_2894D
		dec	byte ptr word_2893D+1
		jnz	short loc_24DDF
		mov	byte ptr word_2893D+1, ah
		ror	byte_2894A, 1
		mov	dx, word_28946
		jb	short loc_24DDB
		mov	dx, word_28948

loc_24DDB:				; CODE XREF: sub_24D57+7Ej
		add	word_28942, dx

loc_24DDF:				; CODE XREF: sub_24D57+70j
		mov	dx, word_28942
		add	dx, word_28940
		dec	byte ptr word_2893D
		jnz	short loc_24DF4
		mov	byte ptr word_2893D, al
		mov	dx, word_28944

loc_24DF4:				; CODE XREF: sub_24D57+94j
		mov	word_28942, dx
		ror	byte_2894B, 1
		jb	short loc_24E00
		mov	cx, dx

loc_24E00:				; CODE XREF: sub_24D57+55j
					; sub_24D57+67j ...
		cmp	word_2855C, cx
		jz	short loc_24E16
		mov	al, 0B6h ; '
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, cl
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, ch
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		mov	word_2855C, cx

loc_24E16:				; CODE XREF: sub_24D57+ADj
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 3
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retn
sub_24D57	endp

; ---------------------------------------------------------------------------
		mov	bl, [di+13h]
		mov	si, [di]
		add	bl, 2
		cmp	[di+4],	bl
		jnz	short loc_24E2D
		mov	bl, [di+5]

loc_24E2D:				; CODE XREF: seg002:0298j
		mov	si, [bx+si]
		mov	[di+13h], bl
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		or	dl, 4
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	al, [si]
		inc	si
		mov	[di+17h], al
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	al, [si]
		inc	si
		mov	byte_2855A, al
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	ax, [si]
		add	si, 2
		mov	[di+14h], ax
		or	dl, 8
		mov	al, [si]
		inc	si
		mov	[di+0Eh], al
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	al, [si]
		inc	si
		mov	[di+10h], al
		mov	al, [si]
		inc	si
		mov	[di+11h], al
		shl	al, 1
		mov	[di+0Fh], al
		or	dl, 10h
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		or	dl, 2
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		or	dl, 80h
		or	dl, 40h
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	dl, bh
		jmp	short loc_24E99
; ---------------------------------------------------------------------------
		mov	al, [si]
		inc	si
		mov	[di+8],	al
		jmp	short loc_24E99

; =============== S U B	R O U T	I N E =======================================


sub_24E8B	proc near		; CODE XREF: sub_24D57+20p
					; sub_24D57+26p
		mov	dl, [di+12h]
		dec	byte ptr [di+6]
		jnz	short loc_24EBF
		and	dl, 30h
		mov	si, [di+2]

loc_24E99:				; CODE XREF: seg002:02A2j seg002:02A7j ...
		mov	al, [si]
		inc	si
		cmp	al, 0A0h ; '
		jb	short loc_24EB5
		add	al, 20h	; ' '
		jb	short loc_24EAF
		mov	bl, al
		mov	al, [bx+4E6h]
		mov	[di+9],	al
		jmp	short loc_24E99
; ---------------------------------------------------------------------------

loc_24EAF:				; CODE XREF: sub_24E8B+17j
		inc	ax
		mov	[di+7],	al
		jmp	short loc_24E99
; ---------------------------------------------------------------------------

loc_24EB5:				; CODE XREF: sub_24E8B+13j
		mov	bl, al
		shl	bl, 1
		jnb	short loc_24ED6
		jmp	word ptr [bx+30h]
; ---------------------------------------------------------------------------

loc_24EBF:				; CODE XREF: sub_24E8B+6j
		test	dl, 40h
		jz	short locret_24ED0
		test	dl, 80h
		jz	short loc_24ECD
		dec	byte ptr [di+16h]
		retn
; ---------------------------------------------------------------------------

loc_24ECD:				; CODE XREF: sub_24E8B+3Cj
		inc	byte ptr [di+16h]

locret_24ED0:				; CODE XREF: sub_24E8B+37j
		retn
; ---------------------------------------------------------------------------
		mov	[di+0Ah], bh
		jmp	short loc_24EEC
; ---------------------------------------------------------------------------

loc_24ED6:				; CODE XREF: sub_24E8B+2Ej
		mov	word ptr [di+0Ch], 0
		mov	[di+12h], dl
		test	dl, 4
		mov	[di+16h], al
		jnz	short loc_24EEC
		mov	ax, [di+8]
		mov	[di+0Ah], ax

loc_24EEC:				; CODE XREF: sub_24E8B+49j
					; sub_24E8B+59j
		mov	al, [di+7]
		mov	[di+6],	al
		mov	[di+2],	si
		retn
sub_24E8B	endp

; ---------------------------------------------------------------------------
		pop	ax
		xor	al, al
		mov	byte_28559, al

; =============== S U B	R O U T	I N E =======================================


sub_24EFC	proc near		; CODE XREF: seg002:0017p
					; DATA XREF: seg002:004Co
		xor	al, al
		mov	byte_28553, al
		mov	byte_28552, al
		retn
sub_24EFC	endp


; =============== S U B	R O U T	I N E =======================================


sub_24F05	proc near		; CODE XREF: seg002:0017p
					; DATA XREF: seg002:0052o
		cmp	byte_28559, 0
		jz	short locret_24F11
		mov	byte_28552, 0FFh

locret_24F11:				; CODE XREF: sub_24F05+5j
		retn
sub_24F05	endp


; =============== S U B	R O U T	I N E =======================================


sub_24F12	proc near		; CODE XREF: sub_24D57+2Cp
					; sub_24D57+36p
		mov	bl, [di+0Bh]
		inc	bl
		mov	al, [bx+5B4h]
		or	al, al
		jns	short loc_24F28
		inc	al
		jz	short loc_24F2B
		add	al, 7Fh	; ''
		mov	bl, [di+9]

loc_24F28:				; CODE XREF: sub_24F12+Bj
		mov	[di+0Bh], bl

loc_24F2B:				; CODE XREF: sub_24F12+Fj
		add	al, [di+16h]
		add	al, byte_2855A
		add	al, [di+17h]
		shl	al, 1
		mov	bl, al
		mov	cx, [bx+54h]
		mov	bl, [di+12h]
		xor	bl, 1
		test	bl, 10h
		jz	short loc_24F77
		xor	al, al
		or	al, [di+10h]
		jnz	short loc_24F52
		inc	ax
		and	al, bl

loc_24F52:				; CODE XREF: sub_24F12+3Bj
		mov	ah, [di+11h]
		mov	dl, [di+0Fh]
		test	bl, 20h
		jnz	short loc_24F61
		sub	ah, al
		jmp	short loc_24F65
; ---------------------------------------------------------------------------

loc_24F61:				; CODE XREF: sub_24F12+49j
		add	ah, al
		cmp	ah, dl

loc_24F65:				; CODE XREF: sub_24F12+4Dj
		jnz	short loc_24F6A
		xor	bl, 20h

loc_24F6A:				; CODE XREF: sub_24F12:loc_24F65j
		mov	[di+11h], ah
		shr	dl, 1
		sub	ah, dl
		mov	al, ah
		sbb	ah, ah
		add	cx, ax

loc_24F77:				; CODE XREF: sub_24F12+34j
		test	bl, 8
		jz	short loc_24F8F
		dec	byte ptr [di+0Eh]
		jnz	short loc_24F8F
		inc	byte ptr [di+0Eh]
		mov	ax, [di+14h]
		add	ax, [di+0Ch]
		mov	[di+0Ch], ax
		add	cx, ax

loc_24F8F:				; CODE XREF: sub_24F12+68j
					; sub_24F12+6Dj
		mov	[di+12h], bl
		not	bl
		and	bl, 3
		jnz	short locret_24F9C
		mov	cx, 2

locret_24F9C:				; CODE XREF: sub_24F12+85j
		retn
sub_24F12	endp

; ---------------------------------------------------------------------------
;		align 20h
		db 0C0h, 0FFh, 0C0h, 44h, 80h, 3Eh, 10h, 0, 0F0h, 0FFh
		db 55h,	2 dup(0), 6, 1,	0A0h, 0, 20h, 3, 80h, 0Ch, 40h
		db 1, 0C0h, 0FEh, 55h, 0, 0Ah, 0, 1, 80h, 2, 60h, 36h
		db 20h,	17h, 60h, 5, 0C0h, 0F9h, 55h, 88h, 4, 0, 1, 10h
		db 0, 0E0h, 1, 0E0h, 1,	8, 0, 0F8h, 0FFh, 3 dup(0), 10h
		db 0, 40h, 0FFh, 0C0h, 8, 0C0h,	8, 0F0h, 0FFh, 10h, 0
		db 37h,	0, 0Ah,	0, 1, 80h, 2, 60h, 36h,	60h, 36h, 60h
		db 5, 0C0h, 0F9h, 55h, 2Ch, 0Ch, 2, 1, 80h, 2, 60h, 1Dh
		db 40h,	1Ah, 10h, 0, 0F0h, 0FFh, 55h, 0, 0Ch, 63h, 1, 0C0h
		db 0FEh, 0E0h, 2Eh, 0E0h, 2Eh, 10h, 0, 0F0h, 0FFh, 55h
		db 2 dup(0), 3,	1, 10h,	0, 80h,	3Eh, 0C0h, 5Dh,	20h, 0
		db 0E0h, 0FFh, 55h, 0ECh, 2, 2 dup(1), 0C0h, 0FFh, 60h
		db 4, 60h, 4, 10h, 0, 0F0h, 0FFh, 55h, 0, 0Ah, 0, 1, 80h
		db 2, 80h, 3Eh,	80h, 3Eh, 10h, 0, 0F0h,	0FFh, 55h, 0, 7
		db 63h,	1, 0A0h, 1, 80h, 20h, 0F0h, 2Ch, 60h, 5, 0A0h
		db 0FAh, 0D4h, 44h, 46h, 9, 1, 50h, 0, 40h, 1Fh, 0C0h
		db 2Bh,	40h, 6,	60h, 0FAh, 55h,	88h, 50h, 0, 1,	90h, 0
		db 0A0h, 0, 0B0h, 0, 70h, 0Ah, 90h, 0F5h, 55h, 0, 0Fh
		db 5, 1, 70h, 2, 50h, 0, 60h, 0, 70h, 0Ah, 90h,	0F5h, 55h
		db 0, 7, 0, 1, 0A0h, 0FFh, 0C0h, 8, 0C0h, 8, 40h, 0FFh
		db 30h,	1, 37h,	0, 0Fh,	0, 1, 80h, 0F3h, 0, 64h, 60h, 36h
		db 40h,	1, 0C0h, 0FEh, 55h, 0, 0Bh, 0, 1, 0A0h,	1, 80h
		db 20h,	70h, 20h, 60h, 5, 0A0h,	0FAh, 0D4h, 44h, 19h, 9
		db 1, 0, 1, 0, 2Dh, 0, 2Dh, 60h, 5, 0A0h, 0FAh,	55h, 0
		db 12h,	0Ch, 1,	80h, 6,	10h, 0,	10h, 0,	10h, 1,	20h, 0FFh
		db 55h,	0ECh, 5, 0, 1, 50h, 0, 80h, 3Eh, 0, 4Bh, 0A0h
		db 5, 60h, 0FAh, 55h, 88h, 5Ah,	3, 1, 20h, 3, 80h, 0Ch
		db 80h,	0Ch, 40h, 1, 0C0h, 0FEh, 55h, 0, 0Ah, 0, 1, 90h
		db 0FFh, 0, 0Ah, 60h, 9, 10h, 0, 0F0h, 0FFh, 55h, 2 dup(0)
		db 4, 1, 80h, 2, 0C0h, 26h, 8, 0, 10h, 0, 0F0h,	0FFh, 55h
		db 0, 0Ah, 63h,	1, 80h,	2, 0, 2Dh, 8, 0, 10h, 0, 0F0h
		db 0FFh, 55h, 0, 0Ah, 63h, 1, 80h, 2, 40h, 33h,	8, 0, 10h
		db 0, 0F0h, 0FFh, 55h, 0, 0Ah, 63h, 1, 0, 1, 4,	7, 0Bh
		db 0Fh,	12h, 15h, 18h, 1Bh, 1Dh, 1Fh, 21h, 23h,	25h, 80h
		db 0, 3, 87h, 0, 4, 87h, 0, 3, 7, 8Ch, 0, 4, 7,	8Ch, 7
		db 0Ch,	8Fh, 7,	0Ch, 90h, 3, 7,	8Ch, 4,	7, 8Ch,	0, 8Ch
		db 0, 83h, 0, 84h, 0, 85h, 0, 87h, 0Ch,	6 dup(0), 80h
		db 4Eh,	0F4h, 5, 34h, 0, 28h, 6, 4Ah, 0, 4Eh, 0Dh, 0Ah
		db 2, 0, 0Fh, 0Ah, 2, 0, 7Eh, 6, 93h, 6, 89h, 6, 89h, 6
		db 89h,	6, 25h,	7, 89h,	6, 89h,	6, 89h,	6, 89h,	6, 6Ch
		db 9, 6Ch, 9, 6Ch, 9, 6Ch, 9, 89h, 6, 89h, 6, 40h, 7, 6Ch
		db 9, 6Ch, 9, 6Ch, 9, 6Ch, 9, 63h, 7, 76h, 7, 89h, 6, 89h
		db 6, 7Bh, 8, 82h, 8, 82h
		db 8, 82h, 8, 82h, 8, 82h, 8, 82h, 8, 82h, 8, 82h, 8, 97h
		db 8, 97h, 8, 0D6h, 8, 72h, 6, 72h, 6, 72h, 6, 72h, 6
		db 0EFh, 8, 97h, 8, 97h, 8, 48h, 9, 48h, 9, 97h, 8, 97h
		db 8, 98h, 9, 48h, 9, 48h, 9, 0C3h, 9, 72h, 6, 72h, 6
		db 72h,	6, 0FCh, 9, 82h, 8, 82h, 8, 82h, 8, 25h, 9, 97h
		db 8, 97h, 2 dup(8), 0Ah, 8Ah, 2, 0E3h,	8 dup(15h), 85h
		db 8Ah,	20h, 0E5h, 82h,	50h, 0,	4, 15h,	88h, 0F4h, 85h
		db 88h,	0F4h, 0E3h, 8Ah, 8, 21h, 0E1h, 8Ah, 4, 21h, 0E1h
		db 8Ah,	8, 21h,	82h, 0,	4, 1, 24h, 8Ah,	4, 21h,	0E3h, 8Ah
		db 8, 3	dup(21h), 0E1h,	82h, 0,	4, 1, 2Bh, 8Ah,	4, 21h
		db 8Ah,	8, 0E3h, 21h, 0E3h, 8Ah, 8, 24h, 0E1h, 8Ah, 4
		db 24h,	8Ah, 8,	24h, 82h, 0, 4,	1, 24h,	8Ah, 4,	24h, 0E3h
		db 8Ah,	8, 3 dup(24h), 0E1h, 82h, 0, 4,	1, 2Bh,	8Ah, 4
		db 24h,	8Ah, 8,	0E3h, 24h, 0E3h, 8Ah, 8, 1Fh, 0E1h, 8Ah
		db 4, 1Fh, 8Ah,	8, 1Fh,	82h, 0,	4, 1, 24h, 8Ah,	4, 1Fh
		db 0E3h, 8Ah, 8, 3 dup(1Fh), 0E1h, 82h,	0, 4, 1, 2Bh, 8Ah
		db 4, 1Fh, 8Ah,	8, 0E3h, 1Fh, 0E3h, 8Ah, 8, 21h, 0E1h
		db 8Ah,	4, 21h,	8Ah, 8,	21h, 82h, 0, 4,	1, 24h,	8Ah, 4
		db 21h,	0E3h, 8Ah, 8, 3	dup(21h), 0E1h,	82h, 0,	4, 1, 2Bh
		db 8Ah,	4, 21h,	8Ah, 8,	0E3h, 21h, 85h,	8Ah, 5,	0E3h, 21h
		db 0E7h, 21h, 0E1h, 21h, 0E3h, 21h, 0E1h, 21h, 0EBh, 21h
		db 0E3h, 21h, 0E7h, 21h, 0E1h, 21h, 0E3h, 21h, 0E1h, 21h
		db 0EBh, 21h, 85h, 8Ah,	3, 0E3h, 1Dh dup(15h), 0EBh, 80h
		db 85h,	8Ah, 3,	0E3h, 0Dh dup(15h), 0EBh, 80h, 85h, 0E3h
		db 8Ah,	8, 21h,	0E1h, 8Ah, 4, 21h, 8Ah,	8, 21h,	82h, 0
		db 4, 1, 24h, 8Ah, 4, 21h, 0E3h, 8Ah, 8, 3 dup(21h), 0E1h
		db 82h,	0, 4, 1, 2Bh, 8Ah, 4, 21h, 8Ah,	8, 0E3h, 21h, 0E3h
		db 8Ah,	8, 24h,	0E1h, 8Ah, 4, 24h, 8Ah,	8, 24h,	82h, 0
		db 4, 1, 24h, 8Ah, 4, 24h, 0E3h, 8Ah, 8, 3 dup(24h), 0E1h
		db 82h,	0, 4, 1, 2Bh, 8Ah, 4, 24h, 8Ah,	8, 0E3h, 24h, 0E3h
		db 8Ah,	8, 1Fh,	0E1h, 8Ah, 4, 1Fh, 8Ah,	8, 1Fh,	82h, 0
		db 4, 1, 24h, 8Ah, 4, 1Fh, 0E3h, 8Ah, 8, 3 dup(1Fh), 0E1h
		db 82h,	0, 4, 1, 2Bh, 8Ah, 4, 1Fh, 8Ah,	8, 0E3h, 1Fh, 0E3h
		db 8Ah,	8, 21h,	0E1h, 8Ah, 4, 21h, 8Ah,	8, 21h,	82h, 0
		db 4, 1, 24h, 8Ah, 4, 21h, 0E3h, 8Ah, 8, 21h, 0EFh, 21h
		db 0E3h, 8Ah, 8, 21h, 0E1h, 8Ah, 4, 21h, 8Ah, 8, 21h, 82h
		db 0, 4, 1, 24h, 8Ah, 4, 21h, 0E3h, 8Ah, 8, 3 dup(21h)
		db 0E1h, 82h, 0, 4, 1, 2Bh, 8Ah, 4, 21h, 8Ah, 8, 0E3h
		db 21h,	0E3h, 8Ah, 8, 24h, 0E1h, 8Ah, 4, 24h, 8Ah, 8, 24h
		db 82h,	0, 4, 1, 24h, 8Ah, 4, 24h, 0E3h, 8Ah, 8, 3 dup(24h)
		db 0E1h, 82h, 0, 4, 1, 2Bh, 8Ah, 4, 24h, 8Ah, 8, 0E3h
		db 24h,	0E3h, 8Ah, 8, 1Fh, 0E1h, 8Ah, 4, 1Fh, 8Ah, 8, 1Fh
		db 82h,	0, 4, 1, 24h, 8Ah, 4, 1Fh, 0E3h, 8Ah, 8, 3 dup(1Fh)
		db 0E1h, 82h, 0, 4, 1, 2Bh, 8Ah, 4, 1Fh
		db 8Ah,	8, 0E3h, 1Fh, 0E7h, 8Ah, 8, 4 dup(21h),	85h, 0FFh
		db 8Ah,	20h, 21h, 88h, 0, 85h, 88h, 0, 8Ah, 9, 0E5h, 21h
		db 0E1h, 1Fh, 21h, 0E3h, 2 dup(21h), 0E1h, 1Fh,	21h, 1Fh
		db 21h,	1Fh, 21h, 1Fh, 85h, 8Ah, 9, 88h, 0Ch, 0E3h, 21h
		db 0E1h, 2 dup(21h), 24h, 3 dup(21h), 24h, 0E5h, 21h, 0E7h
		db 21h,	0E3h, 24h, 0E1h, 2 dup(24h), 28h, 3 dup(24h), 28h
		db 0E5h, 24h, 0E7h, 24h, 0E3h, 1Fh, 0E1h, 2 dup(1Fh), 23h
		db 3 dup(1Fh), 23h, 0E5h, 1Fh, 0E7h, 1Fh, 0E3h,	21h, 0E1h
		db 2 dup(21h), 24h, 3 dup(21h),	24h, 0E5h, 21h,	0E7h, 21h
		db 88h,	0, 85h,	8Ah, 9,	88h, 0Ch, 0E7h,	2 dup(21h), 0E1h
		db 21h,	0E5h, 21h, 0E7h, 21h, 0E3h, 8 dup(21h),	88h, 0
		db 85h,	88h, 0Ch, 8Ah, 5, 0E5h,	21h, 0E1h, 1Fh,	21h, 0E3h
		db 2 dup(21h), 0E1h, 1Fh, 21h, 1Fh, 21h, 1Fh, 21h, 1Fh
		db 0E5h, 21h, 0E1h, 1Fh, 21h, 0E3h, 2 dup(21h),	0E1h, 1Fh
		db 21h,	1Fh, 21h, 1Fh, 21h, 1Fh, 0E5h, 21h, 0E1h, 1Fh
		db 21h,	0E3h, 2	dup(21h), 0E1h,	1Fh, 21h, 1Fh, 21h, 1Fh
		db 21h,	1Fh, 88h, 0, 8Ah, 55h, 0E5h, 82h, 0FAh,	0, 4, 21h
		db 0E1h, 80h, 0E5h, 82h, 0FAh, 0, 4, 21h, 0E1h,	80h, 0E5h
		db 82h,	0FAh, 0, 4, 21h, 0E1h, 80h, 0E5h, 82h, 0FAh, 0
		db 4, 21h, 0E1h, 80h, 85h, 8Ah,	55h, 0E1h, 7 dup(28h)
		db 80h,	3 dup(2Bh), 80h, 3 dup(2Dh), 80h, 7 dup(26h), 80h
		db 3 dup(29h), 80h, 3 dup(2Bh),	80h, 85h, 8Ah, 6, 0E3h
		db 82h,	0, 2, 1, 18h, 82h, 0, 4, 1, 2Bh, 82h, 0, 2, 1
		db 18h,	82h, 0,	4, 1, 2Fh, 82h,	0, 2, 1, 18h, 82h, 0, 4
		db 1, 2Bh, 82h,	0, 2, 1, 18h, 82h, 0, 4, 1, 30h, 85h, 8Ah
		db 9, 88h, 0Ch,	0E7h, 2	dup(21h), 0E1h,	21h, 0E5h, 21h
		db 0E7h, 21h, 0E3h, 8 dup(21h),	0E7h, 2	dup(21h), 0E1h
		db 21h,	0E5h, 21h, 0E7h, 21h, 0E3h, 4 dup(21h),	0E2h, 21h
		db 0ECh, 80h, 88h, 0, 85h, 88h,	1, 0E5h, 8Ah, 2, 9, 0E1h
		db 9, 0E5h, 89h, 1Ch, 0E1h, 8Ah, 2, 9, 0E3h, 2 dup(9)
		db 0E7h, 89h, 1Ch, 0E3h, 89h, 1Ch, 0E1h, 89h, 1Ch, 89h
		db 1Ch,	89h, 1Ch, 0E3h,	89h, 1Ch, 0E1h,	89h, 1Ch, 8Ah
		db 2, 9, 89h, 1Ch, 89h,	1Ch, 89h, 1Ch, 89h, 1Dh, 89h, 1Dh
		db 89h,	1Dh, 89h, 1Dh, 88h, 0, 85h, 0E3h, 8Ah, 2, 4 dup(15h)
		db 0E2h, 15h, 0ECh, 80h, 85h, 0E0h, 80h, 0FEh, 80h, 85h
		db 89h,	6, 97h,	8, 0FFh, 80h, 85h, 3Dh,	3Bh, 0,	74h, 0Fh
		db 0A0h, 72h, 8, 98h, 39h, 46h,	0FEh, 74h, 6, 83h, 7Eh
		db 0FEh, 20h, 7Fh, 6Ah,	83h, 7Eh, 0FEh,	20h, 7Eh, 0Bh
		db 0C6h, 6, 4Eh, 23h, 0FFh, 8Ah, 46h, 0FEh, 0A2h, 34h
		db 22h,	0C6h, 42h, 0DAh, 0, 0B8h, 0B1h,	0, 50h,	8Dh, 46h
		db 0DAh, 50h, 0E8h, 0FAh, 0B5h,	83h, 0C4h, 4, 0A3h, 0CEh
		db 25h,	0Bh, 0C0h, 75h,	0Eh, 8Dh, 46h, 0DAh, 50h, 0B8h
		db 41h,	4, 50h,	0E8h, 47h, 97h,	83h, 0C4h, 4, 0B8h, 0
		db 2, 50h, 2Bh,	0C0h, 50h, 0FFh, 36h, 6Ch, 24h,	0FFh, 36h
		db 0CEh, 25h, 0E8h, 0F8h, 0B5h,	83h, 0C4h, 8, 0C6h, 6
		db 0AAh, 25h, 2	dup(0FFh), 76h,	4, 0E8h, 82h, 0FDh, 83h
		db 0C4h, 2, 89h, 46h, 0FEh, 8Ah, 46h, 0FEh, 2Ah, 0E4h
		db 5Eh,	5Fh, 8Bh, 0E5h,	5Dh, 0C3h, 90h,	8Bh, 0FEh, 46h
		db 8Ah,	46h, 0FEh, 88h,	43h, 0DAh, 0E9h, 5Bh, 0FFh
; ---------------------------------------------------------------------------
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	di
		push	si
		mov	word ptr [bp-0Ah], 0FFFFh
		mov	al, byte_2A758
		mov	byte_2A768, al
		cmp	byte_28545, 0
; ---------------------------------------------------------------------------
		db 0Ah dup(0)
seg002		ends

; ===========================================================================

